apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    sas.com/component-name: sas-esp-operator
    sas.com/component-version: 10.77.2-20201210.1607615447889
    sas.com/version: 10.77.2
  labels:
    sas.com/admin: cluster-wide
    sas.com/deployment: sas-viya
  name: espupdates.iot.sas.com
spec:
  group: iot.sas.com
  names:
    kind: ESPUpdate
    listKind: ESPUpdateList
    plural: espupdates
    singular: espupdate
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ESPUpdate is the Schema for the espupdates API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          response:
            description: ESPUpdateResponse defines the response of ESPUpdate
            nullable: true
            properties:
              reason:
                nullable: true
                type: string
              succeeded:
                nullable: true
                type: boolean
            type: object
          spec:
            description: ESPUpdateSpec defines the desired state of ESPUpdate
            properties:
              gracePeriod:
                nullable: true
                type: string
              policy:
                type: string
              selector:
                nullable: true
                type: string
            type: object
          status:
            description: ESPUpdateStatus defines the observed state of ESPUpdate
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    sas.com/component-name: sas-cas-operator
    sas.com/component-version: 2.8.2-20201119.1605811301533
    sas.com/version: 2.8.2
  labels:
    sas.com/admin: cluster-wide
    sas.com/deployment: sas-viya
  name: casdeployments.viya.sas.com
spec:
  group: viya.sas.com
  names:
    kind: CASDeployment
    listKind: CASDeploymentList
    plural: casdeployments
    shortNames:
    - cas
    singular: casdeployment
  scope: Namespaced
  subresources:
    status: {}
  version: v1alpha1
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    sas.com/component-name: sas-esp-operator
    sas.com/component-version: 10.77.2-20201210.1607615447889
    sas.com/version: 10.77.2
  labels:
    sas.com/admin: cluster-wide
    sas.com/deployment: sas-viya
  name: espconfigs.iot.sas.com
spec:
  group: iot.sas.com
  names:
    kind: ESPConfig
    listKind: ESPConfigList
    plural: espconfigs
    singular: espconfig
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          type: object
        status:
          type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    sas.com/component-name: sas-esp-operator
    sas.com/component-version: 10.77.2-20201210.1607615447889
    sas.com/version: 10.77.2
  labels:
    sas.com/admin: cluster-wide
    sas.com/deployment: sas-viya
  name: esprouters.iot.sas.com
spec:
  group: iot.sas.com
  names:
    kind: ESPRouter
    listKind: ESPRouterList
    plural: esprouters
    singular: esprouter
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          type: object
        status:
          type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    sas.com/component-name: sas-esp-operator
    sas.com/component-version: 10.77.2-20201210.1607615447889
    sas.com/version: 10.77.2
  labels:
    sas.com/admin: cluster-wide
    sas.com/deployment: sas-viya
  name: espservers.iot.sas.com
spec:
  group: iot.sas.com
  names:
    kind: ESPServer
    listKind: ESPServerList
    plural: espservers
    singular: espserver
  scope: Namespaced
  validation:
    openAPIV3Schema:
      properties:
        access:
          properties:
            externalURL:
              type: string
            internalHostName:
              type: string
            internalHttpPort:
              format: int64
              type: integer
            state:
              description: 'INSERT ADDITIONAL STATUS FIELD - define observed state of cluster Important: Run "operator-sdk generate k8s" to regenerate code after modifying this file Add custom validation using kubebuilder tags: https://book.kubebuilder.io/beyond_basics/generating_crd.html'
              type: string
          type: object
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          properties:
            espProperties:
              additionalProperties:
                type: string
              nullable: true
              type: object
            failover:
              type: boolean
            loadBalancePolicy:
              type: string
            loadBalancerTemplate:
              nullable: true
              properties:
                spec:
                  nullable: true
                  properties:
                    replicas:
                      description: number of replicas
                      format: int64
                      type: integer
                  type: object
              type: object
            projectTemplate:
              nullable: true
              properties:
                autoscale:
                  properties:
                    maxReplicas:
                      format: int32
                      type: integer
                    metrics:
                      items:
                        type: object
                      type: array
                    minReplicas:
                      format: int32
                      type: integer
                  required:
                  - minReplicas
                  - maxReplicas
                  - metrics
                  type: object
                spec:
                  nullable: true
                  properties:
                    replicas:
                      description: number of replicas
                      format: int64
                      type: integer
                  type: object
              type: object
          required:
          - espProperties
          - loadBalancePolicy
          type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
---
apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  annotations:
    sas.com/component-name: sas-cas-operator
    sas.com/component-version: 2.8.2-20201119.1605811301533
    sas.com/kustomize-base: base
    sas.com/version: 2.8.2
  labels:
    sas.com/admin: cluster-wide
    sas.com/deployment: sas-viya
  name: sas-cas-operator
  namespace: franceavv
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    sas.com/component-name: sas-cas-operator
    sas.com/component-version: 2.8.2-20201119.1605811301533
    sas.com/version: 2.8.2
  labels:
    sas.com/admin: cluster-wide
    sas.com/deployment: sas-viya
  name: sas-cas-server
  namespace: franceavv
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    sas.com/component-name: sas-certframe
    sas.com/component-version: 3.9.0-20201203.1607016443086
    sas.com/version: 3.9.0
  labels:
    sas.com/admin: cluster-wide
    sas.com/deployment: sas-viya
  name: sas-certframe
  namespace: franceavv
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    sas.com/component-name: sas-config-reconciler
    sas.com/component-version: 1.3.0-20201203.1607001188766
    sas.com/version: 1.3.0
  labels:
    sas.com/admin: cluster-wide
    sas.com/deployment: sas-viya
  name: sas-config-reconciler
  namespace: franceavv
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    sas.com/component-name: sas-data-server-utility
    sas.com/component-version: 20.6.0-20201118.1605736584855
    sas.com/version: 20.6.0
  labels:
    sas.com/admin: cluster-wide
    sas.com/deployment: sas-viya
  name: sas-data-server-utility
  namespace: franceavv
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    sas.com/component-name: sas-event-stream-processing-studio-app
    sas.com/component-version: 7.8.24-20201211.1607651463964
    sas.com/version: 7.8.24
  labels:
    sas.com/admin: cluster-wide
    sas.com/deployment: sas-viya
  name: sas-esp-clients
  namespace: franceavv
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    sas.com/component-name: sas-esp-operator
    sas.com/component-version: 10.77.2-20201210.1607615447889
    sas.com/version: 10.77.2
  labels:
    sas.com/admin: cluster-wide
    sas.com/deployment: sas-viya
  name: sas-esp-operator
  namespace: franceavv
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    sas.com/component-name: sas-esp-operator
    sas.com/component-version: 10.77.2-20201210.1607615447889
    sas.com/version: 10.77.2
  labels:
    sas.com/admin: cluster-wide
    sas.com/deployment: sas-viya
  name: sas-esp-project
  namespace: franceavv
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    sas.com/component-name: sas-launcher
    sas.com/component-version: 1.18.8-20201208.1607443790845
    sas.com/version: 1.18.8
  labels:
    sas.com/admin: cluster-wide
    sas.com/deployment: sas-viya
  name: sas-launcher
  namespace: franceavv
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    sas.com/component-name: sas-model-publish
    sas.com/component-version: 2.27.0-20201209.1607555293093
    sas.com/version: 2.27.0
  labels:
    sas.com/admin: cluster-wide
    sas.com/deployment: sas-viya
  name: sas-model-publish
  namespace: franceavv
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    sas.com/component-name: sas-prepull
    sas.com/component-version: 1.3.2-20201102.1604347909321
    sas.com/version: 1.3.2
  labels:
    sas.com/admin: cluster-wide
    sas.com/deployment: sas-viya
  name: sas-prepull
  namespace: franceavv
---
apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  annotations:
    sas.com/component-name: sas-rabbitmq-server
    sas.com/component-version: 3.82003.2-20201013.1602597853237
    sas.com/kustomize-base: base
    sas.com/version: 3.82003.2
  labels:
    sas.com/admin: cluster-wide
    sas.com/deployment: sas-viya
  name: sas-rabbitmq-server
  namespace: franceavv
---
apiVersion: v1
automountServiceAccountToken: false
kind: ServiceAccount
metadata:
  annotations:
    sas.com/component-name: sas-readiness
    sas.com/component-version: 1.3.3-20201203.1607020633267
    sas.com/kustomize-base: base
    sas.com/version: 1.3.3
  labels:
    sas.com/admin: cluster-wide
    sas.com/deployment: sas-viya
  name: sas-readiness
  namespace: franceavv
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    sas.com/component-name: sas-backup-job
    sas.com/component-version: 1.9.0-20201209.1607495417341
    sas.com/version: 1.9.0
  labels:
    sas.com/admin: cluster-wide
    sas.com/deployment: sas-viya
  name: sas-viya-backuprunner
  namespace: franceavv
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    sas.com/component-name: sas-cas-operator
    sas.com/component-version: 2.8.2-20201119.1605811301533
    sas.com/version: 2.8.2
  creationTimestamp: null
  labels:
    sas.com/admin: cluster-wide
    sas.com/deployment: sas-viya
    sas.com/pod-security: psp-elevated
  name: sas-cas-server
  namespace: franceavv
rules: []
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    sas.com/component-name: sas-certframe
    sas.com/component-version: 3.9.0-20201203.1607016443086
    sas.com/version: 3.9.0
  labels:
    sas.com/admin: cluster-wide
    sas.com/deployment: sas-viya
  name: sas-certframe-role
  namespace: franceavv
rules:
- apiGroups:
  - ""
  resources:
  - pods
  - services
  verbs:
  - get
  - list
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - create
  - get
  - update
- apiGroups:
  - cert-manager.io
  resources:
  - certificates
  verbs:
  - create
  - get
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    sas.com/component-name: sas-data-server-utility
    sas.com/component-version: 20.6.0-20201118.1605736584855
    sas.com/version: 20.6.0
  labels:
    sas.com/admin: cluster-wide
    sas.com/deployment: sas-viya
  name: sas-data-server-utility
  namespace: franceavv
rules:
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - get
  - list
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - watch
  - list
  - create
- apiGroups:
  - crunchydata.com
  resources:
  - pgclusters
  verbs:
  - get
  - patch
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - list
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    sas.com/component-name: sas-event-stream-processing-studio-app
    sas.com/component-version: 7.8.24-20201211.1607651463964
    sas.com/version: 7.8.24
  creationTimestamp: null
  labels:
    sas.com/admin: cluster-wide
    sas.com/deployment: sas-viya
  name: sas-esp-clients
  namespace: franceavv
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - pods/log
  verbs:
  - get
- apiGroups:
  - ""
  resources:
  - pods/exec
  verbs:
  - get
- apiGroups:
  - iot.sas.com
  resources:
  - espservers
  - espconfigs
  verbs:
  - get
  - list
- apiGroups:
  - iot.sas.com
  resources:
  - espservers
  verbs:
  - create
  - watch
  - delete
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    sas.com/component-name: sas-esp-operator
    sas.com/component-version: 10.77.2-20201210.1607615447889
    sas.com/version: 10.77.2
  labels:
    sas.com/admin: cluster-wide
    sas.com/deployment: sas-viya
  name: sas-esp-operator
  namespace: franceavv
rules:
- apiGroups:
  - ""
  resources:
  - pods
  - pods/log
  - services
  - endpoints
  - configmaps
  - persistentvolumeclaims
  - events
  - secrets
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - extensions
  resources:
  - ingresses
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - delete
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
- apiGroups:
  - autoscaling
  resources:
  - horizontalpodautoscalers
  verbs:
  - get
  - watch
  - list
  - create
  - update
  - delete
- apiGroups:
  - apps
  resources:
  - deployments
  - replicasets
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - monitoring.coreos.com
  resources:
  - servicemonitors
  verbs:
  - get
  - create
- apiGroups:
  - apps
  resourceNames:
  - sas-esp-operator
  resources:
  - deployments/finalizers
  verbs:
  - update
- apiGroups:
  - iot.sas.com
  resources:
  - '*'
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - delete
- apiGroups:
  - cert-manager.io
  resources:
  - certificates
  verbs:
  - get
  - list
  - watch
  - create
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    sas.com/component-name: sas-esp-operator
    sas.com/component-version: 10.77.2-20201210.1607615447889
    sas.com/version: 10.77.2
  labels:
    sas.com/admin: cluster-wide
    sas.com/deployment: sas-viya
  name: sas-esp-project
  namespace: franceavv
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    sas.com/component-name: sas-launcher
    sas.com/component-version: 1.18.8-20201208.1607443790845
    sas.com/version: 1.18.8
  labels:
    sas.com/admin: cluster-wide
    sas.com/deployment: sas-viya
  name: sas-launcher
  namespace: franceavv
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - create
  - patch
- apiGroups:
  - ""
  resources:
  - pods
  - configmaps
  - podtemplates
  - events
  verbs:
  - get
  - list
- apiGroups:
  - batch
  - extensions
  resources:
  - jobs
  verbs:
  - get
  - list
  - create
  - update
  - delete
- apiGroups:
  - batch
  resources:
  - jobs/status
  verbs:
  - get
  - list
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    sas.com/component-name: sas-model-publish
    sas.com/component-version: 2.27.0-20201209.1607555293093
    sas.com/version: 2.27.0
  labels:
    sas.com/admin: cluster-wide
    sas.com/deployment: sas-viya
  name: sas-model-publish
  namespace: franceavv
rules:
- apiGroups:
  - ""
  resources:
  - pods
  - pods/log
  - podtemplates
  verbs:
  - '*'
- apiGroups:
  - batch
  resources:
  - jobs
  verbs:
  - '*'
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    sas.com/component-name: sas-prepull
    sas.com/component-version: 1.3.2-20201102.1604347909321
    sas.com/version: 1.3.2
  labels:
    sas.com/admin: cluster-wide
    sas.com/deployment: sas-viya
  name: sas-prepull
  namespace: franceavv
rules:
- apiGroups:
  - apps
  resources:
  - daemonsets
  verbs:
  - get
  - update
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    sas.com/component-name: sas-backup-job
    sas.com/component-version: 1.9.0-20201209.1607495417341
    sas.com/version: 1.9.0
  labels:
    sas.com/admin: cluster-wide
    sas.com/deployment: sas-viya
  name: sas-viya-backuprunner
  namespace: franceavv
rules:
- apiGroups:
  - ""
  resources:
  - pods
  - configmaps
  - podtemplates
  verbs:
  - get
  - list
- apiGroups:
  - apps
  resources:
  - deployments
  verbs:
  - get
  - list
- apiGroups:
  - batch
  - extensions
  resources:
  - jobs
  verbs:
  - get
  - list
  - create
  - update
  - delete
- apiGroups:
  - batch
  resources:
  - jobs/status
  verbs:
  - get
  - list
- apiGroups:
  - viya.sas.com
  resources:
  - casdeployments
  verbs:
  - get
  - delete
  - list
  - deletecollection
- apiGroups:
  - iot.sas.com
  resources:
  - espservers
  verbs:
  - get
  - delete
  - list
  - deletecollection
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: Role
metadata:
  annotations:
    sas.com/component-name: sas-cas-operator
    sas.com/component-version: 2.8.2-20201119.1605811301533
    sas.com/kustomize-base: base
    sas.com/version: 2.8.2
  labels:
    sas.com/admin: cluster-wide
    sas.com/deployment: sas-viya
  name: sas-cas-operator
  namespace: franceavv
rules:
- apiGroups:
  - ""
  resources:
  - pods
  - services
  - configmaps
  - secrets
  verbs:
  - get
  - list
  - create
  - update
  - patch
  - delete
  - watch
- apiGroups:
  - apps
  resources:
  - deployments
  - daemonsets
  - replicasets
  - statefulsets
  verbs:
  - get
  - list
- apiGroups:
  - monitoring.coreos.com
  resources:
  - servicemonitors
  verbs:
  - get
  - create
- apiGroups:
  - viya.sas.com
  resources:
  - casdeployments
  - casdeployments/status
  verbs:
  - get
  - list
  - update
  - patch
  - watch
- apiGroups:
  - networking.k8s.io
  - extensions
  resources:
  - ingresses
  verbs:
  - get
  - list
  - create
  - update
  - patch
  - delete
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: Role
metadata:
  annotations:
    sas.com/component-name: sas-config-reconciler
    sas.com/component-version: 1.3.0-20201203.1607001188766
    sas.com/version: 1.3.0
  labels:
    sas.com/admin: cluster-wide
    sas.com/deployment: sas-viya
  name: sas-config-reconciler
  namespace: franceavv
rules:
- apiGroups:
  - ""
  resources:
  - endpoints
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apps
  resources:
  - deployments
  verbs:
  - get
  - list
  - update
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: Role
metadata:
  annotations:
    sas.com/component-name: sas-rabbitmq-server
    sas.com/component-version: 3.82003.2-20201013.1602597853237
    sas.com/kustomize-base: base
    sas.com/version: 3.82003.2
  labels:
    sas.com/admin: cluster-wide
    sas.com/deployment: sas-viya
  name: sas-rabbitmq-server
  namespace: franceavv
rules:
- apiGroups:
  - ""
  resources:
  - endpoints
  verbs:
  - get
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - create
  - update
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: Role
metadata:
  annotations:
    sas.com/component-name: sas-readiness
    sas.com/component-version: 1.3.3-20201203.1607020633267
    sas.com/kustomize-base: base
    sas.com/version: 1.3.3
  labels:
    sas.com/admin: cluster-wide
    sas.com/deployment: sas-viya
  name: sas-readiness
  namespace: franceavv
rules:
- apiGroups:
  - ""
  resources:
  - endpoints
  verbs:
  - get
  - list
- apiGroups:
  - apps
  resources:
  - daemonsets
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    sas.com/admin: cluster-wide
    sas.com/deployment: sas-viya
  name: sas-cas-operator
rules:
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    sas.com/component-name: sas-cas-operator
    sas.com/component-version: 2.8.2-20201119.1605811301533
    sas.com/kustomize-base: base
    sas.com/version: 2.8.2
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-cas-operator
  namespace: franceavv
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: sas-cas-operator
subjects:
- kind: ServiceAccount
  name: sas-cas-operator
  namespace: franceavv
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    sas.com/component-name: sas-cas-operator
    sas.com/component-version: 2.8.2-20201119.1605811301533
    sas.com/version: 2.8.2
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-cas-server
  namespace: franceavv
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: sas-cas-server
subjects:
- kind: ServiceAccount
  name: sas-cas-server
  namespace: franceavv
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    sas.com/component-name: sas-certframe
    sas.com/component-version: 3.9.0-20201203.1607016443086
    sas.com/version: 3.9.0
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-certframe-rolebinding
  namespace: franceavv
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: sas-certframe-role
subjects:
- kind: ServiceAccount
  name: sas-certframe
  namespace: franceavv
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    sas.com/component-name: sas-config-reconciler
    sas.com/component-version: 1.3.0-20201203.1607001188766
    sas.com/version: 1.3.0
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-config-reconciler
  namespace: franceavv
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: sas-config-reconciler
subjects:
- kind: ServiceAccount
  name: sas-config-reconciler
  namespace: franceavv
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    sas.com/component-name: sas-data-server-utility
    sas.com/component-version: 20.6.0-20201118.1605736584855
    sas.com/version: 20.6.0
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-data-server-utility
  namespace: franceavv
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: sas-data-server-utility
subjects:
- kind: ServiceAccount
  name: sas-data-server-utility
  namespace: franceavv
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    sas.com/component-name: sas-event-stream-processing-studio-app
    sas.com/component-version: 7.8.24-20201211.1607651463964
    sas.com/version: 7.8.24
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-esp-clients
  namespace: franceavv
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: sas-esp-clients
subjects:
- kind: ServiceAccount
  name: sas-esp-clients
  namespace: franceavv
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    sas.com/component-name: sas-esp-operator
    sas.com/component-version: 10.77.2-20201210.1607615447889
    sas.com/version: 10.77.2
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-esp-operator
  namespace: franceavv
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: sas-esp-operator
subjects:
- kind: ServiceAccount
  name: sas-esp-operator
  namespace: franceavv
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    sas.com/component-name: sas-esp-operator
    sas.com/component-version: 10.77.2-20201210.1607615447889
    sas.com/version: 10.77.2
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-esp-project
  namespace: franceavv
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: sas-esp-project
subjects:
- kind: ServiceAccount
  name: sas-esp-project
  namespace: franceavv
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    sas.com/component-name: sas-launcher
    sas.com/component-version: 1.18.8-20201208.1607443790845
    sas.com/version: 1.18.8
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-launcher
  namespace: franceavv
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: sas-launcher
subjects:
- kind: ServiceAccount
  name: sas-launcher
  namespace: franceavv
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    sas.com/component-name: sas-model-publish
    sas.com/component-version: 2.27.0-20201209.1607555293093
    sas.com/version: 2.27.0
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-model-publish
  namespace: franceavv
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: sas-model-publish
subjects:
- kind: ServiceAccount
  name: sas-model-publish
  namespace: franceavv
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    sas.com/component-name: sas-prepull
    sas.com/component-version: 1.3.2-20201102.1604347909321
    sas.com/version: 1.3.2
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-prepull
  namespace: franceavv
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: sas-prepull
subjects:
- kind: ServiceAccount
  name: sas-prepull
  namespace: franceavv
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    sas.com/component-name: sas-rabbitmq-server
    sas.com/component-version: 3.82003.2-20201013.1602597853237
    sas.com/kustomize-base: base
    sas.com/version: 3.82003.2
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-rabbitmq-server
  namespace: franceavv
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: sas-rabbitmq-server
subjects:
- kind: ServiceAccount
  name: sas-rabbitmq-server
  namespace: franceavv
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    sas.com/component-name: sas-readiness
    sas.com/component-version: 1.3.3-20201203.1607020633267
    sas.com/kustomize-base: base
    sas.com/version: 1.3.3
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-readiness
  namespace: franceavv
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: sas-readiness
subjects:
- kind: ServiceAccount
  name: sas-readiness
  namespace: franceavv
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    sas.com/component-name: sas-backup-job
    sas.com/component-version: 1.9.0-20201209.1607495417341
    sas.com/version: 1.9.0
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-viya-backuprunner
  namespace: franceavv
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: sas-viya-backuprunner
subjects:
- kind: ServiceAccount
  name: sas-viya-backuprunner
  namespace: franceavv
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-cas-operator-franceavv
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: sas-cas-operator
subjects:
- kind: ServiceAccount
  name: sas-cas-operator
  namespace: franceavv
---
apiVersion: v1
data:
  CAS_INSTANCE: default
kind: ConfigMap
metadata:
  annotations:
    sas.com/component-name: sas-cas-operator
    sas.com/component-version: 2.8.2-20201119.1605811301533
    sas.com/version: 2.8.2
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: cas-input-7fck5d9g6c
  namespace: franceavv
---
apiVersion: v1
data:
  INGRESS_HOST: franceavv.eastus2.cloudapp.azure.com
kind: ConfigMap
metadata:
  annotations: {}
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: ingress-input-hg64t6bd6h
  namespace: franceavv
---
apiVersion: v1
data:
  IMAGE_REGISTRY: depotviya.azurecr.io
kind: ConfigMap
metadata:
  annotations: {}
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: input-thkdhf99d7
  namespace: franceavv
---
apiVersion: v1
data:
  COPLIB: ""
  DIRLAX: ""
  DSQUERY: ""
  HANA: ""
  IMPALA: ""
  MONGODB: ""
  MYSQL: ""
  NETEZZA: ""
  NZ_ODBC_INI_PATH: ""
  ODBCHOME: /opt/sas/viya/home/lib64/accessclients
  ODBCINI: /opt/sas/viya/home/lib64/accessclients/odbc.ini
  ODBCINST: /opt/sas/viya/home/lib64/accessclients/odbcinst.ini
  ODBCSYSINI: /opt/sas/viya/home/lib64/accessclients/
  ORACLE: ""
  ORACLE_BIN: ""
  ORACLE_HOME: ""
  POSTGRES: /opt/sas/viya/home/lib64
  R3: ""
  SAS_EXT_LLP_ACCESS: /opt/sas/viya/home/lib64/accessclients/lib:/opt/sas/viya/home/lib64
  SAS_EXT_PATH_ACCESS: ""
  SASODBC: /opt/sas/viya/home/lib64/accessclients/lib
  SNOWFLAKE: ""
  SYB_SAS_BULK_NOTE: "1"
  SYBASE: ""
  SYBASE_BIN: ""
  SYBASELIBS: ""
  TERADATA: ""
  TNS_ADMIN: ""
  UNIXODBC: ""
  VERTICA: ""
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-access-config-hmmdg9cckh
  namespace: franceavv
---
apiVersion: v1
data:
  CNTR_REPO_PREFIX: convoy
  SAS_CONTEXT_PATH: analyticsComponents
  SAS_DU_NAME: sas-analytics-components
  SAS_SERVICE_NAME: sas-analytics-components
  SG_GO_MODULES_ENABLED: "true"
  SG_PROJECT: analytics-components
  SG_STATIC: "false"
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-analytics-components-parameters-b492c96hdk
  namespace: franceavv
---
apiVersion: v1
data:
  SAS_CONTEXT_PATH: analyticsDataSegmentation
  SAS_PORT_NAME: aasegmentatn
  SAS_SERVICE_NAME: sas-analytics-data-segmentation
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-analytics-data-segmentation-parameters-7c7dfdc8th
  namespace: franceavv
---
apiVersion: v1
data:
  CNTR_REPO_PREFIX: convoy
  SAS_CONTEXT_PATH: analyticsEvents
  SAS_DU_NAME: sas-analytics-events
  SAS_SERVICE_NAME: sas-analytics-events
  SG_GO_MODULES_ENABLED: "true"
  SG_PROJECT: analytics-events
  SG_STATIC: "false"
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-analytics-events-parameters-6gdbk8htmd
  namespace: franceavv
---
apiVersion: v1
data:
  SAS_CONTEXT_PATH: analyticsFlows
  SAS_PORT_NAME: aaflows
  SAS_SERVICE_NAME: sas-analytics-flows
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-analytics-flows-parameters-mdm966tfhg
  namespace: franceavv
---
apiVersion: v1
data:
  SAS_CONTEXT_PATH: analyticsGateway
  SAS_PORT_NAME: aagateway
  SAS_SERVICE_NAME: sas-analytics-gateway
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-analytics-gateway-parameters-k7gd4d795d
  namespace: franceavv
---
apiVersion: v1
data:
  SAS_CONTEXT_PATH: analyticsLocalization
  SAS_PORT_NAME: aacaploclztn
  SAS_SERVICE_NAME: sas-analytics-localization
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-analytics-localization-parameters-m5cdf872cg
  namespace: franceavv
---
apiVersion: v1
data:
  SAS_CONTEXT_PATH: analyticsPipelines
  SAS_PORT_NAME: aapipelines
  SAS_SERVICE_NAME: sas-analytics-pipelines
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-analytics-pipelines-parameters-4c6gmm8c25
  namespace: franceavv
---
apiVersion: v1
data:
  SAS_DU_NAME: sas-analytics-services
  SAS_SERVICE_NAME: sas-analytics-services
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-analytics-services-parameters-ftddm5hgtd
  namespace: franceavv
---
apiVersion: v1
data:
  SAS_CONTEXT_PATH: analyticsValidation
  SAS_PORT_NAME: aavalidation
  SAS_SERVICE_NAME: sas-analytics-validation
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-analytics-validation-parameters-kggbc8g94t
  namespace: franceavv
---
apiVersion: v1
data:
  SAS_CONTEXT_PATH: annotations
  SAS_DU_NAME: sas-annotations
  SAS_SERVICE_NAME: sas-annotations
  SG_GO_MODULES_ENABLED: "true"
  SG_PROJECT: annotations
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-annotations-parameters-m454ct4k9b
  namespace: franceavv
---
apiVersion: v1
data:
  SAS_CONTEXT_PATH: appRegistry
  SAS_DU_NAME: sas-app-registry
  SAS_SERVICE_NAME: sas-app-registry
  SG_GO_MODULES_ENABLED: "true"
  SG_PROJECT: app-registry
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-app-registry-parameters-kt9784cfhd
  namespace: franceavv
---
apiVersion: v1
data:
  SAS_DU_NAME: sas-arke
  SAS_SERVICE_NAME: sas-arke
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-arke-parameters-h6hk5cgm5b-hfbbc6htdc
  namespace: franceavv
---
apiVersion: v1
data:
  SAS_CONTEXT_PATH: audit
  SAS_DU_NAME: sas-audit
  SAS_SERVICE_NAME: sas-audit
  SG_GO_MODULES_ENABLED: "true"
  SG_PROJECT: audit
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-audit-parameters-dm5489hhh5
  namespace: franceavv
---
apiVersion: v1
data:
  SAS_CONTEXT_PATH: authorization
  SAS_DU_NAME: sas-authorization
  SAS_SERVICE_NAME: sas-authorization
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-authorization-parameters-87g59t7d2b
  namespace: franceavv
---
apiVersion: v1
data:
  SAS_CONTEXT_PATH: backupagent
  SAS_DU_NAME: sas-backup-agent
  SAS_SERVICE_NAME: sas-backup-agent
  SAS_TOOL_RETRY_LIMIT: "100"
  SAS_TOOL_RETRY_PERIOD: 1m
  SG_PROJECT: backup-agent
  SG_STATIC: "false"
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-backup-agent-parameters-hkfmm67f7d
  namespace: franceavv
---
apiVersion: v1
data:
  JOB_TIME_OUT: "600"
  RETENTION_PERIOD: "30"
  SAS_BACKUP_JOB_DU_NAME: sas-backup-job
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-backup-job-parameters-gb2b7ckggt
  namespace: franceavv
---
apiVersion: v1
data:
  SAS_CONTEXT_PATH: batch
  SAS_DU_NAME: sas-batch
  SAS_SERVICE_NAME: sas-batch
  SG_GO_MODULES_ENABLED: "true"
  SG_PROJECT: batch
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-batch-parameters-5f657bfbg8
  namespace: franceavv
---
apiVersion: v1
data:
  BATCHSERVER_AUTOEXEC_USERMODS_FILE: autoexec_usermods.sas
  BATCHSERVER_CONFIG_USERMODS_FILE: sasv9_usermods.cfg
  BATCHSERVER_SCRIPT_USERMODS_FILE: batchserver_usermods.sh
  BATCHSERVER_USER_CONFIG: /config/
  SAS_INIT_CONFIG_FILE1: batchserver_usermods.sh
  SAS_INIT_CONFIG_FILE2: sasv9_usermods.cfg
  SAS_INIT_CONFIG_FILE3: autoexec_usermods.sas
  SAS_INIT_CONFIG_KEY1: config/batch/sas.batch.server/startup_commands/contents
  SAS_INIT_CONFIG_KEY2: config/batch/sas.batch.server/configuration_options/contents
  SAS_INIT_CONFIG_KEY3: config/batch/sas.batch.server/autoexec_code/contents
  SAS_LANG_FILE_IN: /config/batchserver_usermods.sh
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-batch-server-config-84t27mcd68
  namespace: franceavv
---
apiVersion: v1
data:
  SAS_CONTEXT_PATH: businessRules
  SAS_PORT_NAME: businessrules
  SAS_SERVICE_NAME: sas-business-rules
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-business-rules-parameters-2bkbhd5ttf
  namespace: franceavv
---
apiVersion: v1
data:
  SAS_DU_NAME: sas-business-rules-services
  SAS_SERVICE_NAME: sas-business-rules-services
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-business-rules-services-parameters-tck6m64858
  namespace: franceavv
---
apiVersion: v1
data:
  SAS_CONTEXT_PATH: cachelocator
  SAS_DU_NAME: sas-cachelocator
  SAS_SERVICE_NAME: sas-cachelocator
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-cachelocator-parameters-d5t79dbtgk
  namespace: franceavv
---
apiVersion: v1
data:
  SAS_CONTEXT_PATH: cacheserver
  SAS_DU_NAME: sas-cacheserver
  SAS_SERVICE_NAME: sas-cacheserver
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-cacheserver-parameters-c8bc74bf97
  namespace: franceavv
---
apiVersion: v1
data:
  SAS_CONTEXT_PATH: casAccessManagement
  SAS_PORT_NAME: casacl
  SAS_SERVICE_NAME: sas-cas-access-management
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-cas-access-management-parameters-fkctbb2f6c
  namespace: franceavv
---
apiVersion: v1
data:
  SAS_DU_NAME: sas-cas-administration
  SAS_SERVICE_NAME: sas-cas-administration
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-cas-administration-parameters-fc86kmf4dm
  namespace: franceavv
---
apiVersion: v1
data:
  CASCLOUDNATIVE: "1"
kind: ConfigMap
metadata:
  annotations:
    sas.com/component-name: sas-cas-operator
    sas.com/component-version: 2.8.2-20201119.1605811301533
    sas.com/version: 2.8.2
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-cas-config-f24k2hg6d5
  namespace: franceavv
---
apiVersion: v1
data:
  SAS_CONTEXT_PATH: sas-cas-control
  SAS_DU_NAME: sas-cas-control
  SAS_PORT_NAME: cas-control
  SAS_SERVICE_NAME: sas-cas-control
  SG_GO_MODULES_ENABLED: "true"
  SG_PROJECT: cas-control
  SG_STATIC: "false"
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-cas-control-parameters-972m5t5mc9
  namespace: franceavv
---
apiVersion: v1
data:
  SAS_CONTEXT_PATH: casFormats
  SAS_PORT_NAME: cas-formats
  SAS_SERVICE_NAME: sas-cas-formats
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-cas-formats-parameters-k4mmmm4bfd
  namespace: franceavv
---
apiVersion: v1
data:
  SAS_CONTEXT_PATH: casManagement
  SAS_PORT_NAME: casmanagement
  SAS_SERVICE_NAME: sas-cas-management
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-cas-management-parameters-b964dt88bf
  namespace: franceavv
---
apiVersion: v1
data:
  SAS_DU_NAME: sas-cas-operator
  SAS_SERVICE_NAME: sas-cas-operator
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-cas-operator-parameters-48hm52k8d6-gfk2hdtdbf
  namespace: franceavv
---
apiVersion: v1
data:
  SAS_CONTEXT_PATH: casProxy
  SAS_PORT_NAME: casproxy
  SAS_SERVICE_NAME: sas-cas-proxy
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-cas-proxy-parameters-bbfk29ftbk
  namespace: franceavv
---
apiVersion: v1
data:
  SAS_CONTEXT_PATH: casRowSets
  SAS_PORT_NAME: cas-row-sets
  SAS_SERVICE_NAME: sas-cas-row-sets
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-cas-row-sets-parameters-8mgk9dt6ht
  namespace: franceavv
---
apiVersion: v1
data:
  SAS_CONTEXT_PATH: categorization
  SAS_PORT_NAME: categorization
  SAS_SERVICE_NAME: sas-categorization
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-categorization-parameters-h8bgk797ct
  namespace: franceavv
---
apiVersion: v1
data:
  SAS_CONTEXT_PATH: categoryExecutionProvider
  SAS_PORT_NAME: categoryexe
  SAS_SERVICE_NAME: sas-category-execution-provider
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-category-execution-provider-parameters-cf7529fkdb
  namespace: franceavv
---
apiVersion: v1
data:
  SAS_CONTEXT_PATH: categoryTaxonomy
  SAS_PORT_NAME: categorytax
  SAS_SERVICE_NAME: sas-category-taxonomy
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-category-taxonomy-parameters-d8fthgg529
  namespace: franceavv
---
apiVersion: v1
data:
  SAS_CERTIFICATE_CA_CERTIFICATE_FILE: /security/ca.crt
  SAS_CERTIFICATE_FILE: /security/tls.crt
  SAS_CERTIFICATE_PRIVATE_KEY_FILE: /security/tls.key
  SAS_TRUSTED_CA_CERTIFICATES_PEM_FILE: /security/trustedcerts.pem
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-certframe-config-ctgg29gf7t
  namespace: franceavv
---
apiVersion: v1
data:
  SAS_INGRESS_CERTIFICATE_SECRET_NAME: sas-ingress-certificate
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-certframe-ingress-certificate-config-cmm2t44t88
  namespace: franceavv
---
apiVersion: v1
data:
  SAS_CERTIFICATE_FILE: /security/cert.jks
  SAS_TRUSTED_CA_CERTIFICATES_JKS_FILE: /security/trustedcerts.jks
  SAS_TRUSTED_CA_CERTIFICATES_PEM_FILE: /security/trustedcerts.pem
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-certframe-java-config-gf4kt94898
  namespace: franceavv
---
apiVersion: v1
data:
  CAS_CLIENT_SSL_CA_LIST: /security/trustedcerts.pem
  REQUESTS_CA_BUNDLE: /security/trustedcerts.pem
  SAS_TRUSTED_CA_CERTIFICATES_JKS_FILE: /security/trustedcerts.jks
  SAS_TRUSTED_CA_CERTIFICATES_PEM_FILE: /security/trustedcerts.pem
  SSL_CERT_FILE: /security/trustedcerts.pem
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-certframe-truststore-config-9b624fffm4
  namespace: franceavv
---
apiVersion: v1
data:
  SAS_CA_CERTIFICATE_SECRET_NAME: sas-viya-ca-certificate-secret
  SAS_CERTIFICATE_GENERATOR: cert-manager
  SAS_CERTIFICATE_INGRESS_SAN_DNS: franceavv.eastus2.cloudapp.azure.com
  SAS_CERTIFICATE_ISSUER: sas-viya-issuer
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-certframe-user-config-c4ch2c59m7
  namespace: franceavv
---
apiVersion: v1
data:
  CNTR_REPO_PREFIX: convoy
  SAS_CONTEXT_PATH: SASCodeDebugger
  SAS_DU_NAME: sas-code-debugger-app
  SAS_SERVICE_NAME: sas-code-debugger-app
  SG_GO_MODULES_ENABLED: "true"
  SG_PROJECT: code-debugger-app
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-code-debugger-app-parameters-2ktmk24f75
  namespace: franceavv
---
apiVersion: v1
data:
  SAS_CONTEXT_PATH: codeDebugger
  SAS_DU_NAME: sas-code-debugger
  SAS_SERVICE_NAME: sas-code-debugger
  SG_PROJECT: code-debugger
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-code-debugger-parameters-7776f7kmg4
  namespace: franceavv
---
apiVersion: v1
data:
  SAS_CONTEXT_PATH: comments
  SAS_DU_NAME: sas-comments
  SAS_SERVICE_NAME: sas-comments
  SG_GO_MODULES_ENABLED: "true"
  SG_PROJECT: comments
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-comments-parameters-69gc8m8k65
  namespace: franceavv
---
apiVersion: v1
data:
  SAS_COMPONENT_RELPATH_sas-analytics-components: viya-4-x64_oci_linux_2-docker/sas-analytics-components
  SAS_COMPONENT_RELPATH_sas-analytics-events: viya-4-x64_oci_linux_2-docker/sas-analytics-events
  SAS_COMPONENT_RELPATH_sas-analytics-services: viya-4-x64_oci_linux_2-docker/sas-analytics-services
  SAS_COMPONENT_RELPATH_sas-annotations: viya-4-x64_oci_linux_2-docker/sas-annotations
  SAS_COMPONENT_RELPATH_sas-app-registry: viya-4-x64_oci_linux_2-docker/sas-app-registry
  SAS_COMPONENT_RELPATH_sas-arke: viya-4-x64_oci_linux_2-docker/sas-arke
  SAS_COMPONENT_RELPATH_sas-audit: viya-4-x64_oci_linux_2-docker/sas-audit
  SAS_COMPONENT_RELPATH_sas-authorization: viya-4-x64_oci_linux_2-docker/sas-authorization
  SAS_COMPONENT_RELPATH_sas-backup-agent: viya-4-x64_oci_linux_2-docker/sas-backup-agent
  SAS_COMPONENT_RELPATH_sas-backup-job: viya-4-x64_oci_linux_2-docker/sas-backup-job
  SAS_COMPONENT_RELPATH_sas-batch: viya-4-x64_oci_linux_2-docker/sas-batch
  SAS_COMPONENT_RELPATH_sas-business-rules-services: viya-4-x64_oci_linux_2-docker/sas-business-rules-services
  SAS_COMPONENT_RELPATH_sas-cachelocator: viya-4-x64_oci_linux_2-docker/sas-cachelocator
  SAS_COMPONENT_RELPATH_sas-cacheserver: viya-4-x64_oci_linux_2-docker/sas-cacheserver
  SAS_COMPONENT_RELPATH_sas-cas-administration: viya-4-x64_oci_linux_2-docker/sas-cas-administration
  SAS_COMPONENT_RELPATH_sas-cas-control: viya-4-x64_oci_linux_2-docker/sas-cas-control
  SAS_COMPONENT_RELPATH_sas-cas-operator: viya-4-x64_oci_linux_2-docker/sas-cas-operator
  SAS_COMPONENT_RELPATH_sas-cas-server: viya-4-x64_oci_linux_2-docker/sas-cas-server
  SAS_COMPONENT_RELPATH_sas-certframe: viya-4-x64_oci_linux_2-docker/sas-certframe
  SAS_COMPONENT_RELPATH_sas-code-debugger: viya-4-x64_oci_linux_2-docker/sas-code-debugger
  SAS_COMPONENT_RELPATH_sas-code-debugger-app: viya-4-x64_oci_linux_2-docker/sas-code-debugger-app
  SAS_COMPONENT_RELPATH_sas-comments: viya-4-x64_oci_linux_2-docker/sas-comments
  SAS_COMPONENT_RELPATH_sas-compute: viya-4-x64_oci_linux_2-docker/sas-compute
  SAS_COMPONENT_RELPATH_sas-config-init: viya-4-x64_oci_linux_2-docker/sas-config-init
  SAS_COMPONENT_RELPATH_sas-config-reconciler: viya-4-x64_oci_linux_2-docker/sas-config-reconciler
  SAS_COMPONENT_RELPATH_sas-configuration: viya-4-x64_oci_linux_2-docker/sas-configuration
  SAS_COMPONENT_RELPATH_sas-connect: viya-4-x64_oci_linux_2-docker/sas-connect
  SAS_COMPONENT_RELPATH_sas-connect-spawner: viya-4-x64_oci_linux_2-docker/sas-connect-spawner
  SAS_COMPONENT_RELPATH_sas-consul-server: viya-4-x64_oci_linux_2-docker/sas-consul-server
  SAS_COMPONENT_RELPATH_sas-conversation-designer-app: viya-4-x64_oci_linux_2-docker/sas-conversation-designer-app
  SAS_COMPONENT_RELPATH_sas-credentials: viya-4-x64_oci_linux_2-docker/sas-credentials
  SAS_COMPONENT_RELPATH_sas-crossdomainproxy: viya-4-x64_oci_linux_2-docker/sas-crossdomainproxy
  SAS_COMPONENT_RELPATH_sas-crunchy-data-backrest-restore: viya-4-x64_oci_linux_2-docker/sas-crunchy-data-backrest-restore
  SAS_COMPONENT_RELPATH_sas-crunchy-data-collect: viya-4-x64_oci_linux_2-docker/sas-crunchy-data-collect
  SAS_COMPONENT_RELPATH_sas-crunchy-data-delete-postgres-cluster: viya-4-x64_oci_linux_2-docker/sas-crunchy-data-delete-postgres-cluster
  SAS_COMPONENT_RELPATH_sas-crunchy-data-operator-api-server: viya-4-x64_oci_linux_2-docker/sas-crunchy-data-operator-api-server
  SAS_COMPONENT_RELPATH_sas-crunchy-data-operator-event-manager: viya-4-x64_oci_linux_2-docker/sas-crunchy-data-operator-event-manager
  SAS_COMPONENT_RELPATH_sas-crunchy-data-operator-scheduler: viya-4-x64_oci_linux_2-docker/sas-crunchy-data-operator-scheduler
  SAS_COMPONENT_RELPATH_sas-crunchy-data-pgadmin: viya-4-x64_oci_linux_2-docker/sas-crunchy-data-pgadmin
  SAS_COMPONENT_RELPATH_sas-crunchy-data-pgbackrest: viya-4-x64_oci_linux_2-docker/sas-crunchy-data-pgbackrest
  SAS_COMPONENT_RELPATH_sas-crunchy-data-pgbackrest-job: viya-4-x64_oci_linux_2-docker/sas-crunchy-data-pgbackrest-job
  SAS_COMPONENT_RELPATH_sas-crunchy-data-pgbadger: viya-4-x64_oci_linux_2-docker/sas-crunchy-data-pgbadger
  SAS_COMPONENT_RELPATH_sas-crunchy-data-pgdump: viya-4-x64_oci_linux_2-docker/sas-crunchy-data-pgdump
  SAS_COMPONENT_RELPATH_sas-crunchy-data-pgo-client: viya-4-x64_oci_linux_2-docker/sas-crunchy-data-pgo-client
  SAS_COMPONENT_RELPATH_sas-crunchy-data-pgrestore: viya-4-x64_oci_linux_2-docker/sas-crunchy-data-pgrestore
  SAS_COMPONENT_RELPATH_sas-crunchy-data-postgres-12: viya-4-x64_oci_linux_2-docker/sas-crunchy-data-postgres-12
  SAS_COMPONENT_RELPATH_sas-crunchy-data-postgres-operator: viya-4-x64_oci_linux_2-docker/sas-crunchy-data-postgres-operator
  SAS_COMPONENT_RELPATH_sas-data-explorer-app: viya-4-x64_oci_linux_2-docker/sas-data-explorer-app
  SAS_COMPONENT_RELPATH_sas-data-flows: viya-4-x64_oci_linux_2-docker/sas-data-flows
  SAS_COMPONENT_RELPATH_sas-data-mining-models: viya-4-x64_oci_linux_2-docker/sas-data-mining-models
  SAS_COMPONENT_RELPATH_sas-data-mining-project-settings: viya-4-x64_oci_linux_2-docker/sas-data-mining-project-settings
  SAS_COMPONENT_RELPATH_sas-data-mining-results: viya-4-x64_oci_linux_2-docker/sas-data-mining-results
  SAS_COMPONENT_RELPATH_sas-data-mining-services: viya-4-x64_oci_linux_2-docker/sas-data-mining-services
  SAS_COMPONENT_RELPATH_sas-data-plans: viya-4-x64_oci_linux_2-docker/sas-data-plans
  SAS_COMPONENT_RELPATH_sas-data-profiles: viya-4-x64_oci_linux_2-docker/sas-data-profiles
  SAS_COMPONENT_RELPATH_sas-data-quality-services: viya-4-x64_oci_linux_2-docker/sas-data-quality-services
  SAS_COMPONENT_RELPATH_sas-data-server-utility: viya-4-x64_oci_linux_2-docker/sas-data-server-utility
  SAS_COMPONENT_RELPATH_sas-data-sources: viya-4-x64_oci_linux_2-docker/sas-data-sources
  SAS_COMPONENT_RELPATH_sas-data-studio-app: viya-4-x64_oci_linux_2-docker/sas-data-studio-app
  SAS_COMPONENT_RELPATH_sas-db-migrator: viya-4-x64_oci_linux_2-docker/sas-db-migrator
  SAS_COMPONENT_RELPATH_sas-decision-manager-app: viya-4-x64_oci_linux_2-docker/sas-decision-manager-app
  SAS_COMPONENT_RELPATH_sas-decisions-definitions: viya-4-x64_oci_linux_2-docker/sas-decisions-definitions
  SAS_COMPONENT_RELPATH_sas-deployment-data: viya-4-x64_oci_linux_2-docker/sas-deployment-data
  SAS_COMPONENT_RELPATH_sas-device-management: viya-4-x64_oci_linux_2-docker/sas-device-management
  SAS_COMPONENT_RELPATH_sas-drive-app: viya-4-x64_oci_linux_2-docker/sas-drive-app
  SAS_COMPONENT_RELPATH_sas-environment-manager-app: viya-4-x64_oci_linux_2-docker/sas-environment-manager-app
  SAS_COMPONENT_RELPATH_sas-esp-load-balancer: viya-4-x64_oci_linux_2-docker/sas-esp-load-balancer
  SAS_COMPONENT_RELPATH_sas-esp-oauth2-proxy: viya-4-x64_oci_linux_2-docker/sas-esp-oauth2-proxy
  SAS_COMPONENT_RELPATH_sas-esp-operator: viya-4-x64_oci_linux_2-docker/sas-esp-operator
  SAS_COMPONENT_RELPATH_sas-event-stream-manager-app: viya-4-x64_oci_linux_2-docker/sas-event-stream-manager-app
  SAS_COMPONENT_RELPATH_sas-event-stream-processing-metering-app: viya-4-x64_oci_linux_2-docker/sas-event-stream-processing-metering-app
  SAS_COMPONENT_RELPATH_sas-event-stream-processing-server-app: viya-4-x64_oci_linux_2-docker/sas-event-stream-processing-server-app
  SAS_COMPONENT_RELPATH_sas-event-stream-processing-streamviewer-app: viya-4-x64_oci_linux_2-docker/sas-event-stream-processing-streamviewer-app
  SAS_COMPONENT_RELPATH_sas-event-stream-processing-studio-app: viya-4-x64_oci_linux_2-docker/sas-event-stream-processing-studio-app
  SAS_COMPONENT_RELPATH_sas-files: viya-4-x64_oci_linux_2-docker/sas-files
  SAS_COMPONENT_RELPATH_sas-folders: viya-4-x64_oci_linux_2-docker/sas-folders
  SAS_COMPONENT_RELPATH_sas-fonts: viya-4-x64_oci_linux_2-docker/sas-fonts
  SAS_COMPONENT_RELPATH_sas-forecasting-comparison: viya-4-x64_oci_linux_2-docker/sas-forecasting-comparison
  SAS_COMPONENT_RELPATH_sas-forecasting-events: viya-4-x64_oci_linux_2-docker/sas-forecasting-events
  SAS_COMPONENT_RELPATH_sas-forecasting-exploration: viya-4-x64_oci_linux_2-docker/sas-forecasting-exploration
  SAS_COMPONENT_RELPATH_sas-forecasting-filters: viya-4-x64_oci_linux_2-docker/sas-forecasting-filters
  SAS_COMPONENT_RELPATH_sas-forecasting-pipelines: viya-4-x64_oci_linux_2-docker/sas-forecasting-pipelines
  SAS_COMPONENT_RELPATH_sas-forecasting-services: viya-4-x64_oci_linux_2-docker/sas-forecasting-services
  SAS_COMPONENT_RELPATH_sas-geo-enrichment: viya-4-x64_oci_linux_2-docker/sas-geo-enrichment
  SAS_COMPONENT_RELPATH_sas-gpu-server: viya-4-x64_oci_linux_2-docker/sas-gpu-server
  SAS_COMPONENT_RELPATH_sas-graph-builder-app: viya-4-x64_oci_linux_2-docker/sas-graph-builder-app
  SAS_COMPONENT_RELPATH_sas-graph-templates: viya-4-x64_oci_linux_2-docker/sas-graph-templates
  SAS_COMPONENT_RELPATH_sas-identities: viya-4-x64_oci_linux_2-docker/sas-identities
  SAS_COMPONENT_RELPATH_sas-import-9: viya-4-x64_oci_linux_2-docker/sas-import-9
  SAS_COMPONENT_RELPATH_sas-job-execution: viya-4-x64_oci_linux_2-docker/sas-job-execution
  SAS_COMPONENT_RELPATH_sas-job-execution-app: viya-4-x64_oci_linux_2-docker/sas-job-execution-app
  SAS_COMPONENT_RELPATH_sas-job-flow-scheduling: viya-4-x64_oci_linux_2-docker/sas-job-flow-scheduling
  SAS_COMPONENT_RELPATH_sas-launcher: viya-4-x64_oci_linux_2-docker/sas-launcher
  SAS_COMPONENT_RELPATH_sas-lineage-app: viya-4-x64_oci_linux_2-docker/sas-lineage-app
  SAS_COMPONENT_RELPATH_sas-links: viya-4-x64_oci_linux_2-docker/sas-links
  SAS_COMPONENT_RELPATH_sas-localization: viya-4-x64_oci_linux_2-docker/sas-localization
  SAS_COMPONENT_RELPATH_sas-logon-app: viya-4-x64_oci_linux_2-docker/sas-logon-app
  SAS_COMPONENT_RELPATH_sas-mail: viya-4-x64_oci_linux_2-docker/sas-mail
  SAS_COMPONENT_RELPATH_sas-maps: viya-4-x64_oci_linux_2-docker/sas-maps
  SAS_COMPONENT_RELPATH_sas-microanalytic-score: viya-4-x64_oci_linux_2-docker/sas-microanalytic-score
  SAS_COMPONENT_RELPATH_sas-model-management: viya-4-x64_oci_linux_2-docker/sas-model-management
  SAS_COMPONENT_RELPATH_sas-model-manager-app: viya-4-x64_oci_linux_2-docker/sas-model-manager-app
  SAS_COMPONENT_RELPATH_sas-model-publish: viya-4-x64_oci_linux_2-docker/sas-model-publish
  SAS_COMPONENT_RELPATH_sas-model-repository: viya-4-x64_oci_linux_2-docker/sas-model-repository
  SAS_COMPONENT_RELPATH_sas-model-studio-app: viya-4-x64_oci_linux_2-docker/sas-model-studio-app
  SAS_COMPONENT_RELPATH_sas-natural-language-conversations: viya-4-x64_oci_linux_2-docker/sas-natural-language-conversations
  SAS_COMPONENT_RELPATH_sas-natural-language-generation: viya-4-x64_oci_linux_2-docker/sas-natural-language-generation
  SAS_COMPONENT_RELPATH_sas-natural-language-understanding: viya-4-x64_oci_linux_2-docker/sas-natural-language-understanding
  SAS_COMPONENT_RELPATH_sas-notifications: viya-4-x64_oci_linux_2-docker/sas-notifications
  SAS_COMPONENT_RELPATH_sas-orchestration: viya-4-x64_oci_linux_2-docker/sas-orchestration
  SAS_COMPONENT_RELPATH_sas-preferences: viya-4-x64_oci_linux_2-docker/sas-preferences
  SAS_COMPONENT_RELPATH_sas-prepull: viya-4-x64_oci_linux_2-docker/sas-prepull
  SAS_COMPONENT_RELPATH_sas-programming-environment: viya-4-x64_oci_linux_2-docker/sas-programming-environment
  SAS_COMPONENT_RELPATH_sas-projects: viya-4-x64_oci_linux_2-docker/sas-projects
  SAS_COMPONENT_RELPATH_sas-quality-knowledge-base: viya-4-x64_oci_linux_2-docker/sas-quality-knowledge-base
  SAS_COMPONENT_RELPATH_sas-rabbitmq-server: viya-4-x64_oci_linux_2-docker/sas-rabbitmq-server
  SAS_COMPONENT_RELPATH_sas-readiness: viya-4-x64_oci_linux_2-docker/sas-readiness
  SAS_COMPONENT_RELPATH_sas-relationships: viya-4-x64_oci_linux_2-docker/sas-relationships
  SAS_COMPONENT_RELPATH_sas-report-distribution: viya-4-x64_oci_linux_2-docker/sas-report-distribution
  SAS_COMPONENT_RELPATH_sas-report-execution: viya-4-x64_oci_linux_2-docker/sas-report-execution
  SAS_COMPONENT_RELPATH_sas-report-renderer: viya-4-x64_oci_linux_2-docker/sas-report-renderer
  SAS_COMPONENT_RELPATH_sas-report-services-group: viya-4-x64_oci_linux_2-docker/sas-report-services-group
  SAS_COMPONENT_RELPATH_sas-restore-job: viya-4-x64_oci_linux_2-docker/sas-restore-job
  SAS_COMPONENT_RELPATH_sas-scheduler: viya-4-x64_oci_linux_2-docker/sas-scheduler
  SAS_COMPONENT_RELPATH_sas-score-definitions: viya-4-x64_oci_linux_2-docker/sas-score-definitions
  SAS_COMPONENT_RELPATH_sas-score-execution: viya-4-x64_oci_linux_2-docker/sas-score-execution
  SAS_COMPONENT_RELPATH_sas-search: viya-4-x64_oci_linux_2-docker/sas-search
  SAS_COMPONENT_RELPATH_sas-sentiment-execution-provider: viya-4-x64_oci_linux_2-docker/sas-sentiment-execution-provider
  SAS_COMPONENT_RELPATH_sas-sssd-server: viya-4-x64_oci_linux_2-docker/sas-sssd-server
  SAS_COMPONENT_RELPATH_sas-studio-app: viya-4-x64_oci_linux_2-docker/sas-studio-app
  SAS_COMPONENT_RELPATH_sas-subject-contacts: viya-4-x64_oci_linux_2-docker/sas-subject-contacts
  SAS_COMPONENT_RELPATH_sas-templates: viya-4-x64_oci_linux_2-docker/sas-templates
  SAS_COMPONENT_RELPATH_sas-text-analytics: viya-4-x64_oci_linux_2-docker/sas-text-analytics
  SAS_COMPONENT_RELPATH_sas-text-cas-data-management: viya-4-x64_oci_linux_2-docker/sas-text-cas-data-management
  SAS_COMPONENT_RELPATH_sas-text-categorization: viya-4-x64_oci_linux_2-docker/sas-text-categorization
  SAS_COMPONENT_RELPATH_sas-text-concepts: viya-4-x64_oci_linux_2-docker/sas-text-concepts
  SAS_COMPONENT_RELPATH_sas-text-parsing: viya-4-x64_oci_linux_2-docker/sas-text-parsing
  SAS_COMPONENT_RELPATH_sas-text-sentiment: viya-4-x64_oci_linux_2-docker/sas-text-sentiment
  SAS_COMPONENT_RELPATH_sas-text-topics: viya-4-x64_oci_linux_2-docker/sas-text-topics
  SAS_COMPONENT_RELPATH_sas-theme-content: viya-4-x64_oci_linux_2-docker/sas-theme-content
  SAS_COMPONENT_RELPATH_sas-theme-designer-app: viya-4-x64_oci_linux_2-docker/sas-theme-designer-app
  SAS_COMPONENT_RELPATH_sas-themes: viya-4-x64_oci_linux_2-docker/sas-themes
  SAS_COMPONENT_RELPATH_sas-thumbnails: viya-4-x64_oci_linux_2-docker/sas-thumbnails
  SAS_COMPONENT_RELPATH_sas-topic-management: viya-4-x64_oci_linux_2-docker/sas-topic-management
  SAS_COMPONENT_RELPATH_sas-transfer: viya-4-x64_oci_linux_2-docker/sas-transfer
  SAS_COMPONENT_RELPATH_sas-transformations: viya-4-x64_oci_linux_2-docker/sas-transformations
  SAS_COMPONENT_RELPATH_sas-types: viya-4-x64_oci_linux_2-docker/sas-types
  SAS_COMPONENT_RELPATH_sas-visual-analytics-administration: viya-4-x64_oci_linux_2-docker/sas-visual-analytics-administration
  SAS_COMPONENT_RELPATH_sas-visual-analytics-app: viya-4-x64_oci_linux_2-docker/sas-visual-analytics-app
  SAS_COMPONENT_RELPATH_sas-web-data-access: viya-4-x64_oci_linux_2-docker/sas-web-data-access
  SAS_COMPONENT_RELPATH_sas-workflow: viya-4-x64_oci_linux_2-docker/sas-workflow
  SAS_COMPONENT_RELPATH_sas-workflow-definition-history: viya-4-x64_oci_linux_2-docker/sas-workflow-definition-history
  SAS_COMPONENT_RELPATH_sas-workflow-manager-app: viya-4-x64_oci_linux_2-docker/sas-workflow-manager-app
  SAS_COMPONENT_TAG_sas-analytics-components: 20.17.7-20201209.1607538004353
  SAS_COMPONENT_TAG_sas-analytics-events: 1.4.4-20201204.1607119383686
  SAS_COMPONENT_TAG_sas-analytics-services: 1.10.0-20201204.1607097302572
  SAS_COMPONENT_TAG_sas-annotations: 2.9.0-20201208.1607439456307
  SAS_COMPONENT_TAG_sas-app-registry: 1.50.0-20201202.1606937218076
  SAS_COMPONENT_TAG_sas-arke: 1.4.0-20201211.1607698571564
  SAS_COMPONENT_TAG_sas-audit: 1.58.1-20201207.1607355915596
  SAS_COMPONENT_TAG_sas-authorization: 3.32.14-20201204.1607098698544
  SAS_COMPONENT_TAG_sas-backup-agent: 2.16.0-20201209.1607495194463
  SAS_COMPONENT_TAG_sas-backup-job: 1.9.0-20201209.1607495417341
  SAS_COMPONENT_TAG_sas-batch: 1.4.0-20201214.1607958362320
  SAS_COMPONENT_TAG_sas-business-rules-services: 3.9.15-20201210.1607644432623
  SAS_COMPONENT_TAG_sas-cachelocator: 1.23.11-20201204.1607051152259
  SAS_COMPONENT_TAG_sas-cacheserver: 1.23.11-20201204.1607051747986
  SAS_COMPONENT_TAG_sas-cas-administration: 1.28.1-20201209.1607532545693
  SAS_COMPONENT_TAG_sas-cas-control: 2.3.6-20201210.1607621490977
  SAS_COMPONENT_TAG_sas-cas-operator: 2.8.2-20201119.1605811301533
  SAS_COMPONENT_TAG_sas-cas-server: 1.11.6-20201214.1607945279618
  SAS_COMPONENT_TAG_sas-certframe: 3.9.0-20201203.1607016443086
  SAS_COMPONENT_TAG_sas-code-debugger: 2.1.5-20201202.1606941614459
  SAS_COMPONENT_TAG_sas-code-debugger-app: 2.2.5-20201211.1607719641413
  SAS_COMPONENT_TAG_sas-comments: 2.56.0-20201207.1607337374651
  SAS_COMPONENT_TAG_sas-compute: 1.9.21-20201214.1607967809598
  SAS_COMPONENT_TAG_sas-config-init: 1.2.6-20200928.1601307316387
  SAS_COMPONENT_TAG_sas-config-reconciler: 1.3.0-20201203.1607001188766
  SAS_COMPONENT_TAG_sas-configuration: 1.59.3-20201204.1607052795259
  SAS_COMPONENT_TAG_sas-connect: 4.15.2-20201211.1607717177992
  SAS_COMPONENT_TAG_sas-connect-spawner: 0.15.3-20201214.1607947188551
  SAS_COMPONENT_TAG_sas-consul-server: 1.310003.3-20201211.1607715119836
  SAS_COMPONENT_TAG_sas-conversation-designer-app: 1.3.0-20201203.1607012667858
  SAS_COMPONENT_TAG_sas-credentials: 1.27.12-20201208.1607464004925
  SAS_COMPONENT_TAG_sas-crossdomainproxy: 1.12.0-20201211.1607701073883
  SAS_COMPONENT_TAG_sas-crunchy-data-backrest-restore: 20.3.1-20201007.1602085480832
  SAS_COMPONENT_TAG_sas-crunchy-data-collect: 20.3.0-20201003.1601767922110
  SAS_COMPONENT_TAG_sas-crunchy-data-delete-postgres-cluster: 20.4.0-20201104.1604521708999
  SAS_COMPONENT_TAG_sas-crunchy-data-operator-api-server: 20.5.0-20201124.1606238113215
  SAS_COMPONENT_TAG_sas-crunchy-data-operator-event-manager: 20.3.0-20201003.1601769857476
  SAS_COMPONENT_TAG_sas-crunchy-data-operator-scheduler: 20.3.0-20201003.1601770161606
  SAS_COMPONENT_TAG_sas-crunchy-data-pgadmin: 20.5.2-20201110.1605028154818
  SAS_COMPONENT_TAG_sas-crunchy-data-pgbackrest: 20.3.1-20201007.1602104573190
  SAS_COMPONENT_TAG_sas-crunchy-data-pgbackrest-job: 20.3.1-20201007.1602104522466
  SAS_COMPONENT_TAG_sas-crunchy-data-pgbadger: 20.3.0-20201003.1601768256700
  SAS_COMPONENT_TAG_sas-crunchy-data-pgdump: 20.6.0-20201130.1606712876259
  SAS_COMPONENT_TAG_sas-crunchy-data-pgo-client: 20.5.0-20201112.1605153962364
  SAS_COMPONENT_TAG_sas-crunchy-data-pgrestore: 20.3.1-20201007.1602085826439
  SAS_COMPONENT_TAG_sas-crunchy-data-postgres-12: 20.4.0-20201120.1605885108458
  SAS_COMPONENT_TAG_sas-crunchy-data-postgres-operator: 20.6.2-20201130.1606700635651
  SAS_COMPONENT_TAG_sas-data-explorer-app: 1.23.6-20201203.1607009499801
  SAS_COMPONENT_TAG_sas-data-flows: 1.6.0-20201209.1607548143778
  SAS_COMPONENT_TAG_sas-data-mining-models: 39.11.2-20201203.1607025419402
  SAS_COMPONENT_TAG_sas-data-mining-project-settings: 39.10.1-20201203.1607025448043
  SAS_COMPONENT_TAG_sas-data-mining-results: 22.23.7-20201203.1607025661511
  SAS_COMPONENT_TAG_sas-data-mining-services: 39.20.78-20201203.1607026321951
  SAS_COMPONENT_TAG_sas-data-plans: 1.22.14-20201209.1607474940409
  SAS_COMPONENT_TAG_sas-data-profiles: 4.32.1-20201203.1607011072196
  SAS_COMPONENT_TAG_sas-data-quality-services: 3.8.1-20201202.1606939069890
  SAS_COMPONENT_TAG_sas-data-server-utility: 20.6.0-20201118.1605736584855
  SAS_COMPONENT_TAG_sas-data-sources: 3.33.1-20201202.1606937911915
  SAS_COMPONENT_TAG_sas-data-studio-app: 1.22.25-20201209.1607475335725
  SAS_COMPONENT_TAG_sas-db-migrator: 1.1.0-20201209.1607523698073
  SAS_COMPONENT_TAG_sas-decision-manager-app: 5.19.0-20201210.1607632727866
  SAS_COMPONENT_TAG_sas-decisions-definitions: 3.10.15-20201210.1607644445003
  SAS_COMPONENT_TAG_sas-deployment-data: 1.2.0-20201209.1607530266025
  SAS_COMPONENT_TAG_sas-device-management: 2.21.0-20201203.1606974091293
  SAS_COMPONENT_TAG_sas-drive-app: 3.9.2-20201208.1607415324393
  SAS_COMPONENT_TAG_sas-environment-manager-app: 4.7.18-20201210.1607608415476
  SAS_COMPONENT_TAG_sas-esp-load-balancer: 7.6.0-20201001.1601570347918
  SAS_COMPONENT_TAG_sas-esp-oauth2-proxy: 10.78.0-20201208.1607450251728
  SAS_COMPONENT_TAG_sas-esp-operator: 10.77.2-20201210.1607615447889
  SAS_COMPONENT_TAG_sas-event-stream-manager-app: 7.8.24-20201211.1607650331718
  SAS_COMPONENT_TAG_sas-event-stream-processing-metering-app: 10.78.0-20201214.1607929237374
  SAS_COMPONENT_TAG_sas-event-stream-processing-server-app: 10.78.3-20201214.1607945148215
  SAS_COMPONENT_TAG_sas-event-stream-processing-streamviewer-app: 7.8.27-20201211.1607648686559
  SAS_COMPONENT_TAG_sas-event-stream-processing-studio-app: 7.8.24-20201211.1607651463964
  SAS_COMPONENT_TAG_sas-files: 2.36.7-20201204.1607053741549
  SAS_COMPONENT_TAG_sas-folders: 2.57.3-20201204.1607080745145
  SAS_COMPONENT_TAG_sas-fonts: 1.76.2-20201202.1606968212309
  SAS_COMPONENT_TAG_sas-forecasting-comparison: 15.11.0-20201203.1607012315095
  SAS_COMPONENT_TAG_sas-forecasting-events: 15.11.0-20201203.1607012406763
  SAS_COMPONENT_TAG_sas-forecasting-exploration: 15.12.0-20201203.1607024186781
  SAS_COMPONENT_TAG_sas-forecasting-filters: 15.12.0-20201203.1607026228979
  SAS_COMPONENT_TAG_sas-forecasting-pipelines: 15.15.5-20201209.1607532908435
  SAS_COMPONENT_TAG_sas-forecasting-services: 15.20.4-20201209.1607555830814
  SAS_COMPONENT_TAG_sas-geo-enrichment: 1.20.0-20201209.1607532669891
  SAS_COMPONENT_TAG_sas-gpu-server: 0.7.13-20201214.1607945327842
  SAS_COMPONENT_TAG_sas-graph-builder-app: 1.65.0-20201203.1607022262435
  SAS_COMPONENT_TAG_sas-graph-templates: 1.71.0-20201203.1607004187481
  SAS_COMPONENT_TAG_sas-identities: 2.40.14-20201204.1607054361393
  SAS_COMPONENT_TAG_sas-import-9: 1.9.9-20201211.1607711349452
  SAS_COMPONENT_TAG_sas-job-execution: 2.28.12-20201204.1607054870985
  SAS_COMPONENT_TAG_sas-job-execution-app: 2.18.3-20201209.1607521207111
  SAS_COMPONENT_TAG_sas-job-flow-scheduling: 2.2.7-20201002.1601644744469
  SAS_COMPONENT_TAG_sas-launcher: 1.18.8-20201208.1607443790845
  SAS_COMPONENT_TAG_sas-lineage-app: 2.8.1-20201202.1606960621719
  SAS_COMPONENT_TAG_sas-links: 1.73.0-20201204.1607077133902
  SAS_COMPONENT_TAG_sas-localization: 1.9.3-20201217.1608245885998
  SAS_COMPONENT_TAG_sas-logon-app: 2.40.17-20201208.1607458236727
  SAS_COMPONENT_TAG_sas-mail: 1.56.1-20201203.1607023389621
  SAS_COMPONENT_TAG_sas-maps: 1.76.0-20201209.1607538010156
  SAS_COMPONENT_TAG_sas-microanalytic-score: 2.34.6-20201214.1607955335324
  SAS_COMPONENT_TAG_sas-model-management: 1.16.58-20201214.1607964538030
  SAS_COMPONENT_TAG_sas-model-manager-app: 1.19.0-20201214.1607962203037
  SAS_COMPONENT_TAG_sas-model-publish: 2.27.0-20201209.1607555293093
  SAS_COMPONENT_TAG_sas-model-repository: 3.14.56-20201214.1607964567719
  SAS_COMPONENT_TAG_sas-model-studio-app: 1.51.2-20201209.1607544692059
  SAS_COMPONENT_TAG_sas-natural-language-conversations: 1.3.1-20201204.1607111974163
  SAS_COMPONENT_TAG_sas-natural-language-generation: 1.6.0-20201203.1607013425049
  SAS_COMPONENT_TAG_sas-natural-language-understanding: 3.4.0-20201203.1607014016368
  SAS_COMPONENT_TAG_sas-notifications: 1.55.1-20201207.1607355364455
  SAS_COMPONENT_TAG_sas-orchestration: 1.26.0-20201214.1607963475562
  SAS_COMPONENT_TAG_sas-preferences: 1.57.1-20201204.1607093916383
  SAS_COMPONENT_TAG_sas-prepull: 1.3.2-20201102.1604347909321
  SAS_COMPONENT_TAG_sas-programming-environment: 1.11.15-20201217.1608211744448
  SAS_COMPONENT_TAG_sas-projects: 1.23.18-20201209.1607532724047
  SAS_COMPONENT_TAG_sas-quality-knowledge-base: 32.5.1-20201202.1606937453723
  SAS_COMPONENT_TAG_sas-rabbitmq-server: 3.82003.2-20201013.1602597853237
  SAS_COMPONENT_TAG_sas-readiness: 1.3.3-20201203.1607020633267
  SAS_COMPONENT_TAG_sas-relationships: 3.28.11-20201204.1607056749902
  SAS_COMPONENT_TAG_sas-report-distribution: 2.52.0-20201106.1604662320003
  SAS_COMPONENT_TAG_sas-report-execution: 2.12.3-20201209.1607496369529
  SAS_COMPONENT_TAG_sas-report-renderer: 1.65.3-20201208.1607482529657
  SAS_COMPONENT_TAG_sas-report-services-group: 4.13.5-20201208.1607409510563
  SAS_COMPONENT_TAG_sas-restore-job: 1.9.0-20201209.1607495417341
  SAS_COMPONENT_TAG_sas-scheduler: 3.26.11-20201204.1607057236019
  SAS_COMPONENT_TAG_sas-score-definitions: 2.22.0-20201210.1607645547646
  SAS_COMPONENT_TAG_sas-score-execution: 2.21.0-20201210.1607646388188
  SAS_COMPONENT_TAG_sas-search: 2.29.6-20201204.1607057876100
  SAS_COMPONENT_TAG_sas-sentiment-execution-provider: 6.2.0-20201202.1606938881164
  SAS_COMPONENT_TAG_sas-sssd-server: 1.1.2-20200828.1598635360630
  SAS_COMPONENT_TAG_sas-studio-app: 6.112.11-20201210.1607627608398
  SAS_COMPONENT_TAG_sas-subject-contacts: 0.14.14-20201210.1607643779745
  SAS_COMPONENT_TAG_sas-templates: 1.24.12-20201204.1607058477854
  SAS_COMPONENT_TAG_sas-text-analytics: 2.12.1-20201209.1607553801258
  SAS_COMPONENT_TAG_sas-text-cas-data-management: 5.7.0-20201203.1607029718479
  SAS_COMPONENT_TAG_sas-text-categorization: 5.9.0-20201203.1607011533238
  SAS_COMPONENT_TAG_sas-text-concepts: 5.9.0-20201203.1607019179325
  SAS_COMPONENT_TAG_sas-text-parsing: 5.7.0-20201203.1607019166184
  SAS_COMPONENT_TAG_sas-text-sentiment: 5.8.0-20201204.1607099993806
  SAS_COMPONENT_TAG_sas-text-topics: 5.8.0-20201203.1607011531723
  SAS_COMPONENT_TAG_sas-theme-content: 1.23.2-20201202.1606918780434
  SAS_COMPONENT_TAG_sas-theme-designer-app: 3.25.7-20201204.1607109715258
  SAS_COMPONENT_TAG_sas-themes: 3.23.4-20201202.1606917995194
  SAS_COMPONENT_TAG_sas-thumbnails: 1.52.1-20201202.1606940688053
  SAS_COMPONENT_TAG_sas-topic-management: 6.8.0-20201202.1606937875615
  SAS_COMPONENT_TAG_sas-transfer: 2.29.17-20201204.1607058995910
  SAS_COMPONENT_TAG_sas-transformations: 2.24.9-20201209.1607544521387
  SAS_COMPONENT_TAG_sas-types: 3.16.1-20201130.1606757966415
  SAS_COMPONENT_TAG_sas-visual-analytics-administration: 1.53.1-20201202.1606941457830
  SAS_COMPONENT_TAG_sas-visual-analytics-app: 2.54.0-20201209.1607498056870
  SAS_COMPONENT_TAG_sas-web-data-access: 1.20.0-20201209.1607532765066
  SAS_COMPONENT_TAG_sas-workflow: 3.16.4-20201204.1607059513666
  SAS_COMPONENT_TAG_sas-workflow-definition-history: 2.7.8-20201212.1607769254594
  SAS_COMPONENT_TAG_sas-workflow-manager-app: 2.11.0-20201210.1607647072535
  SAS_COMPONENT_VERSION_sas-access-config: 0.7.0-20201214.1607956946182
  SAS_COMPONENT_VERSION_sas-analytics-components: 20.17.7-20201209.1607538004353
  SAS_COMPONENT_VERSION_sas-analytics-events: 1.4.4-20201204.1607119383686
  SAS_COMPONENT_VERSION_sas-analytics-services: 1.10.0-20201204.1607097302572
  SAS_COMPONENT_VERSION_sas-annotations: 2.9.0-20201208.1607439456307
  SAS_COMPONENT_VERSION_sas-app-registry: 1.50.0-20201202.1606937218076
  SAS_COMPONENT_VERSION_sas-arke: 1.4.0-20201211.1607698571564
  SAS_COMPONENT_VERSION_sas-audit: 1.58.1-20201207.1607355915596
  SAS_COMPONENT_VERSION_sas-authorization: 3.32.14-20201204.1607098698544
  SAS_COMPONENT_VERSION_sas-backup-agent: 2.16.0-20201209.1607495194463
  SAS_COMPONENT_VERSION_sas-backup-job: 1.9.0-20201209.1607495417341
  SAS_COMPONENT_VERSION_sas-batch: 1.4.0-20201214.1607958362320
  SAS_COMPONENT_VERSION_sas-business-rules-services: 3.9.15-20201210.1607644432623
  SAS_COMPONENT_VERSION_sas-cachelocator: 1.23.11-20201204.1607051152259
  SAS_COMPONENT_VERSION_sas-cacheserver: 1.23.11-20201204.1607051747986
  SAS_COMPONENT_VERSION_sas-cas-administration: 1.28.1-20201209.1607532545693
  SAS_COMPONENT_VERSION_sas-cas-control: 2.3.6-20201210.1607621490977
  SAS_COMPONENT_VERSION_sas-cas-operator: 2.8.2-20201119.1605811301533
  SAS_COMPONENT_VERSION_sas-cas-server: 1.11.6-20201214.1607945279618
  SAS_COMPONENT_VERSION_sas-certframe: 3.9.0-20201203.1607016443086
  SAS_COMPONENT_VERSION_sas-code-debugger: 2.1.5-20201202.1606941614459
  SAS_COMPONENT_VERSION_sas-code-debugger-app: 2.2.5-20201211.1607719641413
  SAS_COMPONENT_VERSION_sas-comments: 2.56.0-20201207.1607337374651
  SAS_COMPONENT_VERSION_sas-compute: 1.9.21-20201214.1607967809598
  SAS_COMPONENT_VERSION_sas-config-init: 1.2.6-20200928.1601307316387
  SAS_COMPONENT_VERSION_sas-config-reconciler: 1.3.0-20201203.1607001188766
  SAS_COMPONENT_VERSION_sas-configuration: 1.59.3-20201204.1607052795259
  SAS_COMPONENT_VERSION_sas-connect: 4.15.2-20201211.1607717177992
  SAS_COMPONENT_VERSION_sas-connect-spawner: 0.15.3-20201214.1607947188551
  SAS_COMPONENT_VERSION_sas-consul-server: 1.310003.3-20201211.1607715119836
  SAS_COMPONENT_VERSION_sas-conversation-designer-app: 1.3.0-20201203.1607012667858
  SAS_COMPONENT_VERSION_sas-credentials: 1.27.12-20201208.1607464004925
  SAS_COMPONENT_VERSION_sas-crossdomainproxy: 1.12.0-20201211.1607701073883
  SAS_COMPONENT_VERSION_sas-crunchy-data-backrest-restore: 20.3.1-20201007.1602085480832
  SAS_COMPONENT_VERSION_sas-crunchy-data-collect: 20.3.0-20201003.1601767922110
  SAS_COMPONENT_VERSION_sas-crunchy-data-delete-postgres-cluster: 20.4.0-20201104.1604521708999
  SAS_COMPONENT_VERSION_sas-crunchy-data-operator-api-server: 20.5.0-20201124.1606238113215
  SAS_COMPONENT_VERSION_sas-crunchy-data-operator-event-manager: 20.3.0-20201003.1601769857476
  SAS_COMPONENT_VERSION_sas-crunchy-data-operator-scheduler: 20.3.0-20201003.1601770161606
  SAS_COMPONENT_VERSION_sas-crunchy-data-pgadmin: 20.5.2-20201110.1605028154818
  SAS_COMPONENT_VERSION_sas-crunchy-data-pgbackrest: 20.3.1-20201007.1602104573190
  SAS_COMPONENT_VERSION_sas-crunchy-data-pgbackrest-job: 20.3.1-20201007.1602104522466
  SAS_COMPONENT_VERSION_sas-crunchy-data-pgbadger: 20.3.0-20201003.1601768256700
  SAS_COMPONENT_VERSION_sas-crunchy-data-pgdump: 20.6.0-20201130.1606712876259
  SAS_COMPONENT_VERSION_sas-crunchy-data-pgo-client: 20.5.0-20201112.1605153962364
  SAS_COMPONENT_VERSION_sas-crunchy-data-pgrestore: 20.3.1-20201007.1602085826439
  SAS_COMPONENT_VERSION_sas-crunchy-data-postgres-12: 20.4.0-20201120.1605885108458
  SAS_COMPONENT_VERSION_sas-crunchy-data-postgres-operator: 20.6.2-20201130.1606700635651
  SAS_COMPONENT_VERSION_sas-data-explorer-app: 1.23.6-20201203.1607009499801
  SAS_COMPONENT_VERSION_sas-data-flows: 1.6.0-20201209.1607548143778
  SAS_COMPONENT_VERSION_sas-data-mining-models: 39.11.2-20201203.1607025419402
  SAS_COMPONENT_VERSION_sas-data-mining-project-settings: 39.10.1-20201203.1607025448043
  SAS_COMPONENT_VERSION_sas-data-mining-results: 22.23.7-20201203.1607025661511
  SAS_COMPONENT_VERSION_sas-data-mining-services: 39.20.78-20201203.1607026321951
  SAS_COMPONENT_VERSION_sas-data-plans: 1.22.14-20201209.1607474940409
  SAS_COMPONENT_VERSION_sas-data-profiles: 4.32.1-20201203.1607011072196
  SAS_COMPONENT_VERSION_sas-data-quality-services: 3.8.1-20201202.1606939069890
  SAS_COMPONENT_VERSION_sas-data-server-utility: 20.6.0-20201118.1605736584855
  SAS_COMPONENT_VERSION_sas-data-sources: 3.33.1-20201202.1606937911915
  SAS_COMPONENT_VERSION_sas-data-studio-app: 1.22.25-20201209.1607475335725
  SAS_COMPONENT_VERSION_sas-db-migrator: 1.1.0-20201209.1607523698073
  SAS_COMPONENT_VERSION_sas-decision-manager-app: 5.19.0-20201210.1607632727866
  SAS_COMPONENT_VERSION_sas-decisions-definitions: 3.10.15-20201210.1607644445003
  SAS_COMPONENT_VERSION_sas-deployment-data: 1.2.0-20201209.1607530266025
  SAS_COMPONENT_VERSION_sas-deployment-operator: 1.26.0-20201214.1607963475562
  SAS_COMPONENT_VERSION_sas-device-management: 2.21.0-20201203.1606974091293
  SAS_COMPONENT_VERSION_sas-drive-app: 3.9.2-20201208.1607415324393
  SAS_COMPONENT_VERSION_sas-environment-manager-app: 4.7.18-20201210.1607608415476
  SAS_COMPONENT_VERSION_sas-esp-load-balancer: 7.6.0-20201001.1601570347918
  SAS_COMPONENT_VERSION_sas-esp-oauth2-proxy: 10.78.0-20201208.1607450251728
  SAS_COMPONENT_VERSION_sas-esp-operator: 10.77.2-20201210.1607615447889
  SAS_COMPONENT_VERSION_sas-event-stream-manager-app: 7.8.24-20201211.1607650331718
  SAS_COMPONENT_VERSION_sas-event-stream-processing-metering-app: 10.78.0-20201214.1607929237374
  SAS_COMPONENT_VERSION_sas-event-stream-processing-server-app: 10.78.3-20201214.1607945148215
  SAS_COMPONENT_VERSION_sas-event-stream-processing-streamviewer-app: 7.8.27-20201211.1607648686559
  SAS_COMPONENT_VERSION_sas-event-stream-processing-studio-app: 7.8.24-20201211.1607651463964
  SAS_COMPONENT_VERSION_sas-files: 2.36.7-20201204.1607053741549
  SAS_COMPONENT_VERSION_sas-folders: 2.57.3-20201204.1607080745145
  SAS_COMPONENT_VERSION_sas-fonts: 1.76.2-20201202.1606968212309
  SAS_COMPONENT_VERSION_sas-forecasting-comparison: 15.11.0-20201203.1607012315095
  SAS_COMPONENT_VERSION_sas-forecasting-events: 15.11.0-20201203.1607012406763
  SAS_COMPONENT_VERSION_sas-forecasting-exploration: 15.12.0-20201203.1607024186781
  SAS_COMPONENT_VERSION_sas-forecasting-filters: 15.12.0-20201203.1607026228979
  SAS_COMPONENT_VERSION_sas-forecasting-pipelines: 15.15.5-20201209.1607532908435
  SAS_COMPONENT_VERSION_sas-forecasting-services: 15.20.4-20201209.1607555830814
  SAS_COMPONENT_VERSION_sas-geo-enrichment: 1.20.0-20201209.1607532669891
  SAS_COMPONENT_VERSION_sas-gpu-server: 0.7.13-20201214.1607945327842
  SAS_COMPONENT_VERSION_sas-graph-builder-app: 1.65.0-20201203.1607022262435
  SAS_COMPONENT_VERSION_sas-graph-templates: 1.71.0-20201203.1607004187481
  SAS_COMPONENT_VERSION_sas-identities: 2.40.14-20201204.1607054361393
  SAS_COMPONENT_VERSION_sas-import-9: 1.9.9-20201211.1607711349452
  SAS_COMPONENT_VERSION_sas-job-execution: 2.28.12-20201204.1607054870985
  SAS_COMPONENT_VERSION_sas-job-execution-app: 2.18.3-20201209.1607521207111
  SAS_COMPONENT_VERSION_sas-job-flow-scheduling: 2.2.7-20201002.1601644744469
  SAS_COMPONENT_VERSION_sas-k8s-common: 2.7.8-20201211.1607719385033
  SAS_COMPONENT_VERSION_sas-launcher: 1.18.8-20201208.1607443790845
  SAS_COMPONENT_VERSION_sas-lineage-app: 2.8.1-20201202.1606960621719
  SAS_COMPONENT_VERSION_sas-links: 1.73.0-20201204.1607077133902
  SAS_COMPONENT_VERSION_sas-localization: 1.9.3-20201217.1608245885998
  SAS_COMPONENT_VERSION_sas-logon-app: 2.40.17-20201208.1607458236727
  SAS_COMPONENT_VERSION_sas-mail: 1.56.1-20201203.1607023389621
  SAS_COMPONENT_VERSION_sas-maps: 1.76.0-20201209.1607538010156
  SAS_COMPONENT_VERSION_sas-microanalytic-score: 2.34.6-20201214.1607955335324
  SAS_COMPONENT_VERSION_sas-model-management: 1.16.58-20201214.1607964538030
  SAS_COMPONENT_VERSION_sas-model-manager-app: 1.19.0-20201214.1607962203037
  SAS_COMPONENT_VERSION_sas-model-publish: 2.27.0-20201209.1607555293093
  SAS_COMPONENT_VERSION_sas-model-repository: 3.14.56-20201214.1607964567719
  SAS_COMPONENT_VERSION_sas-model-studio-app: 1.51.2-20201209.1607544692059
  SAS_COMPONENT_VERSION_sas-natural-language-conversations: 1.3.1-20201204.1607111974163
  SAS_COMPONENT_VERSION_sas-natural-language-generation: 1.6.0-20201203.1607013425049
  SAS_COMPONENT_VERSION_sas-natural-language-understanding: 3.4.0-20201203.1607014016368
  SAS_COMPONENT_VERSION_sas-notifications: 1.55.1-20201207.1607355364455
  SAS_COMPONENT_VERSION_sas-open-source-config: 1.22.1-20201214.1607954291457
  SAS_COMPONENT_VERSION_sas-orchestration: 1.26.0-20201214.1607963475562
  SAS_COMPONENT_VERSION_sas-preferences: 1.57.1-20201204.1607093916383
  SAS_COMPONENT_VERSION_sas-prepull: 1.3.2-20201102.1604347909321
  SAS_COMPONENT_VERSION_sas-programming-environment: 1.11.15-20201217.1608211744448
  SAS_COMPONENT_VERSION_sas-projects: 1.23.18-20201209.1607532724047
  SAS_COMPONENT_VERSION_sas-quality-knowledge-base: 32.5.1-20201202.1606937453723
  SAS_COMPONENT_VERSION_sas-rabbitmq-server: 3.82003.2-20201013.1602597853237
  SAS_COMPONENT_VERSION_sas-readiness: 1.3.3-20201203.1607020633267
  SAS_COMPONENT_VERSION_sas-relationships: 3.28.11-20201204.1607056749902
  SAS_COMPONENT_VERSION_sas-report-distribution: 2.52.0-20201106.1604662320003
  SAS_COMPONENT_VERSION_sas-report-execution: 2.12.3-20201209.1607496369529
  SAS_COMPONENT_VERSION_sas-report-renderer: 1.65.3-20201208.1607482529657
  SAS_COMPONENT_VERSION_sas-report-services-group: 4.13.5-20201208.1607409510563
  SAS_COMPONENT_VERSION_sas-restore-job: 1.9.0-20201209.1607495417341
  SAS_COMPONENT_VERSION_sas-scheduler: 3.26.11-20201204.1607057236019
  SAS_COMPONENT_VERSION_sas-score-definitions: 2.22.0-20201210.1607645547646
  SAS_COMPONENT_VERSION_sas-score-execution: 2.21.0-20201210.1607646388188
  SAS_COMPONENT_VERSION_sas-search: 2.29.6-20201204.1607057876100
  SAS_COMPONENT_VERSION_sas-sentiment-execution-provider: 6.2.0-20201202.1606938881164
  SAS_COMPONENT_VERSION_sas-sssd-server: 1.1.2-20200828.1598635360630
  SAS_COMPONENT_VERSION_sas-studio-app: 6.112.11-20201210.1607627608398
  SAS_COMPONENT_VERSION_sas-subject-contacts: 0.14.14-20201210.1607643779745
  SAS_COMPONENT_VERSION_sas-templates: 1.24.12-20201204.1607058477854
  SAS_COMPONENT_VERSION_sas-text-analytics: 2.12.1-20201209.1607553801258
  SAS_COMPONENT_VERSION_sas-text-cas-data-management: 5.7.0-20201203.1607029718479
  SAS_COMPONENT_VERSION_sas-text-categorization: 5.9.0-20201203.1607011533238
  SAS_COMPONENT_VERSION_sas-text-concepts: 5.9.0-20201203.1607019179325
  SAS_COMPONENT_VERSION_sas-text-parsing: 5.7.0-20201203.1607019166184
  SAS_COMPONENT_VERSION_sas-text-sentiment: 5.8.0-20201204.1607099993806
  SAS_COMPONENT_VERSION_sas-text-topics: 5.8.0-20201203.1607011531723
  SAS_COMPONENT_VERSION_sas-theme-content: 1.23.2-20201202.1606918780434
  SAS_COMPONENT_VERSION_sas-theme-designer-app: 3.25.7-20201204.1607109715258
  SAS_COMPONENT_VERSION_sas-themes: 3.23.4-20201202.1606917995194
  SAS_COMPONENT_VERSION_sas-thumbnails: 1.52.1-20201202.1606940688053
  SAS_COMPONENT_VERSION_sas-topic-management: 6.8.0-20201202.1606937875615
  SAS_COMPONENT_VERSION_sas-transfer: 2.29.17-20201204.1607058995910
  SAS_COMPONENT_VERSION_sas-transformations: 2.24.9-20201209.1607544521387
  SAS_COMPONENT_VERSION_sas-types: 3.16.1-20201130.1606757966415
  SAS_COMPONENT_VERSION_sas-visual-analytics-administration: 1.53.1-20201202.1606941457830
  SAS_COMPONENT_VERSION_sas-visual-analytics-app: 2.54.0-20201209.1607498056870
  SAS_COMPONENT_VERSION_sas-web-data-access: 1.20.0-20201209.1607532765066
  SAS_COMPONENT_VERSION_sas-workflow: 3.16.4-20201204.1607059513666
  SAS_COMPONENT_VERSION_sas-workflow-definition-history: 2.7.8-20201212.1607769254594
  SAS_COMPONENT_VERSION_sas-workflow-manager-app: 2.11.0-20201210.1607647072535
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-components-hg82cft8k9
  namespace: franceavv
---
apiVersion: v1
data:
  SAS_CONTEXT_PATH: compute
  SAS_DU_NAME: sas-compute
  SAS_SERVICE_NAME: sas-compute
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-compute-parameters-h4gh24t5b4
  namespace: franceavv
---
apiVersion: v1
data:
  AUTOEXEC_USERMODS_FILE: autoexec.sas
  COMPUTESERVER_USER_CONFIG: /config/
  COMPUTESERVER_VAR_PATH: /viya/
  CONFIG_USERMODS_FILE: sasv9.cfg
  SAS_INIT_CONFIG_FILE1: autoexec.sas
  SAS_INIT_CONFIG_FILE2: sasv9.cfg
  SAS_INIT_CONFIG_FILE3: startscript.sh
  SAS_INIT_CONFIG_KEY1: config/compute/sas.compute.server/autoexec_code/contents
  SAS_INIT_CONFIG_KEY2: config/compute/sas.compute.server/configuration_options/contents
  SAS_INIT_CONFIG_KEY3: config/compute/sas.compute.server/startup_commands/contents
  SAS_LANG_FILE_IN: /config/startscript.sh
  SCRIPT_USERMODS_FILE: startscript.sh
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-compute-server-config-2779d7ttf7
  namespace: franceavv
---
apiVersion: v1
data:
  SAS_CONTEXT_PATH: conceptExecutionProvider
  SAS_PORT_NAME: conceptexe
  SAS_SERVICE_NAME: sas-concept-execution-provider
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-concept-execution-provider-parameters-49467hcgm2
  namespace: franceavv
---
apiVersion: v1
data:
  SAS_CONTEXT_PATH: conceptTaxonomy
  SAS_PORT_NAME: concepttax
  SAS_SERVICE_NAME: sas-concept-taxonomy
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-concept-taxonomy-parameters-7h5c7gbbf4
  namespace: franceavv
---
apiVersion: v1
data:
  SAS_CONTEXT_PATH: concepts
  SAS_PORT_NAME: concepts
  SAS_SERVICE_NAME: sas-concepts
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-concepts-parameters-kgb9tgh962
  namespace: franceavv
---
apiVersion: v1
data:
  SAS_CONTEXT_PATH: configReconciler
  SAS_DU_NAME: sas-config-reconciler
  SAS_SERVICE_NAME: sas-config-reconciler
  SG_GO_MODULES_ENABLED: "true"
  SG_PROJECT: config-reconciler
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-config-reconciler-parameters-bghhbt6t6b
  namespace: franceavv
---
apiVersion: v1
data:
  SAS_CONTEXT_PATH: configuration
  SAS_DU_NAME: sas-configuration
  SAS_SERVICE_NAME: sas-configuration
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-configuration-parameters-2c5t2h7cmc
  namespace: franceavv
---
apiVersion: v1
data:
  SAS_CONTEXT_PATH: connect
  SAS_DU_NAME: sas-connect
  SAS_SERVICE_NAME: sas-connect
  SG_GO_MODULES_ENABLED: "true"
  SG_PROJECT: connect
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-connect-parameters-fh7k9hb944
  namespace: franceavv
---
apiVersion: v1
data:
  CONNECTSERVER_AUTOEXEC_USERMODS_FILE: autoexec_usermods.sas
  CONNECTSERVER_CONFIG_USERMODS_FILE: sasv9_usermods.cfg
  CONNECTSERVER_SCRIPT_USERMODS_FILE: connectserver_usermods.sh
  CONNECTSERVER_USER_CONFIG: /config/
  CONNECTSPAWNER_SCRIPT_USERMODS_FILE: connect_usermods.sh
  CONNECTSPAWNER_USER_CONFIG: /config/
  SAS_INIT_CONFIG_FILE1: connect_usermods.sh
  SAS_INIT_CONFIG_FILE2: connectserver_usermods.sh
  SAS_INIT_CONFIG_FILE3: sasv9_usermods.cfg
  SAS_INIT_CONFIG_FILE4: autoexec_usermods.sas
  SAS_INIT_CONFIG_KEY1: config/connect-spawner-viya/sas.connect.spawner/startup_commands/contents
  SAS_INIT_CONFIG_KEY2: config/connect-spawner-viya/sas.connect.server/startup_commands/contents
  SAS_INIT_CONFIG_KEY3: config/connect-spawner-viya/sas.connect.server/configuration_options/contents
  SAS_INIT_CONFIG_KEY4: config/connect-spawner-viya/sas.connect.server/autoexec_code/contents
  SAS_LANG_FILE_IN: /config/connectserver_usermods.sh
  SASCLOUDNATIVE: "1"
  USERMODS: -NOSCRIPT
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-connect-spawner-config-5m2d69c96m
  namespace: franceavv
---
apiVersion: v1
data:
  SAS_DU_NAME: sas-connect-spawner
  SAS_SERVICE_NAME: sas-connect-spawner
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-connect-spawner-parameters-2f7459f46b
  namespace: franceavv
---
apiVersion: v1
data:
  SITEDEFAULT_CONF: |
    ## This is a sitedefault.yaml file, matching the OpenLDAP deployed by the manifest.
    ## You do not apply this file. Instead you will reference it in your manifest
    ---
    config:
      application:
        sas.identities.providers.ldap.connection:
          host: 'gelldap-service'
          port: '389'
          url: 'ldap://${sas.identities.providers.ldap.connection.host}:${sas.identities.providers.ldap.connection.port}'
          userDN: 'cn=admin,dc=gelldap,dc=com'
          password: 'lnxsas'
          anonymousBind: 'false'
        sas.identities.providers.ldap.group:
          accountId: 'cn'
          baseDN: 'dc=gelldap,dc=com'
          createdDate: 'createTimestamp'
          distinguishedName: 'none'
          member: 'memberUid'
          memberOf: 'none'
          modifiedDate: 'modifyTimestamp'
          objectClass: 'posixGroup'
          objectFilter: '(objectClass=posixGroup)'
          searchFilter: '${sas.identities.providers.ldap.group.accountId}={0}'
        sas.identities.providers.ldap.user:
          accountId: 'uid'
          baseDN: 'dc=gelldap,dc=com'
          createdDate: 'createTimestamp'
          distinguishedName: 'none'
          memberOf: 'none'
          modifiedDate: 'modifyTimestamp'
          objectClass: 'posixAccount'
          objectFilter: '(objectClass=posixAccount)'
          searchFilter: '${sas.identities.providers.ldap.user.accountId}={0}'
        sas.identities.providers.ldap:
          primaryGroupMembershipsEnabled: 'true'
        sas.identities:
          administrator: 'sasadm'
        sas.logon.initial:
          user: sasboot
          password: lnxsas
        # sas.mail:
        #   host: 'gelmail-service'
        #   port: '1025'
        #   allowAllSenders: 'true'
        #   fromAddress: 'gelmail@gelmail.com'
        #   properties:
        #     mail.debug: 'true'
        # management.health.mail:
        #   enabled: 'true'
kind: ConfigMap
metadata:
  annotations: {}
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-consul-config-t6tgfb7274
  namespace: franceavv
---
apiVersion: v1
data:
  SAS_DU_NAME: sas-consul-server
  SAS_SERVICE_NAME: sas-consul-server
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-consul-server-parameters-t5cg299km6
  namespace: franceavv
---
apiVersion: v1
data:
  SAS_CONTEXT_PATH: SASConversationDesigner
  SAS_DU_NAME: sas-conversation-designer-app
  SAS_SERVICE_NAME: sas-conversation-designer-app
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-conversation-designer-app-parameters-c78bcg98df
  namespace: franceavv
---
apiVersion: v1
data:
  SAS_CONTEXT_PATH: credentials
  SAS_DU_NAME: sas-credentials
  SAS_SERVICE_NAME: sas-credentials
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-credentials-parameters-997mcgff5t
  namespace: franceavv
---
apiVersion: v1
data:
  CNTR_REPO_PREFIX: convoy
  SAS_CONTEXT_PATH: crossdomainproxy
  SAS_DU_NAME: sas-crossdomainproxy
  SAS_SERVICE_NAME: sas-crossdomainproxy
  SG_GO_MODULES_ENABLED: "true"
  SG_PROJECT: crossdomainproxy
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-crossdomainproxy-parameters-6mct4m5fb5
  namespace: franceavv
---
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-customer-provided-ca-certificates-29kdmk686c
  namespace: franceavv
---
apiVersion: v1
data:
  SAS_CONTEXT_PATH: dataDiscovery
  SAS_PORT_NAME: datadiscovery
  SAS_SERVICE_NAME: sas-data-discovery
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-data-discovery-parameters-g54dgkftmh
  namespace: franceavv
---
apiVersion: v1
data:
  JAVA_OPTION_FJPCP: java.util.concurrent.ForkJoinPool.common.parallelism=16
  SAS_CONTEXT_PATH: SASDataExplorer
  SAS_DU_NAME: sas-data-explorer-app
  SAS_SERVICE_NAME: sas-data-explorer-app
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-data-explorer-app-parameters-kdgb225f2c
  namespace: franceavv
---
apiVersion: v1
data:
  CNTR_REPO_PREFIX: convoy
  SAS_CONTEXT_PATH: dataFlows
  SAS_DU_NAME: sas-data-flows
  SAS_SERVICE_NAME: sas-data-flows
  SG_GO_MODULES_ENABLED: "true"
  SG_PROJECT: data-flows
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-data-flows-parameters-fcmk9fm26t
  namespace: franceavv
---
apiVersion: v1
data:
  SAS_CONTEXT_PATH: dataMiningModels
  SAS_DU_NAME: sas-data-mining-models
  SAS_SERVICE_NAME: sas-data-mining-models
  SG_GO_MODULES_ENABLED: "true"
  SG_PROJECT: data-mining-models
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-data-mining-models-parameters-62gh65tf2h
  namespace: franceavv
---
apiVersion: v1
data:
  SAS_CONTEXT_PATH: dataMining
  SAS_PORT_NAME: dmine
  SAS_SERVICE_NAME: sas-data-mining
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-data-mining-parameters-56h6d8f5h6
  namespace: franceavv
---
apiVersion: v1
data:
  SAS_CONTEXT_PATH: dataMiningProjectSettings
  SAS_DU_NAME: sas-data-mining-project-settings
  SAS_SERVICE_NAME: sas-data-mining-project-settings
  SG_GO_MODULES_ENABLED: "true"
  SG_PROJECT: data-mining-project-settings
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-data-mining-project-settings-parameters-tbmm7ktc7k
  namespace: franceavv
---
apiVersion: v1
data:
  SAS_CONTEXT_PATH: dataMiningResults
  SAS_DU_NAME: sas-data-mining-results
  SAS_SERVICE_NAME: sas-data-mining-results
  SG_GO_MODULES_ENABLED: "true"
  SG_PROJECT: data-mining-results
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-data-mining-results-parameters-6h584gttb6
  namespace: franceavv
---
apiVersion: v1
data:
  SAS_DU_NAME: sas-data-mining-services
  SAS_SERVICE_NAME: sas-data-mining-services
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-data-mining-services-parameters-g24kbgb8cd
  namespace: franceavv
---
apiVersion: v1
data:
  SAS_CONTEXT_PATH: dataMiningWarehouse
  SAS_PORT_NAME: dminewh
  SAS_SERVICE_NAME: sas-data-mining-warehouse
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-data-mining-warehouse-parameters-gd8586c8m5
  namespace: franceavv
---
apiVersion: v1
data:
  SAS_CONTEXT_PATH: dataPlans
  SAS_DU_NAME: sas-data-plans
  SAS_SERVICE_NAME: sas-data-plans
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-data-plans-parameters-kt6gf7ckfg
  namespace: franceavv
---
apiVersion: v1
data:
  CNTR_REPO_PREFIX: convoy
  SAS_CONTEXT_PATH: dataProfiles
  SAS_DU_NAME: sas-data-profiles
  SAS_SERVICE_NAME: sas-data-profiles
  SG_GO_MODULES_ENABLED: "true"
  SG_PROJECT: data-profiles
  SG_STATIC: "false"
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-data-profiles-parameters-fg6546hfff
  namespace: franceavv
---
apiVersion: v1
data:
  SAS_CONTEXT_PATH: dataQuality
  SAS_PORT_NAME: dataquality
  SAS_SERVICE_NAME: sas-data-quality
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-data-quality-parameters-82k7725h6h
  namespace: franceavv
---
apiVersion: v1
data:
  CNTR_REPO_PREFIX: convoy
  SAS_DU_NAME: sas-data-quality-services
  SAS_PORT_NAME: dq-services
  SAS_SERVICE_NAME: sas-data-quality-services
  SG_GO_MODULES_ENABLED: "true"
  SG_PROJECT: data-quality
  SG_STATIC: "false"
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-data-quality-services-parameters-hc89927972
  namespace: franceavv
---
apiVersion: v1
data:
  SAS_DU_NAME: sas-data-server-utility
  SAS_SERVICE_NAME: sas-data-server-utility
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-data-server-utility-parameters-fg6c99tcg8
  namespace: franceavv
---
apiVersion: v1
data:
  SAS_CONTEXT_PATH: dataSources
  SAS_PORT_NAME: datasources
  SAS_SERVICE_NAME: sas-data-sources
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-data-sources-parameters-5hh8k6m75g
  namespace: franceavv
---
apiVersion: v1
data:
  CNTR_REPO_PREFIX: convoy
  SAS_DU_NAME: sas-data-sources
  SAS_PORT_NAME: data-sources
  SAS_SERVICE_NAME: sas-data-sources
  SG_GO_MODULES_ENABLED: "true"
  SG_PROJECT: data-sources
  SG_STATIC: "false"
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-data-sources-root-parameters-5tt7df9cb6
  namespace: franceavv
---
apiVersion: v1
data:
  SAS_CONTEXT_PATH: SASDataStudio
  SAS_DU_NAME: sas-data-studio-app
  SAS_SERVICE_NAME: sas-data-studio-app
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-data-studio-app-parameters-7f9t897942
  namespace: franceavv
---
apiVersion: v1
data:
  SAS_CONTEXT_PATH: dataTables
  SAS_PORT_NAME: datatables
  SAS_SERVICE_NAME: sas-data-tables
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-data-tables-parameters-cc86t5ck82
  namespace: franceavv
---
apiVersion: v1
data:
  CNTR_REPO_PREFIX: convoy
  SAS_CONTEXT_PATH: SASDecisionManager
  SAS_DU_NAME: sas-decision-manager-app
  SAS_SERVICE_NAME: sas-decision-manager-app
  SG_GO_MODULES_ENABLED: "true"
  SG_PROJECT: decision-manager
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-decision-manager-app-parameters-h8bkc85mcm
  namespace: franceavv
---
apiVersion: v1
data:
  SAS_DU_NAME: sas-decisions-definitions
  SAS_SERVICE_NAME: sas-decisions-definitions
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-decisions-definitions-parameters-52b9gf7dh2
  namespace: franceavv
---
apiVersion: v1
data:
  SAS_CONTEXT_PATH: decisions
  SAS_PORT_NAME: decisions
  SAS_SERVICE_NAME: sas-decisions
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-decisions-parameters-7m6fkmh6hd
  namespace: franceavv
---
apiVersion: v1
data:
  SAS_DEPLOY_CONTEXT_PATH: deploymentData
  SAS_DU_NAME: sas-deployment-data
  SAS_METERING_CONTEXT_PATH: metering
  SAS_SERVICE_NAME: sas-deployment-data
  SG_GO_MODULES_ENABLED: "true"
  SG_PROJECT: deployment-data
  SG_TEST_TAGS: testca
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-deployment-data-parameters-7hkm7f28fh
  namespace: franceavv
---
apiVersion: v1
data:
  SAS_BUILD_TYPE: x64_oci_linux_2-docker
  SAS_CADENCE_DISPLAY_NAME: Stable 2020.1.1
  SAS_CADENCE_DISPLAY_SHORT_NAME: Stable
  SAS_CADENCE_DISPLAY_VERSION: 2020.1.1
  SAS_CADENCE_NAME: stable
  SAS_CADENCE_RELEASE: "20201222.1608648505512"
  SAS_CADENCE_VERSION: 2020.1.1
  SAS_DEPLOYMENT_TYPE: default
  SAS_REPOSITORY_WAREHOUSE_URL: https://ses.sas.download/ses
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-deployment-metadata-t4927tg597
  namespace: franceavv
---
apiVersion: v1
data:
  SAS_CONTEXT_PATH: deviceManagement
  SAS_DU_NAME: sas-device-management
  SAS_SERVICE_NAME: sas-device-management
  SG_GO_MODULES_ENABLED: "true"
  SG_PROJECT: device-management
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-device-management-parameters-ftdgk7cfb2
  namespace: franceavv
---
apiVersion: v1
data:
  SAS_CONTEXT_PATH: discoveryTableProvider
  SAS_PORT_NAME: dscvrytblprvdr
  SAS_SERVICE_NAME: sas-discovery-table-provider
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-discovery-table-provider-parameters-6d69m58c59
  namespace: franceavv
---
apiVersion: v1
data:
  SAS_CONTEXT_PATH: documents
  SAS_PORT_NAME: documents
  SAS_SERVICE_NAME: sas-documents
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-documents-parameters-kc89fbhkk4
  namespace: franceavv
---
apiVersion: v1
data:
  SAS_CONTEXT_PATH: SASDrive
  SAS_DU_NAME: sas-drive-app
  SAS_SERVICE_NAME: sas-drive-app
  SG_GO_MODULES_ENABLED: "true"
  SG_PROJECT: drive-app
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-drive-app-parameters-dtf9thkbmf
  namespace: franceavv
---
apiVersion: v1
data:
  SAS_CONTEXT_PATH: SASEnvironmentManager
  SAS_DU_NAME: sas-environment-manager-app
  SAS_SERVICE_NAME: sas-environment-manager-app
  SG_GO_MODULES_ENABLED: "true"
  SG_PROJECT: environment-manager
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-environment-manager-app-parameters-fbc666c5k8
  namespace: franceavv
---
apiVersion: v1
data:
  SAS_CONTEXT_PATH: SASEventStreamManager
  SAS_DU_NAME: sas-event-stream-manager-app
  SAS_ESP_COMMON_KUBERNETES: "true"
  SAS_SERVICE_NAME: sas-event-stream-manager-app
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-event-stream-manager-app-parameters-h2c4gh966k
  namespace: franceavv
---
apiVersion: v1
data:
  SAS_CONTEXT_PATH: SASEventStreamProcessingStreamviewer
  SAS_DU_NAME: sas-event-stream-processing-streamviewer-app
  SAS_ESP_COMMON_KUBERNETES: "true"
  SAS_SERVICE_NAME: sas-event-stream-processing-streamviewer-app
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-event-stream-processing-streamviewer-app-parameters-747g7fmff8
  namespace: franceavv
---
apiVersion: v1
data:
  SAS_CONTEXT_PATH: SASEventStreamProcessingStudio
  SAS_DU_NAME: sas-event-stream-processing-studio-app
  SAS_SERVICE_NAME: sas-event-stream-processing-studio-app
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-event-stream-processing-studio-app-parameters-dhff87bmdk
  namespace: franceavv
---
apiVersion: v1
data:
  SAS_CONTEXT_PATH: files
  SAS_DU_NAME: sas-files
  SAS_SERVICE_NAME: sas-files
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-files-parameters-f44b7h7t4h
  namespace: franceavv
---
apiVersion: v1
data:
  SAS_CONTEXT_PATH: folders
  SAS_DU_NAME: sas-folders
  SAS_SERVICE_NAME: sas-folders
  SG_GO_MODULES_ENABLED: "true"
  SG_PROJECT: folders
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-folders-parameters-d5cbcdc4hm
  namespace: franceavv
---
apiVersion: v1
data:
  SAS_CONTEXT_PATH: fonts
  SAS_DU_NAME: sas-fonts
  SAS_SERVICE_NAME: sas-fonts
  SG_GO_MODULES_ENABLED: "true"
  SG_PROJECT: fonts
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-fonts-parameters-5tbhb2c4tm
  namespace: franceavv
---
apiVersion: v1
data:
  CNTR_REPO_PREFIX: convoy
  SAS_CONTEXT_PATH: forecastingComparison
  SAS_DU_NAME: sas-forecasting-comparison
  SAS_SERVICE_NAME: sas-forecasting-comparison
  SG_GO_MODULES_ENABLED: "true"
  SG_PROJECT: forecasting-comparison
  SG_STATIC: "false"
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-forecasting-comparison-parameters-bhm6848gct
  namespace: franceavv
---
apiVersion: v1
data:
  SAS_CONTEXT_PATH: forecastingDataDefinition
  SAS_PORT_NAME: vfdatadef
  SAS_SERVICE_NAME: sas-forecasting-data-definition
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-forecasting-data-definition-parameters-ch8f24d2kb
  namespace: franceavv
---
apiVersion: v1
data:
  AACS_PROD_BRANCH_PREFIX: patch_
  SAS_CONTEXT_PATH: forecastingEvents
  SAS_DU_NAME: sas-forecasting-events
  SAS_SERVICE_NAME: sas-forecasting-events
  SG_GO_MODULES_ENABLED: "true"
  SG_PROJECT: forecasting-events
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-forecasting-events-parameters-7c9cd7hggh
  namespace: franceavv
---
apiVersion: v1
data:
  AACS_PROD_BRANCH_PREFIX: patch_
  SAS_CONTEXT_PATH: forecastingExploration
  SAS_DU_NAME: sas-forecasting-exploration
  SAS_SERVICE_NAME: sas-forecasting-exploration
  SG_GO_MODULES_ENABLED: "true"
  SG_PROJECT: forecasting-exploration
  SG_STATIC: "false"
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-forecasting-exploration-parameters-8kg9ck9m57
  namespace: franceavv
---
apiVersion: v1
data:
  AACS_PROD_BRANCH_PREFIX: patch_
  SAS_CONTEXT_PATH: forecastingFilters
  SAS_DU_NAME: sas-forecasting-filters
  SAS_SERVICE_NAME: sas-forecasting-filters
  SG_GO_MODULES_ENABLED: "true"
  SG_PROJECT: forecasting-filters
  SG_STATIC: "false"
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-forecasting-filters-parameters-9kt2b8k6hb
  namespace: franceavv
---
apiVersion: v1
data:
  SAS_CONTEXT_PATH: forecastingGateway
  SAS_PORT_NAME: vfgateway
  SAS_SERVICE_NAME: sas-forecasting-gateway
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-forecasting-gateway-parameters-kfdt5tc2kh
  namespace: franceavv
---
apiVersion: v1
data:
  SAS_CONTEXT_PATH: forecastingOverrides
  SAS_PORT_NAME: vfoverrides
  SAS_SERVICE_NAME: sas-forecasting-overrides
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-forecasting-overrides-parameters-6khmg6k4h2
  namespace: franceavv
---
apiVersion: v1
data:
  AACS_PROD_BRANCH_PREFIX: patch_
  SAS_CONTEXT_PATH: forecastingPipelines
  SAS_DU_NAME: sas-forecasting-pipelines
  SAS_SERVICE_NAME: sas-forecasting-pipelines
  SG_GO_MODULES_ENABLED: "true"
  SG_PROJECT: forecasting-pipelines
  SG_STATIC: "false"
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-forecasting-pipelines-parameters-794tb6bcd9
  namespace: franceavv
---
apiVersion: v1
data:
  SAS_DU_NAME: sas-forecasting-services
  SAS_SERVICE_NAME: sas-forecasting-services
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-forecasting-services-parameters-6gcmt9c984
  namespace: franceavv
---
apiVersion: v1
data:
  SAS_CONTEXT_PATH: forecastingStrategies
  SAS_PORT_NAME: vfstrategies
  SAS_SERVICE_NAME: sas-forecasting-strategies
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-forecasting-strategies-parameters-4m8f4d695d
  namespace: franceavv
---
apiVersion: v1
data:
  SAS_CONTEXT_PATH: geoEnrichment
  SAS_DU_NAME: sas-geo-enrichment
  SAS_SERVICE_NAME: sas-geo-enrichment
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-geo-enrichment-parameters-dc9gg7475g
  namespace: franceavv
---
apiVersion: v1
data:
  CONSUL_HTTP_ADDR: https://sas-consul-server:8500
  SAS_BOOTSTRAP_HTTP_CLIENT_TIMEOUT_REQUEST: 5m
  SAS_RECONCILER_SERVICES_ENABLED: "true"
  SAS_REGISTRY_REGISTER_ENABLED: "false"
kind: ConfigMap
metadata:
  annotations: {}
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-go-config-7hc79bmf8m
  namespace: franceavv
---
apiVersion: v1
data:
  CNTR_REPO_PREFIX: convoy
  SAS_CONTEXT_PATH: SASGraphBuilder
  SAS_DU_NAME: sas-graph-builder-app
  SAS_SERVICE_NAME: sas-graph-builder-app
  SG_GO_MODULES_ENABLED: "true"
  SG_PROJECT: graph-builder
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-graph-builder-app-parameters-dkhhcdd84h
  namespace: franceavv
---
apiVersion: v1
data:
  SAS_CONTEXT_PATH: graphTemplates
  SAS_DU_NAME: sas-graph-templates
  SAS_SERVICE_NAME: sas-graph-templates
  SG_GO_MODULES_ENABLED: "true"
  SG_PROJECT: graph-templates
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-graph-templates-parameters-hmdh962kmc
  namespace: franceavv
---
apiVersion: v1
data:
  SAS_CONTEXT_PATH: identities
  SAS_DU_NAME: sas-identities
  SAS_SERVICE_NAME: sas-identities
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-identities-parameters-8hhgf7m4m4
  namespace: franceavv
---
apiVersion: v1
data:
  SAS_CONTEXT_PATH: import9
  SAS_DU_NAME: sas-import-9
  SAS_SERVICE_NAME: sas-import-9
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-import-9-parameters-268d9gb7f4
  namespace: franceavv
---
apiVersion: v1
data:
  CONSUL_HTTP_ADDR: https://sas-consul-server:8500
  JAVA_OPTION_GEODE_LOG: -Dlogging.level.org.apache.geode.internal.net.SocketCreator=ERROR
  JAVA_OPTION_SERVER_PORT: -Dserver.port=8080
  SAS_LOG_FORMAT: json
  SAS_REGISTRY_REGISTER_ENABLED: "false"
  SAS_SERVICES_METRICS_SECURED: "false"
  SASLOGROOT: ""
  SPRING_CLOUD_CONSUL_DISCOVERY_PREFERIPADDRESS: "true"
  SPRING_CLOUD_CONSUL_DISCOVERY_REGISTER: "false"
  SPRING_CLOUD_CONSUL_ENABLED: "true"
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-java-config-t7t5thbgkd
  namespace: franceavv
---
apiVersion: v1
data:
  SAS_CERTIFICATE_FILE: /security/cert.jks
  SAS_TRUSTED_CA_CERTIFICATES_JKS_FILE: /security/trustedcerts.jks
  SAS_TRUSTED_CA_CERTIFICATES_PEM_FILE: /security/trustedcerts.pem
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-java-tls-config-fch4777298
  namespace: franceavv
---
apiVersion: v1
data:
  SAS_CONTEXT_PATH: jobDefinitions
  SAS_SERVICE_NAME: sas-job-definitions
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-job-definitions-parameters-f6t827d2bd
  namespace: franceavv
---
apiVersion: v1
data:
  CNTR_REPO_PREFIX: convoy
  SAS_CONTEXT_PATH: SASJobExecution
  SAS_DU_NAME: sas-job-execution-app
  SAS_SERVICE_NAME: sas-job-execution-app
  SG_GO_MODULES_ENABLED: "true"
  SG_PROJECT: jobexecapp
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-job-execution-app-parameters-9m27tbmt5m
  namespace: franceavv
---
apiVersion: v1
data:
  SAS_CONTEXT_PATH: jobExecution
  SAS_SERVICE_NAME: sas-job-execution
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-job-execution-parameters-89d844m8mh
  namespace: franceavv
---
apiVersion: v1
data:
  SAS_DU_NAME: sas-job-execution
  SAS_SERVICE_NAME: sas-job-execution
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-job-execution-root-parameters-cb87h56625
  namespace: franceavv
---
apiVersion: v1
data:
  SAS_CONTEXT_PATH: jobFlowScheduling
  SAS_DU_NAME: sas-job-flow-scheduling
  SAS_SERVICE_NAME: sas-job-flow-scheduling
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-job-flow-scheduling-parameters-m59tdd2tm6
  namespace: franceavv
---
apiVersion: v1
data:
  VIYA_LOCKDOWN_DEFAULT_METHODS: http email ftp hadoop java
  VIYA_LOCKDOWN_ENABLE: "1"
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-launcher-lockdown-config-g96dc2km8g
  namespace: franceavv
---
apiVersion: v1
data:
  SAS_CONTEXT_PATH: launcher
  SAS_DU_NAME: sas-launcher
  SAS_SERVICE_NAME: sas-launcher
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-launcher-parameters-4547dk58tk
  namespace: franceavv
---
apiVersion: v1
data:
  SAS_CONTEXT_PATH: licenses
  SAS_PORT_NAME: licenses
  SAS_SERVICE_NAME: sas-licenses
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-licenses-parameters-68c52htm7k
  namespace: franceavv
---
apiVersion: v1
data:
  image: cr.sas.com/viya-4-x64_oci_linux_2-docker/sas-orchestration:1.26.0-20201214.1607963475562
  registry: cr.sas.com
kind: ConfigMap
metadata:
  labels:
    orchestration.sas.com/lifecycle: image
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-lifecycle-image-m84d8k66hh
  namespace: franceavv
---
apiVersion: v1
data:
  deploy: |
    apiVersion: orchestration.sas.com/v1
    kind: LifecycleOperation
    metadata:
      name: deploy
    spec:
      args:
      - name: namespace
      - name: manifest
      - default: 60s
        name: timeout
      steps:
      - args:
        - apply
        - --selector
        - sas.com/admin=cluster-wide
        - --namespace
        - $namespace
        - -f
        - $manifest
        cmd: kubectl
      - args:
        - wait
        - --for
        - condition=established
        - --timeout
        - $timeout
        - --selector
        - sas.com/admin=cluster-wide
        - crd
        cmd: kubectl
      - args:
        - apply
        - --selector
        - sas.com/admin=cluster-local
        - --prune
        - --namespace
        - $namespace
        - -f
        - $manifest
        cmd: kubectl
      - args:
        - apply
        - --selector
        - sas.com/admin=namespace
        - --prune
        - --namespace
        - $namespace
        - -f
        - $manifest
        cmd: kubectl
      - args:
        - apply
        - --selector
        - sas.com/admin=namespace
        - --prune
        - --prune-whitelist
        - networking.istio.io/v1alpha3/DestinationRule
        - --prune-whitelist
        - networking.istio.io/v1alpha3/VirtualService
        - --namespace
        - $namespace
        - -f
        - $manifest
        cmd: kubectl
        when: .ClusterHasGroup "networking.istio.io"
  sas-deployment-operator.deploy: |
    apiVersion: orchestration.sas.com/v1
    kind: LifecycleOperation
    metadata:
      name: sas-deployment-operator.deploy
    spec:
      args:
      - name: namespace
      - name: manifest
      - name: permissionsManifest
      steps:
      - args:
        - apply
        - --namespace
        - $namespace
        - -f
        - $permissionsManifest
        cmd: kubectl
        when: $permissionsManifest
      - args:
        - deploy
        - --namespace
        - $namespace
        - --manifest
        - $manifest
        cmd: run
      - always: true
        args:
        - delete
        - --namespace
        - $namespace
        - -f
        - $permissionsManifest
        cmd: kubectl
        when: $permissionsManifest
  scale-to-zero: |
    apiVersion: orchestration.sas.com/v2beta2
    kind: LifecycleOperation
    metadata:
      name: scale-to-zero
    spec:
      args:
      - name: namespace
      - default: 60s
        name: timeout
      steps:
      - args:
        - scale
        - --namespace
        - $namespace
        - deployments
        - --replicas
        - "0"
        - --selector
        - sas.com/deployment=sas-viya,!sas.com/zero-scale-phase
        cmd: kubectl
      - args:
        - scale
        - --namespace
        - $namespace
        - statefulsets
        - --replicas
        - "0"
        - --selector
        - sas.com/deployment=sas-viya,!sas.com/zero-scale-phase
        cmd: kubectl
      - args:
        - patch
        - --namespace
        - $namespace
        - cronjobs
        - $resource.Name
        - --patch
        - '{"spec":{"suspend":true}}'
        cmd: kubectl
        withClusterResources:
          group: batch
          labelSelector: sas.com/deployment=sas-viya,!sas.com/zero-scale-phase
          namespace: $namespace
          resource: cronjobs
          version: v1beta1
      - args:
        - patch
        - --namespace
        - $namespace
        - casdeployments
        - $resource.Name
        - --type
        - json
        - --patch
        - '[{"op":"replace", "path": "/spec/shutdown", "value":true}]'
        cmd: kubectl
        when: .ClusterHasGroup "viya.sas.com"
        withClusterResources:
          group: viya.sas.com
          labelSelector: sas.com/deployment=sas-viya,!sas.com/zero-scale-phase
          namespace: $namespace
          resource: casdeployments
          version: v1alpha1
      - args:
        - patch
        - --namespace
        - $namespace
        - daemonsets
        - $resource.Name
        - --patch
        - '{"spec":{"template":{"spec":{"nodeSelector":{"sas.com/scale-class":"zero"}}}}}'
        cmd: kubectl
        withClusterResources:
          group: apps
          labelSelector: sas.com/deployment=sas-viya,!sas.com/zero-scale-phase
          namespace: $namespace
          resource: daemonsets
          version: v1
      - args:
        - patch
        - --namespace
        - $namespace
        - pgclusters
        - $resource.Name
        - --type
        - json
        - --patch
        - '[{"op":"replace", "path": "/spec/shutdown", "value":true}]'
        cmd: kubectl
        when: .ClusterHasGroup "crunchydata.com"
        withClusterResources:
          group: crunchydata.com
          labelSelector: sas.com/deployment=sas-viya,!sas.com/zero-scale-phase
          namespace: $namespace
          resource: pgclusters
          version: v1
      - args:
        - wait
        - --namespace
        - $namespace
        - --for
        - delete
        - pod
        - --selector
        - app.kubernetes.io/managed-by=sas-cas-operator
        - --timeout
        - $timeout
        cmd: kubectl
      - args:
        - wait
        - --namespace
        - $namespace
        - --for
        - delete
        - pod
        - --selector
        - vendor=crunchydata,role
        - --timeout
        - $timeout
        cmd: kubectl
      - args:
        - scale
        - --namespace
        - $namespace
        - deployments
        - --replicas
        - "0"
        - --selector
        - sas.com/deployment=sas-viya,sas.com/zero-scale-phase=1
        cmd: kubectl
  scale-up: |
    apiVersion: orchestration.sas.com/v2beta3
    kind: LifecycleOperation
    metadata:
      name: scale-up
    spec:
      args:
      - name: namespace
      steps:
      - args:
        - scale
        - --namespace
        - $namespace
        - deployments
        - $resource.Name
        - --replicas
        - (.LastAppliedConfigurationValue $resource "{.spec.replicas}" "1")
        cmd: kubectl
        withClusterResources:
          group: apps
          labelSelector: sas.com/deployment=sas-viya,sas.com/zero-scale-phase!=never
          namespace: $namespace
          resource: deployments
      - args:
        - scale
        - --namespace
        - $namespace
        - statefulsets
        - $resource.Name
        - --replicas
        - (.LastAppliedConfigurationValue $resource "{.spec.replicas}" "1")
        cmd: kubectl
        withClusterResources:
          group: apps
          labelSelector: sas.com/deployment=sas-viya,sas.com/zero-scale-phase!=never
          namespace: $namespace
          resource: statefulsets
      - args:
        - patch
        - --namespace
        - $namespace
        - cronjobs
        - $resource.Name
        - --patch
        - (print "{\"spec\":{\"suspend\":" (.LastAppliedConfigurationValue $resource "{.spec.suspend}" "false") "}}")
        cmd: kubectl
        withClusterResources:
          group: batch
          labelSelector: sas.com/deployment=sas-viya,sas.com/zero-scale-phase!=never
          namespace: $namespace
          resource: cronjobs
          version: v1beta1
      - args:
        - patch
        - --namespace
        - $namespace
        - casdeployments
        - $resource.Name
        - --type
        - json
        - --patch
        - '(print "[{\"op\":\"replace\", \"path\": \"/spec/shutdown\", \"value\":" (.LastAppliedConfigurationValue $resource "{.spec.shutdown}" "false") "}]" )'
        cmd: kubectl
        when: .ClusterHasGroup "viya.sas.com"
        withClusterResources:
          group: viya.sas.com
          labelSelector: sas.com/deployment=sas-viya,sas.com/zero-scale-phase!=never
          namespace: $namespace
          resource: casdeployments
          version: v1alpha1
      - args:
        - patch
        - --namespace
        - $namespace
        - daemonsets
        - $resource.Name
        - --patch
        - (print "{\"spec\":{\"template\":{\"spec\":{\"nodeSelector\":{\"sas.com/scale-class\":\"" (.LastAppliedConfigurationValue $resource "{.spec.template.spec.nodeSelector.sas\\.com/scale-class}" "ignored") "\"}}}}}" )
        cmd: kubectl
        withClusterResources:
          group: apps
          labelSelector: sas.com/deployment=sas-viya,sas.com/zero-scale-phase!=never
          lastAppliedConfiguration:
            jsonPath: '{.spec.template.spec.nodeSelector.sas\\.com/scale-class}'
          namespace: $namespace
          resource: daemonsets
          version: v1
      - args:
        - patch
        - --namespace
        - $namespace
        - daemonsets
        - $resource.Name
        - --type
        - json
        - --patch
        - '[{"op":"remove", "path": "/spec/template/spec/nodeSelector/sas.com~1scale-class"}]'
        cmd: kubectl
        withClusterResources:
          group: apps
          labelSelector: sas.com/deployment=sas-viya,sas.com/zero-scale-phase!=never
          lastAppliedConfiguration:
            isMissing: true
            jsonPath: '{.spec.template.spec.nodeSelector.sas\\.com/scale-class}'
          namespace: $namespace
          resource: daemonsets
          version: v1
      - args:
        - patch
        - --namespace
        - $namespace
        - pgclusters
        - $resource.Name
        - --type
        - json
        - --patch
        - '(print "[{\"op\":\"replace\", \"path\": \"/spec/shutdown\", \"value\":" (.LastAppliedConfigurationValue $resource "{.spec.shutdown}" "false") "}]" )'
        cmd: kubectl
        when: .ClusterHasGroup "crunchydata.com"
        withClusterResources:
          group: crunchydata.com
          labelSelector: sas.com/deployment=sas-viya,sas.com/zero-scale-phase!=never
          namespace: $namespace
          resource: pgclusters
          version: v1
kind: ConfigMap
metadata:
  labels:
    orchestration.sas.com/lifecycle: operations
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-lifecycle-operations-ht2t9h6t66
  namespace: franceavv
---
apiVersion: v1
data:
  CNTR_REPO_PREFIX: convoy
  SAS_CONTEXT_PATH: SASLineage
  SAS_DU_NAME: sas-lineage-app
  SAS_SERVICE_NAME: sas-lineage-app
  SG_GO_MODULES_ENABLED: "true"
  SG_PROJECT: sas-lineage-app
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-lineage-app-parameters-4b27m7ffkg
  namespace: franceavv
---
apiVersion: v1
data:
  SAS_CONTEXT_PATH: links
  SAS_DU_NAME: sas-links
  SAS_SERVICE_NAME: sas-links
  SG_GO_MODULES_ENABLED: "true"
  SG_PROJECT: links
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-links-parameters-hg5c7m8cd9
  namespace: franceavv
---
apiVersion: v1
data:
  SAS_CONTEXT_PATH: localization
  SAS_DU_NAME: sas-localization
  SAS_SERVICE_NAME: sas-localization
  SG_GO_MODULES_ENABLED: "true"
  SG_PROJECT: localization
  SG_STATIC: "false"
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-localization-parameters-tgft6d9fkg
  namespace: franceavv
---
apiVersion: v1
data:
  SAS_CONTEXT_PATH: SASLogon
  SAS_DU_NAME: sas-logon-app
  SAS_SERVICE_NAME: sas-logon-app
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-logon-app-parameters-g4hg56gm5b
  namespace: franceavv
---
apiVersion: v1
data:
  SAS_CONTEXT_PATH: mail
  SAS_DU_NAME: sas-mail
  SAS_SERVICE_NAME: sas-mail
  SG_GO_MODULES_ENABLED: "true"
  SG_PROJECT: mail
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-mail-parameters-td74867b69
  namespace: franceavv
---
apiVersion: v1
data:
  SAS_CONTEXT_PATH: maps
  SAS_DU_NAME: sas-maps
  SAS_SERVICE_NAME: sas-maps
  SG_GO_MODULES_ENABLED: "true"
  SG_PROJECT: maps
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-maps-parameters-k8g8gmt9ff
  namespace: franceavv
---
apiVersion: v1
data:
  MAS_INT_LLP_ACCESS: /opt/sas/viya/home/lib64:/usr/lib/oracle/19.5/client64/lib
  ORACLE_HOME: /usr/lib/oracle/19.5/client64
  ORAENV_ASK: "NO"
  PGCLIENTENCODING: UTF-8
  SASORA: V9
  TWO_TASK: ORACLE_SID
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-microanalytic-score-db-config-9t796842d9
  namespace: franceavv
---
apiVersion: v1
data:
  SAS_CONTEXT_PATH: microanalyticScore
  SAS_DU_NAME: sas-microanalytic-score
  SAS_SERVICE_NAME: sas-microanalytic-score
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-microanalytic-score-parameters-gfm554ck4d
  namespace: franceavv
---
apiVersion: v1
data:
  SAS_CONTEXT_PATH: mlPipelineAutomation
  SAS_PORT_NAME: mlpa
  SAS_SERVICE_NAME: sas-ml-pipeline-automation
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-ml-pipeline-automation-parameters-k89b8c5c94
  namespace: franceavv
---
apiVersion: v1
data:
  SAS_CONTEXT_PATH: modelManagement
  SAS_DU_NAME: sas-model-management
  SAS_SERVICE_NAME: sas-model-management
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-model-management-parameters-5thfggbbmc
  namespace: franceavv
---
apiVersion: v1
data:
  CNTR_REPO_PREFIX: convoy
  SAS_CONTEXT_PATH: SASModelManager
  SAS_DU_NAME: sas-model-manager-app
  SAS_SERVICE_NAME: sas-model-manager-app
  SG_GO_MODULES_ENABLED: "true"
  SG_PROJECT: model-manager
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-model-manager-app-parameters-7444826f58
  namespace: franceavv
---
apiVersion: v1
data:
  CNTR_REPO_PREFIX: convoy
  SAS_CONTEXT_PATH: modelPublish
  SAS_DU_NAME: sas-model-publish
  SAS_SERVICE_NAME: sas-model-publish
  SG_GO_MODULES_ENABLED: "true"
  SG_PROJECT: model-publish
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-model-publish-parameters-chf59h9ffh
  namespace: franceavv
---
apiVersion: v1
data:
  SAS_CONTEXT_PATH: modelRepository
  SAS_DU_NAME: sas-model-repository
  SAS_SERVICE_NAME: sas-model-repository
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-model-repository-parameters-7gh4f78tmb
  namespace: franceavv
---
apiVersion: v1
data:
  CNTR_REPO_PREFIX: convoy
  SAS_CONTEXT_PATH: SASModelStudio
  SAS_DU_NAME: sas-model-studio-app
  SAS_SERVICE_NAME: sas-model-studio-app
  SG_GO_MODULES_ENABLED: "true"
  SG_PROJECT: model-studio
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-model-studio-app-parameters-8h26g2tkhb
  namespace: franceavv
---
apiVersion: v1
data:
  SAS_CONTEXT_PATH: naturalLanguageConversations
  SAS_DU_NAME: sas-natural-language-conversations
  SAS_SERVICE_NAME: sas-natural-language-conversations
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-natural-language-conversations-parameters-m8gb6kffd8
  namespace: franceavv
---
apiVersion: v1
data:
  SAS_CONTEXT_PATH: naturalLanguageGeneration
  SAS_DU_NAME: sas-natural-language-generation
  SAS_SERVICE_NAME: sas-natural-language-generation
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-natural-language-generation-parameters-6bdhbg8t22
  namespace: franceavv
---
apiVersion: v1
data:
  SAS_CONTEXT_PATH: naturalLanguageUnderstanding
  SAS_DU_NAME: sas-natural-language-understanding
  SAS_SERVICE_NAME: sas-natural-language-understanding
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-natural-language-understanding-parameters-dh9b5fd4bf
  namespace: franceavv
---
apiVersion: v1
data:
  SAS_CONTEXT_PATH: notifications
  SAS_DU_NAME: sas-notifications
  SAS_ENTITY_REAPER_ENABLED: "true"
  SAS_ENTITY_REAPER_INTERVAL: 24h
  SAS_ENTITY_REAPER_RETENTION: 720h
  SAS_SERVICE_NAME: sas-notifications
  SG_GO_MODULES_ENABLED: "true"
  SG_PROJECT: notifications
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-notifications-parameters-tt7bg4982d
  namespace: franceavv
---
apiVersion: v1
data:
  SAS_CONTEXT_PATH: parseExecutionProvider
  SAS_PORT_NAME: parseexe
  SAS_SERVICE_NAME: sas-parse-execution-provider
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-parse-execution-provider-parameters-8gc484k7bf
  namespace: franceavv
---
apiVersion: v1
data:
  SAS_CONTEXT_PATH: parsing
  SAS_PORT_NAME: parsing
  SAS_SERVICE_NAME: sas-parsing
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-parsing-parameters-99c5dht2k9
  namespace: franceavv
---
apiVersion: v1
data:
  CONSUL_HTTP_ADDR: https://sas-consul-server:8500
  DATABASE_HOST: pgviyadb-fr.postgres.database.azure.com
  DATABASE_NAME: SharedServices
  DATABASE_PORT: "5432"
  DATABASE_SSL_ENABLED: "true"
  EXTERNAL_DATABASE: "true"
  NSQ_MAX_TRIES: "60"
  POSTGRES_OPERATOR_SERVICE_SCHEME: https
  REQUESTS_CA_BUNDLE: /security/trustedcerts.pem
  SAS_DATABASE_DATABASESERVERNAME: postgres
  SAS_DATABASE_SCHEMA: ${application.schema}
  SPRING_DATASOURCE_DRIVER-CLASS-NAME: org.postgresql.Driver
  SSL_CERT_FILE: /security/trustedcerts.pem
kind: ConfigMap
metadata:
  annotations: {}
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-postgres-config-bc9cd67gm8
  namespace: franceavv
---
apiVersion: v1
data:
  SAS_CONTEXT_PATH: preferences
  SAS_DU_NAME: sas-preferences
  SAS_SERVICE_NAME: sas-preferences
  SG_GO_MODULES_ENABLED: "true"
  SG_PROJECT: preferences
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-preferences-parameters-7mfhcbb5fk
  namespace: franceavv
---
apiVersion: v1
data:
  PREPULLED_HOSTS: ""
  SAS_CONTEXT_PATH: prepull
  SAS_DU_NAME: sas-prepull
  SAS_PREPULL_STATUS: unran
  SAS_SERVICE_NAME: sas-prepull
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-prepull-parameters-84tm54dfd7
  namespace: franceavv
---
apiVersion: v1
data:
  SAS_CONTEXT_PATH: projects
  SAS_DU_NAME: sas-projects
  SAS_SERVICE_NAME: sas-projects
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-projects-parameters-29hd7dk5gc
  namespace: franceavv
---
apiVersion: v1
data:
  SAS_CONTEXT_PATH: qkbManagement
  SAS_PORT_NAME: qkbmanagement
  SAS_SERVICE_NAME: sas-qkb-management
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-qkb-management-parameters-fg4k49dg5d
  namespace: franceavv
---
apiVersion: v1
data:
  sas-rdcopy.sh: |+
    #!/bin/sh
    umask 022
    SAS_RDNAME="`cat /payload/name`"
    echo "Attempting to deploy reference data '$SAS_RDNAME'..."
    SRCSHAFILE="/payload/check.sha1"
    SRCSHA=`cat "$SRCSHAFILE"`
    SRCDIR=/payload/content
    DSTDIR="/tgtdata/$SAS_RDNAME"
    DSTSHAFILE="/tgtdata/$SAS_RDNAME/$SAS_RDNAME.sha1"
    DSTSHA=
    [ -f "$DSTSHAFILE" ] && DSTSHA=`cat "$DSTSHAFILE"`
    COPYIT=1
    if [ -d "$DSTDIR" -a -n "$DSTSHA" ] ; then
        if [ "$SRCSHA" == "$DSTSHA" ] ; then
            echo "- Reference data with this same name and content already exists."
            echo "- No copy necessary."
        else
            echo "- Reference data with this same name, but different content, already exists."
            echo "- Skipping copy; existing content will not be overwritten."
        fi
        COPYIT=0
    fi
    if [ $COPYIT -eq 1 ] ; then
        echo "- Copying payload..."
        mkdir -p "$DSTDIR"
        cp -R "$SRCDIR"/* "$DSTDIR"
        cp "$SRCSHAFILE" "$DSTSHAFILE"
        chmod 644 "$DSTDIR"/*
        echo "- Done."
    fi

  sas-rdinit.sh: |+
    #!/bin/bash
    #/rdutil/sas-rdwait.sh || exit 1

  sas-rdlist.sh: |+
    #!/bin/sh
    ls /rdata | while read RD ; do
        INCTAG=
        [ -f "/rdata/$RD/$RD.sha1" ] || INCTAG=" (incomplete)"
        echo "$RD" "$INCTAG"
    done

  sas-rdremove.sh: |+
    #!/bin/sh

    RD_LABEL="$1"
    if [ ! -d "/rdata/$RD_LABEL" ] ; then
        echo "Reference data content \"$RD_LABEL\" was not found."
        exit 1
    fi
    rm -rf "/rdata/$RD_LABEL"
    echo "Reference data content \"$RD_LABEL\" was removed."

  sas-rdwait.sh: |+
    #!/bin/bash
    DATAPATH=/opt/sas/viya/home/share/refdata/qkb
    QKBCFGDIR=/qkb/config
    SAS_RDNAME="`cat $QKBCFGDIR/default`"
    if [ -z "$SAS_RDNAME" ] ; then
        echo "- No QKB configuration detected."
        exit 0
    fi
    SHAFILE="$DATAPATH/$SAS_RDNAME/$SAS_RDNAME.sha1"
    echo "Checking reference data: $SAS_RDNAME ..."
    while [ ! -f "$SHAFILE" ] ; do
        echo "- No SHA1 file at $SHAFILE; waiting..."
        sleep 10
    done
    echo "- Reference data $SAS_RDNAME is available."


kind: ConfigMap
metadata:
  annotations:
    orchestration.sas.com/literal: "true"
    sas.com/component-name: sas-data-quality-services
    sas.com/component-version: 3.8.1-20201202.1606939069890
    sas.com/version: 3.8.1
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-qkb-management-scripts
  namespace: franceavv
---
apiVersion: v1
data:
  SAS_DU_NAME: sas-rabbitmq-server
  SAS_SERVICE_NAME: sas-rabbitmq-server
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-rabbitmq-server-parameters-2ck4bktd4m-9k4262kh74
  namespace: franceavv
---
apiVersion: v1
data:
  SAS_CONTEXT_PATH: readiness
  SAS_DU_NAME: sas-readiness
  SAS_SERVICE_NAME: sas-readiness
  SG_GO_MODULES_ENABLED: "true"
  SG_PROJECT: readiness
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-readiness-parameters-25b6t89h8m
  namespace: franceavv
---
apiVersion: v1
data:
  SAS_CONTEXT_PATH: referenceData
  SAS_PORT_NAME: referencedata
  SAS_SERVICE_NAME: sas-reference-data
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-reference-data-parameters-cg86mft7dg
  namespace: franceavv
---
apiVersion: v1
data:
  SAS_CONTEXT_PATH: relationships
  SAS_DU_NAME: sas-relationships
  SAS_SERVICE_NAME: sas-relationships
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-relationships-parameters-72m4cc545f
  namespace: franceavv
---
apiVersion: v1
data:
  SAS_CONTEXT_PATH: reportAlerts
  SAS_PORT_NAME: reportalerts
  SAS_SERVICE_NAME: sas-report-alerts
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-report-alerts-parameters-t9hb2cgcdf
  namespace: franceavv
---
apiVersion: v1
data:
  SAS_CONTEXT_PATH: reportData
  SAS_PORT_NAME: reportdata
  SAS_SERVICE_NAME: sas-report-data
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-report-data-parameters-868gkd7h57
  namespace: franceavv
---
apiVersion: v1
data:
  SAS_CONTEXT_PATH: reportDistribution
  SAS_DU_NAME: sas-report-distribution
  SAS_SERVICE_NAME: sas-report-distribution
  SG_GO_MODULES_ENABLED: "true"
  SG_PROJECT: report-distribution
  SG_STATIC: "false"
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-report-distribution-parameters-6dc5bc774t
  namespace: franceavv
---
apiVersion: v1
data:
  SAS_DU_NAME: sas-report-execution
  SAS_SERVICE_NAME: sas-report-execution
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-report-execution-parameters-f4dt68bd2m
  namespace: franceavv
---
apiVersion: v1
data:
  SAS_CONTEXT_PATH: reportImages
  SAS_PORT_NAME: reportimages
  SAS_SERVICE_NAME: sas-report-images
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-report-images-parameters-57hdg6487b
  namespace: franceavv
---
apiVersion: v1
data:
  SAS_CONTEXT_PATH: reportPackages
  SAS_PORT_NAME: reportpackages
  SAS_SERVICE_NAME: sas-report-packages
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-report-packages-parameters-mb6fthbt5t
  namespace: franceavv
---
apiVersion: v1
data:
  CNTR_REPO_PREFIX: convoy
  SAS_CONTEXT_PATH: reportRenderer
  SAS_DU_NAME: sas-report-renderer
  SAS_SERVICE_NAME: sas-report-renderer
  SG_GO_MODULES_ENABLED: "true"
  SG_PROJECT: report-renderer
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-report-renderer-parameters-2668b4ktdd
  namespace: franceavv
---
apiVersion: v1
data:
  SAS_DU_NAME: sas-report-services-group
  SAS_SERVICE_NAME: sas-report-services-group
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-report-services-group-parameters-kd48hfhtbb
  namespace: franceavv
---
apiVersion: v1
data:
  SAS_CONTEXT_PATH: reportTemplates
  SAS_PORT_NAME: reporttemplates
  SAS_SERVICE_NAME: sas-report-templates
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-report-templates-parameters-bm5g65h68m
  namespace: franceavv
---
apiVersion: v1
data:
  SAS_CONTEXT_PATH: reportTransforms
  SAS_PORT_NAME: reporttransform
  SAS_SERVICE_NAME: sas-report-transforms
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-report-transforms-parameters-k9hhh9t4k4
  namespace: franceavv
---
apiVersion: v1
data:
  SAS_CONTEXT_PATH: reports
  SAS_PORT_NAME: reports
  SAS_SERVICE_NAME: sas-reports
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-reports-parameters-5d45f2f2m4
  namespace: franceavv
---
apiVersion: v1
data:
  SAS_RESTORE_JOB_DU_NAME: sas-restore-job
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-restore-job-parameters-6dh8htc9fg
  namespace: franceavv
---
apiVersion: v1
data:
  SAS_CONTEXT_PATH: rowSets
  SAS_PORT_NAME: rowsets
  SAS_SERVICE_NAME: sas-row-sets
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-row-sets-parameters-99b6b2kdmg
  namespace: franceavv
---
apiVersion: v1
data:
  SAS_CONTEXT_PATH: scheduler
  SAS_DU_NAME: sas-scheduler
  SAS_SERVICE_NAME: sas-scheduler
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-scheduler-parameters-fftkm7dgfc
  namespace: franceavv
---
apiVersion: v1
data:
  CNTR_REPO_PREFIX: convoy
  SAS_CONTEXT_PATH: scoreDefinitions
  SAS_DU_NAME: sas-score-definitions
  SAS_SERVICE_NAME: sas-score-definitions
  SG_GO_MODULES_ENABLED: "true"
  SG_PROJECT: score-definitions
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-score-definitions-parameters-mmh6f84m54
  namespace: franceavv
---
apiVersion: v1
data:
  CNTR_REPO_PREFIX: convoy
  SAS_CONTEXT_PATH: scoreExecution
  SAS_DU_NAME: sas-score-execution
  SAS_SERVICE_NAME: sas-score-execution
  SG_GO_MODULES_ENABLED: "true"
  SG_PROJECT: score-execution
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-score-execution-parameters-94b867gc45
  namespace: franceavv
---
apiVersion: v1
data:
  SAS_CONTEXT_PATH: searchIndex
  SAS_PORT_NAME: searchindex
  SAS_SERVICE_NAME: sas-search-index
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-search-index-parameters-9hh825gfdk
  namespace: franceavv
---
apiVersion: v1
data:
  SAS_CONTEXT_PATH: search
  SAS_PORT_NAME: search
  SAS_SERVICE_NAME: sas-search
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-search-parameters-f7b4kgc84b
  namespace: franceavv
---
apiVersion: v1
data:
  SAS_DU_NAME: sas-search
  SAS_SERVICE_NAME: sas-search
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-search-root-parameters-khf2489kd2
  namespace: franceavv
---
apiVersion: v1
data:
  SAS_SELLABLE_UNIT_REVISION_connect: "2020-12-19T04:43:00.057045Z"
  SAS_SELLABLE_UNIT_REVISION_datasci: "2020-12-19T04:37:47.665849Z"
  SAS_SELLABLE_UNIT_REVISION_depentviya: "2020-12-15T13:01:07.278993Z"
  SAS_SELLABLE_UNIT_REVISION_dmdatap: "2020-12-19T04:37:47.279310Z"
  SAS_SELLABLE_UNIT_REVISION_dmdq: "2020-12-19T04:38:19.808038Z"
  SAS_SELLABLE_UNIT_REVISION_esm: "2020-12-19T04:40:57.894870Z"
  SAS_SELLABLE_UNIT_REVISION_esp: "2020-12-19T04:41:13.980175Z"
  SAS_SELLABLE_UNIT_REVISION_espedge: "2020-12-16T13:13:37.891073Z"
  SAS_SELLABLE_UNIT_REVISION_forecast: "2020-12-19T04:34:32.762635Z"
  SAS_SELLABLE_UNIT_REVISION_inteldecn: "2020-12-19T04:41:33.072632Z"
  SAS_SELLABLE_UNIT_REVISION_jobflwsch: "2020-12-19T04:42:05.114905Z"
  SAS_SELLABLE_UNIT_REVISION_mlrning: "2020-12-19T04:44:05.416745Z"
  SAS_SELLABLE_UNIT_REVISION_modelmgr: "2020-12-19T04:42:35.064952Z"
  SAS_SELLABLE_UNIT_REVISION_statviya: "2020-12-19T04:34:59.089803Z"
  SAS_SELLABLE_UNIT_REVISION_va: "2020-12-19T04:43:56.889032Z"
  SAS_SELLABLE_UNIT_REVISION_vcmnfnd: "2020-12-19T04:35:55.404411Z"
  SAS_SELLABLE_UNIT_REVISION_vtxtan: "2020-12-19T04:35:47.163106Z"
  SAS_SELLABLE_UNIT_VERSION_connect: 240.5.2
  SAS_SELLABLE_UNIT_VERSION_datasci: 240.6.0
  SAS_SELLABLE_UNIT_VERSION_depentviya: 240.5.2
  SAS_SELLABLE_UNIT_VERSION_dmdatap: 240.5.2
  SAS_SELLABLE_UNIT_VERSION_dmdq: 240.5.2
  SAS_SELLABLE_UNIT_VERSION_esm: 240.5.2
  SAS_SELLABLE_UNIT_VERSION_esp: 240.6.1
  SAS_SELLABLE_UNIT_VERSION_espedge: 240.6.1
  SAS_SELLABLE_UNIT_VERSION_forecast: 240.5.2
  SAS_SELLABLE_UNIT_VERSION_inteldecn: 240.5.2
  SAS_SELLABLE_UNIT_VERSION_jobflwsch: 240.5.2
  SAS_SELLABLE_UNIT_VERSION_mlrning: 240.5.2
  SAS_SELLABLE_UNIT_VERSION_modelmgr: 240.5.2
  SAS_SELLABLE_UNIT_VERSION_statviya: 240.5.2
  SAS_SELLABLE_UNIT_VERSION_va: 240.6.0
  SAS_SELLABLE_UNIT_VERSION_vcmnfnd: 240.5.2
  SAS_SELLABLE_UNIT_VERSION_vtxtan: 240.5.2
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-sellable-units-7kk86cb9kc
  namespace: franceavv
---
apiVersion: v1
data:
  CNTR_REPO_PREFIX: convoy
  SAS_CONTEXT_PATH: sentimentExecutionProvider
  SAS_DU_NAME: sas-sentiment-execution-provider
  SAS_SERVICE_NAME: sas-sentiment-execution-provider
  SG_GO_MODULES_ENABLED: "true"
  SG_PROJECT: sentiment-execution-provider
  SG_STATIC: "false"
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-sentiment-execution-provider-parameters-dm5hccfd92
  namespace: franceavv
---
apiVersion: v1
data:
  CASCFG_SERVICESBASEURL: http://franceavv.eastus2.cloudapp.azure.com
  SAS_ALLOW_ADMIN_SCRIPTS: "false"
  SAS_MULTI_TENANCY_ENABLED: "false"
  SAS_SERVICES_URL: http://franceavv.eastus2.cloudapp.azure.com
  SAS_URL_SERVICE_SCHEME: https
  SAS_URL_SERVICE_TEMPLATE: https://@k8s.service.name@
  SERVICES_BASE_URL: http://franceavv.eastus2.cloudapp.azure.com
kind: ConfigMap
metadata:
  annotations: {}
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-shared-config-49d8hthtb5
  namespace: franceavv
---
apiVersion: v1
data:
  MANAGEMENT_ENDPOINT_LIVE_ENABLED: "true"
  MANAGEMENT_ENDPOINT_METRICS_ENABLED: "false"
  MANAGEMENT_ENDPOINT_PROMETHEUS_ENABLED: "true"
  MANAGEMENT_ENDPOINT_READY_ENABLED: "true"
  MANAGEMENT_ENDPOINTS_WEB_BASEPATH: /internal
  MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE: live, health, prometheus, ready
  MANAGEMENT_ENDPOINTS_WEB_PATHMAPPING_PROMETHEUS: metrics
  MANAGEMENT_SERVER_PORT: "10445"
  MANAGEMENT_SERVER_SERVLET_CONTEXTPATH: /
  SAS_MANAGEMENT_INDICATOR_BOOTSTRAP_ENABLED: "true"
  SAS_MANAGEMENT_INDICATOR_COMMONS_ENABLED: "true"
  SAS_MANAGEMENT_INDICATOR_LIVE_ENABLED: "true"
  SAS_MANAGEMENT_INDICATOR_READY_ENABLED: "true"
  SPRING_CLOUD_CONSUL_DISCOVERY_HEALTHCHECKPATH: /internal/health
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-spring-management-config-d64bbkhb97
  namespace: franceavv
---
apiVersion: v1
data:
  SAS_CONTEXT_PATH: SASStudio
  SAS_DU_NAME: sas-studio-app
  SAS_SERVICE_NAME: sas-studio-app
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-studio-app-parameters-8dcbd44ktc
  namespace: franceavv
---
apiVersion: v1
data:
  SAS_CONTEXT_PATH: subjectContacts
  SAS_DU_NAME: sas-subject-contacts
  SAS_SERVICE_NAME: sas-subject-contacts
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-subject-contacts-parameters-7t8d4kgt8f
  namespace: franceavv
---
apiVersion: v1
data:
  SAS_CONTEXT_PATH: templates
  SAS_DU_NAME: sas-templates
  SAS_SERVICE_NAME: sas-templates
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-templates-parameters-ftb56g8c4g
  namespace: franceavv
---
apiVersion: v1
data:
  SAS_CONTEXT_PATH: termsManagement
  SAS_PORT_NAME: termsmanage
  SAS_SERVICE_NAME: sas-terms-management
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-terms-management-parameters-9m2bmdddch
  namespace: franceavv
---
apiVersion: v1
data:
  SAS_CONTEXT_PATH: textAnalytics
  SAS_DU_NAME: sas-text-analytics
  SAS_SERVICE_NAME: sas-text-analytics
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-text-analytics-parameters-55mb869k6t
  namespace: franceavv
---
apiVersion: v1
data:
  SAS_DU_NAME: sas-text-cas-data-management
  SAS_SERVICE_NAME: sas-text-cas-data-management
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-text-cas-data-management-parameters-f48mh4dhbk
  namespace: franceavv
---
apiVersion: v1
data:
  SAS_DU_NAME: sas-text-categorization
  SAS_SERVICE_NAME: sas-text-categorization
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-text-categorization-parameters-27hdm9267d
  namespace: franceavv
---
apiVersion: v1
data:
  SAS_DU_NAME: sas-text-concepts
  SAS_SERVICE_NAME: sas-text-concepts
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-text-concepts-parameters-5d92m29268
  namespace: franceavv
---
apiVersion: v1
data:
  SAS_DU_NAME: sas-text-parsing
  SAS_SERVICE_NAME: sas-text-parsing
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-text-parsing-parameters-8282872f9d
  namespace: franceavv
---
apiVersion: v1
data:
  SAS_DU_NAME: sas-text-topics
  SAS_SERVICE_NAME: sas-text-topics
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-text-topics-parameters-k75kttb9m6
  namespace: franceavv
---
apiVersion: v1
data:
  CNTR_REPO_PREFIX: convoy
  SAS_CONTEXT_PATH: themeContent
  SAS_DU_NAME: sas-theme-content
  SAS_SERVICE_NAME: sas-theme-content
  SG_GO_MODULES_ENABLED: "true"
  SG_PROJECT: theme-content
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-theme-content-parameters-4gfh7tf2t2
  namespace: franceavv
---
apiVersion: v1
data:
  CNTR_REPO_PREFIX: convoy
  SAS_CONTEXT_PATH: SASThemeDesigner
  SAS_DU_NAME: sas-theme-designer-app
  SAS_SERVICE_NAME: sas-theme-designer-app
  SG_GO_MODULES_ENABLED: "true"
  SG_PROJECT: theme-designer
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-theme-designer-app-parameters-6d4ccf25mb
  namespace: franceavv
---
apiVersion: v1
data:
  SAS_CONTEXT_PATH: themes
  SAS_DU_NAME: sas-themes
  SAS_SERVICE_NAME: sas-themes
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-themes-parameters-h567ct5b4f
  namespace: franceavv
---
apiVersion: v1
data:
  SAS_CONTEXT_PATH: thumbnails
  SAS_DU_NAME: sas-thumbnails
  SAS_SERVICE_NAME: sas-thumbnails
  SG_GO_MODULES_ENABLED: "true"
  SG_PROJECT: thumbnails
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-thumbnails-parameters-8584m87b82
  namespace: franceavv
---
apiVersion: v1
data:
  CAS_CLIENT_SSL_CA_LIST: /security/trustedcerts.pem
  SAS_CERTIFICATE_CA_CERTIFICATE_FILE: /security/ca.crt
  SAS_CERTIFICATE_FILE: /security/tls.crt
  SAS_CERTIFICATE_PRIVATE_KEY_FILE: /security/tls.key
  SAS_TLS_LISTENER_ENABLED: "true"
  SAS_TRUSTED_CA_CERTIFICATES_PEM_FILE: /security/trustedcerts.pem
  SSL_CERT_FILE: /security/trustedcerts.pem
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-tls-config-99f79t29t5
  namespace: franceavv
---
apiVersion: v1
data:
  SAS_CONTEXT_PATH: topicExecutionProvider
  SAS_PORT_NAME: topicexe
  SAS_SERVICE_NAME: sas-topic-execution-provider
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-topic-execution-provider-parameters-c4dgkt4dkd
  namespace: franceavv
---
apiVersion: v1
data:
  CNTR_REPO_PREFIX: convoy
  SAS_CONTEXT_PATH: topicManagement
  SAS_DU_NAME: sas-topic-management
  SAS_SERVICE_NAME: sas-topic-management
  SG_GO_MODULES_ENABLED: "true"
  SG_PROJECT: topic-management
  SG_STATIC: "false"
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-topic-management-parameters-tkmm687k5b
  namespace: franceavv
---
apiVersion: v1
data:
  SAS_CONTEXT_PATH: topics
  SAS_PORT_NAME: topics
  SAS_SERVICE_NAME: sas-topics
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-topics-parameters-t7t6bcmchm
  namespace: franceavv
---
apiVersion: v1
data:
  SAS_CONTEXT_PATH: transfer
  SAS_DU_NAME: sas-transfer
  SAS_SERVICE_NAME: sas-transfer
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-transfer-parameters-422mh8mcth
  namespace: franceavv
---
apiVersion: v1
data:
  SAS_CONTEXT_PATH: transformations
  SAS_PORT_NAME: transformations
  SAS_SERVICE_NAME: sas-transformations
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-transformations-parameters-9gd852kgc2
  namespace: franceavv
---
apiVersion: v1
data:
  SAS_DU_NAME: sas-transformations
  SAS_SERVICE_NAME: sas-transformations
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-transformations-root-parameters-f6mgb2fk49
  namespace: franceavv
---
apiVersion: v1
data:
  SAS_CONTEXT_PATH: treatmentDefinitions
  SAS_PORT_NAME: treatmentdefs
  SAS_SERVICE_NAME: sas-treatment-definitions
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-treatment-definitions-parameters-25m9b7fc5h
  namespace: franceavv
---
apiVersion: v1
data:
  SAS_CONTEXT_PATH: types
  SAS_DU_NAME: sas-types
  SAS_SERVICE_NAME: sas-types
  SG_GO_MODULES_ENABLED: "true"
  SG_PROJECT: types
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-types-parameters-ffkt62tdmm
  namespace: franceavv
---
apiVersion: v1
data:
  CNTR_REPO_PREFIX: convoy
  SAS_CONTEXT_PATH: visualAnalyticsAdministration
  SAS_DU_NAME: sas-visual-analytics-administration
  SAS_SERVICE_NAME: sas-visual-analytics-administration
  SG_GO_MODULES_ENABLED: "true"
  SG_PROJECT: visualanalyticsadministration
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-visual-analytics-administration-parameters-t28ggg6746
  namespace: franceavv
---
apiVersion: v1
data:
  CNTR_REPO_PREFIX: convoy
  SAS_CONTEXT_PATH: SASVisualAnalytics
  SAS_DU_NAME: sas-visual-analytics-app
  SAS_SERVICE_NAME: sas-visual-analytics-app
  SG_GO_MODULES_ENABLED: "true"
  SG_PROJECT: visual-analytics
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-visual-analytics-app-parameters-gc98gbc6h4
  namespace: franceavv
---
apiVersion: v1
data:
  SAS_CONTEXT_PATH: webDataAccess
  SAS_DU_NAME: sas-web-data-access
  SAS_SERVICE_NAME: sas-web-data-access
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-web-data-access-parameters-tmc79m8tb5
  namespace: franceavv
---
apiVersion: v1
data:
  SAS_DU_NAME: sas-workflow-definition-history
  SAS_SERVICE_NAME: sas-workflow-definition-history
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-workflow-definition-history-parameters-mb8g2d88tk
  namespace: franceavv
---
apiVersion: v1
data:
  SAS_CONTEXT_PATH: workflowDefinition
  SAS_PORT_NAME: workflowdefn
  SAS_SERVICE_NAME: sas-workflow-definition
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-workflow-definition-parameters-dtb6g6gddb
  namespace: franceavv
---
apiVersion: v1
data:
  SAS_CONTEXT_PATH: workflowHistory
  SAS_PORT_NAME: workflowhistory
  SAS_SERVICE_NAME: sas-workflow-history
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-workflow-history-parameters-5g2957d7b7
  namespace: franceavv
---
apiVersion: v1
data:
  CNTR_REPO_PREFIX: convoy
  SAS_CONTEXT_PATH: SASWorkflowManager
  SAS_DU_NAME: sas-workflow-manager-app
  SAS_SERVICE_NAME: sas-workflow-manager-app
  SG_GO_MODULES_ENABLED: "true"
  SG_PROJECT: workflow-manager
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-workflow-manager-app-parameters-69874tddc6
  namespace: franceavv
---
apiVersion: v1
data:
  SAS_CONTEXT_PATH: workflow
  SAS_DU_NAME: sas-workflow
  SAS_SERVICE_NAME: sas-workflow
kind: ConfigMap
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-workflow-parameters-fkddkktcmk
  namespace: franceavv
---
apiVersion: v1
data:
  password: TE5YX3Nhc18xMjM=
  username: cGdhZG1pbkBwZ3ZpeWFkYi1mcg==
kind: Secret
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: postgres-sas-user-gd57ch2287
  namespace: franceavv
type: Opaque
---
apiVersion: v1
kind: Secret
metadata:
  annotations:
    kubernetes.io/service-account.name: sas-certframe
    orchestration.sas.com/literal: "true"
    sas.com/component-name: sas-certframe
    sas.com/component-version: 3.9.0-20201203.1607016443086
    sas.com/version: 3.9.0
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-certframe-token
  namespace: franceavv
type: kubernetes.io/service-account-token
---
apiVersion: v1
data:
  .dockerconfigjson: bash
kind: Secret
metadata:
  annotations: {}
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-image-pull-secrets-4m8cc729k8
  namespace: franceavv
type: kubernetes.io/dockerconfigjson
---
apiVersion: v1
data:
  SAS_LICENSE: 
kind: Secret
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-license-mg9k2t69t7
  namespace: franceavv
type: sas.com/license
---
apiVersion: v1
data:
  password: XUtyeVJbdW5JKCNJfW5yeUtXVjZYbXpJI0s5c0NNNW8=
  username: MDlWNTNG
kind: Secret
metadata:
  labels:
    orchestration.sas.com/lifecycle: image
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-lifecycle-image-56k5f64gtm
  namespace: franceavv
type: Opaque
---
apiVersion: v1
data:
  RABBITMQ_DEFAULT_USER: c2FzY2xpZW50
kind: Secret
metadata:
  annotations:
    orchestration.sas.com/literal: "true"
    sas.com/component-name: sas-rabbitmq-server
    sas.com/component-version: 3.82003.2-20201013.1602597853237
    sas.com/version: 3.82003.2
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-rabbitmq-server-secret
  namespace: franceavv
---
apiVersion: v1
data:
  CACertificate: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUdDVENDQS9HZ0F3SUJBZ0lOQUpCek5yWjkyWkZPbHdrcERUQU5CZ2txaGtpRzl3MEJBUXNGQURDQmlERUwKTUFrR0ExVUVCaE1DVlZNeEZ6QVZCZ05WQkFnVERrNXZjblJvSUVOaGNtOXNhVzVoTVEwd0N3WURWUVFIRXdSRApZWEo1TVJzd0dRWURWUVFLRXhKVFFWTWdTVzV6ZEdsMGRYUmxJRWx1WXk0eEhEQWFCZ05WQkFzVEUxSmxiR1ZoCmMyVWdSVzVuYVc1bFpYSnBibWN4RmpBVUJnTlZCQU1URFZORlV5QlNiMjkwSURJd01UZ3dIaGNOTVRnd01qSTIKTVRjek5qUTBXaGNOTWpnd01qSTRNVGN6TmpRMFdqQ0JpREVMTUFrR0ExVUVCaE1DVlZNeEZ6QVZCZ05WQkFnVApEazV2Y25Sb0lFTmhjbTlzYVc1aE1RMHdDd1lEVlFRSEV3UkRZWEo1TVJzd0dRWURWUVFLRXhKVFFWTWdTVzV6CmRHbDBkWFJsSUVsdVl5NHhIREFhQmdOVkJBc1RFMUpsYkdWaGMyVWdSVzVuYVc1bFpYSnBibWN4RmpBVUJnTlYKQkFNVERWTkZVeUJTYjI5MElESXdNVGd3Z2dJaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQ0R3QXdnZ0lLQW9JQwpBUUNuS1R2SzFMQk5IYVpBZVdna0NJb2ZBdmR6OHEvTVZld1V5cllUb0t4dkZOdnI3YzlYeDgrUDR0MlphbDdjClZDeHd1bit4L1d0MVQrYmhhQW1URm45ckkweHVvYmJwWlBEdnp0YWY4QWxvaHNWU0J5TmF0UHE4aWdtODNpSUQKRU1Ra3hCeUl3cEtUSkFQTUNZSUhLZkZ1bEpSa0dXWE15b3hJV2dScSs4TW1hcGcxTy80RTZNNW5OZ0JHRUF4QQp0QnBzRkxlSkcvbW4zYzVvNmQ4Z3g0VlhFYjd0M2dEM21aVU5oSWt5RjlleUxvRXg4V0tJZkFVT0JKZmtPYy85ClJTMFRJRnNPd2Z0alEyaWxuUjBOS0xSL2xDWCttTWhNSk1ZWTVjT3crWSsyWDV3N2lUczRQYmhTSGk5VDNVL1YKNHNadXJqSnZ1Q2hSTVRYMldCUkdaTFlOZjJxZU90Z0JLYmxHYUJPNDU1SWJveTFEYkRWR1I3ditZc3FEcGppRAp4dkNMdGtsMlRNV3F2SXNNajR1UDQvOVd6K1dvV1RERGFJNkxwT3c5VUZndnpjaWZGSFIzNFJGOEZyM3VvNUIwCldoUXhGUmNxRDd1TE50dTJYRHBTbEFwdEc0N2tVOWphN1pCSzBRYzhZQ0hvNE5kdWFQb09qMUZmZHhrMWF5TVUKQ1JTeDZId1ZQdVhwaEwvQTZIaS91Y1g0RDFMWUVpUzhEVkYwNTN6SjcwNFRnSElTZmRuRGpCRXdFcDZjWklrVwpCdm9NdUhhVThMaGwvaW5Sd2FGcXhMRUlUZ3J0SWNPREFJd3ZkdHNGSkljdSsvdWdheHpBQVZTZG9CMTRWQVlZClBzYnd6Vy8raUZ0MC9FWGsreXNhSzJIWHh1NlVyRWhvREpNS0RhMVBoSGlQaFFJREFRQUJvM0F3YmpBT0JnTlYKSFE4QkFmOEVCQU1DQVlZd0R3WURWUjBUQVFIL0JBVXdBd0VCL3pBZEJnTlZIUTRFRmdRVW1ZUlMyRy84WWp3UQo3Y1Z0eHBLWjFVSGswYW93TEFZRFZSMFJCQ1V3STRFaFUyOW1kSGRoY21WUWNtOWtkV04wYVc5dVUzbHpkR1Z0CmMwQnpZWE11WTI5dE1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQ0FRQTdaODR1WlZMdUk3ai9VRTBvbU02K1phamkKeHpyL2U0OWM3UzdKK3pmRmNVc1VZcFR2cWEvTi9rc3Jzc0tXbnRKVXBaL1ZUMGZER0JOOVRsREtEZFBSVWRDZQpiT3N6S0xBR1puN2U0MEhpaHRveVFkbHpYSVV2Ulh3OFFTYUp0blhOV3dXYVkwa1VZZ2lIMm9Rbjc0QUw3Um51CldGT2lySFpkcUNvN1JJR1BJakw3RDg1TkVrZTAxL01XNFdqSGl3dVIwcytldUhkR0FCZk5Wa0dDTE5xUGhZVjkKZ2V2RkR1MURka2NnZHpJRVp4SVVWN0hGaTBZOE1LMnZlQ3RVR3pKZjF5SWRFdjEvblNPSjRVeFBFZjZjMDZvbgpsSHZJVTZoNVNITTdWcEtCNlg5SXhyWndlRjJ0anhoTDlFZDNkWTBUcWU1UE96dXBOY1FNQS92MjF1RXV0TWNvCjNJRjhZNWRQenFYbUhDVFBGbUdTZlB1MDRmYWk2b0cxekp2Y21uZ0J0d1ZERUlVRnlSSUM1V3MvMFlseGtKQkkKV3VWd3ZtMGhDbWNsODBCTWtMeUdwQUR5UkJxWk5HcGc2SW5rSlpnQjd4TXQrWUhQUCtWMDlIVkFPUU9PU3BtZQpqKytlYVhScHZjMjI3ZktleVFKN0pFcDFDN3JicEZNS2diaStCNVZua1Vic0UxS3FYWWtqRWhHbzc3YU5zRUcrCk1aTm4xdHFnR2RGUWxaMXdnaDRsWk9DbC9GWkRWeUFFZTZ3cnpBbVQ5ZUlTYmZFMnZXeEhBYXdhR3VFUjJXRGsKd0l6VW01NXM1YjVRcFNIT1VTZ1ZQWHlqeTU3UWY1dVlqOGp0dFpNbTM3eEpKWkRBR3U0NThWTTRBd3IzVTVSVApOaU5RaExyZE5uSW5oRnlTTkE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  ClientCertificate: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBMDJyT1JCTTBER3NqZnNZWmdzZ0ltQVM5S2xrR2RGdlVWQUEyNnJHWEY0eVdpaGMzCjRKemRkeCtyM3hkRG94YVdLTnFjbXVxVFpZSE5ya1FPUS9oSFhTek40RllaRnBYZ0lLOXNiRmpibmxTYm11Z0UKUG5zem5qWS9aOWVkNktzbEo1UTBVd3hXRXhJWjFZSWJmWlMxcTl4NEY5RUg3c1JmTWhGYkZyY084WXhhSm0vaApwbjhKRUJaS0pESVBxclF4L0xsWjJGdk5XVlFqSzQ4YTRiK0czc2U5NlptNFFzMVJLNG5uS2lLdzNMRm00QXlSClc2Q2tEVEExMEcrUTByY095RnNLTkhGaDdnVTVPMlY3V0tXWnVIbmplc2wrSXRSb0hqTmxUN3RPbHphYXVlWkMKcWtXOTBjUEE1Yy8zMEM2clhwWWhpVzFkeVNuRzIyVEZxaWNsUFFJREFRQUJBb0lCQURKK3p4YzVVdlFvWHNqMwp2YjRiMHRta1FCNHVOemx4ZVd3NnhPTVhXWlFaVXhkV1psVXlnajdpaEtWN0kvOSs5SXg3Y200WjJ1eWlyU0tUClJLajlVdVl4UGxiM21YUm9oYWlvM1llZlRZMHFmaVBvaUtMM3dDTm9wNHBBMklscTN5dnQzUFY4Kzg0QVE4VlkKRndMT2t2bWlaZGlpWjNlaTFXM2E4VnVpaTJJcmlYSFN2VDg4OE1pVUFaeUpkOVdyK1Z4V2phcFNKTnhTTGdPTQpDWVVyYVd1eFd4dE9xUDhMckpNUWNEd3NqZEFWdkdVZDJ1VXVsZG1lcTJ5Wm5xN0tGQUE0dTV4bGxOZnd2cW8zCk1GUGVWQUVza0p3dTdNbWp1bnhNYzdnY0tzZGgwUU9hV1FtYkFKK1RNS1pWbk10Q0FWekkvZGZTclVtK0N6ZEkKR3M3ZmE2MENnWUVBNUVVSnZvVTk0WFhUckFzeThEUzNxMEg2OU5UR3BNdnM5em9hVEc0Rm14WmlFQUpHMGpMSQpEOVQ1bC84aUt6dEMrK2Z2N1BDQTNyYzBNVXBzZCtBZ05PRjgxcnFQQko0Sk1vUXNPNVdpOFFLN2NhOGxraEpkCnZRLzM1TEJLZWhveVpQSC9WSWR2RndaR2JDWWFwOFRLbHh6NVFKTndwczI4Vkpza3NaRnhpQThDZ1lFQTdSbXMKSm9nMFNIL3V2Mk1Nb0RQbWRwbEFMM1JWdzhBek5STFYycVkyM0hrZEFKa3pob0hGMW9ONU5pYlJsWkRqUTZlbwp1RkpPWVpYVEhTWTBvWldaczBpVFJFRC8zVXUwenRsR3lDaXhjWlllK1RNNDRaSmNSUWphVG1OcnZ0dkVDMDBGCitqQzA1RWR4NFF3VWs1L0w5RGlMNko0dnllWE5Hd2F0TWc4R0VmTUNnWUVBclZzTTRtYTRMd0JYcDRHOXhwU1MKby9ud3gzekwreDF2c2ZXclFUNFEvYzNLM1ZPTlMxY0xmcEtFbHYxSWlzSnZ4WFZJVFkzOG9LZExlTitIYnFhRQpid1NMMVZ0Sy8vdXhDbTg4VkdmNG5jWXdhazdVWHBHYUpObjZyZStBTUNpeSt0eVp4eTB2bmJIRFM2RElmMzdCClNHL1ZqMGdwdGxQcVllcU12Rm16ZWRzQ2dZQjg3aDRMWDVGTThqdjJsRlkrdzVvWHU4QmFRTTVBQ3JId3NUQUYKdWJjR2pMcC9ham9BRWJrUXdzM0hmc1RJTGtQUmpqSVVqU25IdVk0M3ViM1p0bDM2WGE5Yk0zU2VRaG5QTkNWYgpxalYxU0VpaHZoK21tOXdLZEJPellpZVB0WFNqRDc2cWlhZUc4UzVNQ25WOUk2SHYyU3UvTWpxMEEyWURhNDB1CjUwT25pUUtCZ1FEaUllOXF5Z0ZRUElqYmgwQXV0eEd4aXdjUTBFajRDWEFNY1BRR1ZxNkNGeXJ0TzJTTW1OaEsKU2pUTTBScjF5N21wZUtYTVp4NjlPS0ZkbXJLOFB4TXZaN1pDUG1XNWJIY21SR0wxMDdtRWswb3pOU3ZIRU9lUwpONlR3M2szUTcxeGlnMlU3cHo5Wlg4OXFHVjZZQkNCYzlnakVxbWNrMDhmSG5DcHZQbDJUTXc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQotLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJRHJUQ0NBcFdnQXdJQkFnSUlmeG5ORmZySG1wWXdEUVlKS29aSWh2Y05BUUVMQlFBd2dhZ3hIREFhQmdOVgpCQW9NRTFOQlV5Qkpibk4wYVhSMWRHVXNJRWx1WXk0eEhEQWFCZ05WQkFzTUUxSmxiR1ZoYzJVZ1JXNW5hVzVsClpYSnBibWN4T0RBMkJnTlZCQU1NTDBObGNuUnBabWxqWVhSbElFRjFkR2h2Y21sMGVTQm1iM0lnUTJ4cFpXNTAKSUVGMWRHaGxiblJwWTJGMGFXOXVNVEF3TGdZSktvWklodmNOQVFrQkZpRlRiMlowZDJGeVpWQnliMlIxWTNScApiMjVUZVhOMFpXMXpRSE5oY3k1amIyMHdIaGNOTWpFd01UQXpNREF3TURBd1doY05NekV3TVRBME1EQXdNREF3CldqQkJNUXN3Q1FZRFZRUUdFd0pWVXpFYk1Ca0dBMVVFQ2hNU1UwRlRJRWx1YzNScGRIVjBaU0JKYm1NdU1SVXcKRXdZRFZRUURFd3h6WVhNdVpHOTNibXh2WVdRd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFSwpBb0lCQVFEVGFzNUVFelFNYXlOK3hobUN5QWlZQkwwcVdRWjBXOVJVQURicXNaY1hqSmFLRnpmZ25OMTNINnZmCkYwT2pGcFlvMnB5YTZwTmxnYzJ1UkE1RCtFZGRMTTNnVmhrV2xlQWdyMnhzV051ZVZKdWE2QVErZXpPZU5qOW4KMTUzb3F5VW5sRFJUREZZVEVoblZnaHQ5bExXcjNIZ1gwUWZ1eEY4eUVWc1d0dzd4akZvbWIrR21md2tRRmtvawpNZytxdERIOHVWbllXODFaVkNNcmp4cmh2NGJleDczcG1iaEN6VkVyaWVjcUlyRGNzV2JnREpGYm9LUU5NRFhRCmI1RFN0dzdJV3dvMGNXSHVCVGs3Wlh0WXBabTRlZU42eVg0aTFHZ2VNMlZQdTA2WE5wcTU1a0txUmIzUnc4RGwKei9mUUxxdGVsaUdKYlYzSktjYmJaTVdxSnlVOUFnTUJBQUdqUVRBL01BNEdBMVVkRHdFQi93UUVBd0lIZ0RBTQpCZ05WSFJNQkFmOEVBakFBTUI4R0ExVWRJd1FZTUJhQUZFLzNjNW9QeXRwTHBKN21rOXJNMFZEUlJnRTdNQTBHCkNTcUdTSWIzRFFFQkN3VUFBNElCQVFCL2RpcDhwQUZWMTBQQlBNZk8xSEtNWStSSDVHNWVjc1k0K1hQN0tHTkwKcFRPWTBvMWNRbUIxMXZqSTZmQW1sYXdBN3FzbU9xenFBMldvSVN3TThsaHJoQUpHWmJQbEYzcFI0SXQvZWhmWQptY3gvdE9VQnJESnZHbm5kVkovbkhiZ1g3dUlSM2trZkVISFgydk5WVEZ1Y2d6RjM1a3A2b1JwTG9KV000QjZiClhwVEh2VmxXbURDbFYwWm4zNUZvb2llbDVRUVQzMjBFK1NxWE5xN0JiUWJLQXEvZTc3T2JRdHMvSmNYYUZIdXQKM2xPbXBReEpVd3BRUitGaUVqK2xySnF0UXM4MjUyQUsyZ3FQQXJMOFlOd04rb3VEU0QxbVM2WG9xcDdBVDRSTApqSjhxNjNUWmMrOWxoMEUyaSt0dWY5bkY2TVJyNmgxQm45OUg2V2I4aUhYcwotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
kind: Secret
metadata:
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-repositorywarehouse-certificates-h545gcgc7t
  namespace: franceavv
type: sas.com/certificates
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    sas.com/component-name: sas-analytics-components
    sas.com/component-version: 20.17.7-20201209.1607538004353
    sas.com/kustomize-base: base
    sas.com/registry-sync: default
    sas.com/registry-tags: proxy
    sas.com/version: 20.17.7
  labels:
    app.kubernetes.io/name: sas-analytics-components
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-analytics-components
  namespace: franceavv
spec:
  ports:
  - name: http
    port: 443
    protocol: TCP
    targetPort: http
  selector:
    app.kubernetes.io/name: sas-analytics-components
    sas.com/deployment: sas-viya
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    sas.com/component-name: sas-analytics-services
    sas.com/component-version: 1.10.0-20201204.1607097302572
    sas.com/kustomize-base: base
    sas.com/registry-sync: default
    sas.com/registry-tags: proxy
    sas.com/version: 1.10.0
  labels:
    app.kubernetes.io/name: sas-analytics-services
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-analytics-data-segmentation
  namespace: franceavv
spec:
  ports:
  - name: aasegmentatn
    port: 443
    protocol: TCP
    targetPort: aasegmentatn
  selector:
    app.kubernetes.io/name: sas-analytics-services
    sas.com/deployment: sas-viya
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    sas.com/component-name: sas-analytics-events
    sas.com/component-version: 1.4.4-20201204.1607119383686
    sas.com/kustomize-base: base
    sas.com/registry-sync: default
    sas.com/registry-tags: proxy
    sas.com/version: 1.4.4
  labels:
    app.kubernetes.io/name: sas-analytics-events
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-analytics-events
  namespace: franceavv
spec:
  ports:
  - name: http
    port: 443
    protocol: TCP
    targetPort: http
  selector:
    app.kubernetes.io/name: sas-analytics-events
    sas.com/deployment: sas-viya
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    sas.com/component-name: sas-analytics-services
    sas.com/component-version: 1.10.0-20201204.1607097302572
    sas.com/kustomize-base: base
    sas.com/registry-providers: jobExecution-provider-AnalyticsFlow,jobExecution-provider
    sas.com/registry-sync: default
    sas.com/registry-tags: proxy
    sas.com/version: 1.10.0
  labels:
    app.kubernetes.io/name: sas-analytics-services
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-analytics-flows
  namespace: franceavv
spec:
  ports:
  - name: aaflows
    port: 443
    protocol: TCP
    targetPort: aaflows
  selector:
    app.kubernetes.io/name: sas-analytics-services
    sas.com/deployment: sas-viya
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    sas.com/component-name: sas-analytics-services
    sas.com/component-version: 1.10.0-20201204.1607097302572
    sas.com/kustomize-base: base
    sas.com/registry-providers: jobExecution-provider,jobExecution-provider-analyticsGateway,jobExecution-provider-analyticsSegmentExecution
    sas.com/registry-sync: default
    sas.com/registry-tags: proxy
    sas.com/version: 1.10.0
  labels:
    app.kubernetes.io/name: sas-analytics-services
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-analytics-gateway
  namespace: franceavv
spec:
  ports:
  - name: aagateway
    port: 443
    protocol: TCP
    targetPort: aagateway
  selector:
    app.kubernetes.io/name: sas-analytics-services
    sas.com/deployment: sas-viya
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    sas.com/component-name: sas-analytics-services
    sas.com/component-version: 1.10.0-20201204.1607097302572
    sas.com/kustomize-base: base
    sas.com/registry-sync: default
    sas.com/registry-tags: proxy
    sas.com/version: 1.10.0
  labels:
    app.kubernetes.io/name: sas-analytics-services
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-analytics-localization
  namespace: franceavv
spec:
  ports:
  - name: aacaploclztn
    port: 443
    protocol: TCP
    targetPort: aacaploclztn
  selector:
    app.kubernetes.io/name: sas-analytics-services
    sas.com/deployment: sas-viya
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    sas.com/component-name: sas-analytics-services
    sas.com/component-version: 1.10.0-20201204.1607097302572
    sas.com/kustomize-base: base
    sas.com/registry-sync: default
    sas.com/registry-tags: proxy
    sas.com/version: 1.10.0
  labels:
    app.kubernetes.io/name: sas-analytics-services
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-analytics-pipelines
  namespace: franceavv
spec:
  ports:
  - name: aapipelines
    port: 443
    protocol: TCP
    targetPort: aapipelines
  selector:
    app.kubernetes.io/name: sas-analytics-services
    sas.com/deployment: sas-viya
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    sas.com/component-name: sas-analytics-services
    sas.com/component-version: 1.10.0-20201204.1607097302572
    sas.com/kustomize-base: base
    sas.com/registry-sync: default
    sas.com/registry-tags: proxy
    sas.com/version: 1.10.0
  labels:
    app.kubernetes.io/name: sas-analytics-services
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-analytics-validation
  namespace: franceavv
spec:
  ports:
  - name: aavalidation
    port: 443
    protocol: TCP
    targetPort: aavalidation
  selector:
    app.kubernetes.io/name: sas-analytics-services
    sas.com/deployment: sas-viya
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    sas.com/component-name: sas-annotations
    sas.com/component-version: 2.9.0-20201208.1607439456307
    sas.com/kustomize-base: base
    sas.com/registry-sync: default
    sas.com/registry-tags: proxy
    sas.com/version: 2.9.0
  labels:
    app.kubernetes.io/name: sas-annotations
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-annotations
  namespace: franceavv
spec:
  ports:
  - name: http
    port: 443
    protocol: TCP
    targetPort: http
  selector:
    app.kubernetes.io/name: sas-annotations
    sas.com/deployment: sas-viya
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    sas.com/component-name: sas-app-registry
    sas.com/component-version: 1.50.0-20201202.1606937218076
    sas.com/kustomize-base: base
    sas.com/registry-sync: default
    sas.com/registry-tags: proxy
    sas.com/version: 1.50.0
  labels:
    app.kubernetes.io/name: sas-app-registry
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-app-registry
  namespace: franceavv
spec:
  ports:
  - name: http
    port: 443
    protocol: TCP
    targetPort: http
  selector:
    app.kubernetes.io/name: sas-app-registry
    sas.com/deployment: sas-viya
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    sas.com/component-name: sas-arke
    sas.com/component-version: 1.4.0-20201211.1607698571564
    sas.com/registry-sync: default
    sas.com/version: 1.4.0
  labels:
    app.kubernetes.io/name: sas-arke
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-arke
  namespace: franceavv
spec:
  ports:
  - name: tcp
    port: 50051
    protocol: TCP
    targetPort: 50051
  selector:
    app.kubernetes.io/name: sas-arke
    sas.com/deployment: sas-viya
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    sas.com/component-name: sas-audit
    sas.com/component-version: 1.58.1-20201207.1607355915596
    sas.com/kustomize-base: base
    sas.com/registry-sync: default
    sas.com/registry-tags: proxy
    sas.com/version: 1.58.1
  labels:
    app.kubernetes.io/name: sas-audit
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-audit
  namespace: franceavv
spec:
  ports:
  - name: http
    port: 443
    protocol: TCP
    targetPort: http
  selector:
    app.kubernetes.io/name: sas-audit
    sas.com/deployment: sas-viya
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    sas.com/component-name: sas-authorization
    sas.com/component-version: 3.32.14-20201204.1607098698544
    sas.com/kustomize-base: base
    sas.com/registry-sync: default
    sas.com/registry-tags: proxy
    sas.com/version: 3.32.14
  labels:
    app.kubernetes.io/name: sas-authorization
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-authorization
  namespace: franceavv
spec:
  ports:
  - name: http
    port: 443
    protocol: TCP
    targetPort: http
  selector:
    app.kubernetes.io/name: sas-authorization
    sas.com/deployment: sas-viya
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    sas.com/component-name: sas-batch
    sas.com/component-version: 1.4.0-20201214.1607958362320
    sas.com/kustomize-base: base
    sas.com/registry-sync: default
    sas.com/registry-tags: proxy
    sas.com/version: 1.4.0
  labels:
    app.kubernetes.io/name: sas-batch
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-batch
  namespace: franceavv
spec:
  ports:
  - name: http
    port: 443
    protocol: TCP
    targetPort: http
  selector:
    app.kubernetes.io/name: sas-batch
    sas.com/deployment: sas-viya
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    sas.com/component-name: sas-business-rules-services
    sas.com/component-version: 3.9.15-20201210.1607644432623
    sas.com/kustomize-base: base
    sas.com/registry-sync: default
    sas.com/registry-tags: proxy
    sas.com/version: 3.9.15
  labels:
    app.kubernetes.io/name: sas-business-rules-services
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-business-rules
  namespace: franceavv
spec:
  ports:
  - name: businessrules
    port: 443
    protocol: TCP
    targetPort: businessrules
  selector:
    app.kubernetes.io/name: sas-business-rules-services
    sas.com/deployment: sas-viya
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    sas.com/component-name: sas-cachelocator
    sas.com/component-version: 1.23.11-20201204.1607051152259
    sas.com/kustomize-base: base
    sas.com/registry-sync: default
    sas.com/registry-tags: proxy
    sas.com/version: 1.23.11
  labels:
    app.kubernetes.io/name: sas-cachelocator
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-cachelocator
  namespace: franceavv
spec:
  ports:
  - name: http
    port: 443
    protocol: TCP
    targetPort: http
  - name: cachelocator
    port: 10334
    protocol: TCP
    targetPort: cachelocator
  selector:
    app.kubernetes.io/name: sas-cachelocator
    sas.com/deployment: sas-viya
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    sas.com/component-name: sas-cacheserver
    sas.com/component-version: 1.23.11-20201204.1607051747986
    sas.com/kustomize-base: base
    sas.com/registry-sync: default
    sas.com/registry-tags: proxy
    sas.com/version: 1.23.11
  labels:
    app.kubernetes.io/name: sas-cacheserver
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-cacheserver
  namespace: franceavv
spec:
  ports:
  - name: http
    port: 443
    protocol: TCP
    targetPort: http
  - name: cacheserver
    port: 14443
    protocol: TCP
    targetPort: cacheserver
  - name: healthcheck
    port: 8080
    protocol: TCP
    targetPort: http
  selector:
    app.kubernetes.io/name: sas-cacheserver
    sas.com/deployment: sas-viya
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    sas.com/component-name: sas-cas-control
    sas.com/component-version: 2.3.6-20201210.1607621490977
    sas.com/kustomize-base: base
    sas.com/registry-sync: default
    sas.com/registry-tags: proxy
    sas.com/version: 2.3.6
  labels:
    app.kubernetes.io/name: sas-cas-control
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-cas-access-management
  namespace: franceavv
spec:
  ports:
  - name: casacl
    port: 443
    protocol: TCP
    targetPort: http
  selector:
    app.kubernetes.io/name: sas-cas-control
    sas.com/deployment: sas-viya
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    sas.com/component-name: sas-cas-control
    sas.com/component-version: 2.3.6-20201210.1607621490977
    sas.com/kustomize-base: base
    sas.com/registry-sync: default
    sas.com/registry-tags: proxy
    sas.com/version: 2.3.6
  labels:
    app.kubernetes.io/name: sas-cas-control
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-cas-formats
  namespace: franceavv
spec:
  ports:
  - name: cas-formats
    port: 443
    protocol: TCP
    targetPort: http
  selector:
    app.kubernetes.io/name: sas-cas-control
    sas.com/deployment: sas-viya
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    sas.com/component-name: sas-cas-administration
    sas.com/component-version: 1.28.1-20201209.1607532545693
    sas.com/kustomize-base: base
    sas.com/registry-providers: dataTables-provider,jobExecution-provider,jobExecution-provider-casManager,dataSources-provider,dataSources-provider-cas,dataTables-provider-cas
    sas.com/registry-sync: default
    sas.com/registry-tags: proxy
    sas.com/version: 1.28.1
  labels:
    app.kubernetes.io/name: sas-cas-administration
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-cas-management
  namespace: franceavv
spec:
  ports:
  - name: casmanagement
    port: 443
    protocol: TCP
    targetPort: casmanagement
  selector:
    app.kubernetes.io/name: sas-cas-administration
    sas.com/deployment: sas-viya
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    sas.com/component-name: sas-cas-administration
    sas.com/component-version: 1.28.1-20201209.1607532545693
    sas.com/kustomize-base: base
    sas.com/registry-providers: jobExecution-provider,jobExecution-provider-casl
    sas.com/registry-sync: default
    sas.com/registry-tags: proxy
    sas.com/version: 1.28.1
  labels:
    app.kubernetes.io/name: sas-cas-administration
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-cas-proxy
  namespace: franceavv
spec:
  ports:
  - name: casproxy
    port: 443
    protocol: TCP
    targetPort: casproxy
  selector:
    app.kubernetes.io/name: sas-cas-administration
    sas.com/deployment: sas-viya
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    sas.com/component-name: sas-cas-control
    sas.com/component-version: 2.3.6-20201210.1607621490977
    sas.com/kustomize-base: base
    sas.com/registry-providers: rowSets-provider,rowSets-provider-cas
    sas.com/registry-sync: default
    sas.com/registry-tags: proxy
    sas.com/version: 2.3.6
  labels:
    app.kubernetes.io/name: sas-cas-control
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-cas-row-sets
  namespace: franceavv
spec:
  ports:
  - name: cas-row-sets
    port: 443
    protocol: TCP
    targetPort: http
  selector:
    app.kubernetes.io/name: sas-cas-control
    sas.com/deployment: sas-viya
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    sas.com/component-name: sas-text-categorization
    sas.com/component-version: 5.9.0-20201203.1607011533238
    sas.com/kustomize-base: base
    sas.com/registry-sync: default
    sas.com/registry-tags: proxy
    sas.com/version: 5.9.0
  labels:
    app.kubernetes.io/name: sas-text-categorization
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-categorization
  namespace: franceavv
spec:
  ports:
  - name: categorization
    port: 443
    protocol: TCP
    targetPort: categorization
  selector:
    app.kubernetes.io/name: sas-text-categorization
    sas.com/deployment: sas-viya
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    sas.com/component-name: sas-text-categorization
    sas.com/component-version: 5.9.0-20201203.1607011533238
    sas.com/kustomize-base: base
    sas.com/registry-providers: jobExecution-provider, jobExecution-provider-text-category
    sas.com/registry-sync: default
    sas.com/registry-tags: proxy
    sas.com/version: 5.9.0
  labels:
    app.kubernetes.io/name: sas-text-categorization
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-category-execution-provider
  namespace: franceavv
spec:
  ports:
  - name: categoryexe
    port: 443
    protocol: TCP
    targetPort: categoryexe
  selector:
    app.kubernetes.io/name: sas-text-categorization
    sas.com/deployment: sas-viya
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    sas.com/component-name: sas-text-categorization
    sas.com/component-version: 5.9.0-20201203.1607011533238
    sas.com/kustomize-base: base
    sas.com/registry-providers: jobExecution-provider,jobExecution-provider-import-categories,jobExecution-provider-category-configuration-job, jobExecution-provider-category-validate, jobExecution-provider-category-compile
    sas.com/registry-sync: default
    sas.com/registry-tags: proxy
    sas.com/version: 5.9.0
  labels:
    app.kubernetes.io/name: sas-text-categorization
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-category-taxonomy
  namespace: franceavv
spec:
  ports:
  - name: categorytax
    port: 443
    protocol: TCP
    targetPort: categorytax
  selector:
    app.kubernetes.io/name: sas-text-categorization
    sas.com/deployment: sas-viya
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    sas.com/component-name: sas-code-debugger
    sas.com/component-version: 2.1.5-20201202.1606941614459
    sas.com/kustomize-base: base
    sas.com/registry-sync: default
    sas.com/registry-tags: proxy
    sas.com/version: 2.1.5
  labels:
    app.kubernetes.io/name: sas-code-debugger
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-code-debugger
  namespace: franceavv
spec:
  ports:
  - name: http
    port: 443
    protocol: TCP
    targetPort: http
  selector:
    app.kubernetes.io/name: sas-code-debugger
    sas.com/deployment: sas-viya
  sessionAffinity: ClientIP
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    sas.com/component-name: sas-code-debugger-app
    sas.com/component-version: 2.2.5-20201211.1607719641413
    sas.com/kustomize-base: base
    sas.com/registry-sync: default
    sas.com/registry-tags: proxy
    sas.com/version: 2.2.5
  labels:
    app.kubernetes.io/name: sas-code-debugger-app
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-code-debugger-app
  namespace: franceavv
spec:
  ports:
  - name: http
    port: 443
    protocol: TCP
    targetPort: http
  selector:
    app.kubernetes.io/name: sas-code-debugger-app
    sas.com/deployment: sas-viya
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    sas.com/component-name: sas-comments
    sas.com/component-version: 2.56.0-20201207.1607337374651
    sas.com/kustomize-base: base
    sas.com/registry-sync: default
    sas.com/registry-tags: proxy
    sas.com/version: 2.56.0
  labels:
    app.kubernetes.io/name: sas-comments
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-comments
  namespace: franceavv
spec:
  ports:
  - name: http
    port: 443
    protocol: TCP
    targetPort: http
  selector:
    app.kubernetes.io/name: sas-comments
    sas.com/deployment: sas-viya
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    sas.com/component-name: sas-compute
    sas.com/component-version: 1.9.21-20201214.1607967809598
    sas.com/kustomize-base: base
    sas.com/registry-providers: jobExecution-provider-Compute,dataSources-provider-Compute,dataTables-provider-Compute,rowSets-provider-Compute,jobExecution-provider,dataSources-provider,dataTables-provider,rowSets-provider
    sas.com/registry-sync: default
    sas.com/registry-tags: proxy
    sas.com/version: 1.9.21
  labels:
    app.kubernetes.io/name: sas-compute
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-compute
  namespace: franceavv
spec:
  ports:
  - name: http
    port: 443
    protocol: TCP
    targetPort: http
  selector:
    app.kubernetes.io/name: sas-compute
    sas.com/deployment: sas-viya
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    sas.com/component-name: sas-text-concepts
    sas.com/component-version: 5.9.0-20201203.1607019179325
    sas.com/kustomize-base: base
    sas.com/registry-providers: jobExecution-provider, jobExecution-provider-text-concept
    sas.com/registry-sync: default
    sas.com/registry-tags: proxy
    sas.com/version: 5.9.0
  labels:
    app.kubernetes.io/name: sas-text-concepts
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-concept-execution-provider
  namespace: franceavv
spec:
  ports:
  - name: conceptexe
    port: 443
    protocol: TCP
    targetPort: conceptexe
  selector:
    app.kubernetes.io/name: sas-text-concepts
    sas.com/deployment: sas-viya
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    sas.com/component-name: sas-text-concepts
    sas.com/component-version: 5.9.0-20201203.1607019179325
    sas.com/kustomize-base: base
    sas.com/registry-providers: jobExecution-provider, jobExecution-provider-import-concepts, jobExecution-provider-concept-configuration-job, jobExecution-provider-concept-validate, jobExecution-provider-concept-compile, jobExecution-provider-text-upgrade-taxonomy
    sas.com/registry-sync: default
    sas.com/registry-tags: proxy
    sas.com/version: 5.9.0
  labels:
    app.kubernetes.io/name: sas-text-concepts
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-concept-taxonomy
  namespace: franceavv
spec:
  ports:
  - name: concepttax
    port: 443
    protocol: TCP
    targetPort: concepttax
  selector:
    app.kubernetes.io/name: sas-text-concepts
    sas.com/deployment: sas-viya
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    sas.com/component-name: sas-text-concepts
    sas.com/component-version: 5.9.0-20201203.1607019179325
    sas.com/kustomize-base: base
    sas.com/registry-sync: default
    sas.com/registry-tags: proxy
    sas.com/version: 5.9.0
  labels:
    app.kubernetes.io/name: sas-text-concepts
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-concepts
  namespace: franceavv
spec:
  ports:
  - name: concepts
    port: 443
    protocol: TCP
    targetPort: concepts
  selector:
    app.kubernetes.io/name: sas-text-concepts
    sas.com/deployment: sas-viya
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    sas.com/component-name: sas-config-reconciler
    sas.com/component-version: 1.3.0-20201203.1607001188766
    sas.com/kustomize-base: base
    sas.com/registry-sync: default
    sas.com/registry-tags: proxy
    sas.com/version: 1.3.0
  labels:
    app.kubernetes.io/name: sas-config-reconciler
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-config-reconciler
  namespace: franceavv
spec:
  ports:
  - name: http
    port: 443
    protocol: TCP
    targetPort: http
  selector:
    app.kubernetes.io/name: sas-config-reconciler
    sas.com/deployment: sas-viya
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    sas.com/component-name: sas-configuration
    sas.com/component-version: 1.59.3-20201204.1607052795259
    sas.com/kustomize-base: base
    sas.com/registry-sync: default
    sas.com/registry-tags: proxy
    sas.com/version: 1.59.3
  labels:
    app.kubernetes.io/name: sas-configuration
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-configuration
  namespace: franceavv
spec:
  ports:
  - name: http
    port: 443
    protocol: TCP
    targetPort: http
  selector:
    app.kubernetes.io/name: sas-configuration
    sas.com/deployment: sas-viya
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    sas.com/component-name: sas-connect
    sas.com/component-version: 4.15.2-20201211.1607717177992
    sas.com/kustomize-base: base
    sas.com/registry-sync: default
    sas.com/registry-tags: proxy
    sas.com/version: 4.15.2
  labels:
    app.kubernetes.io/name: sas-connect
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-connect
  namespace: franceavv
spec:
  ports:
  - name: http
    port: 443
    protocol: TCP
    targetPort: http
  selector:
    app.kubernetes.io/name: sas-connect
    sas.com/deployment: sas-viya
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    sas.com/component-name: sas-connect-spawner
    sas.com/component-version: 0.15.3-20201214.1607947188551
    sas.com/kustomize-base: base
    sas.com/registry-default-port-name: service
    sas.com/registry-name: connect-spawner-viya
    sas.com/registry-sync: default
    sas.com/version: 0.15.3
  labels:
    app.kubernetes.io/name: sas-connect-spawner
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-connect-spawner
  namespace: franceavv
spec:
  ports:
  - name: sasdaemonsvc
    nodePort: null
    port: 443
    protocol: TCP
    targetPort: sasdaemonsvc
  - name: mgmtport
    nodePort: null
    port: 17541
    protocol: TCP
    targetPort: mgmtport
  - name: service
    nodePort: null
    port: 17551
    protocol: TCP
    targetPort: service
  selector:
    app.kubernetes.io/name: sas-connect-spawner
    sas.com/deployment: sas-viya
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    sas.com/component-name: sas-consul-server
    sas.com/component-version: 1.310003.3-20201211.1607715119836
    sas.com/version: 1.310003.3
  labels:
    app.kubernetes.io/name: sas-consul-server
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-consul-server
  namespace: franceavv
spec:
  ports:
  - name: server
    port: 8300
    targetPort: server
  - name: serflan-tcp
    port: 8301
    protocol: TCP
    targetPort: serflan-tcp
  - name: serflan-udp
    port: 8301
    protocol: UDP
    targetPort: serflan-udp
  - name: http
    port: 8500
    targetPort: http
  selector:
    app.kubernetes.io/name: sas-consul-server
    sas.com/deployment: sas-viya
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    sas.com/component-name: sas-consul-server
    sas.com/component-version: 1.310003.3-20201211.1607715119836
    sas.com/version: 1.310003.3
  labels:
    app.kubernetes.io/name: sas-consul-server-internal
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-consul-server-internal
  namespace: franceavv
spec:
  ports:
  - name: server-internal
    port: 8300
    targetPort: server
  - name: serflan-tcp-internal
    port: 8301
    protocol: TCP
    targetPort: serflan-tcp
  - name: serflan-udp-internal
    port: 8301
    protocol: UDP
    targetPort: serflan-udp
  - name: http-internal
    port: 8500
    targetPort: http
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/name: sas-consul-server
    sas.com/deployment: sas-viya
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    sas.com/component-name: sas-conversation-designer-app
    sas.com/component-version: 1.3.0-20201203.1607012667858
    sas.com/kustomize-base: base
    sas.com/registry-sync: default
    sas.com/registry-tags: proxy
    sas.com/version: 1.3.0
  labels:
    app.kubernetes.io/name: sas-conversation-designer-app
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-conversation-designer-app
  namespace: franceavv
spec:
  ports:
  - name: http
    port: 443
    protocol: TCP
    targetPort: http
  selector:
    app.kubernetes.io/name: sas-conversation-designer-app
    sas.com/deployment: sas-viya
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    sas.com/component-name: sas-credentials
    sas.com/component-version: 1.27.12-20201208.1607464004925
    sas.com/kustomize-base: base
    sas.com/registry-sync: default
    sas.com/registry-tags: proxy
    sas.com/version: 1.27.12
  labels:
    app.kubernetes.io/name: sas-credentials
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-credentials
  namespace: franceavv
spec:
  ports:
  - name: http
    port: 443
    protocol: TCP
    targetPort: http
  selector:
    app.kubernetes.io/name: sas-credentials
    sas.com/deployment: sas-viya
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    sas.com/component-name: sas-crossdomainproxy
    sas.com/component-version: 1.12.0-20201211.1607701073883
    sas.com/kustomize-base: base
    sas.com/registry-sync: default
    sas.com/registry-tags: proxy
    sas.com/version: 1.12.0
  labels:
    app.kubernetes.io/name: sas-crossdomainproxy
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-crossdomainproxy
  namespace: franceavv
spec:
  ports:
  - name: http
    port: 443
    protocol: TCP
    targetPort: http
  selector:
    app.kubernetes.io/name: sas-crossdomainproxy
    sas.com/deployment: sas-viya
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    sas.com/component-name: sas-transformations
    sas.com/component-version: 2.24.9-20201209.1607544521387
    sas.com/kustomize-base: base
    sas.com/registry-sync: default
    sas.com/registry-tags: proxy
    sas.com/version: 2.24.9
  labels:
    app.kubernetes.io/name: sas-transformations
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-data-discovery
  namespace: franceavv
spec:
  ports:
  - name: datadiscovery
    port: 443
    protocol: TCP
    targetPort: datadiscovery
  selector:
    app.kubernetes.io/name: sas-transformations
    sas.com/deployment: sas-viya
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    sas.com/component-name: sas-data-explorer-app
    sas.com/component-version: 1.23.6-20201203.1607009499801
    sas.com/kustomize-base: base
    sas.com/registry-providers: jobExecution-provider-EXPLORER,jobExecution-provider-EXPLORER-PROXY,dataTables-provider,dataTables-providerCapability-cas-deleteTables,dataTables-provider-cas,dataTables-providerCapability-cas-createTables,jobExecution-provider
    sas.com/registry-sync: default
    sas.com/registry-tags: proxy
    sas.com/version: 1.23.6
  labels:
    app.kubernetes.io/name: sas-data-explorer-app
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-data-explorer-app
  namespace: franceavv
spec:
  ports:
  - name: http
    port: 443
    protocol: TCP
    targetPort: http
  selector:
    app.kubernetes.io/name: sas-data-explorer-app
    sas.com/deployment: sas-viya
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    sas.com/component-name: sas-data-flows
    sas.com/component-version: 1.6.0-20201209.1607548143778
    sas.com/kustomize-base: base
    sas.com/registry-sync: default
    sas.com/registry-tags: proxy
    sas.com/version: 1.6.0
  labels:
    app.kubernetes.io/name: sas-data-flows
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-data-flows
  namespace: franceavv
spec:
  ports:
  - name: http
    port: 443
    protocol: TCP
    targetPort: http
  selector:
    app.kubernetes.io/name: sas-data-flows
    sas.com/deployment: sas-viya
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    sas.com/component-name: sas-data-mining-services
    sas.com/component-version: 39.20.78-20201203.1607026321951
    sas.com/kustomize-base: base
    sas.com/registry-providers: analyticsGateway-provider,jobExecution-provider-datamining,jobExecution-provider,analyticsGateway-provider-datamining
    sas.com/registry-sync: default
    sas.com/registry-tags: proxy
    sas.com/version: 39.20.78
  labels:
    app.kubernetes.io/name: sas-data-mining-services
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-data-mining
  namespace: franceavv
spec:
  ports:
  - name: dmine
    port: 443
    protocol: TCP
    targetPort: dmine
  selector:
    app.kubernetes.io/name: sas-data-mining-services
    sas.com/deployment: sas-viya
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    sas.com/component-name: sas-data-mining-models
    sas.com/component-version: 39.11.2-20201203.1607025419402
    sas.com/kustomize-base: base
    sas.com/registry-providers: jobExecution-provider,jobExecution-provider-Model
    sas.com/registry-sync: default
    sas.com/registry-tags: proxy
    sas.com/version: 39.11.2
  labels:
    app.kubernetes.io/name: sas-data-mining-models
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-data-mining-models
  namespace: franceavv
spec:
  ports:
  - name: http
    port: 443
    protocol: TCP
    targetPort: http
  selector:
    app.kubernetes.io/name: sas-data-mining-models
    sas.com/deployment: sas-viya
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    sas.com/component-name: sas-data-mining-project-settings
    sas.com/component-version: 39.10.1-20201203.1607025448043
    sas.com/kustomize-base: base
    sas.com/registry-sync: default
    sas.com/registry-tags: proxy
    sas.com/version: 39.10.1
  labels:
    app.kubernetes.io/name: sas-data-mining-project-settings
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-data-mining-project-settings
  namespace: franceavv
spec:
  ports:
  - name: http
    port: 443
    protocol: TCP
    targetPort: http
  selector:
    app.kubernetes.io/name: sas-data-mining-project-settings
    sas.com/deployment: sas-viya
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    sas.com/component-name: sas-data-mining-results
    sas.com/component-version: 22.23.7-20201203.1607025661511
    sas.com/kustomize-base: base
    sas.com/registry-sync: default
    sas.com/registry-tags: proxy
    sas.com/version: 22.23.7
  labels:
    app.kubernetes.io/name: sas-data-mining-results
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-data-mining-results
  namespace: franceavv
spec:
  ports:
  - name: http
    port: 443
    protocol: TCP
    targetPort: http
  selector:
    app.kubernetes.io/name: sas-data-mining-results
    sas.com/deployment: sas-viya
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    sas.com/component-name: sas-data-mining-services
    sas.com/component-version: 39.20.78-20201203.1607026321951
    sas.com/kustomize-base: base
    sas.com/registry-sync: default
    sas.com/registry-tags: proxy
    sas.com/version: 39.20.78
  labels:
    app.kubernetes.io/name: sas-data-mining-services
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-data-mining-warehouse
  namespace: franceavv
spec:
  ports:
  - name: dminewh
    port: 443
    protocol: TCP
    targetPort: dminewh
  selector:
    app.kubernetes.io/name: sas-data-mining-services
    sas.com/deployment: sas-viya
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    sas.com/component-name: sas-data-plans
    sas.com/component-version: 1.22.14-20201209.1607474940409
    sas.com/kustomize-base: base
    sas.com/registry-providers: jobExecution-provider-DATAPLAN,jobExecution-provider
    sas.com/registry-sync: default
    sas.com/registry-tags: proxy
    sas.com/version: 1.22.14
  labels:
    app.kubernetes.io/name: sas-data-plans
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-data-plans
  namespace: franceavv
spec:
  ports:
  - name: http
    port: 443
    protocol: TCP
    targetPort: http
  selector:
    app.kubernetes.io/name: sas-data-plans
    sas.com/deployment: sas-viya
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    sas.com/component-name: sas-data-profiles
    sas.com/component-version: 4.32.1-20201203.1607011072196
    sas.com/kustomize-base: base
    sas.com/registry-providers: jobExecution-provider,jobExecution-provider-PROFILE
    sas.com/registry-sync: default
    sas.com/registry-tags: proxy
    sas.com/version: 4.32.1
  labels:
    app.kubernetes.io/name: sas-data-profiles
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-data-profiles
  namespace: franceavv
spec:
  ports:
  - name: http
    port: 443
    protocol: TCP
    targetPort: http
  selector:
    app.kubernetes.io/name: sas-data-profiles
    sas.com/deployment: sas-viya
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    sas.com/component-name: sas-data-quality-services
    sas.com/component-version: 3.8.1-20201202.1606939069890
    sas.com/kustomize-base: base
    sas.com/registry-sync: default
    sas.com/registry-tags: proxy
    sas.com/version: 3.8.1
  labels:
    app.kubernetes.io/name: sas-data-quality-services
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-data-quality
  namespace: franceavv
spec:
  ports:
  - name: dataquality
    port: 443
    protocol: TCP
    targetPort: http
  selector:
    app.kubernetes.io/name: sas-data-quality-services
    sas.com/deployment: sas-viya
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    sas.com/component-name: sas-data-sources
    sas.com/component-version: 3.33.1-20201202.1606937911915
    sas.com/kustomize-base: base
    sas.com/registry-sync: default
    sas.com/registry-tags: proxy
    sas.com/version: 3.33.1
  labels:
    app.kubernetes.io/name: sas-data-sources
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-data-sources
  namespace: franceavv
spec:
  ports:
  - name: datasources
    port: 443
    protocol: TCP
    targetPort: http
  selector:
    app.kubernetes.io/name: sas-data-sources
    sas.com/deployment: sas-viya
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    sas.com/component-name: sas-data-studio-app
    sas.com/component-version: 1.22.25-20201209.1607475335725
    sas.com/kustomize-base: base
    sas.com/registry-sync: default
    sas.com/registry-tags: proxy
    sas.com/version: 1.22.25
  labels:
    app.kubernetes.io/name: sas-data-studio-app
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-data-studio-app
  namespace: franceavv
spec:
  ports:
  - name: http
    port: 443
    protocol: TCP
    targetPort: http
  selector:
    app.kubernetes.io/name: sas-data-studio-app
    sas.com/deployment: sas-viya
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    sas.com/component-name: sas-data-sources
    sas.com/component-version: 3.33.1-20201202.1606937911915
    sas.com/kustomize-base: base
    sas.com/registry-sync: default
    sas.com/registry-tags: proxy
    sas.com/version: 3.33.1
  labels:
    app.kubernetes.io/name: sas-data-sources
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-data-tables
  namespace: franceavv
spec:
  ports:
  - name: datatables
    port: 443
    protocol: TCP
    targetPort: http
  selector:
    app.kubernetes.io/name: sas-data-sources
    sas.com/deployment: sas-viya
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    sas.com/component-name: sas-decision-manager-app
    sas.com/component-version: 5.19.0-20201210.1607632727866
    sas.com/kustomize-base: base
    sas.com/registry-sync: default
    sas.com/registry-tags: proxy
    sas.com/version: 5.19.0
  labels:
    app.kubernetes.io/name: sas-decision-manager-app
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-decision-manager-app
  namespace: franceavv
spec:
  ports:
  - name: http
    port: 443
    protocol: TCP
    targetPort: http
  selector:
    app.kubernetes.io/name: sas-decision-manager-app
    sas.com/deployment: sas-viya
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    sas.com/component-name: sas-decisions-definitions
    sas.com/component-version: 3.10.15-20201210.1607644445003
    sas.com/kustomize-base: base
    sas.com/registry-providers: jobExecution-provider,jobExecution-provider-upgradeDecision
    sas.com/registry-sync: default
    sas.com/registry-tags: proxy
    sas.com/version: 3.10.15
  labels:
    app.kubernetes.io/name: sas-decisions-definitions
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-decisions
  namespace: franceavv
spec:
  ports:
  - name: decisions
    port: 443
    protocol: TCP
    targetPort: decisions
  selector:
    app.kubernetes.io/name: sas-decisions-definitions
    sas.com/deployment: sas-viya
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    sas.com/component-name: sas-deployment-data
    sas.com/component-version: 1.2.0-20201209.1607530266025
    sas.com/kustomize-base: base
    sas.com/registry-sync: default
    sas.com/registry-tags: proxy
    sas.com/version: 1.2.0
  labels:
    app.kubernetes.io/name: sas-deployment-data
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-deployment-data
  namespace: franceavv
spec:
  ports:
  - name: http
    port: 443
    protocol: TCP
    targetPort: http
  selector:
    app.kubernetes.io/name: sas-deployment-data
    sas.com/deployment: sas-viya
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    sas.com/component-name: sas-device-management
    sas.com/component-version: 2.21.0-20201203.1606974091293
    sas.com/kustomize-base: base
    sas.com/registry-sync: default
    sas.com/registry-tags: proxy
    sas.com/version: 2.21.0
  labels:
    app.kubernetes.io/name: sas-device-management
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-device-management
  namespace: franceavv
spec:
  ports:
  - name: http
    port: 443
    protocol: TCP
    targetPort: http
  selector:
    app.kubernetes.io/name: sas-device-management
    sas.com/deployment: sas-viya
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    sas.com/component-name: sas-transformations
    sas.com/component-version: 2.24.9-20201209.1607544521387
    sas.com/kustomize-base: base
    sas.com/registry-providers: jobExecution-provider,jobExecution-provider-DATADISCOVERY-CASTable
    sas.com/registry-sync: default
    sas.com/registry-tags: proxy
    sas.com/version: 2.24.9
  labels:
    app.kubernetes.io/name: sas-transformations
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-discovery-table-provider
  namespace: franceavv
spec:
  ports:
  - name: dscvrytblprvdr
    port: 443
    protocol: TCP
    targetPort: dscvrytblprvdr
  selector:
    app.kubernetes.io/name: sas-transformations
    sas.com/deployment: sas-viya
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    sas.com/component-name: sas-text-cas-data-management
    sas.com/component-version: 5.7.0-20201203.1607029718479
    sas.com/kustomize-base: base
    sas.com/registry-sync: default
    sas.com/registry-tags: proxy
    sas.com/version: 5.7.0
  labels:
    app.kubernetes.io/name: sas-text-cas-data-management
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-documents
  namespace: franceavv
spec:
  ports:
  - name: documents
    port: 443
    protocol: TCP
    targetPort: documents
  selector:
    app.kubernetes.io/name: sas-text-cas-data-management
    sas.com/deployment: sas-viya
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    sas.com/component-name: sas-drive-app
    sas.com/component-version: 3.9.2-20201208.1607415324393
    sas.com/kustomize-base: base
    sas.com/registry-sync: default
    sas.com/registry-tags: proxy
    sas.com/version: 3.9.2
  labels:
    app.kubernetes.io/name: sas-drive-app
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-drive-app
  namespace: franceavv
spec:
  ports:
  - name: http
    port: 443
    protocol: TCP
    targetPort: http
  selector:
    app.kubernetes.io/name: sas-drive-app
    sas.com/deployment: sas-viya
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    sas.com/component-name: sas-environment-manager-app
    sas.com/component-version: 4.7.18-20201210.1607608415476
    sas.com/kustomize-base: base
    sas.com/registry-sync: default
    sas.com/registry-tags: proxy
    sas.com/version: 4.7.18
  labels:
    app.kubernetes.io/name: sas-environment-manager-app
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-environment-manager-app
  namespace: franceavv
spec:
  ports:
  - name: http
    port: 443
    protocol: TCP
    targetPort: http
  selector:
    app.kubernetes.io/name: sas-environment-manager-app
    sas.com/deployment: sas-viya
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    prometheus.io/port: "443"
    prometheus.io/scheme: https
    prometheus.io/scrape: "true"
    sas.com/component-name: sas-esp-operator
    sas.com/component-version: 10.77.2-20201210.1607615447889
    sas.com/kustomize-base: base
    sas.com/version: 10.77.2
  labels:
    app.kubernetes.io/name: sas-esp-operator
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-esp-operator
  namespace: franceavv
spec:
  ports:
  - name: http-metrics
    port: 443
    protocol: TCP
    targetPort: 8383
  selector:
    name: sas-esp-operator
    sas.com/deployment: sas-viya
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    sas.com/component-name: sas-event-stream-manager-app
    sas.com/component-version: 7.8.24-20201211.1607650331718
    sas.com/kustomize-base: base
    sas.com/registry-sync: default
    sas.com/registry-tags: proxy
    sas.com/version: 7.8.24
  labels:
    app.kubernetes.io/name: sas-event-stream-manager-app
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-event-stream-manager-app
  namespace: franceavv
spec:
  ports:
  - name: http
    port: 443
    protocol: TCP
    targetPort: http
  selector:
    app.kubernetes.io/name: sas-event-stream-manager-app
    sas.com/deployment: sas-viya
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    sas.com/component-name: sas-event-stream-processing-metering-app
    sas.com/component-version: 10.78.0-20201214.1607929237374
    sas.com/kustomize-base: base
    sas.com/version: 10.78.0
  labels:
    app.kubernetes.io/name: sas-event-stream-processing-metering-app
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-event-stream-processing-metering-app
  namespace: franceavv
spec:
  ports:
  - port: 443
    protocol: TCP
    targetPort: 31415
  selector:
    app: sas-event-stream-processing-metering-app
    sas.com/deployment: sas-viya
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    sas.com/component-name: sas-event-stream-processing-streamviewer-app
    sas.com/component-version: 7.8.27-20201211.1607648686559
    sas.com/kustomize-base: base
    sas.com/registry-sync: default
    sas.com/registry-tags: proxy
    sas.com/version: 7.8.27
  labels:
    app.kubernetes.io/name: sas-event-stream-processing-streamviewer-app
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-event-stream-processing-streamviewer-app
  namespace: franceavv
spec:
  ports:
  - name: http
    port: 443
    protocol: TCP
    targetPort: http
  selector:
    app.kubernetes.io/name: sas-event-stream-processing-streamviewer-app
    sas.com/deployment: sas-viya
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    sas.com/component-name: sas-event-stream-processing-studio-app
    sas.com/component-version: 7.8.24-20201211.1607651463964
    sas.com/kustomize-base: base
    sas.com/registry-sync: default
    sas.com/registry-tags: proxy
    sas.com/version: 7.8.24
  labels:
    app.kubernetes.io/name: sas-event-stream-processing-studio-app
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-event-stream-processing-studio-app
  namespace: franceavv
spec:
  ports:
  - name: http
    port: 443
    protocol: TCP
    targetPort: http
  selector:
    app.kubernetes.io/name: sas-event-stream-processing-studio-app
    sas.com/deployment: sas-viya
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    sas.com/component-name: sas-files
    sas.com/component-version: 2.36.7-20201204.1607053741549
    sas.com/kustomize-base: base
    sas.com/registry-sync: default
    sas.com/registry-tags: proxy
    sas.com/version: 2.36.7
  labels:
    app.kubernetes.io/name: sas-files
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-files
  namespace: franceavv
spec:
  ports:
  - name: http
    port: 443
    protocol: TCP
    targetPort: http
  selector:
    app.kubernetes.io/name: sas-files
    sas.com/deployment: sas-viya
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    sas.com/component-name: sas-folders
    sas.com/component-version: 2.57.3-20201204.1607080745145
    sas.com/kustomize-base: base
    sas.com/registry-sync: default
    sas.com/registry-tags: proxy
    sas.com/version: 2.57.3
  labels:
    app.kubernetes.io/name: sas-folders
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-folders
  namespace: franceavv
spec:
  ports:
  - name: http
    port: 443
    protocol: TCP
    targetPort: http
  selector:
    app.kubernetes.io/name: sas-folders
    sas.com/deployment: sas-viya
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    sas.com/component-name: sas-fonts
    sas.com/component-version: 1.76.2-20201202.1606968212309
    sas.com/kustomize-base: base
    sas.com/registry-sync: default
    sas.com/registry-tags: proxy
    sas.com/version: 1.76.2
  labels:
    app.kubernetes.io/name: sas-fonts
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-fonts
  namespace: franceavv
spec:
  ports:
  - name: http
    port: 443
    protocol: TCP
    targetPort: http
  selector:
    app.kubernetes.io/name: sas-fonts
    sas.com/deployment: sas-viya
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    sas.com/component-name: sas-forecasting-comparison
    sas.com/component-version: 15.11.0-20201203.1607012315095
    sas.com/kustomize-base: base
    sas.com/registry-providers: jobExecution-provider,jobExecution-provider-forecastingComparison
    sas.com/registry-sync: default
    sas.com/registry-tags: proxy
    sas.com/version: 15.11.0
  labels:
    app.kubernetes.io/name: sas-forecasting-comparison
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-forecasting-comparison
  namespace: franceavv
spec:
  ports:
  - name: http
    port: 443
    protocol: TCP
    targetPort: http
  selector:
    app.kubernetes.io/name: sas-forecasting-comparison
    sas.com/deployment: sas-viya
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    sas.com/component-name: sas-forecasting-services
    sas.com/component-version: 15.20.4-20201209.1607555830814
    sas.com/kustomize-base: base
    sas.com/registry-sync: default
    sas.com/registry-tags: proxy
    sas.com/version: 15.20.4
  labels:
    app.kubernetes.io/name: sas-forecasting-services
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-forecasting-data-definition
  namespace: franceavv
spec:
  ports:
  - name: vfdatadef
    port: 443
    protocol: TCP
    targetPort: vfdatadef
  selector:
    app.kubernetes.io/name: sas-forecasting-services
    sas.com/deployment: sas-viya
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    sas.com/component-name: sas-forecasting-events
    sas.com/component-version: 15.11.0-20201203.1607012406763
    sas.com/kustomize-base: base
    sas.com/registry-sync: default
    sas.com/registry-tags: proxy
    sas.com/version: 15.11.0
  labels:
    app.kubernetes.io/name: sas-forecasting-events
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-forecasting-events
  namespace: franceavv
spec:
  ports:
  - name: http
    port: 443
    protocol: TCP
    targetPort: http
  selector:
    app.kubernetes.io/name: sas-forecasting-events
    sas.com/deployment: sas-viya
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    sas.com/component-name: sas-forecasting-exploration
    sas.com/component-version: 15.12.0-20201203.1607024186781
    sas.com/kustomize-base: base
    sas.com/registry-sync: default
    sas.com/registry-tags: proxy
    sas.com/version: 15.12.0
  labels:
    app.kubernetes.io/name: sas-forecasting-exploration
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-forecasting-exploration
  namespace: franceavv
spec:
  ports:
  - name: http
    port: 443
    protocol: TCP
    targetPort: http
  selector:
    app.kubernetes.io/name: sas-forecasting-exploration
    sas.com/deployment: sas-viya
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    sas.com/component-name: sas-forecasting-filters
    sas.com/component-version: 15.12.0-20201203.1607026228979
    sas.com/kustomize-base: base
    sas.com/registry-sync: default
    sas.com/registry-tags: proxy
    sas.com/version: 15.12.0
  labels:
    app.kubernetes.io/name: sas-forecasting-filters
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-forecasting-filters
  namespace: franceavv
spec:
  ports:
  - name: http
    port: 443
    protocol: TCP
    targetPort: http
  selector:
    app.kubernetes.io/name: sas-forecasting-filters
    sas.com/deployment: sas-viya
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    sas.com/component-name: sas-forecasting-services
    sas.com/component-version: 15.20.4-20201209.1607555830814
    sas.com/kustomize-base: base
    sas.com/registry-providers: analyticsGateway-provider,analyticsGateway-provider-forecasting,jobExecution-provider,jobExecution-provider-forecasting,jobExecution-provider-forecastingSegmentation
    sas.com/registry-sync: default
    sas.com/registry-tags: proxy
    sas.com/version: 15.20.4
  labels:
    app.kubernetes.io/name: sas-forecasting-services
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-forecasting-gateway
  namespace: franceavv
spec:
  ports:
  - name: vfgateway
    port: 443
    protocol: TCP
    targetPort: vfgateway
  selector:
    app.kubernetes.io/name: sas-forecasting-services
    sas.com/deployment: sas-viya
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    sas.com/component-name: sas-forecasting-services
    sas.com/component-version: 15.20.4-20201209.1607555830814
    sas.com/kustomize-base: base
    sas.com/registry-sync: default
    sas.com/registry-tags: proxy
    sas.com/version: 15.20.4
  labels:
    app.kubernetes.io/name: sas-forecasting-services
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-forecasting-overrides
  namespace: franceavv
spec:
  ports:
  - name: vfoverrides
    port: 443
    protocol: TCP
    targetPort: vfoverrides
  selector:
    app.kubernetes.io/name: sas-forecasting-services
    sas.com/deployment: sas-viya
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    sas.com/component-name: sas-forecasting-pipelines
    sas.com/component-version: 15.15.5-20201209.1607532908435
    sas.com/kustomize-base: base
    sas.com/registry-sync: default
    sas.com/registry-tags: proxy
    sas.com/version: 15.15.5
  labels:
    app.kubernetes.io/name: sas-forecasting-pipelines
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-forecasting-pipelines
  namespace: franceavv
spec:
  ports:
  - name: http
    port: 443
    protocol: TCP
    targetPort: http
  selector:
    app.kubernetes.io/name: sas-forecasting-pipelines
    sas.com/deployment: sas-viya
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    sas.com/component-name: sas-forecasting-services
    sas.com/component-version: 15.20.4-20201209.1607555830814
    sas.com/kustomize-base: base
    sas.com/registry-sync: default
    sas.com/registry-tags: proxy
    sas.com/version: 15.20.4
  labels:
    app.kubernetes.io/name: sas-forecasting-services
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-forecasting-strategies
  namespace: franceavv
spec:
  ports:
  - name: vfstrategies
    port: 443
    protocol: TCP
    targetPort: vfstrategies
  selector:
    app.kubernetes.io/name: sas-forecasting-services
    sas.com/deployment: sas-viya
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    sas.com/component-name: sas-geo-enrichment
    sas.com/component-version: 1.20.0-20201209.1607532669891
    sas.com/kustomize-base: base
    sas.com/registry-providers: jobExecution-provider,jobExecution-provider-GEOENRICHMENT
    sas.com/registry-sync: default
    sas.com/registry-tags: proxy
    sas.com/version: 1.20.0
  labels:
    app.kubernetes.io/name: sas-geo-enrichment
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-geo-enrichment
  namespace: franceavv
spec:
  ports:
  - name: http
    port: 443
    protocol: TCP
    targetPort: http
  selector:
    app.kubernetes.io/name: sas-geo-enrichment
    sas.com/deployment: sas-viya
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    sas.com/component-name: sas-graph-builder-app
    sas.com/component-version: 1.65.0-20201203.1607022262435
    sas.com/kustomize-base: base
    sas.com/registry-sync: default
    sas.com/registry-tags: proxy
    sas.com/version: 1.65.0
  labels:
    app.kubernetes.io/name: sas-graph-builder-app
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-graph-builder-app
  namespace: franceavv
spec:
  ports:
  - name: http
    port: 443
    protocol: TCP
    targetPort: http
  selector:
    app.kubernetes.io/name: sas-graph-builder-app
    sas.com/deployment: sas-viya
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    sas.com/component-name: sas-graph-templates
    sas.com/component-version: 1.71.0-20201203.1607004187481
    sas.com/kustomize-base: base
    sas.com/registry-sync: default
    sas.com/registry-tags: proxy
    sas.com/version: 1.71.0
  labels:
    app.kubernetes.io/name: sas-graph-templates
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-graph-templates
  namespace: franceavv
spec:
  ports:
  - name: http
    port: 443
    protocol: TCP
    targetPort: http
  selector:
    app.kubernetes.io/name: sas-graph-templates
    sas.com/deployment: sas-viya
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    sas.com/component-name: sas-identities
    sas.com/component-version: 2.40.14-20201204.1607054361393
    sas.com/kustomize-base: base
    sas.com/registry-sync: default
    sas.com/registry-tags: proxy
    sas.com/version: 2.40.14
  labels:
    app.kubernetes.io/name: sas-identities
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-identities
  namespace: franceavv
spec:
  ports:
  - name: http
    port: 443
    protocol: TCP
    targetPort: http
  selector:
    app.kubernetes.io/name: sas-identities
    sas.com/deployment: sas-viya
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    sas.com/component-name: sas-import-9
    sas.com/component-version: 1.9.9-20201211.1607711349452
    sas.com/kustomize-base: base
    sas.com/registry-sync: default
    sas.com/registry-tags: proxy
    sas.com/version: 1.9.9
  labels:
    app.kubernetes.io/name: sas-import-9
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-import-9
  namespace: franceavv
spec:
  ports:
  - name: http
    port: 443
    protocol: TCP
    targetPort: http
  selector:
    app.kubernetes.io/name: sas-import-9
    sas.com/deployment: sas-viya
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    sas.com/component-name: sas-job-execution
    sas.com/component-version: 2.28.12-20201204.1607054870985
    sas.com/kustomize-base: base
    sas.com/registry-sync: default
    sas.com/registry-tags: proxy
    sas.com/version: 2.28.12
  labels:
    app.kubernetes.io/name: sas-job-execution
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-job-definitions
  namespace: franceavv
spec:
  ports:
  - name: http
    port: 443
    protocol: TCP
    targetPort: 8080
  selector:
    app.kubernetes.io/name: sas-job-execution
    sas.com/deployment: sas-viya
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    sas.com/component-name: sas-job-execution
    sas.com/component-version: 2.28.12-20201204.1607054870985
    sas.com/kustomize-base: base
    sas.com/registry-sync: default
    sas.com/registry-tags: proxy
    sas.com/version: 2.28.12
  labels:
    app.kubernetes.io/name: sas-job-execution
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-job-execution
  namespace: franceavv
spec:
  ports:
  - name: http
    port: 443
    protocol: TCP
    targetPort: 8080
  selector:
    app.kubernetes.io/name: sas-job-execution
    sas.com/deployment: sas-viya
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    sas.com/component-name: sas-job-execution-app
    sas.com/component-version: 2.18.3-20201209.1607521207111
    sas.com/kustomize-base: base
    sas.com/registry-sync: default
    sas.com/registry-tags: proxy
    sas.com/version: 2.18.3
  labels:
    app.kubernetes.io/name: sas-job-execution-app
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-job-execution-app
  namespace: franceavv
spec:
  ports:
  - name: http
    port: 443
    protocol: TCP
    targetPort: http
  selector:
    app.kubernetes.io/name: sas-job-execution-app
    sas.com/deployment: sas-viya
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    sas.com/component-name: sas-job-flow-scheduling
    sas.com/component-version: 2.2.7-20201002.1601644744469
    sas.com/kustomize-base: base
    sas.com/registry-sync: default
    sas.com/registry-tags: proxy
    sas.com/version: 2.2.7
  labels:
    app.kubernetes.io/name: sas-job-flow-scheduling
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-job-flow-scheduling
  namespace: franceavv
spec:
  ports:
  - name: http
    port: 443
    protocol: TCP
    targetPort: http
  selector:
    app.kubernetes.io/name: sas-job-flow-scheduling
    sas.com/deployment: sas-viya
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    sas.com/component-name: sas-launcher
    sas.com/component-version: 1.18.8-20201208.1607443790845
    sas.com/kustomize-base: base
    sas.com/registry-sync: default
    sas.com/registry-tags: proxy
    sas.com/version: 1.18.8
  labels:
    app.kubernetes.io/name: sas-launcher
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-launcher
  namespace: franceavv
spec:
  ports:
  - name: http
    port: 443
    protocol: TCP
    targetPort: http
  selector:
    app.kubernetes.io/name: sas-launcher
    sas.com/deployment: sas-viya
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    sas.com/component-name: sas-cas-control
    sas.com/component-version: 2.3.6-20201210.1607621490977
    sas.com/kustomize-base: base
    sas.com/registry-sync: default
    sas.com/registry-tags: proxy
    sas.com/version: 2.3.6
  labels:
    app.kubernetes.io/name: sas-cas-control
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-licenses
  namespace: franceavv
spec:
  ports:
  - name: licenses
    port: 443
    protocol: TCP
    targetPort: http
  selector:
    app.kubernetes.io/name: sas-cas-control
    sas.com/deployment: sas-viya
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    sas.com/component-name: sas-lineage-app
    sas.com/component-version: 2.8.1-20201202.1606960621719
    sas.com/kustomize-base: base
    sas.com/registry-sync: default
    sas.com/registry-tags: proxy
    sas.com/version: 2.8.1
  labels:
    app.kubernetes.io/name: sas-lineage-app
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-lineage-app
  namespace: franceavv
spec:
  ports:
  - name: http
    port: 443
    protocol: TCP
    targetPort: http
  selector:
    app.kubernetes.io/name: sas-lineage-app
    sas.com/deployment: sas-viya
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    sas.com/component-name: sas-links
    sas.com/component-version: 1.73.0-20201204.1607077133902
    sas.com/kustomize-base: base
    sas.com/registry-sync: default
    sas.com/registry-tags: proxy
    sas.com/version: 1.73.0
  labels:
    app.kubernetes.io/name: sas-links
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-links
  namespace: franceavv
spec:
  ports:
  - name: http
    port: 443
    protocol: TCP
    targetPort: http
  selector:
    app.kubernetes.io/name: sas-links
    sas.com/deployment: sas-viya
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    sas.com/component-name: sas-localization
    sas.com/component-version: 1.9.3-20201217.1608245885998
    sas.com/kustomize-base: base
    sas.com/registry-sync: default
    sas.com/registry-tags: proxy
    sas.com/version: 1.9.3
  labels:
    app.kubernetes.io/name: sas-localization
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-localization
  namespace: franceavv
spec:
  ports:
  - name: http
    port: 443
    protocol: TCP
    targetPort: http
  selector:
    app.kubernetes.io/name: sas-localization
    sas.com/deployment: sas-viya
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    sas.com/component-name: sas-logon-app
    sas.com/component-version: 2.40.17-20201208.1607458236727
    sas.com/kustomize-base: base
    sas.com/registry-sync: default
    sas.com/registry-tags: proxy
    sas.com/version: 2.40.17
  labels:
    app.kubernetes.io/name: sas-logon-app
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-logon-app
  namespace: franceavv
spec:
  ports:
  - name: http
    port: 443
    protocol: TCP
    targetPort: http
  selector:
    app.kubernetes.io/name: sas-logon-app
    sas.com/deployment: sas-viya
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    sas.com/component-name: sas-mail
    sas.com/component-version: 1.56.1-20201203.1607023389621
    sas.com/kustomize-base: base
    sas.com/registry-sync: default
    sas.com/registry-tags: proxy
    sas.com/version: 1.56.1
  labels:
    app.kubernetes.io/name: sas-mail
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-mail
  namespace: franceavv
spec:
  ports:
  - name: http
    port: 443
    protocol: TCP
    targetPort: http
  selector:
    app.kubernetes.io/name: sas-mail
    sas.com/deployment: sas-viya
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    sas.com/component-name: sas-maps
    sas.com/component-version: 1.76.0-20201209.1607538010156
    sas.com/kustomize-base: base
    sas.com/registry-sync: default
    sas.com/registry-tags: proxy
    sas.com/version: 1.76.0
  labels:
    app.kubernetes.io/name: sas-maps
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-maps
  namespace: franceavv
spec:
  ports:
  - name: http
    port: 443
    protocol: TCP
    targetPort: http
  selector:
    app.kubernetes.io/name: sas-maps
    sas.com/deployment: sas-viya
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    sas.com/component-name: sas-deployment-data
    sas.com/component-version: 1.2.0-20201209.1607530266025
    sas.com/kustomize-base: base
    sas.com/registry-sync: default
    sas.com/registry-tags: proxy
    sas.com/version: 1.2.0
  labels:
    app.kubernetes.io/name: sas-metering
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-metering
  namespace: franceavv
spec:
  ports:
  - name: http
    port: 443
    protocol: TCP
    targetPort: http
  selector:
    app.kubernetes.io/name: sas-deployment-data
    sas.com/deployment: sas-viya
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    sas.com/component-name: sas-microanalytic-score
    sas.com/component-version: 2.34.6-20201214.1607955335324
    sas.com/kustomize-base: base
    sas.com/registry-sync: default
    sas.com/registry-tags: proxy
    sas.com/version: 2.34.6
  labels:
    app.kubernetes.io/name: sas-microanalytic-score
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-microanalytic-score
  namespace: franceavv
spec:
  ports:
  - name: http
    port: 443
    protocol: TCP
    targetPort: http
  selector:
    app.kubernetes.io/name: sas-microanalytic-score
    sas.com/deployment: sas-viya
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    sas.com/component-name: sas-data-mining-services
    sas.com/component-version: 39.20.78-20201203.1607026321951
    sas.com/kustomize-base: base
    sas.com/registry-providers: jobExecution-provider,jobExecution-provider-mlPipelineAutomation
    sas.com/registry-sync: default
    sas.com/registry-tags: proxy
    sas.com/version: 39.20.78
  labels:
    app.kubernetes.io/name: sas-data-mining-services
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-ml-pipeline-automation
  namespace: franceavv
spec:
  ports:
  - name: mlpa
    port: 443
    protocol: TCP
    targetPort: mlpa
  selector:
    app.kubernetes.io/name: sas-data-mining-services
    sas.com/deployment: sas-viya
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    sas.com/component-name: sas-model-management
    sas.com/component-version: 1.16.58-20201214.1607964538030
    sas.com/kustomize-base: base
    sas.com/registry-sync: default
    sas.com/registry-tags: proxy
    sas.com/version: 1.16.58
  labels:
    app.kubernetes.io/name: sas-model-management
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-model-management
  namespace: franceavv
spec:
  ports:
  - name: http
    port: 443
    protocol: TCP
    targetPort: http
  selector:
    app.kubernetes.io/name: sas-model-management
    sas.com/deployment: sas-viya
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    sas.com/component-name: sas-model-manager-app
    sas.com/component-version: 1.19.0-20201214.1607962203037
    sas.com/kustomize-base: base
    sas.com/registry-sync: default
    sas.com/registry-tags: proxy
    sas.com/version: 1.19.0
  labels:
    app.kubernetes.io/name: sas-model-manager-app
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-model-manager-app
  namespace: franceavv
spec:
  ports:
  - name: http
    port: 443
    protocol: TCP
    targetPort: http
  selector:
    app.kubernetes.io/name: sas-model-manager-app
    sas.com/deployment: sas-viya
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    sas.com/component-name: sas-model-publish
    sas.com/component-version: 2.27.0-20201209.1607555293093
    sas.com/kustomize-base: base
    sas.com/registry-sync: default
    sas.com/registry-tags: proxy
    sas.com/version: 2.27.0
  labels:
    app.kubernetes.io/name: sas-model-publish
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-model-publish
  namespace: franceavv
spec:
  ports:
  - name: http
    port: 443
    protocol: TCP
    targetPort: http
  selector:
    app.kubernetes.io/name: sas-model-publish
    sas.com/deployment: sas-viya
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    sas.com/component-name: sas-model-repository
    sas.com/component-version: 3.14.56-20201214.1607964567719
    sas.com/kustomize-base: base
    sas.com/registry-providers: jobExecution-provider,jobExecution-provider-container
    sas.com/registry-sync: default
    sas.com/registry-tags: proxy
    sas.com/version: 3.14.56
  labels:
    app.kubernetes.io/name: sas-model-repository
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-model-repository
  namespace: franceavv
spec:
  ports:
  - name: http
    port: 443
    protocol: TCP
    targetPort: http
  selector:
    app.kubernetes.io/name: sas-model-repository
    sas.com/deployment: sas-viya
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    sas.com/component-name: sas-model-studio-app
    sas.com/component-version: 1.51.2-20201209.1607544692059
    sas.com/kustomize-base: base
    sas.com/registry-sync: default
    sas.com/registry-tags: proxy
    sas.com/version: 1.51.2
  labels:
    app.kubernetes.io/name: sas-model-studio-app
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-model-studio-app
  namespace: franceavv
spec:
  ports:
  - name: http
    port: 443
    protocol: TCP
    targetPort: http
  selector:
    app.kubernetes.io/name: sas-model-studio-app
    sas.com/deployment: sas-viya
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    sas.com/component-name: sas-natural-language-conversations
    sas.com/component-version: 1.3.1-20201204.1607111974163
    sas.com/kustomize-base: base
    sas.com/registry-sync: default
    sas.com/registry-tags: proxy
    sas.com/version: 1.3.1
  labels:
    app.kubernetes.io/name: sas-natural-language-conversations
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-natural-language-conversations
  namespace: franceavv
spec:
  ports:
  - name: http
    port: 443
    protocol: TCP
    targetPort: http
  selector:
    app.kubernetes.io/name: sas-natural-language-conversations
    sas.com/deployment: sas-viya
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    sas.com/component-name: sas-natural-language-generation
    sas.com/component-version: 1.6.0-20201203.1607013425049
    sas.com/kustomize-base: base
    sas.com/registry-sync: default
    sas.com/registry-tags: proxy
    sas.com/version: 1.6.0
  labels:
    app.kubernetes.io/name: sas-natural-language-generation
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-natural-language-generation
  namespace: franceavv
spec:
  ports:
  - name: http
    port: 443
    protocol: TCP
    targetPort: http
  selector:
    app.kubernetes.io/name: sas-natural-language-generation
    sas.com/deployment: sas-viya
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    sas.com/component-name: sas-natural-language-understanding
    sas.com/component-version: 3.4.0-20201203.1607014016368
    sas.com/kustomize-base: base
    sas.com/registry-sync: default
    sas.com/registry-tags: proxy
    sas.com/version: 3.4.0
  labels:
    app.kubernetes.io/name: sas-natural-language-understanding
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-natural-language-understanding
  namespace: franceavv
spec:
  ports:
  - name: http
    port: 443
    protocol: TCP
    targetPort: http
  selector:
    app.kubernetes.io/name: sas-natural-language-understanding
    sas.com/deployment: sas-viya
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    sas.com/component-name: sas-notifications
    sas.com/component-version: 1.55.1-20201207.1607355364455
    sas.com/kustomize-base: base
    sas.com/registry-sync: default
    sas.com/registry-tags: proxy
    sas.com/version: 1.55.1
  labels:
    app.kubernetes.io/name: sas-notifications
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-notifications
  namespace: franceavv
spec:
  ports:
  - name: http
    port: 443
    protocol: TCP
    targetPort: http
  selector:
    app.kubernetes.io/name: sas-notifications
    sas.com/deployment: sas-viya
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    sas.com/component-name: sas-text-parsing
    sas.com/component-version: 5.7.0-20201203.1607019166184
    sas.com/kustomize-base: base
    sas.com/registry-providers: jobExecution-provider,jobExecution-provider-text-parse
    sas.com/registry-sync: default
    sas.com/registry-tags: proxy
    sas.com/version: 5.7.0
  labels:
    app.kubernetes.io/name: sas-text-parsing
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-parse-execution-provider
  namespace: franceavv
spec:
  ports:
  - name: parseexe
    port: 443
    protocol: TCP
    targetPort: parseexe
  selector:
    app.kubernetes.io/name: sas-text-parsing
    sas.com/deployment: sas-viya
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    sas.com/component-name: sas-text-parsing
    sas.com/component-version: 5.7.0-20201203.1607019166184
    sas.com/kustomize-base: base
    sas.com/registry-sync: default
    sas.com/registry-tags: proxy
    sas.com/version: 5.7.0
  labels:
    app.kubernetes.io/name: sas-text-parsing
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-parsing
  namespace: franceavv
spec:
  ports:
  - name: parsing
    port: 443
    protocol: TCP
    targetPort: parsing
  selector:
    app.kubernetes.io/name: sas-text-parsing
    sas.com/deployment: sas-viya
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    sas.com/component-name: sas-preferences
    sas.com/component-version: 1.57.1-20201204.1607093916383
    sas.com/kustomize-base: base
    sas.com/registry-sync: default
    sas.com/registry-tags: proxy
    sas.com/version: 1.57.1
  labels:
    app.kubernetes.io/name: sas-preferences
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-preferences
  namespace: franceavv
spec:
  ports:
  - name: http
    port: 443
    protocol: TCP
    targetPort: http
  selector:
    app.kubernetes.io/name: sas-preferences
    sas.com/deployment: sas-viya
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    sas.com/component-name: sas-projects
    sas.com/component-version: 1.23.18-20201209.1607532724047
    sas.com/kustomize-base: base
    sas.com/registry-sync: default
    sas.com/registry-tags: proxy
    sas.com/version: 1.23.18
  labels:
    app.kubernetes.io/name: sas-projects
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-projects
  namespace: franceavv
spec:
  ports:
  - name: http
    port: 443
    protocol: TCP
    targetPort: http
  selector:
    app.kubernetes.io/name: sas-projects
    sas.com/deployment: sas-viya
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    sas.com/component-name: sas-data-quality-services
    sas.com/component-version: 3.8.1-20201202.1606939069890
    sas.com/kustomize-base: base
    sas.com/registry-sync: default
    sas.com/registry-tags: proxy
    sas.com/version: 3.8.1
  labels:
    app.kubernetes.io/name: sas-data-quality-services
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-qkb-management
  namespace: franceavv
spec:
  ports:
  - name: qkbmanagement
    port: 443
    protocol: TCP
    targetPort: http
  selector:
    app.kubernetes.io/name: sas-data-quality-services
    sas.com/deployment: sas-viya
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    sas.com/component-name: sas-rabbitmq-server
    sas.com/component-version: 3.82003.2-20201013.1602597853237
    sas.com/contextRoot: ""
    sas.com/version: 3.82003.2
  labels:
    app.kubernetes.io/name: sas-rabbitmq-server
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-rabbitmq-server
  namespace: franceavv
spec:
  ports:
  - name: amqp
    port: 5672
    protocol: TCP
    targetPort: amqp
  - name: management
    port: 15672
    protocol: TCP
    targetPort: management
  - name: erlang
    port: 25672
    protocol: TCP
    targetPort: erlang
  - name: epmd
    port: 4369
    protocol: TCP
    targetPort: epmd
  - name: metrics
    port: 15692
    protocol: TCP
    targetPort: metrics
  selector:
    app.kubernetes.io/name: sas-rabbitmq-server
    sas.com/deployment: sas-viya
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    sas.com/component-name: sas-readiness
    sas.com/component-version: 1.3.3-20201203.1607020633267
    sas.com/kustomize-base: base
    sas.com/version: 1.3.3
  labels:
    app.kubernetes.io/name: sas-readiness
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-readiness
  namespace: franceavv
spec:
  ports:
  - name: http
    port: 443
    protocol: TCP
    targetPort: http
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/name: sas-readiness
    sas.com/deployment: sas-viya
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    sas.com/component-name: sas-business-rules-services
    sas.com/component-version: 3.9.15-20201210.1607644432623
    sas.com/kustomize-base: base
    sas.com/registry-sync: default
    sas.com/registry-tags: proxy
    sas.com/version: 3.9.15
  labels:
    app.kubernetes.io/name: sas-business-rules-services
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-reference-data
  namespace: franceavv
spec:
  ports:
  - name: referencedata
    port: 443
    protocol: TCP
    targetPort: referencedata
  selector:
    app.kubernetes.io/name: sas-business-rules-services
    sas.com/deployment: sas-viya
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    sas.com/component-name: sas-relationships
    sas.com/component-version: 3.28.11-20201204.1607056749902
    sas.com/kustomize-base: base
    sas.com/registry-sync: default
    sas.com/registry-tags: proxy
    sas.com/version: 3.28.11
  labels:
    app.kubernetes.io/name: sas-relationships
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-relationships
  namespace: franceavv
spec:
  ports:
  - name: http
    port: 443
    protocol: TCP
    targetPort: http
  selector:
    app.kubernetes.io/name: sas-relationships
    sas.com/deployment: sas-viya
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    sas.com/component-name: sas-report-services-group
    sas.com/component-version: 4.13.5-20201208.1607409510563
    sas.com/kustomize-base: base
    sas.com/registry-sync: default
    sas.com/registry-tags: proxy
    sas.com/version: 4.13.5
  labels:
    app.kubernetes.io/name: sas-report-services-group
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-report-alerts
  namespace: franceavv
spec:
  ports:
  - name: reportalerts
    port: 443
    protocol: TCP
    targetPort: reportalerts
  selector:
    app.kubernetes.io/name: sas-report-services-group
    sas.com/deployment: sas-viya
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    sas.com/component-name: sas-report-execution
    sas.com/component-version: 2.12.3-20201209.1607496369529
    sas.com/kustomize-base: base
    sas.com/registry-sync: default
    sas.com/registry-tags: proxy
    sas.com/version: 2.12.3
  labels:
    app.kubernetes.io/name: sas-report-execution
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-report-data
  namespace: franceavv
spec:
  ports:
  - name: reportdata
    port: 443
    protocol: TCP
    targetPort: reportdata
  - name: datacache1
    port: 35001
    protocol: TCP
    targetPort: datacache1
  - name: datacache2
    port: 35002
    protocol: TCP
    targetPort: datacache2
  - name: datacache3
    port: 35003
    protocol: TCP
    targetPort: datacache3
  selector:
    app.kubernetes.io/name: sas-report-execution
    sas.com/deployment: sas-viya
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    sas.com/component-name: sas-report-distribution
    sas.com/component-version: 2.52.0-20201106.1604662320003
    sas.com/kustomize-base: base
    sas.com/registry-providers: jobExecution-provider,jobExecution-provider-REPORTDISTRIBUTION
    sas.com/registry-sync: default
    sas.com/registry-tags: proxy
    sas.com/version: 2.52.0
  labels:
    app.kubernetes.io/name: sas-report-distribution
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-report-distribution
  namespace: franceavv
spec:
  ports:
  - name: http
    port: 443
    protocol: TCP
    targetPort: http
  selector:
    app.kubernetes.io/name: sas-report-distribution
    sas.com/deployment: sas-viya
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    sas.com/component-name: sas-report-services-group
    sas.com/component-version: 4.13.5-20201208.1607409510563
    sas.com/kustomize-base: base
    sas.com/registry-sync: default
    sas.com/registry-tags: proxy
    sas.com/version: 4.13.5
  labels:
    app.kubernetes.io/name: sas-report-services-group
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-report-images
  namespace: franceavv
spec:
  ports:
  - name: reportimages
    port: 443
    protocol: TCP
    targetPort: reportimages
  selector:
    app.kubernetes.io/name: sas-report-services-group
    sas.com/deployment: sas-viya
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    sas.com/component-name: sas-report-execution
    sas.com/component-version: 2.12.3-20201209.1607496369529
    sas.com/kustomize-base: base
    sas.com/registry-sync: default
    sas.com/registry-tags: proxy
    sas.com/version: 2.12.3
  labels:
    app.kubernetes.io/name: sas-report-execution
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-report-packages
  namespace: franceavv
spec:
  ports:
  - name: reportpackages
    port: 443
    protocol: TCP
    targetPort: reportpackages
  - name: pkgscache1
    port: 35004
    protocol: TCP
    targetPort: pkgscache1
  - name: pkgscache2
    port: 35005
    protocol: TCP
    targetPort: pkgscache2
  - name: pkgscache3
    port: 35006
    protocol: TCP
    targetPort: pkgscache3
  selector:
    app.kubernetes.io/name: sas-report-execution
    sas.com/deployment: sas-viya
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    sas.com/component-name: sas-report-renderer
    sas.com/component-version: 1.65.3-20201208.1607482529657
    sas.com/kustomize-base: base
    sas.com/registry-sync: default
    sas.com/registry-tags: proxy
    sas.com/version: 1.65.3
  labels:
    app.kubernetes.io/name: sas-report-renderer
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-report-renderer
  namespace: franceavv
spec:
  ports:
  - name: http
    port: 443
    protocol: TCP
    targetPort: http
  selector:
    app.kubernetes.io/name: sas-report-renderer
    sas.com/deployment: sas-viya
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    sas.com/component-name: sas-report-services-group
    sas.com/component-version: 4.13.5-20201208.1607409510563
    sas.com/kustomize-base: base
    sas.com/registry-sync: default
    sas.com/registry-tags: proxy
    sas.com/version: 4.13.5
  labels:
    app.kubernetes.io/name: sas-report-services-group
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-report-templates
  namespace: franceavv
spec:
  ports:
  - name: reporttemplates
    port: 443
    protocol: TCP
    targetPort: reporttemplates
  selector:
    app.kubernetes.io/name: sas-report-services-group
    sas.com/deployment: sas-viya
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    sas.com/component-name: sas-report-services-group
    sas.com/component-version: 4.13.5-20201208.1607409510563
    sas.com/kustomize-base: base
    sas.com/registry-sync: default
    sas.com/registry-tags: proxy
    sas.com/version: 4.13.5
  labels:
    app.kubernetes.io/name: sas-report-services-group
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-report-transforms
  namespace: franceavv
spec:
  ports:
  - name: reporttransform
    port: 443
    protocol: TCP
    targetPort: reporttransform
  selector:
    app.kubernetes.io/name: sas-report-services-group
    sas.com/deployment: sas-viya
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    sas.com/component-name: sas-report-services-group
    sas.com/component-version: 4.13.5-20201208.1607409510563
    sas.com/kustomize-base: base
    sas.com/registry-sync: default
    sas.com/registry-tags: proxy
    sas.com/version: 4.13.5
  labels:
    app.kubernetes.io/name: sas-report-services-group
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-reports
  namespace: franceavv
spec:
  ports:
  - name: reports
    port: 443
    protocol: TCP
    targetPort: reports
  selector:
    app.kubernetes.io/name: sas-report-services-group
    sas.com/deployment: sas-viya
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    sas.com/component-name: sas-data-sources
    sas.com/component-version: 3.33.1-20201202.1606937911915
    sas.com/kustomize-base: base
    sas.com/registry-sync: default
    sas.com/registry-tags: proxy
    sas.com/version: 3.33.1
  labels:
    app.kubernetes.io/name: sas-data-sources
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-row-sets
  namespace: franceavv
spec:
  ports:
  - name: rowsets
    port: 443
    protocol: TCP
    targetPort: http
  selector:
    app.kubernetes.io/name: sas-data-sources
    sas.com/deployment: sas-viya
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    sas.com/component-name: sas-scheduler
    sas.com/component-version: 3.26.11-20201204.1607057236019
    sas.com/kustomize-base: base
    sas.com/registry-sync: default
    sas.com/registry-tags: proxy
    sas.com/version: 3.26.11
  labels:
    app.kubernetes.io/name: sas-scheduler
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-scheduler
  namespace: franceavv
spec:
  ports:
  - name: http
    port: 443
    protocol: TCP
    targetPort: http
  selector:
    app.kubernetes.io/name: sas-scheduler
    sas.com/deployment: sas-viya
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    sas.com/component-name: sas-score-definitions
    sas.com/component-version: 2.22.0-20201210.1607645547646
    sas.com/kustomize-base: base
    sas.com/registry-providers: jobExecution-provider,jobExecution-provider-importScenarios
    sas.com/registry-sync: default
    sas.com/registry-tags: proxy
    sas.com/version: 2.22.0
  labels:
    app.kubernetes.io/name: sas-score-definitions
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-score-definitions
  namespace: franceavv
spec:
  ports:
  - name: http
    port: 443
    protocol: TCP
    targetPort: http
  selector:
    app.kubernetes.io/name: sas-score-definitions
    sas.com/deployment: sas-viya
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    sas.com/component-name: sas-score-execution
    sas.com/component-version: 2.21.0-20201210.1607646388188
    sas.com/kustomize-base: base
    sas.com/registry-sync: default
    sas.com/registry-tags: proxy
    sas.com/version: 2.21.0
  labels:
    app.kubernetes.io/name: sas-score-execution
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-score-execution
  namespace: franceavv
spec:
  ports:
  - name: http
    port: 443
    protocol: TCP
    targetPort: http
  selector:
    app.kubernetes.io/name: sas-score-execution
    sas.com/deployment: sas-viya
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    sas.com/component-name: sas-search
    sas.com/component-version: 2.29.6-20201204.1607057876100
    sas.com/kustomize-base: base
    sas.com/registry-sync: default
    sas.com/registry-tags: proxy
    sas.com/version: 2.29.6
  labels:
    app.kubernetes.io/name: sas-search
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-search
  namespace: franceavv
spec:
  ports:
  - name: search
    port: 443
    protocol: TCP
    targetPort: search
  selector:
    app.kubernetes.io/name: sas-search
    sas.com/deployment: sas-viya
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    sas.com/component-name: sas-search
    sas.com/component-version: 2.29.6-20201204.1607057876100
    sas.com/kustomize-base: base
    sas.com/registry-sync: default
    sas.com/registry-tags: proxy
    sas.com/version: 2.29.6
  labels:
    app.kubernetes.io/name: sas-search
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-search-index
  namespace: franceavv
spec:
  ports:
  - name: searchindex
    port: 443
    protocol: TCP
    targetPort: searchindex
  selector:
    app.kubernetes.io/name: sas-search
    sas.com/deployment: sas-viya
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    sas.com/component-name: sas-sentiment-execution-provider
    sas.com/component-version: 6.2.0-20201202.1606938881164
    sas.com/kustomize-base: base
    sas.com/registry-providers: jobExecution-provider, jobExecution-provider-text-sentiment
    sas.com/registry-sync: default
    sas.com/registry-tags: proxy
    sas.com/version: 6.2.0
  labels:
    app.kubernetes.io/name: sas-sentiment-execution-provider
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-sentiment-execution-provider
  namespace: franceavv
spec:
  ports:
  - name: http
    port: 443
    protocol: TCP
    targetPort: http
  selector:
    app.kubernetes.io/name: sas-sentiment-execution-provider
    sas.com/deployment: sas-viya
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    sas.com/component-name: sas-studio-app
    sas.com/component-version: 6.112.11-20201210.1607627608398
    sas.com/kustomize-base: base
    sas.com/registry-sync: default
    sas.com/registry-tags: proxy
    sas.com/version: 6.112.11
  labels:
    app.kubernetes.io/name: sas-studio-app
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-studio-app
  namespace: franceavv
spec:
  ports:
  - name: http
    port: 443
    protocol: TCP
    targetPort: http
  selector:
    app.kubernetes.io/name: sas-studio-app
    sas.com/deployment: sas-viya
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    sas.com/component-name: sas-subject-contacts
    sas.com/component-version: 0.14.14-20201210.1607643779745
    sas.com/kustomize-base: base
    sas.com/registry-sync: default
    sas.com/registry-tags: proxy
    sas.com/version: 0.14.14
  labels:
    app.kubernetes.io/name: sas-subject-contacts
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-subject-contacts
  namespace: franceavv
spec:
  ports:
  - name: http
    port: 443
    protocol: TCP
    targetPort: http
  selector:
    app.kubernetes.io/name: sas-subject-contacts
    sas.com/deployment: sas-viya
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    sas.com/component-name: sas-templates
    sas.com/component-version: 1.24.12-20201204.1607058477854
    sas.com/kustomize-base: base
    sas.com/registry-sync: default
    sas.com/registry-tags: proxy
    sas.com/version: 1.24.12
  labels:
    app.kubernetes.io/name: sas-templates
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-templates
  namespace: franceavv
spec:
  ports:
  - name: http
    port: 443
    protocol: TCP
    targetPort: http
  selector:
    app.kubernetes.io/name: sas-templates
    sas.com/deployment: sas-viya
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    sas.com/component-name: sas-text-cas-data-management
    sas.com/component-version: 5.7.0-20201203.1607029718479
    sas.com/kustomize-base: base
    sas.com/registry-sync: default
    sas.com/registry-tags: proxy
    sas.com/version: 5.7.0
  labels:
    app.kubernetes.io/name: sas-text-cas-data-management
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-terms-management
  namespace: franceavv
spec:
  ports:
  - name: termsmanage
    port: 443
    protocol: TCP
    targetPort: termsmanage
  selector:
    app.kubernetes.io/name: sas-text-cas-data-management
    sas.com/deployment: sas-viya
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    sas.com/component-name: sas-text-analytics
    sas.com/component-version: 2.12.1-20201209.1607553801258
    sas.com/kustomize-base: base
    sas.com/registry-providers: analyticsGateway-provider,analyticsGateway-provider-text,jobExecution-provider,jobExecution-provider-text,jobExecution-provider-test-concept,jobExecution-provider-text-refresh-data,jobExecution-provider-text-project-metadata,jobExecution-provider-text-sca-project-import,jobExecution-provider-text-build-component-table,jobExecution-provider-text-test-sandbox-concept
    sas.com/registry-sync: default
    sas.com/registry-tags: proxy
    sas.com/version: 2.12.1
  labels:
    app.kubernetes.io/name: sas-text-analytics
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-text-analytics
  namespace: franceavv
spec:
  ports:
  - name: http
    port: 443
    protocol: TCP
    targetPort: http
  selector:
    app.kubernetes.io/name: sas-text-analytics
    sas.com/deployment: sas-viya
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    sas.com/component-name: sas-theme-content
    sas.com/component-version: 1.23.2-20201202.1606918780434
    sas.com/kustomize-base: base
    sas.com/registry-sync: default
    sas.com/registry-tags: proxy
    sas.com/version: 1.23.2
  labels:
    app.kubernetes.io/name: sas-theme-content
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-theme-content
  namespace: franceavv
spec:
  ports:
  - name: http
    port: 443
    protocol: TCP
    targetPort: http
  selector:
    app.kubernetes.io/name: sas-theme-content
    sas.com/deployment: sas-viya
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    sas.com/component-name: sas-theme-designer-app
    sas.com/component-version: 3.25.7-20201204.1607109715258
    sas.com/kustomize-base: base
    sas.com/registry-sync: default
    sas.com/registry-tags: proxy
    sas.com/version: 3.25.7
  labels:
    app.kubernetes.io/name: sas-theme-designer-app
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-theme-designer-app
  namespace: franceavv
spec:
  ports:
  - name: http
    port: 443
    protocol: TCP
    targetPort: http
  selector:
    app.kubernetes.io/name: sas-theme-designer-app
    sas.com/deployment: sas-viya
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    sas.com/component-name: sas-themes
    sas.com/component-version: 3.23.4-20201202.1606917995194
    sas.com/kustomize-base: base
    sas.com/registry-sync: default
    sas.com/registry-tags: proxy
    sas.com/version: 3.23.4
  labels:
    app.kubernetes.io/name: sas-themes
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-themes
  namespace: franceavv
spec:
  ports:
  - name: http
    port: 443
    protocol: TCP
    targetPort: http
  selector:
    app.kubernetes.io/name: sas-themes
    sas.com/deployment: sas-viya
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    sas.com/component-name: sas-thumbnails
    sas.com/component-version: 1.52.1-20201202.1606940688053
    sas.com/kustomize-base: base
    sas.com/registry-sync: default
    sas.com/registry-tags: proxy
    sas.com/version: 1.52.1
  labels:
    app.kubernetes.io/name: sas-thumbnails
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-thumbnails
  namespace: franceavv
spec:
  ports:
  - name: http
    port: 443
    protocol: TCP
    targetPort: http
  selector:
    app.kubernetes.io/name: sas-thumbnails
    sas.com/deployment: sas-viya
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    sas.com/component-name: sas-text-topics
    sas.com/component-version: 5.8.0-20201203.1607011531723
    sas.com/kustomize-base: base
    sas.com/registry-providers: jobExecution-provider,jobExecution-provider-text-topic
    sas.com/registry-sync: default
    sas.com/registry-tags: proxy
    sas.com/version: 5.8.0
  labels:
    app.kubernetes.io/name: sas-text-topics
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-topic-execution-provider
  namespace: franceavv
spec:
  ports:
  - name: topicexe
    port: 443
    protocol: TCP
    targetPort: topicexe
  selector:
    app.kubernetes.io/name: sas-text-topics
    sas.com/deployment: sas-viya
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    sas.com/component-name: sas-topic-management
    sas.com/component-version: 6.8.0-20201202.1606937875615
    sas.com/kustomize-base: base
    sas.com/registry-sync: default
    sas.com/registry-tags: proxy
    sas.com/version: 6.8.0
  labels:
    app.kubernetes.io/name: sas-topic-management
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-topic-management
  namespace: franceavv
spec:
  ports:
  - name: http
    port: 443
    protocol: TCP
    targetPort: http
  selector:
    app.kubernetes.io/name: sas-topic-management
    sas.com/deployment: sas-viya
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    sas.com/component-name: sas-text-topics
    sas.com/component-version: 5.8.0-20201203.1607011531723
    sas.com/kustomize-base: base
    sas.com/registry-sync: default
    sas.com/registry-tags: proxy
    sas.com/version: 5.8.0
  labels:
    app.kubernetes.io/name: sas-text-topics
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-topics
  namespace: franceavv
spec:
  ports:
  - name: topics
    port: 443
    protocol: TCP
    targetPort: topics
  selector:
    app.kubernetes.io/name: sas-text-topics
    sas.com/deployment: sas-viya
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    sas.com/component-name: sas-transfer
    sas.com/component-version: 2.29.17-20201204.1607058995910
    sas.com/kustomize-base: base
    sas.com/registry-sync: default
    sas.com/registry-tags: proxy
    sas.com/version: 2.29.17
  labels:
    app.kubernetes.io/name: sas-transfer
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-transfer
  namespace: franceavv
spec:
  ports:
  - name: http
    port: 443
    protocol: TCP
    targetPort: http
  selector:
    app.kubernetes.io/name: sas-transfer
    sas.com/deployment: sas-viya
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    sas.com/component-name: sas-transformations
    sas.com/component-version: 2.24.9-20201209.1607544521387
    sas.com/kustomize-base: base
    sas.com/registry-providers: jobExecution-provider,jobExecution-provider-DATAFLOW
    sas.com/registry-sync: default
    sas.com/registry-tags: proxy
    sas.com/version: 2.24.9
  labels:
    app.kubernetes.io/name: sas-transformations
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-transformations
  namespace: franceavv
spec:
  ports:
  - name: transformations
    port: 443
    protocol: TCP
    targetPort: transformations
  selector:
    app.kubernetes.io/name: sas-transformations
    sas.com/deployment: sas-viya
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    sas.com/component-name: sas-decisions-definitions
    sas.com/component-version: 3.10.15-20201210.1607644445003
    sas.com/kustomize-base: base
    sas.com/registry-sync: default
    sas.com/registry-tags: proxy
    sas.com/version: 3.10.15
  labels:
    app.kubernetes.io/name: sas-decisions-definitions
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-treatment-definitions
  namespace: franceavv
spec:
  ports:
  - name: treatmentdefs
    port: 443
    protocol: TCP
    targetPort: treatmentdefs
  selector:
    app.kubernetes.io/name: sas-decisions-definitions
    sas.com/deployment: sas-viya
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    sas.com/component-name: sas-types
    sas.com/component-version: 3.16.1-20201130.1606757966415
    sas.com/kustomize-base: base
    sas.com/registry-sync: default
    sas.com/registry-tags: proxy
    sas.com/version: 3.16.1
  labels:
    app.kubernetes.io/name: sas-types
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-types
  namespace: franceavv
spec:
  ports:
  - name: http
    port: 443
    protocol: TCP
    targetPort: http
  selector:
    app.kubernetes.io/name: sas-types
    sas.com/deployment: sas-viya
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    sas.com/component-name: sas-visual-analytics-administration
    sas.com/component-version: 1.53.1-20201202.1606941457830
    sas.com/kustomize-base: base
    sas.com/registry-sync: default
    sas.com/registry-tags: proxy
    sas.com/version: 1.53.1
  labels:
    app.kubernetes.io/name: sas-visual-analytics-administration
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-visual-analytics-administration
  namespace: franceavv
spec:
  ports:
  - name: http
    port: 443
    protocol: TCP
    targetPort: http
  selector:
    app.kubernetes.io/name: sas-visual-analytics-administration
    sas.com/deployment: sas-viya
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    sas.com/component-name: sas-visual-analytics-app
    sas.com/component-version: 2.54.0-20201209.1607498056870
    sas.com/kustomize-base: base
    sas.com/registry-sync: default
    sas.com/registry-tags: proxy
    sas.com/version: 2.54.0
  labels:
    app.kubernetes.io/name: sas-visual-analytics-app
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-visual-analytics-app
  namespace: franceavv
spec:
  ports:
  - name: http
    port: 443
    protocol: TCP
    targetPort: http
  selector:
    app.kubernetes.io/name: sas-visual-analytics-app
    sas.com/deployment: sas-viya
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    sas.com/component-name: sas-web-data-access
    sas.com/component-version: 1.20.0-20201209.1607532765066
    sas.com/kustomize-base: base
    sas.com/registry-sync: default
    sas.com/registry-tags: proxy
    sas.com/version: 1.20.0
  labels:
    app.kubernetes.io/name: sas-web-data-access
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-web-data-access
  namespace: franceavv
spec:
  ports:
  - name: http
    port: 443
    protocol: TCP
    targetPort: http
  selector:
    app.kubernetes.io/name: sas-web-data-access
    sas.com/deployment: sas-viya
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    sas.com/component-name: sas-workflow
    sas.com/component-version: 3.16.4-20201204.1607059513666
    sas.com/kustomize-base: base
    sas.com/registry-sync: default
    sas.com/registry-tags: proxy
    sas.com/version: 3.16.4
  labels:
    app.kubernetes.io/name: sas-workflow
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-workflow
  namespace: franceavv
spec:
  ports:
  - name: http
    port: 443
    protocol: TCP
    targetPort: http
  selector:
    app.kubernetes.io/name: sas-workflow
    sas.com/deployment: sas-viya
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    sas.com/component-name: sas-workflow-definition-history
    sas.com/component-version: 2.7.8-20201212.1607769254594
    sas.com/kustomize-base: base
    sas.com/registry-sync: default
    sas.com/registry-tags: proxy
    sas.com/version: 2.7.8
  labels:
    app.kubernetes.io/name: sas-workflow-definition-history
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-workflow-definition
  namespace: franceavv
spec:
  ports:
  - name: workflowdefn
    port: 443
    protocol: TCP
    targetPort: workflowdefn
  selector:
    app.kubernetes.io/name: sas-workflow-definition-history
    sas.com/deployment: sas-viya
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    sas.com/component-name: sas-workflow-definition-history
    sas.com/component-version: 2.7.8-20201212.1607769254594
    sas.com/kustomize-base: base
    sas.com/registry-sync: default
    sas.com/registry-tags: proxy
    sas.com/version: 2.7.8
  labels:
    app.kubernetes.io/name: sas-workflow-definition-history
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-workflow-history
  namespace: franceavv
spec:
  ports:
  - name: workflowhistory
    port: 443
    protocol: TCP
    targetPort: workflowhistory
  selector:
    app.kubernetes.io/name: sas-workflow-definition-history
    sas.com/deployment: sas-viya
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    sas.com/component-name: sas-workflow-manager-app
    sas.com/component-version: 2.11.0-20201210.1607647072535
    sas.com/kustomize-base: base
    sas.com/registry-sync: default
    sas.com/registry-tags: proxy
    sas.com/version: 2.11.0
  labels:
    app.kubernetes.io/name: sas-workflow-manager-app
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-workflow-manager-app
  namespace: franceavv
spec:
  ports:
  - name: http
    port: 443
    protocol: TCP
    targetPort: http
  selector:
    app.kubernetes.io/name: sas-workflow-manager-app
    sas.com/deployment: sas-viya
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sas.com/certificate-file-format: pem
    sas.com/component-name: sas-analytics-components
    sas.com/component-version: 20.17.7-20201209.1607538004353
    sas.com/kustomize-base: golang
    sas.com/pod-uses-db-migrator: "true"
    sas.com/pod-uses-liveness-probe: http
    sas.com/pod-uses-readiness-probe: http
    sas.com/pod-uses-startup-probe: http
    sas.com/version: 20.17.7
    sidecar.istio.io/proxyCPU: 15m
    sidecar.istio.io/proxyMemory: 115Mi
  labels:
    app.kubernetes.io/name: sas-analytics-components
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
    sas.com/deployment-base: golang
    workload.sas.com/class: stateless
  name: sas-analytics-components
  namespace: franceavv
spec:
  selector:
    matchExpressions: []
    matchLabels:
      app.kubernetes.io/name: sas-analytics-components
      sas.com/deployment: sas-viya
  template:
    metadata:
      annotations:
        prometheus.io/path: /internal/metrics
        prometheus.io/port: "8080"
        prometheus.io/scheme: https
        prometheus.io/scrape: "true"
        sas.com/certificate-file-format: pem
        sas.com/component-name: sas-analytics-components
        sas.com/component-version: 20.17.7-20201209.1607538004353
        sas.com/kustomize-base: golang
        sas.com/pod-uses-liveness-probe: http
        sas.com/pod-uses-readiness-probe: http
        sas.com/pod-uses-startup-probe: http
        sas.com/tls-enabled-ports: all
        sas.com/version: 20.17.7
        seccomp.security.alpha.kubernetes.io/pod: runtime/default
        sidecar.istio.io/proxyCPU: 15m
        sidecar.istio.io/proxyMemory: 115Mi
      labels:
        app: sas-analytics-components
        app.kubernetes.io/name: sas-analytics-components
        sas.com/deployment: sas-viya
        workload.sas.com/class: stateless
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: In
                values:
                - stateless
              matchFields: []
            weight: 100
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: NotIn
                values:
                - compute
                - cas
                - stateful
                - connect
              matchFields: []
            weight: 50
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.azure.com/mode
                operator: NotIn
                values:
                - system
              matchFields: []
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - sas-analytics-components
              namespaces: []
              topologyKey: kubernetes.io/hostname
            weight: 100
          requiredDuringSchedulingIgnoredDuringExecution: []
      automountServiceAccountToken: false
      containers:
      - args: null
        command: null
        env:
        - name: SAS_K8S_DEPLOYMENT_NAME
          value: sas-analytics-components
        envFrom:
        - configMapRef:
            name: sas-go-config-7hc79bmf8m
        - configMapRef:
            name: sas-shared-config-49d8hthtb5
        - secretRef:
            name: sas-consul-client
        - configMapRef:
            name: sas-tls-config-99f79t29t5
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-analytics-components:20.17.7-20201209.1607538004353
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - sh
              - -c
              - sleep 5
        livenessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http
            scheme: HTTPS
          periodSeconds: 10
        name: sas-analytics-components
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/ready
            port: http
            scheme: HTTPS
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add: []
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        startupProbe:
          failureThreshold: 180
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http
            scheme: HTTPS
          periodSeconds: 10
        volumeDevices: []
        volumeMounts:
        - mountPath: /tmp
          name: tmp
        - mountPath: /security
          name: security
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/cacerts
          name: security
          subPath: cacerts
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/private
          name: security
          subPath: private
      hostAliases: []
      imagePullSecrets:
      - name: sas-image-pull-secrets-4m8cc729k8
      initContainers:
      - env:
        - name: KUBE_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: SAS_CERTFRAME_TOKEN_DIR
          value: /certframe-token
        - name: SAS_ADDITIONAL_CA_CERTIFICATES_DIR
          value: /customer-provided-ca-certificates
        envFrom:
        - configMapRef:
            name: sas-certframe-ingress-certificate-config-cmm2t44t88
        - configMapRef:
            name: sas-certframe-user-config-c4ch2c59m7
        - configMapRef:
            name: sas-certframe-config-ctgg29gf7t
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-certframe:3.9.0-20201203.1607016443086
        name: sas-certframe
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /certframe-token
          name: certframe-token
        - mountPath: /security
          name: security
        - mountPath: /customer-provided-ca-certificates
          name: customer-provided-ca-certificates
      - args:
        - cp -rf meta /data
        command:
        - /bin/sh
        - -c
        env: []
        envFrom: []
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-analytics-components:20.17.7-20201209.1607538004353
        imagePullPolicy: IfNotPresent
        name: hydrator
        ports: []
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 75m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add: []
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeDevices: []
        volumeMounts:
        - mountPath: /data
          name: shared-vol
      - args: null
        command: null
        env:
        - name: SSL_CERT_FILE
          value: /security/trustedcerts.pem
        - name: SAS_SERVICE_NAME
          value: sas-analytics-components
        envFrom:
        - configMapRef:
            name: sas-go-config-7hc79bmf8m
        - configMapRef:
            name: sas-shared-config-49d8hthtb5
        - configMapRef:
            name: sas-java-config-t7t5thbgkd
        - secretRef:
            name: sas-consul-client
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-db-migrator:1.1.0-20201209.1607523698073
        imagePullPolicy: IfNotPresent
        name: sas-db-migrator
        ports: []
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 100m
            memory: 90Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add: []
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeDevices: []
        volumeMounts:
        - mountPath: /security
          name: security
        - mountPath: /data
          name: shared-vol
      readinessGates: []
      securityContext:
        runAsNonRoot: true
        supplementalGroups: []
        sysctls: []
      tolerations:
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateful
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateless
      volumes:
      - name: certframe-token
        secret:
          secretName: sas-certframe-token
      - emptyDir: {}
        name: security
      - configMap:
          name: sas-customer-provided-ca-certificates-29kdmk686c
        name: customer-provided-ca-certificates
      - emptyDir: {}
        name: tmp
      - emptyDir: {}
        name: shared-vol
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sas.com/certificate-file-format: pem
    sas.com/component-name: sas-analytics-events
    sas.com/component-version: 1.4.4-20201204.1607119383686
    sas.com/kustomize-base: golang
    sas.com/pod-uses-db-migrator: "true"
    sas.com/pod-uses-liveness-probe: http
    sas.com/pod-uses-readiness-probe: http
    sas.com/pod-uses-startup-probe: http
    sas.com/version: 1.4.4
    sidecar.istio.io/proxyCPU: 15m
    sidecar.istio.io/proxyMemory: 115Mi
  labels:
    app.kubernetes.io/name: sas-analytics-events
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
    sas.com/deployment-base: golang
    workload.sas.com/class: stateless
  name: sas-analytics-events
  namespace: franceavv
spec:
  selector:
    matchExpressions: []
    matchLabels:
      app.kubernetes.io/name: sas-analytics-events
      sas.com/deployment: sas-viya
  template:
    metadata:
      annotations:
        prometheus.io/path: /internal/metrics
        prometheus.io/port: "8080"
        prometheus.io/scheme: https
        prometheus.io/scrape: "true"
        sas.com/certificate-file-format: pem
        sas.com/component-name: sas-analytics-events
        sas.com/component-version: 1.4.4-20201204.1607119383686
        sas.com/kustomize-base: golang
        sas.com/pod-uses-liveness-probe: http
        sas.com/pod-uses-readiness-probe: http
        sas.com/pod-uses-startup-probe: http
        sas.com/tls-enabled-ports: all
        sas.com/version: 1.4.4
        seccomp.security.alpha.kubernetes.io/pod: runtime/default
        sidecar.istio.io/proxyCPU: 15m
        sidecar.istio.io/proxyMemory: 115Mi
      labels:
        app: sas-analytics-events
        app.kubernetes.io/name: sas-analytics-events
        sas.com/deployment: sas-viya
        workload.sas.com/class: stateless
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: In
                values:
                - stateless
              matchFields: []
            weight: 100
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: NotIn
                values:
                - compute
                - cas
                - stateful
                - connect
              matchFields: []
            weight: 50
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.azure.com/mode
                operator: NotIn
                values:
                - system
              matchFields: []
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - sas-analytics-events
              namespaces: []
              topologyKey: kubernetes.io/hostname
            weight: 100
          requiredDuringSchedulingIgnoredDuringExecution: []
      automountServiceAccountToken: false
      containers:
      - args: null
        command: null
        env:
        - name: SAS_K8S_DEPLOYMENT_NAME
          value: sas-analytics-events
        envFrom:
        - configMapRef:
            name: sas-go-config-7hc79bmf8m
        - configMapRef:
            name: sas-shared-config-49d8hthtb5
        - secretRef:
            name: sas-consul-client
        - configMapRef:
            name: sas-tls-config-99f79t29t5
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-analytics-events:1.4.4-20201204.1607119383686
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - sh
              - -c
              - sleep 5
        livenessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http
            scheme: HTTPS
          periodSeconds: 10
        name: sas-analytics-events
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/ready
            port: http
            scheme: HTTPS
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add: []
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        startupProbe:
          failureThreshold: 180
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http
            scheme: HTTPS
          periodSeconds: 10
        volumeDevices: []
        volumeMounts:
        - mountPath: /tmp
          name: tmp
        - mountPath: /security
          name: security
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/cacerts
          name: security
          subPath: cacerts
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/private
          name: security
          subPath: private
      hostAliases: []
      imagePullSecrets:
      - name: sas-image-pull-secrets-4m8cc729k8
      initContainers:
      - env:
        - name: KUBE_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: SAS_CERTFRAME_TOKEN_DIR
          value: /certframe-token
        - name: SAS_ADDITIONAL_CA_CERTIFICATES_DIR
          value: /customer-provided-ca-certificates
        envFrom:
        - configMapRef:
            name: sas-certframe-ingress-certificate-config-cmm2t44t88
        - configMapRef:
            name: sas-certframe-user-config-c4ch2c59m7
        - configMapRef:
            name: sas-certframe-config-ctgg29gf7t
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-certframe:3.9.0-20201203.1607016443086
        name: sas-certframe
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /certframe-token
          name: certframe-token
        - mountPath: /security
          name: security
        - mountPath: /customer-provided-ca-certificates
          name: customer-provided-ca-certificates
      - args:
        - cp -rf meta /data
        command:
        - /bin/sh
        - -c
        env: []
        envFrom: []
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-analytics-events:1.4.4-20201204.1607119383686
        imagePullPolicy: IfNotPresent
        name: hydrator
        ports: []
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 75m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add: []
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeDevices: []
        volumeMounts:
        - mountPath: /data
          name: shared-vol
      - args: null
        command: null
        env:
        - name: SSL_CERT_FILE
          value: /security/trustedcerts.pem
        - name: SAS_SERVICE_NAME
          value: sas-analytics-events
        envFrom:
        - configMapRef:
            name: sas-go-config-7hc79bmf8m
        - configMapRef:
            name: sas-shared-config-49d8hthtb5
        - configMapRef:
            name: sas-java-config-t7t5thbgkd
        - secretRef:
            name: sas-consul-client
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-db-migrator:1.1.0-20201209.1607523698073
        imagePullPolicy: IfNotPresent
        name: sas-db-migrator
        ports: []
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 100m
            memory: 90Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add: []
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeDevices: []
        volumeMounts:
        - mountPath: /security
          name: security
        - mountPath: /data
          name: shared-vol
      readinessGates: []
      securityContext:
        runAsNonRoot: true
        supplementalGroups: []
        sysctls: []
      tolerations:
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateful
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateless
      volumes:
      - name: certframe-token
        secret:
          secretName: sas-certframe-token
      - emptyDir: {}
        name: security
      - configMap:
          name: sas-customer-provided-ca-certificates-29kdmk686c
        name: customer-provided-ca-certificates
      - emptyDir: {}
        name: tmp
      - emptyDir: {}
        name: shared-vol
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sas.com/certificate-file-format: jks
    sas.com/component-name: sas-analytics-services
    sas.com/component-version: 1.10.0-20201204.1607097302572
    sas.com/kustomize-base: spring
    sas.com/pod-uses-liveness-probe: http
    sas.com/pod-uses-readiness-probe: http
    sas.com/pod-uses-startup-probe: http
    sas.com/version: 1.10.0
    sidecar.istio.io/proxyCPU: 15m
    sidecar.istio.io/proxyMemory: 115Mi
  labels:
    app.kubernetes.io/name: sas-analytics-services
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
    sas.com/deployment-base: spring
    workload.sas.com/class: stateless
  name: sas-analytics-services
  namespace: franceavv
spec:
  selector:
    matchExpressions: []
    matchLabels:
      app.kubernetes.io/name: sas-analytics-services
      sas.com/deployment: sas-viya
  template:
    metadata:
      annotations:
        prometheus.io/path: /internal/metrics
        prometheus.io/port: "10445"
        prometheus.io/scheme: https
        prometheus.io/scrape: "true"
        sas.com/certificate-file-format: jks
        sas.com/component-name: sas-analytics-services
        sas.com/component-version: 1.10.0-20201204.1607097302572
        sas.com/kustomize-base: spring
        sas.com/pod-uses-liveness-probe: http
        sas.com/pod-uses-readiness-probe: http
        sas.com/pod-uses-startup-probe: http
        sas.com/tls-enabled-ports: all
        sas.com/version: 1.10.0
        seccomp.security.alpha.kubernetes.io/pod: runtime/default
        sidecar.istio.io/proxyCPU: 15m
        sidecar.istio.io/proxyMemory: 115Mi
      labels:
        app: sas-analytics-services
        app.kubernetes.io/name: sas-analytics-services
        sas.com/deployment: sas-viya
        workload.sas.com/class: stateless
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: In
                values:
                - stateless
              matchFields: []
            weight: 100
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: NotIn
                values:
                - compute
                - cas
                - stateful
                - connect
              matchFields: []
            weight: 50
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.azure.com/mode
                operator: NotIn
                values:
                - system
              matchFields: []
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - sas-analytics-services
              namespaces: []
              topologyKey: kubernetes.io/hostname
            weight: 100
          requiredDuringSchedulingIgnoredDuringExecution: []
      automountServiceAccountToken: false
      containers:
      - args: null
        command: null
        env:
        - name: SAS_K8S_DEPLOYMENT_NAME
          value: sas-analytics-services
        - name: JAVA_OPTION_SERVER_PORT
        - name: MANAGEMENT_SERVER_PORT
          value: ${sas.${spring.application.name}.management.server.port:10445}
        envFrom:
        - configMapRef:
            name: sas-java-config-t7t5thbgkd
        - configMapRef:
            name: sas-shared-config-49d8hthtb5
        - secretRef:
            name: sas-consul-client
        - configMapRef:
            name: sas-spring-management-config-d64bbkhb97
        - configMapRef:
            name: sas-java-tls-config-fch4777298
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-analytics-services:1.10.0-20201204.1607097302572
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - sh
              - -c
              - sleep 5
        livenessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http-internal
            scheme: HTTPS
          periodSeconds: 10
        name: sas-analytics-services
        ports:
        - containerPort: 10445
          name: http-internal
          protocol: TCP
        - containerPort: 8080
          name: aasegmentatn
          protocol: TCP
        - containerPort: 8082
          name: aaflows
          protocol: TCP
        - containerPort: 8086
          name: aapipelines
          protocol: TCP
        - containerPort: 8083
          name: aavalidation
          protocol: TCP
        - containerPort: 8085
          name: aacaploclztn
          protocol: TCP
        - containerPort: 8084
          name: aagateway
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/ready
            port: http-internal
            scheme: HTTPS
          periodSeconds: 10
        resources:
          limits:
            cpu: 2000m
            memory: 2Gi
          requests:
            cpu: 50m
            memory: 1Gi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add: []
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        startupProbe:
          failureThreshold: 180
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http-internal
            scheme: HTTPS
          initialDelaySeconds: 20
          periodSeconds: 10
        volumeDevices: []
        volumeMounts:
        - mountPath: /tmp
          name: tmp
        - mountPath: /opt/sas/viya/config/tmp
          name: tmp
        - mountPath: /security
          name: security
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/cacerts
          name: security
          subPath: cacerts
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/private
          name: security
          subPath: private
      hostAliases: []
      imagePullSecrets:
      - name: sas-image-pull-secrets-4m8cc729k8
      initContainers:
      - env:
        - name: KUBE_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: SAS_CERTFRAME_TOKEN_DIR
          value: /certframe-token
        - name: SAS_ADDITIONAL_CA_CERTIFICATES_DIR
          value: /customer-provided-ca-certificates
        envFrom:
        - configMapRef:
            name: sas-certframe-ingress-certificate-config-cmm2t44t88
        - configMapRef:
            name: sas-certframe-user-config-c4ch2c59m7
        - configMapRef:
            name: sas-certframe-java-config-gf4kt94898
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-certframe:3.9.0-20201203.1607016443086
        name: sas-certframe
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /certframe-token
          name: certframe-token
        - mountPath: /security
          name: security
        - mountPath: /customer-provided-ca-certificates
          name: customer-provided-ca-certificates
      readinessGates: []
      securityContext:
        runAsNonRoot: true
        supplementalGroups: []
        sysctls: []
      tolerations:
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateful
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateless
      volumes:
      - name: certframe-token
        secret:
          secretName: sas-certframe-token
      - emptyDir: {}
        name: security
      - configMap:
          name: sas-customer-provided-ca-certificates-29kdmk686c
        name: customer-provided-ca-certificates
      - emptyDir: {}
        name: tmp
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sas.com/certificate-file-format: pem
    sas.com/component-name: sas-annotations
    sas.com/component-version: 2.9.0-20201208.1607439456307
    sas.com/kustomize-base: golang
    sas.com/pod-uses-db-migrator: "true"
    sas.com/pod-uses-liveness-probe: http
    sas.com/pod-uses-readiness-probe: http
    sas.com/pod-uses-startup-probe: http
    sas.com/version: 2.9.0
    sidecar.istio.io/proxyCPU: 15m
    sidecar.istio.io/proxyMemory: 115Mi
  labels:
    app.kubernetes.io/name: sas-annotations
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
    sas.com/deployment-base: golang
    workload.sas.com/class: stateless
  name: sas-annotations
  namespace: franceavv
spec:
  selector:
    matchExpressions: []
    matchLabels:
      app.kubernetes.io/name: sas-annotations
      sas.com/deployment: sas-viya
  template:
    metadata:
      annotations:
        prometheus.io/path: /internal/metrics
        prometheus.io/port: "8080"
        prometheus.io/scheme: https
        prometheus.io/scrape: "true"
        sas.com/certificate-file-format: pem
        sas.com/component-name: sas-annotations
        sas.com/component-version: 2.9.0-20201208.1607439456307
        sas.com/kustomize-base: golang
        sas.com/pod-uses-liveness-probe: http
        sas.com/pod-uses-readiness-probe: http
        sas.com/pod-uses-startup-probe: http
        sas.com/tls-enabled-ports: all
        sas.com/version: 2.9.0
        seccomp.security.alpha.kubernetes.io/pod: runtime/default
        sidecar.istio.io/proxyCPU: 15m
        sidecar.istio.io/proxyMemory: 115Mi
      labels:
        app: sas-annotations
        app.kubernetes.io/name: sas-annotations
        sas.com/deployment: sas-viya
        workload.sas.com/class: stateless
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: In
                values:
                - stateless
              matchFields: []
            weight: 100
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: NotIn
                values:
                - compute
                - cas
                - stateful
                - connect
              matchFields: []
            weight: 50
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.azure.com/mode
                operator: NotIn
                values:
                - system
              matchFields: []
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - sas-annotations
              namespaces: []
              topologyKey: kubernetes.io/hostname
            weight: 100
          requiredDuringSchedulingIgnoredDuringExecution: []
      automountServiceAccountToken: false
      containers:
      - args: null
        command: null
        env:
        - name: SAS_K8S_DEPLOYMENT_NAME
          value: sas-annotations
        envFrom:
        - configMapRef:
            name: sas-go-config-7hc79bmf8m
        - configMapRef:
            name: sas-shared-config-49d8hthtb5
        - secretRef:
            name: sas-consul-client
        - configMapRef:
            name: sas-tls-config-99f79t29t5
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-annotations:2.9.0-20201208.1607439456307
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - sh
              - -c
              - sleep 5
        livenessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http
            scheme: HTTPS
          periodSeconds: 10
        name: sas-annotations
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/ready
            port: http
            scheme: HTTPS
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add: []
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        startupProbe:
          failureThreshold: 180
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http
            scheme: HTTPS
          periodSeconds: 10
        volumeDevices: []
        volumeMounts:
        - mountPath: /tmp
          name: tmp
        - mountPath: /security
          name: security
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/cacerts
          name: security
          subPath: cacerts
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/private
          name: security
          subPath: private
      hostAliases: []
      imagePullSecrets:
      - name: sas-image-pull-secrets-4m8cc729k8
      initContainers:
      - env:
        - name: KUBE_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: SAS_CERTFRAME_TOKEN_DIR
          value: /certframe-token
        - name: SAS_ADDITIONAL_CA_CERTIFICATES_DIR
          value: /customer-provided-ca-certificates
        envFrom:
        - configMapRef:
            name: sas-certframe-ingress-certificate-config-cmm2t44t88
        - configMapRef:
            name: sas-certframe-user-config-c4ch2c59m7
        - configMapRef:
            name: sas-certframe-config-ctgg29gf7t
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-certframe:3.9.0-20201203.1607016443086
        name: sas-certframe
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /certframe-token
          name: certframe-token
        - mountPath: /security
          name: security
        - mountPath: /customer-provided-ca-certificates
          name: customer-provided-ca-certificates
      - args:
        - cp -rf meta /data
        command:
        - /bin/sh
        - -c
        env: []
        envFrom: []
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-annotations:2.9.0-20201208.1607439456307
        imagePullPolicy: IfNotPresent
        name: hydrator
        ports: []
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 75m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add: []
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeDevices: []
        volumeMounts:
        - mountPath: /data
          name: shared-vol
      - args: null
        command: null
        env:
        - name: SSL_CERT_FILE
          value: /security/trustedcerts.pem
        - name: SAS_SERVICE_NAME
          value: sas-annotations
        envFrom:
        - configMapRef:
            name: sas-go-config-7hc79bmf8m
        - configMapRef:
            name: sas-shared-config-49d8hthtb5
        - configMapRef:
            name: sas-java-config-t7t5thbgkd
        - secretRef:
            name: sas-consul-client
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-db-migrator:1.1.0-20201209.1607523698073
        imagePullPolicy: IfNotPresent
        name: sas-db-migrator
        ports: []
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 100m
            memory: 90Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add: []
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeDevices: []
        volumeMounts:
        - mountPath: /security
          name: security
        - mountPath: /data
          name: shared-vol
      readinessGates: []
      securityContext:
        runAsNonRoot: true
        supplementalGroups: []
        sysctls: []
      tolerations:
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateful
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateless
      volumes:
      - name: certframe-token
        secret:
          secretName: sas-certframe-token
      - emptyDir: {}
        name: security
      - configMap:
          name: sas-customer-provided-ca-certificates-29kdmk686c
        name: customer-provided-ca-certificates
      - emptyDir: {}
        name: tmp
      - emptyDir: {}
        name: shared-vol
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sas.com/certificate-file-format: pem
    sas.com/component-name: sas-app-registry
    sas.com/component-version: 1.50.0-20201202.1606937218076
    sas.com/kustomize-base: golang
    sas.com/pod-uses-db-migrator: "true"
    sas.com/pod-uses-liveness-probe: http
    sas.com/pod-uses-readiness-probe: http
    sas.com/pod-uses-startup-probe: http
    sas.com/version: 1.50.0
    sidecar.istio.io/proxyCPU: 15m
    sidecar.istio.io/proxyMemory: 115Mi
  labels:
    app.kubernetes.io/name: sas-app-registry
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
    sas.com/deployment-base: golang
    workload.sas.com/class: stateless
  name: sas-app-registry
  namespace: franceavv
spec:
  selector:
    matchExpressions: []
    matchLabels:
      app.kubernetes.io/name: sas-app-registry
      sas.com/deployment: sas-viya
  template:
    metadata:
      annotations:
        prometheus.io/path: /internal/metrics
        prometheus.io/port: "8080"
        prometheus.io/scheme: https
        prometheus.io/scrape: "true"
        sas.com/certificate-file-format: pem
        sas.com/component-name: sas-app-registry
        sas.com/component-version: 1.50.0-20201202.1606937218076
        sas.com/kustomize-base: golang
        sas.com/pod-uses-liveness-probe: http
        sas.com/pod-uses-readiness-probe: http
        sas.com/pod-uses-startup-probe: http
        sas.com/tls-enabled-ports: all
        sas.com/version: 1.50.0
        seccomp.security.alpha.kubernetes.io/pod: runtime/default
        sidecar.istio.io/proxyCPU: 15m
        sidecar.istio.io/proxyMemory: 115Mi
      labels:
        app: sas-app-registry
        app.kubernetes.io/name: sas-app-registry
        sas.com/deployment: sas-viya
        workload.sas.com/class: stateless
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: In
                values:
                - stateless
              matchFields: []
            weight: 100
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: NotIn
                values:
                - compute
                - cas
                - stateful
                - connect
              matchFields: []
            weight: 50
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.azure.com/mode
                operator: NotIn
                values:
                - system
              matchFields: []
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - sas-app-registry
              namespaces: []
              topologyKey: kubernetes.io/hostname
            weight: 100
          requiredDuringSchedulingIgnoredDuringExecution: []
      automountServiceAccountToken: false
      containers:
      - args: null
        command: null
        env:
        - name: SAS_K8S_DEPLOYMENT_NAME
          value: sas-app-registry
        - name: SAS_CADENCE_NAME
          valueFrom:
            configMapKeyRef:
              key: SAS_CADENCE_NAME
              name: sas-deployment-metadata-t4927tg597
        - name: SAS_CADENCE_VERSION
          valueFrom:
            configMapKeyRef:
              key: SAS_CADENCE_VERSION
              name: sas-deployment-metadata-t4927tg597
        - name: SAS_CADENCE_RELEASE
          valueFrom:
            configMapKeyRef:
              key: SAS_CADENCE_RELEASE
              name: sas-deployment-metadata-t4927tg597
        envFrom:
        - configMapRef:
            name: sas-go-config-7hc79bmf8m
        - configMapRef:
            name: sas-shared-config-49d8hthtb5
        - secretRef:
            name: sas-consul-client
        - configMapRef:
            name: sas-tls-config-99f79t29t5
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-app-registry:1.50.0-20201202.1606937218076
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - sh
              - -c
              - sleep 5
        livenessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http
            scheme: HTTPS
          periodSeconds: 10
        name: sas-app-registry
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/ready
            port: http
            scheme: HTTPS
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add: []
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        startupProbe:
          failureThreshold: 180
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http
            scheme: HTTPS
          periodSeconds: 10
        volumeDevices: []
        volumeMounts:
        - mountPath: /tmp
          name: tmp
        - mountPath: /security
          name: security
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/cacerts
          name: security
          subPath: cacerts
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/private
          name: security
          subPath: private
      hostAliases: []
      imagePullSecrets:
      - name: sas-image-pull-secrets-4m8cc729k8
      initContainers:
      - env:
        - name: KUBE_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: SAS_CERTFRAME_TOKEN_DIR
          value: /certframe-token
        - name: SAS_ADDITIONAL_CA_CERTIFICATES_DIR
          value: /customer-provided-ca-certificates
        envFrom:
        - configMapRef:
            name: sas-certframe-ingress-certificate-config-cmm2t44t88
        - configMapRef:
            name: sas-certframe-user-config-c4ch2c59m7
        - configMapRef:
            name: sas-certframe-config-ctgg29gf7t
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-certframe:3.9.0-20201203.1607016443086
        name: sas-certframe
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /certframe-token
          name: certframe-token
        - mountPath: /security
          name: security
        - mountPath: /customer-provided-ca-certificates
          name: customer-provided-ca-certificates
      - args:
        - cp -rf meta /data
        command:
        - /bin/sh
        - -c
        env: []
        envFrom: []
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-app-registry:1.50.0-20201202.1606937218076
        imagePullPolicy: IfNotPresent
        name: hydrator
        ports: []
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 75m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add: []
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeDevices: []
        volumeMounts:
        - mountPath: /data
          name: shared-vol
      - args: null
        command: null
        env:
        - name: SSL_CERT_FILE
          value: /security/trustedcerts.pem
        - name: SAS_SERVICE_NAME
          value: sas-app-registry
        envFrom:
        - configMapRef:
            name: sas-go-config-7hc79bmf8m
        - configMapRef:
            name: sas-shared-config-49d8hthtb5
        - configMapRef:
            name: sas-java-config-t7t5thbgkd
        - secretRef:
            name: sas-consul-client
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-db-migrator:1.1.0-20201209.1607523698073
        imagePullPolicy: IfNotPresent
        name: sas-db-migrator
        ports: []
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 100m
            memory: 90Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add: []
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeDevices: []
        volumeMounts:
        - mountPath: /security
          name: security
        - mountPath: /data
          name: shared-vol
      readinessGates: []
      securityContext:
        runAsNonRoot: true
        supplementalGroups: []
        sysctls: []
      tolerations:
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateful
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateless
      volumes:
      - name: certframe-token
        secret:
          secretName: sas-certframe-token
      - emptyDir: {}
        name: security
      - configMap:
          name: sas-customer-provided-ca-certificates-29kdmk686c
        name: customer-provided-ca-certificates
      - emptyDir: {}
        name: tmp
      - emptyDir: {}
        name: shared-vol
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sas.com/certificate-file-format: pem
    sas.com/component-name: sas-arke
    sas.com/component-version: 1.4.0-20201211.1607698571564
    sas.com/kustomize-base: golang
    sas.com/pod-uses-liveness-probe: exec
    sas.com/pod-uses-readiness-probe: exec
    sas.com/version: 1.4.0
    sidecar.istio.io/proxyCPU: 15m
    sidecar.istio.io/proxyMemory: 115Mi
  labels:
    app.kubernetes.io/name: sas-arke
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
    sas.com/deployment-base: golang
    workload.sas.com/class: stateless
  name: sas-arke
  namespace: franceavv
spec:
  selector:
    matchExpressions: []
    matchLabels:
      app.kubernetes.io/name: sas-arke
      sas.com/deployment: sas-viya
  template:
    metadata:
      annotations:
        prometheus.io/path: /metrics
        prometheus.io/port: "50551"
        prometheus.io/scheme: https
        prometheus.io/scrape: "true"
        sas.com/certificate-file-format: pem
        sas.com/component-name: sas-arke
        sas.com/component-version: 1.4.0-20201211.1607698571564
        sas.com/kustomize-base: golang
        sas.com/pod-uses-liveness-probe: exec
        sas.com/pod-uses-readiness-probe: exec
        sas.com/tls-enabled-ports: all
        sas.com/version: 1.4.0
        seccomp.security.alpha.kubernetes.io/pod: runtime/default
        sidecar.istio.io/proxyCPU: 15m
        sidecar.istio.io/proxyMemory: 115Mi
      labels:
        app: sas-arke
        app.kubernetes.io/name: sas-arke
        sas.com/deployment: sas-viya
        workload.sas.com/class: stateless
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: In
                values:
                - stateless
              matchFields: []
            weight: 100
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: NotIn
                values:
                - compute
                - cas
                - stateful
                - connect
              matchFields: []
            weight: 50
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.azure.com/mode
                operator: NotIn
                values:
                - system
              matchFields: []
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - sas-arke
              namespaces: []
              topologyKey: kubernetes.io/hostname
            weight: 100
          requiredDuringSchedulingIgnoredDuringExecution: []
      automountServiceAccountToken: false
      containers:
      - args: null
        command: null
        env:
        - name: SAS_K8S_DEPLOYMENT_NAME
          value: sas-arke
        envFrom:
        - configMapRef:
            name: sas-go-config-7hc79bmf8m
        - configMapRef:
            name: sas-shared-config-49d8hthtb5
        - secretRef:
            name: sas-consul-client
        - configMapRef:
            name: sas-tls-config-99f79t29t5
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-arke:1.4.0-20201211.1607698571564
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - sh
              - -c
              - sleep 5
        livenessProbe:
          exec:
            command:
            - /opt/sas/viya/home/bin/sas-arke-probe
          initialDelaySeconds: 5
          periodSeconds: 30
          timeoutSeconds: 10
        name: sas-arke
        ports:
        - containerPort: 50051
          name: tcp
          protocol: TCP
        readinessProbe:
          exec:
            command:
            - /opt/sas/viya/home/bin/sas-arke-probe
          initialDelaySeconds: 5
          timeoutSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add: []
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeDevices: []
        volumeMounts:
        - mountPath: /tmp
          name: tmp
        - mountPath: /security
          name: security
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/cacerts
          name: security
          subPath: cacerts
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/private
          name: security
          subPath: private
      hostAliases: []
      imagePullSecrets:
      - name: sas-image-pull-secrets-4m8cc729k8
      initContainers:
      - env:
        - name: KUBE_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: SAS_CERTFRAME_TOKEN_DIR
          value: /certframe-token
        - name: SAS_ADDITIONAL_CA_CERTIFICATES_DIR
          value: /customer-provided-ca-certificates
        envFrom:
        - configMapRef:
            name: sas-certframe-ingress-certificate-config-cmm2t44t88
        - configMapRef:
            name: sas-certframe-user-config-c4ch2c59m7
        - configMapRef:
            name: sas-certframe-config-ctgg29gf7t
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-certframe:3.9.0-20201203.1607016443086
        name: sas-certframe
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /certframe-token
          name: certframe-token
        - mountPath: /security
          name: security
        - mountPath: /customer-provided-ca-certificates
          name: customer-provided-ca-certificates
      readinessGates: []
      securityContext:
        runAsNonRoot: true
        supplementalGroups: []
        sysctls: []
      tolerations:
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateful
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateless
      volumes:
      - name: certframe-token
        secret:
          secretName: sas-certframe-token
      - emptyDir: {}
        name: security
      - configMap:
          name: sas-customer-provided-ca-certificates-29kdmk686c
        name: customer-provided-ca-certificates
      - emptyDir: {}
        name: tmp
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sas.com/certificate-file-format: pem
    sas.com/component-name: sas-audit
    sas.com/component-version: 1.58.1-20201207.1607355915596
    sas.com/kustomize-base: golang
    sas.com/pod-uses-db-migrator: "true"
    sas.com/pod-uses-liveness-probe: http
    sas.com/pod-uses-readiness-probe: http
    sas.com/pod-uses-startup-probe: http
    sas.com/version: 1.58.1
    sidecar.istio.io/proxyCPU: 15m
    sidecar.istio.io/proxyMemory: 115Mi
  labels:
    app.kubernetes.io/name: sas-audit
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
    sas.com/deployment-base: golang
    workload.sas.com/class: stateless
  name: sas-audit
  namespace: franceavv
spec:
  selector:
    matchExpressions: []
    matchLabels:
      app.kubernetes.io/name: sas-audit
      sas.com/deployment: sas-viya
  template:
    metadata:
      annotations:
        prometheus.io/path: /internal/metrics
        prometheus.io/port: "8080"
        prometheus.io/scheme: https
        prometheus.io/scrape: "true"
        sas.com/certificate-file-format: pem
        sas.com/component-name: sas-audit
        sas.com/component-version: 1.58.1-20201207.1607355915596
        sas.com/kustomize-base: golang
        sas.com/pod-uses-liveness-probe: http
        sas.com/pod-uses-readiness-probe: http
        sas.com/pod-uses-startup-probe: http
        sas.com/tls-enabled-ports: all
        sas.com/version: 1.58.1
        seccomp.security.alpha.kubernetes.io/pod: runtime/default
        sidecar.istio.io/proxyCPU: 15m
        sidecar.istio.io/proxyMemory: 115Mi
      labels:
        app: sas-audit
        app.kubernetes.io/name: sas-audit
        sas.com/deployment: sas-viya
        workload.sas.com/class: stateless
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: In
                values:
                - stateless
              matchFields: []
            weight: 100
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: NotIn
                values:
                - compute
                - cas
                - stateful
                - connect
              matchFields: []
            weight: 50
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.azure.com/mode
                operator: NotIn
                values:
                - system
              matchFields: []
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - sas-audit
              namespaces: []
              topologyKey: kubernetes.io/hostname
            weight: 100
          requiredDuringSchedulingIgnoredDuringExecution: []
      automountServiceAccountToken: false
      containers:
      - args: null
        command: null
        env:
        - name: SAS_K8S_DEPLOYMENT_NAME
          value: sas-audit
        envFrom:
        - configMapRef:
            name: sas-go-config-7hc79bmf8m
        - configMapRef:
            name: sas-shared-config-49d8hthtb5
        - secretRef:
            name: sas-consul-client
        - configMapRef:
            name: sas-tls-config-99f79t29t5
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-audit:1.58.1-20201207.1607355915596
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - sh
              - -c
              - sleep 5
        livenessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http
            scheme: HTTPS
          periodSeconds: 10
        name: sas-audit
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/ready
            port: http
            scheme: HTTPS
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add: []
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        startupProbe:
          failureThreshold: 180
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http
            scheme: HTTPS
          periodSeconds: 10
        volumeDevices: []
        volumeMounts:
        - mountPath: /tmp
          name: tmp
        - mountPath: /security
          name: security
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/cacerts
          name: security
          subPath: cacerts
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/private
          name: security
          subPath: private
      hostAliases: []
      imagePullSecrets:
      - name: sas-image-pull-secrets-4m8cc729k8
      initContainers:
      - env:
        - name: KUBE_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: SAS_CERTFRAME_TOKEN_DIR
          value: /certframe-token
        - name: SAS_ADDITIONAL_CA_CERTIFICATES_DIR
          value: /customer-provided-ca-certificates
        envFrom:
        - configMapRef:
            name: sas-certframe-ingress-certificate-config-cmm2t44t88
        - configMapRef:
            name: sas-certframe-user-config-c4ch2c59m7
        - configMapRef:
            name: sas-certframe-config-ctgg29gf7t
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-certframe:3.9.0-20201203.1607016443086
        name: sas-certframe
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /certframe-token
          name: certframe-token
        - mountPath: /security
          name: security
        - mountPath: /customer-provided-ca-certificates
          name: customer-provided-ca-certificates
      - args:
        - cp -rf meta /data
        command:
        - /bin/sh
        - -c
        env: []
        envFrom: []
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-audit:1.58.1-20201207.1607355915596
        imagePullPolicy: IfNotPresent
        name: hydrator
        ports: []
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 75m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add: []
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeDevices: []
        volumeMounts:
        - mountPath: /data
          name: shared-vol
      - args: null
        command: null
        env:
        - name: SSL_CERT_FILE
          value: /security/trustedcerts.pem
        - name: SAS_SERVICE_NAME
          value: sas-audit
        envFrom:
        - configMapRef:
            name: sas-go-config-7hc79bmf8m
        - configMapRef:
            name: sas-shared-config-49d8hthtb5
        - configMapRef:
            name: sas-java-config-t7t5thbgkd
        - secretRef:
            name: sas-consul-client
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-db-migrator:1.1.0-20201209.1607523698073
        imagePullPolicy: IfNotPresent
        name: sas-db-migrator
        ports: []
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 100m
            memory: 90Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add: []
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeDevices: []
        volumeMounts:
        - mountPath: /security
          name: security
        - mountPath: /data
          name: shared-vol
      readinessGates: []
      securityContext:
        runAsNonRoot: true
        supplementalGroups: []
        sysctls: []
      tolerations:
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateful
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateless
      volumes:
      - name: certframe-token
        secret:
          secretName: sas-certframe-token
      - emptyDir: {}
        name: security
      - configMap:
          name: sas-customer-provided-ca-certificates-29kdmk686c
        name: customer-provided-ca-certificates
      - emptyDir: {}
        name: tmp
      - emptyDir: {}
        name: shared-vol
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sas.com/certificate-file-format: jks
    sas.com/component-name: sas-authorization
    sas.com/component-version: 3.32.14-20201204.1607098698544
    sas.com/kustomize-base: spring
    sas.com/pod-uses-liveness-probe: http
    sas.com/pod-uses-readiness-probe: http
    sas.com/pod-uses-startup-probe: http
    sas.com/version: 3.32.14
    sidecar.istio.io/proxyCPU: 15m
    sidecar.istio.io/proxyMemory: 115Mi
  labels:
    app.kubernetes.io/name: sas-authorization
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
    sas.com/deployment-base: spring
    workload.sas.com/class: stateless
  name: sas-authorization
  namespace: franceavv
spec:
  selector:
    matchExpressions: []
    matchLabels:
      app.kubernetes.io/name: sas-authorization
      sas.com/deployment: sas-viya
  template:
    metadata:
      annotations:
        prometheus.io/path: /internal/metrics
        prometheus.io/port: "10445"
        prometheus.io/scheme: https
        prometheus.io/scrape: "true"
        sas.com/certificate-file-format: jks
        sas.com/component-name: sas-authorization
        sas.com/component-version: 3.32.14-20201204.1607098698544
        sas.com/kustomize-base: spring
        sas.com/pod-uses-liveness-probe: http
        sas.com/pod-uses-readiness-probe: http
        sas.com/pod-uses-startup-probe: http
        sas.com/tls-enabled-ports: all
        sas.com/version: 3.32.14
        seccomp.security.alpha.kubernetes.io/pod: runtime/default
        sidecar.istio.io/proxyCPU: 15m
        sidecar.istio.io/proxyMemory: 115Mi
      labels:
        app: sas-authorization
        app.kubernetes.io/name: sas-authorization
        sas.com/deployment: sas-viya
        workload.sas.com/class: stateless
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: In
                values:
                - stateless
              matchFields: []
            weight: 100
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: NotIn
                values:
                - compute
                - cas
                - stateful
                - connect
              matchFields: []
            weight: 50
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.azure.com/mode
                operator: NotIn
                values:
                - system
              matchFields: []
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - sas-authorization
              namespaces: []
              topologyKey: kubernetes.io/hostname
            weight: 100
          requiredDuringSchedulingIgnoredDuringExecution: []
      automountServiceAccountToken: false
      containers:
      - args: null
        command: null
        env:
        - name: SAS_K8S_DEPLOYMENT_NAME
          value: sas-authorization
        envFrom:
        - configMapRef:
            name: sas-java-config-t7t5thbgkd
        - configMapRef:
            name: sas-shared-config-49d8hthtb5
        - secretRef:
            name: sas-consul-client
        - configMapRef:
            name: sas-spring-management-config-d64bbkhb97
        - configMapRef:
            name: sas-java-tls-config-fch4777298
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-authorization:3.32.14-20201204.1607098698544
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - sh
              - -c
              - sleep 5
        livenessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http-internal
            scheme: HTTPS
          periodSeconds: 10
        name: sas-authorization
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        - containerPort: 10445
          name: http-internal
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/ready
            port: http-internal
            scheme: HTTPS
          periodSeconds: 10
        resources:
          limits:
            cpu: 2000m
            memory: 1Gi
          requests:
            cpu: 50m
            memory: 687Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add: []
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        startupProbe:
          failureThreshold: 180
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http-internal
            scheme: HTTPS
          initialDelaySeconds: 20
          periodSeconds: 10
        volumeDevices: []
        volumeMounts:
        - mountPath: /tmp
          name: tmp
        - mountPath: /opt/sas/viya/config/tmp
          name: tmp
        - mountPath: /security
          name: security
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/cacerts
          name: security
          subPath: cacerts
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/private
          name: security
          subPath: private
      hostAliases: []
      imagePullSecrets:
      - name: sas-image-pull-secrets-4m8cc729k8
      initContainers:
      - env:
        - name: KUBE_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: SAS_CERTFRAME_TOKEN_DIR
          value: /certframe-token
        - name: SAS_ADDITIONAL_CA_CERTIFICATES_DIR
          value: /customer-provided-ca-certificates
        envFrom:
        - configMapRef:
            name: sas-certframe-ingress-certificate-config-cmm2t44t88
        - configMapRef:
            name: sas-certframe-user-config-c4ch2c59m7
        - configMapRef:
            name: sas-certframe-java-config-gf4kt94898
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-certframe:3.9.0-20201203.1607016443086
        name: sas-certframe
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /certframe-token
          name: certframe-token
        - mountPath: /security
          name: security
        - mountPath: /customer-provided-ca-certificates
          name: customer-provided-ca-certificates
      readinessGates: []
      securityContext:
        runAsNonRoot: true
        supplementalGroups: []
        sysctls: []
      tolerations:
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateful
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateless
      volumes:
      - name: certframe-token
        secret:
          secretName: sas-certframe-token
      - emptyDir: {}
        name: security
      - configMap:
          name: sas-customer-provided-ca-certificates-29kdmk686c
        name: customer-provided-ca-certificates
      - emptyDir: {}
        name: tmp
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sas.com/certificate-file-format: pem
    sas.com/component-name: sas-batch
    sas.com/component-version: 1.4.0-20201214.1607958362320
    sas.com/kustomize-base: golang
    sas.com/pod-uses-db-migrator: "true"
    sas.com/pod-uses-liveness-probe: http
    sas.com/pod-uses-readiness-probe: http
    sas.com/pod-uses-startup-probe: http
    sas.com/version: 1.4.0
    sidecar.istio.io/proxyCPU: 15m
    sidecar.istio.io/proxyMemory: 115Mi
  labels:
    app.kubernetes.io/name: sas-batch
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
    sas.com/deployment-base: golang
    workload.sas.com/class: stateless
  name: sas-batch
  namespace: franceavv
spec:
  selector:
    matchExpressions: []
    matchLabels:
      app.kubernetes.io/name: sas-batch
      sas.com/deployment: sas-viya
  template:
    metadata:
      annotations:
        prometheus.io/path: /internal/metrics
        prometheus.io/port: "8080"
        prometheus.io/scheme: https
        prometheus.io/scrape: "true"
        sas.com/certificate-file-format: pem
        sas.com/component-name: sas-batch
        sas.com/component-version: 1.4.0-20201214.1607958362320
        sas.com/kustomize-base: golang
        sas.com/pod-uses-liveness-probe: http
        sas.com/pod-uses-readiness-probe: http
        sas.com/pod-uses-startup-probe: http
        sas.com/tls-enabled-ports: all
        sas.com/version: 1.4.0
        seccomp.security.alpha.kubernetes.io/pod: runtime/default
        sidecar.istio.io/proxyCPU: 15m
        sidecar.istio.io/proxyMemory: 115Mi
      labels:
        app: sas-batch
        app.kubernetes.io/name: sas-batch
        sas.com/deployment: sas-viya
        workload.sas.com/class: stateless
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: In
                values:
                - stateless
              matchFields: []
            weight: 100
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: NotIn
                values:
                - compute
                - cas
                - stateful
                - connect
              matchFields: []
            weight: 50
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.azure.com/mode
                operator: NotIn
                values:
                - system
              matchFields: []
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - sas-batch
              namespaces: []
              topologyKey: kubernetes.io/hostname
            weight: 100
          requiredDuringSchedulingIgnoredDuringExecution: []
      automountServiceAccountToken: false
      containers:
      - args: null
        command: null
        env:
        - name: SAS_K8S_DEPLOYMENT_NAME
          value: sas-batch
        envFrom:
        - configMapRef:
            name: sas-go-config-7hc79bmf8m
        - configMapRef:
            name: sas-shared-config-49d8hthtb5
        - secretRef:
            name: sas-consul-client
        - configMapRef:
            name: sas-tls-config-99f79t29t5
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-batch:1.4.0-20201214.1607958362320
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - sh
              - -c
              - sleep 5
        livenessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http
            scheme: HTTPS
          periodSeconds: 10
        name: sas-batch
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/ready
            port: http
            scheme: HTTPS
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add: []
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        startupProbe:
          failureThreshold: 180
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http
            scheme: HTTPS
          periodSeconds: 10
        volumeDevices: []
        volumeMounts:
        - mountPath: /tmp
          name: tmp
        - mountPath: /security
          name: security
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/cacerts
          name: security
          subPath: cacerts
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/private
          name: security
          subPath: private
      hostAliases: []
      imagePullSecrets:
      - name: sas-image-pull-secrets-4m8cc729k8
      initContainers:
      - env:
        - name: KUBE_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: SAS_CERTFRAME_TOKEN_DIR
          value: /certframe-token
        - name: SAS_ADDITIONAL_CA_CERTIFICATES_DIR
          value: /customer-provided-ca-certificates
        envFrom:
        - configMapRef:
            name: sas-certframe-ingress-certificate-config-cmm2t44t88
        - configMapRef:
            name: sas-certframe-user-config-c4ch2c59m7
        - configMapRef:
            name: sas-certframe-config-ctgg29gf7t
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-certframe:3.9.0-20201203.1607016443086
        name: sas-certframe
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /certframe-token
          name: certframe-token
        - mountPath: /security
          name: security
        - mountPath: /customer-provided-ca-certificates
          name: customer-provided-ca-certificates
      - args:
        - cp -rf meta /data
        command:
        - /bin/sh
        - -c
        env: []
        envFrom: []
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-batch:1.4.0-20201214.1607958362320
        imagePullPolicy: IfNotPresent
        name: hydrator
        ports: []
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 75m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add: []
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeDevices: []
        volumeMounts:
        - mountPath: /data
          name: shared-vol
      - args: null
        command: null
        env:
        - name: SSL_CERT_FILE
          value: /security/trustedcerts.pem
        - name: SAS_SERVICE_NAME
          value: sas-batch
        envFrom:
        - configMapRef:
            name: sas-go-config-7hc79bmf8m
        - configMapRef:
            name: sas-shared-config-49d8hthtb5
        - configMapRef:
            name: sas-java-config-t7t5thbgkd
        - secretRef:
            name: sas-consul-client
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-db-migrator:1.1.0-20201209.1607523698073
        imagePullPolicy: IfNotPresent
        name: sas-db-migrator
        ports: []
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 100m
            memory: 90Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add: []
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeDevices: []
        volumeMounts:
        - mountPath: /security
          name: security
        - mountPath: /data
          name: shared-vol
      readinessGates: []
      securityContext:
        runAsNonRoot: true
        supplementalGroups: []
        sysctls: []
      tolerations:
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateful
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateless
      volumes:
      - name: certframe-token
        secret:
          secretName: sas-certframe-token
      - emptyDir: {}
        name: security
      - configMap:
          name: sas-customer-provided-ca-certificates-29kdmk686c
        name: customer-provided-ca-certificates
      - emptyDir: {}
        name: tmp
      - emptyDir: {}
        name: shared-vol
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sas.com/certificate-file-format: jks
    sas.com/component-name: sas-business-rules-services
    sas.com/component-version: 3.9.15-20201210.1607644432623
    sas.com/kustomize-base: spring
    sas.com/pod-uses-liveness-probe: http
    sas.com/pod-uses-readiness-probe: http
    sas.com/pod-uses-startup-probe: http
    sas.com/version: 3.9.15
    sidecar.istio.io/proxyCPU: 15m
    sidecar.istio.io/proxyMemory: 115Mi
  labels:
    app.kubernetes.io/name: sas-business-rules-services
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
    sas.com/deployment-base: spring
    workload.sas.com/class: stateless
  name: sas-business-rules-services
  namespace: franceavv
spec:
  selector:
    matchExpressions: []
    matchLabels:
      app.kubernetes.io/name: sas-business-rules-services
      sas.com/deployment: sas-viya
  template:
    metadata:
      annotations:
        prometheus.io/path: /internal/metrics
        prometheus.io/port: "10445"
        prometheus.io/scheme: https
        prometheus.io/scrape: "true"
        sas.com/certificate-file-format: jks
        sas.com/component-name: sas-business-rules-services
        sas.com/component-version: 3.9.15-20201210.1607644432623
        sas.com/kustomize-base: spring
        sas.com/pod-uses-liveness-probe: http
        sas.com/pod-uses-readiness-probe: http
        sas.com/pod-uses-startup-probe: http
        sas.com/tls-enabled-ports: all
        sas.com/version: 3.9.15
        seccomp.security.alpha.kubernetes.io/pod: runtime/default
        sidecar.istio.io/proxyCPU: 15m
        sidecar.istio.io/proxyMemory: 115Mi
      labels:
        app: sas-business-rules-services
        app.kubernetes.io/name: sas-business-rules-services
        sas.com/deployment: sas-viya
        workload.sas.com/class: stateless
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: In
                values:
                - stateless
              matchFields: []
            weight: 100
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: NotIn
                values:
                - compute
                - cas
                - stateful
                - connect
              matchFields: []
            weight: 50
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.azure.com/mode
                operator: NotIn
                values:
                - system
              matchFields: []
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - sas-business-rules-services
              namespaces: []
              topologyKey: kubernetes.io/hostname
            weight: 100
          requiredDuringSchedulingIgnoredDuringExecution: []
      automountServiceAccountToken: false
      containers:
      - args: null
        command: null
        env:
        - name: SAS_K8S_DEPLOYMENT_NAME
          value: sas-business-rules-services
        - name: JAVA_OPTION_SERVER_PORT
        - name: MANAGEMENT_SERVER_PORT
          value: ${sas.${spring.application.name}.management.server.port:10445}
        envFrom:
        - configMapRef:
            name: sas-java-config-t7t5thbgkd
        - configMapRef:
            name: sas-shared-config-49d8hthtb5
        - secretRef:
            name: sas-consul-client
        - configMapRef:
            name: sas-spring-management-config-d64bbkhb97
        - configMapRef:
            name: sas-java-tls-config-fch4777298
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-business-rules-services:3.9.15-20201210.1607644432623
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - sh
              - -c
              - sleep 5
        livenessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http-internal
            scheme: HTTPS
          periodSeconds: 10
        name: sas-business-rules-services
        ports:
        - containerPort: 10445
          name: http-internal
          protocol: TCP
        - containerPort: 8081
          name: businessrules
          protocol: TCP
        - containerPort: 8082
          name: referencedata
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/ready
            port: http-internal
            scheme: HTTPS
          periodSeconds: 10
        resources:
          limits:
            cpu: 2000m
            memory: 1Gi
          requests:
            cpu: 50m
            memory: 650M
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add: []
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        startupProbe:
          failureThreshold: 180
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http-internal
            scheme: HTTPS
          initialDelaySeconds: 20
          periodSeconds: 10
        volumeDevices: []
        volumeMounts:
        - mountPath: /tmp
          name: tmp
        - mountPath: /opt/sas/viya/config/tmp
          name: tmp
        - mountPath: /security
          name: security
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/cacerts
          name: security
          subPath: cacerts
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/private
          name: security
          subPath: private
      hostAliases: []
      imagePullSecrets:
      - name: sas-image-pull-secrets-4m8cc729k8
      initContainers:
      - env:
        - name: KUBE_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: SAS_CERTFRAME_TOKEN_DIR
          value: /certframe-token
        - name: SAS_ADDITIONAL_CA_CERTIFICATES_DIR
          value: /customer-provided-ca-certificates
        envFrom:
        - configMapRef:
            name: sas-certframe-ingress-certificate-config-cmm2t44t88
        - configMapRef:
            name: sas-certframe-user-config-c4ch2c59m7
        - configMapRef:
            name: sas-certframe-java-config-gf4kt94898
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-certframe:3.9.0-20201203.1607016443086
        name: sas-certframe
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /certframe-token
          name: certframe-token
        - mountPath: /security
          name: security
        - mountPath: /customer-provided-ca-certificates
          name: customer-provided-ca-certificates
      readinessGates: []
      securityContext:
        runAsNonRoot: true
        supplementalGroups: []
        sysctls: []
      tolerations:
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateful
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateless
      volumes:
      - name: certframe-token
        secret:
          secretName: sas-certframe-token
      - emptyDir: {}
        name: security
      - configMap:
          name: sas-customer-provided-ca-certificates-29kdmk686c
        name: customer-provided-ca-certificates
      - emptyDir: {}
        name: tmp
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sas.com/certificate-file-format: jks
    sas.com/component-name: sas-cas-administration
    sas.com/component-version: 1.28.1-20201209.1607532545693
    sas.com/kustomize-base: spring
    sas.com/pod-uses-liveness-probe: http
    sas.com/pod-uses-readiness-probe: http
    sas.com/pod-uses-startup-probe: http
    sas.com/version: 1.28.1
    sidecar.istio.io/proxyCPU: 15m
    sidecar.istio.io/proxyMemory: 115Mi
  labels:
    app.kubernetes.io/name: sas-cas-administration
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
    sas.com/deployment-base: spring
    workload.sas.com/class: stateless
  name: sas-cas-administration
  namespace: franceavv
spec:
  selector:
    matchExpressions: []
    matchLabels:
      app.kubernetes.io/name: sas-cas-administration
      sas.com/deployment: sas-viya
  template:
    metadata:
      annotations:
        prometheus.io/path: /internal/metrics
        prometheus.io/port: "10445"
        prometheus.io/scheme: https
        prometheus.io/scrape: "true"
        sas.com/certificate-file-format: jks
        sas.com/component-name: sas-cas-administration
        sas.com/component-version: 1.28.1-20201209.1607532545693
        sas.com/kustomize-base: spring
        sas.com/pod-uses-liveness-probe: http
        sas.com/pod-uses-readiness-probe: http
        sas.com/pod-uses-startup-probe: http
        sas.com/tls-enabled-ports: all
        sas.com/version: 1.28.1
        seccomp.security.alpha.kubernetes.io/pod: runtime/default
        sidecar.istio.io/proxyCPU: 15m
        sidecar.istio.io/proxyMemory: 115Mi
      labels:
        app: sas-cas-administration
        app.kubernetes.io/name: sas-cas-administration
        sas.com/deployment: sas-viya
        workload.sas.com/class: stateless
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: In
                values:
                - stateless
              matchFields: []
            weight: 100
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: NotIn
                values:
                - compute
                - cas
                - stateful
                - connect
              matchFields: []
            weight: 50
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.azure.com/mode
                operator: NotIn
                values:
                - system
              matchFields: []
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - sas-cas-administration
              namespaces: []
              topologyKey: kubernetes.io/hostname
            weight: 100
          requiredDuringSchedulingIgnoredDuringExecution: []
      automountServiceAccountToken: false
      containers:
      - args: null
        command: null
        env:
        - name: SAS_K8S_DEPLOYMENT_NAME
          value: sas-cas-administration
        - name: JAVA_OPTION_SERVER_PORT
        - name: MANAGEMENT_SERVER_PORT
          value: ${sas.${spring.application.name}.management.server.port:10445}
        envFrom:
        - configMapRef:
            name: sas-java-config-t7t5thbgkd
        - configMapRef:
            name: sas-shared-config-49d8hthtb5
        - secretRef:
            name: sas-consul-client
        - configMapRef:
            name: sas-spring-management-config-d64bbkhb97
        - configMapRef:
            name: sas-java-tls-config-fch4777298
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-cas-administration:1.28.1-20201209.1607532545693
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - sh
              - -c
              - sleep 5
        livenessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http-internal
            scheme: HTTPS
          periodSeconds: 10
        name: sas-cas-administration
        ports:
        - containerPort: 10445
          name: http-internal
          protocol: TCP
        - containerPort: 8081
          name: casproxy
          protocol: TCP
        - containerPort: 8082
          name: casmanagement
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/ready
            port: http-internal
            scheme: HTTPS
          periodSeconds: 10
        resources:
          limits:
            cpu: 2000m
            memory: 1Gi
          requests:
            cpu: 50m
            memory: 650M
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add: []
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        startupProbe:
          failureThreshold: 180
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http-internal
            scheme: HTTPS
          initialDelaySeconds: 20
          periodSeconds: 10
        volumeDevices: []
        volumeMounts:
        - mountPath: /tmp
          name: tmp
        - mountPath: /opt/sas/viya/config/tmp
          name: tmp
        - mountPath: /security
          name: security
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/cacerts
          name: security
          subPath: cacerts
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/private
          name: security
          subPath: private
      hostAliases: []
      imagePullSecrets:
      - name: sas-image-pull-secrets-4m8cc729k8
      initContainers:
      - env:
        - name: KUBE_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: SAS_CERTFRAME_TOKEN_DIR
          value: /certframe-token
        - name: SAS_ADDITIONAL_CA_CERTIFICATES_DIR
          value: /customer-provided-ca-certificates
        envFrom:
        - configMapRef:
            name: sas-certframe-ingress-certificate-config-cmm2t44t88
        - configMapRef:
            name: sas-certframe-user-config-c4ch2c59m7
        - configMapRef:
            name: sas-certframe-java-config-gf4kt94898
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-certframe:3.9.0-20201203.1607016443086
        name: sas-certframe
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /certframe-token
          name: certframe-token
        - mountPath: /security
          name: security
        - mountPath: /customer-provided-ca-certificates
          name: customer-provided-ca-certificates
      readinessGates: []
      securityContext:
        runAsNonRoot: true
        supplementalGroups: []
        sysctls: []
      tolerations:
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateful
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateless
      volumes:
      - name: certframe-token
        secret:
          secretName: sas-certframe-token
      - emptyDir: {}
        name: security
      - configMap:
          name: sas-customer-provided-ca-certificates-29kdmk686c
        name: customer-provided-ca-certificates
      - emptyDir: {}
        name: tmp
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sas.com/certificate-file-format: pem
    sas.com/component-name: sas-cas-control
    sas.com/component-version: 2.3.6-20201210.1607621490977
    sas.com/kustomize-base: golang
    sas.com/pod-uses-liveness-probe: http
    sas.com/pod-uses-readiness-probe: http
    sas.com/pod-uses-startup-probe: http
    sas.com/version: 2.3.6
    sidecar.istio.io/proxyCPU: 15m
    sidecar.istio.io/proxyMemory: 115Mi
  labels:
    app.kubernetes.io/name: sas-cas-control
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
    sas.com/deployment-base: golang
    workload.sas.com/class: stateless
  name: sas-cas-control
  namespace: franceavv
spec:
  selector:
    matchExpressions: []
    matchLabels:
      app.kubernetes.io/name: sas-cas-control
      sas.com/deployment: sas-viya
  template:
    metadata:
      annotations:
        prometheus.io/path: /internal/metrics
        prometheus.io/port: "8080"
        prometheus.io/scheme: https
        prometheus.io/scrape: "true"
        sas.com/certificate-file-format: pem
        sas.com/component-name: sas-cas-control
        sas.com/component-version: 2.3.6-20201210.1607621490977
        sas.com/kustomize-base: golang
        sas.com/pod-uses-liveness-probe: http
        sas.com/pod-uses-readiness-probe: http
        sas.com/pod-uses-startup-probe: http
        sas.com/tls-enabled-ports: all
        sas.com/version: 2.3.6
        seccomp.security.alpha.kubernetes.io/pod: runtime/default
        sidecar.istio.io/proxyCPU: 15m
        sidecar.istio.io/proxyMemory: 115Mi
      labels:
        app: sas-cas-control
        app.kubernetes.io/name: sas-cas-control
        sas.com/deployment: sas-viya
        workload.sas.com/class: stateless
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: In
                values:
                - stateless
              matchFields: []
            weight: 100
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: NotIn
                values:
                - compute
                - cas
                - stateful
                - connect
              matchFields: []
            weight: 50
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.azure.com/mode
                operator: NotIn
                values:
                - system
              matchFields: []
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - sas-cas-control
              namespaces: []
              topologyKey: kubernetes.io/hostname
            weight: 100
          requiredDuringSchedulingIgnoredDuringExecution: []
      automountServiceAccountToken: false
      containers:
      - args: null
        command: null
        env:
        - name: SAS_K8S_DEPLOYMENT_NAME
          value: sas-cas-control
        envFrom:
        - configMapRef:
            name: sas-go-config-7hc79bmf8m
        - configMapRef:
            name: sas-shared-config-49d8hthtb5
        - secretRef:
            name: sas-consul-client
        - configMapRef:
            name: sas-tls-config-99f79t29t5
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-cas-control:2.3.6-20201210.1607621490977
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - sh
              - -c
              - sleep 5
        livenessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http
            scheme: HTTPS
          periodSeconds: 10
        name: sas-cas-control
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/ready
            port: http
            scheme: HTTPS
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add: []
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        startupProbe:
          failureThreshold: 180
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http
            scheme: HTTPS
          periodSeconds: 10
        volumeDevices: []
        volumeMounts:
        - mountPath: /tmp
          name: tmp
        - mountPath: /security
          name: security
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/cacerts
          name: security
          subPath: cacerts
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/private
          name: security
          subPath: private
      hostAliases: []
      imagePullSecrets:
      - name: sas-image-pull-secrets-4m8cc729k8
      initContainers:
      - env:
        - name: KUBE_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: SAS_CERTFRAME_TOKEN_DIR
          value: /certframe-token
        - name: SAS_ADDITIONAL_CA_CERTIFICATES_DIR
          value: /customer-provided-ca-certificates
        envFrom:
        - configMapRef:
            name: sas-certframe-ingress-certificate-config-cmm2t44t88
        - configMapRef:
            name: sas-certframe-user-config-c4ch2c59m7
        - configMapRef:
            name: sas-certframe-config-ctgg29gf7t
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-certframe:3.9.0-20201203.1607016443086
        name: sas-certframe
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /certframe-token
          name: certframe-token
        - mountPath: /security
          name: security
        - mountPath: /customer-provided-ca-certificates
          name: customer-provided-ca-certificates
      readinessGates: []
      securityContext:
        runAsNonRoot: true
        supplementalGroups: []
        sysctls: []
      tolerations:
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateful
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateless
      volumes:
      - name: certframe-token
        secret:
          secretName: sas-certframe-token
      - emptyDir: {}
        name: security
      - configMap:
          name: sas-customer-provided-ca-certificates-29kdmk686c
        name: customer-provided-ca-certificates
      - emptyDir: {}
        name: tmp
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sas.com/certificate-file-format: pem
    sas.com/component-name: sas-cas-operator
    sas.com/component-version: 2.8.2-20201119.1605811301533
    sas.com/kustomize-base: golang
    sas.com/version: 2.8.2
    sidecar.istio.io/proxyCPU: 15m
    sidecar.istio.io/proxyMemory: 115Mi
  labels:
    app.kubernetes.io/name: sas-cas-operator
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
    sas.com/deployment-base: golang
    sas.com/zero-scale-phase: "1"
    workload.sas.com/class: stateless
  name: sas-cas-operator
  namespace: franceavv
spec:
  replicas: 1
  selector:
    matchExpressions: []
    matchLabels:
      name: sas-cas-operator
      sas.com/deployment: sas-viya
  template:
    metadata:
      annotations:
        prometheus.io/path: /metrics
        prometheus.io/port: "8383"
        prometheus.io/scheme: https
        prometheus.io/scrape: "true"
        sas.com/certificate-file-format: pem
        sas.com/component-name: sas-cas-operator
        sas.com/component-version: 2.8.2-20201119.1605811301533
        sas.com/kustomize-base: golang
        sas.com/tls-enabled-ports: all
        sas.com/version: 2.8.2
        sidecar.istio.io/inject: "false"
        sidecar.istio.io/proxyCPU: 15m
        sidecar.istio.io/proxyMemory: 115Mi
      labels:
        app: sas-cas-operator
        app.kubernetes.io/name: sas-cas-operator
        name: sas-cas-operator
        sas.com/deployment: sas-viya
        workload.sas.com/class: stateless
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: In
                values:
                - stateless
              matchFields: []
            weight: 100
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: NotIn
                values:
                - compute
                - cas
                - stateful
                - connect
              matchFields: []
            weight: 50
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.azure.com/mode
                operator: NotIn
                values:
                - system
              matchFields: []
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - sas-cas-operator
              namespaces: []
              topologyKey: kubernetes.io/hostname
            weight: 100
          requiredDuringSchedulingIgnoredDuringExecution: []
      automountServiceAccountToken: true
      containers:
      - args: null
        command:
        - /opt/sas/viya/home/bin/cas
        env:
        - name: SAS_LICENSE
          valueFrom:
            secretKeyRef:
              key: SAS_LICENSE
              name: sas-license-mg9k2t69t7
        - name: WATCH_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: OPERATOR_NAME
          value: sas-cas-operator
        envFrom:
        - configMapRef:
            name: sas-go-config-7hc79bmf8m
        - configMapRef:
            name: sas-shared-config-49d8hthtb5
        - secretRef:
            name: sas-consul-client
        - configMapRef:
            name: sas-tls-config-99f79t29t5
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-cas-operator:2.8.2-20201119.1605811301533
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - sh
              - -c
              - sleep 5
        name: sas-cas-operator
        ports: []
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          privileged: false
          readOnlyRootFilesystem: true
        volumeDevices: []
        volumeMounts:
        - mountPath: /tmp
          name: tmp
        - mountPath: /security
          name: security
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/cacerts
          name: security
          subPath: cacerts
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/private
          name: security
          subPath: private
      hostAliases: []
      imagePullSecrets:
      - name: sas-image-pull-secrets-4m8cc729k8
      initContainers:
      - env:
        - name: KUBE_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: SAS_CERTFRAME_TOKEN_DIR
          value: /certframe-token
        - name: SAS_ADDITIONAL_CA_CERTIFICATES_DIR
          value: /customer-provided-ca-certificates
        envFrom:
        - configMapRef:
            name: sas-certframe-ingress-certificate-config-cmm2t44t88
        - configMapRef:
            name: sas-certframe-user-config-c4ch2c59m7
        - configMapRef:
            name: sas-certframe-config-ctgg29gf7t
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-certframe:3.9.0-20201203.1607016443086
        name: sas-certframe
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /certframe-token
          name: certframe-token
        - mountPath: /security
          name: security
        - mountPath: /customer-provided-ca-certificates
          name: customer-provided-ca-certificates
      readinessGates: []
      securityContext:
        runAsNonRoot: true
        supplementalGroups: []
        sysctls: []
      serviceAccountName: sas-cas-operator
      tolerations:
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateful
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateless
      volumes:
      - name: certframe-token
        secret:
          secretName: sas-certframe-token
      - emptyDir: {}
        name: security
      - configMap:
          name: sas-customer-provided-ca-certificates-29kdmk686c
        name: customer-provided-ca-certificates
      - emptyDir: {}
        name: tmp
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sas.com/certificate-file-format: pem
    sas.com/component-name: sas-code-debugger
    sas.com/component-version: 2.1.5-20201202.1606941614459
    sas.com/kustomize-base: golang
    sas.com/pod-uses-liveness-probe: http
    sas.com/pod-uses-readiness-probe: http
    sas.com/pod-uses-startup-probe: http
    sas.com/version: 2.1.5
    sidecar.istio.io/proxyCPU: 15m
    sidecar.istio.io/proxyMemory: 115Mi
  labels:
    app.kubernetes.io/name: sas-code-debugger
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
    sas.com/deployment-base: golang
    workload.sas.com/class: stateless
  name: sas-code-debugger
  namespace: franceavv
spec:
  selector:
    matchExpressions: []
    matchLabels:
      app.kubernetes.io/name: sas-code-debugger
      sas.com/deployment: sas-viya
  template:
    metadata:
      annotations:
        prometheus.io/path: /internal/metrics
        prometheus.io/port: "8080"
        prometheus.io/scheme: https
        prometheus.io/scrape: "true"
        sas.com/certificate-file-format: pem
        sas.com/component-name: sas-code-debugger
        sas.com/component-version: 2.1.5-20201202.1606941614459
        sas.com/kustomize-base: golang
        sas.com/pod-uses-liveness-probe: http
        sas.com/pod-uses-readiness-probe: http
        sas.com/pod-uses-startup-probe: http
        sas.com/tls-enabled-ports: all
        sas.com/version: 2.1.5
        seccomp.security.alpha.kubernetes.io/pod: runtime/default
        sidecar.istio.io/proxyCPU: 15m
        sidecar.istio.io/proxyMemory: 115Mi
      labels:
        app: sas-code-debugger
        app.kubernetes.io/name: sas-code-debugger
        sas.com/deployment: sas-viya
        workload.sas.com/class: stateless
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: In
                values:
                - stateless
              matchFields: []
            weight: 100
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: NotIn
                values:
                - compute
                - cas
                - stateful
                - connect
              matchFields: []
            weight: 50
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.azure.com/mode
                operator: NotIn
                values:
                - system
              matchFields: []
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - sas-code-debugger
              namespaces: []
              topologyKey: kubernetes.io/hostname
            weight: 100
          requiredDuringSchedulingIgnoredDuringExecution: []
      automountServiceAccountToken: false
      containers:
      - args: null
        command: null
        env:
        - name: SAS_K8S_DEPLOYMENT_NAME
          value: sas-code-debugger
        envFrom:
        - configMapRef:
            name: sas-go-config-7hc79bmf8m
        - configMapRef:
            name: sas-shared-config-49d8hthtb5
        - secretRef:
            name: sas-consul-client
        - configMapRef:
            name: sas-tls-config-99f79t29t5
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-code-debugger:2.1.5-20201202.1606941614459
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - sh
              - -c
              - sleep 5
        livenessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http
            scheme: HTTPS
          periodSeconds: 10
        name: sas-code-debugger
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/ready
            port: http
            scheme: HTTPS
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add: []
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        startupProbe:
          failureThreshold: 180
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http
            scheme: HTTPS
          periodSeconds: 10
        volumeDevices: []
        volumeMounts:
        - mountPath: /tmp
          name: tmp
        - mountPath: /security
          name: security
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/cacerts
          name: security
          subPath: cacerts
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/private
          name: security
          subPath: private
      hostAliases: []
      imagePullSecrets:
      - name: sas-image-pull-secrets-4m8cc729k8
      initContainers:
      - env:
        - name: KUBE_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: SAS_CERTFRAME_TOKEN_DIR
          value: /certframe-token
        - name: SAS_ADDITIONAL_CA_CERTIFICATES_DIR
          value: /customer-provided-ca-certificates
        envFrom:
        - configMapRef:
            name: sas-certframe-ingress-certificate-config-cmm2t44t88
        - configMapRef:
            name: sas-certframe-user-config-c4ch2c59m7
        - configMapRef:
            name: sas-certframe-config-ctgg29gf7t
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-certframe:3.9.0-20201203.1607016443086
        name: sas-certframe
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /certframe-token
          name: certframe-token
        - mountPath: /security
          name: security
        - mountPath: /customer-provided-ca-certificates
          name: customer-provided-ca-certificates
      readinessGates: []
      securityContext:
        runAsNonRoot: true
        supplementalGroups: []
        sysctls: []
      tolerations:
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateful
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateless
      volumes:
      - name: certframe-token
        secret:
          secretName: sas-certframe-token
      - emptyDir: {}
        name: security
      - configMap:
          name: sas-customer-provided-ca-certificates-29kdmk686c
        name: customer-provided-ca-certificates
      - emptyDir: {}
        name: tmp
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sas.com/certificate-file-format: pem
    sas.com/component-name: sas-code-debugger-app
    sas.com/component-version: 2.2.5-20201211.1607719641413
    sas.com/kustomize-base: golang
    sas.com/pod-uses-readiness-probe: http
    sas.com/version: 2.2.5
    sidecar.istio.io/proxyCPU: 15m
    sidecar.istio.io/proxyMemory: 115Mi
  labels:
    app.kubernetes.io/name: sas-code-debugger-app
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
    sas.com/deployment-base: golang
    workload.sas.com/class: stateless
  name: sas-code-debugger-app
  namespace: franceavv
spec:
  selector:
    matchExpressions: []
    matchLabels:
      app.kubernetes.io/name: sas-code-debugger-app
      sas.com/deployment: sas-viya
  template:
    metadata:
      annotations:
        prometheus.io/path: /internal/metrics
        prometheus.io/port: "8080"
        prometheus.io/scheme: https
        prometheus.io/scrape: "true"
        sas.com/certificate-file-format: pem
        sas.com/component-name: sas-code-debugger-app
        sas.com/component-version: 2.2.5-20201211.1607719641413
        sas.com/kustomize-base: golang
        sas.com/pod-uses-readiness-probe: http
        sas.com/tls-enabled-ports: all
        sas.com/version: 2.2.5
        seccomp.security.alpha.kubernetes.io/pod: runtime/default
        sidecar.istio.io/proxyCPU: 15m
        sidecar.istio.io/proxyMemory: 115Mi
      labels:
        app: sas-code-debugger-app
        app.kubernetes.io/name: sas-code-debugger-app
        sas.com/deployment: sas-viya
        workload.sas.com/class: stateless
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: In
                values:
                - stateless
              matchFields: []
            weight: 100
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: NotIn
                values:
                - compute
                - cas
                - stateful
                - connect
              matchFields: []
            weight: 50
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.azure.com/mode
                operator: NotIn
                values:
                - system
              matchFields: []
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - sas-code-debugger-app
              namespaces: []
              topologyKey: kubernetes.io/hostname
            weight: 100
          requiredDuringSchedulingIgnoredDuringExecution: []
      automountServiceAccountToken: true
      containers:
      - args: null
        command: null
        env:
        - name: SAS_K8S_DEPLOYMENT_NAME
          value: sas-code-debugger-app
        envFrom:
        - configMapRef:
            name: sas-go-config-7hc79bmf8m
        - configMapRef:
            name: sas-shared-config-49d8hthtb5
        - secretRef:
            name: sas-consul-client
        - configMapRef:
            name: sas-tls-config-99f79t29t5
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-code-debugger-app:2.2.5-20201211.1607719641413
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - sh
              - -c
              - sleep 5
        livenessProbe:
          exec:
            command:
            - /opt/sas/viya/home/bin/sas-liveness-tool
            - -manifest-file
            - /opt/sas/viya/home/share/sas-code-debugger-app/run-manifest.json
        name: sas-code-debugger-app
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          httpGet:
            httpHeaders: []
            path: /internal/ready
            port: http
            scheme: HTTPS
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add: []
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeDevices: []
        volumeMounts:
        - mountPath: /tmp
          name: tmp
        - mountPath: /security
          name: security
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/cacerts
          name: security
          subPath: cacerts
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/private
          name: security
          subPath: private
      hostAliases: []
      imagePullSecrets:
      - name: sas-image-pull-secrets-4m8cc729k8
      initContainers:
      - env:
        - name: KUBE_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: SAS_CERTFRAME_TOKEN_DIR
          value: /certframe-token
        - name: SAS_ADDITIONAL_CA_CERTIFICATES_DIR
          value: /customer-provided-ca-certificates
        envFrom:
        - configMapRef:
            name: sas-certframe-ingress-certificate-config-cmm2t44t88
        - configMapRef:
            name: sas-certframe-user-config-c4ch2c59m7
        - configMapRef:
            name: sas-certframe-config-ctgg29gf7t
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-certframe:3.9.0-20201203.1607016443086
        name: sas-certframe
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /certframe-token
          name: certframe-token
        - mountPath: /security
          name: security
        - mountPath: /customer-provided-ca-certificates
          name: customer-provided-ca-certificates
      readinessGates: []
      securityContext:
        runAsNonRoot: true
        supplementalGroups: []
        sysctls: []
      tolerations:
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateful
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateless
      volumes:
      - name: certframe-token
        secret:
          secretName: sas-certframe-token
      - emptyDir: {}
        name: security
      - configMap:
          name: sas-customer-provided-ca-certificates-29kdmk686c
        name: customer-provided-ca-certificates
      - emptyDir: {}
        name: tmp
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sas.com/certificate-file-format: pem
    sas.com/component-name: sas-comments
    sas.com/component-version: 2.56.0-20201207.1607337374651
    sas.com/kustomize-base: golang
    sas.com/pod-uses-db-migrator: "true"
    sas.com/pod-uses-liveness-probe: http
    sas.com/pod-uses-readiness-probe: http
    sas.com/pod-uses-startup-probe: http
    sas.com/version: 2.56.0
    sidecar.istio.io/proxyCPU: 15m
    sidecar.istio.io/proxyMemory: 115Mi
  labels:
    app.kubernetes.io/name: sas-comments
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
    sas.com/deployment-base: golang
    workload.sas.com/class: stateless
  name: sas-comments
  namespace: franceavv
spec:
  selector:
    matchExpressions: []
    matchLabels:
      app.kubernetes.io/name: sas-comments
      sas.com/deployment: sas-viya
  template:
    metadata:
      annotations:
        prometheus.io/path: /internal/metrics
        prometheus.io/port: "8080"
        prometheus.io/scheme: https
        prometheus.io/scrape: "true"
        sas.com/certificate-file-format: pem
        sas.com/component-name: sas-comments
        sas.com/component-version: 2.56.0-20201207.1607337374651
        sas.com/kustomize-base: golang
        sas.com/pod-uses-liveness-probe: http
        sas.com/pod-uses-readiness-probe: http
        sas.com/pod-uses-startup-probe: http
        sas.com/tls-enabled-ports: all
        sas.com/version: 2.56.0
        seccomp.security.alpha.kubernetes.io/pod: runtime/default
        sidecar.istio.io/proxyCPU: 15m
        sidecar.istio.io/proxyMemory: 115Mi
      labels:
        app: sas-comments
        app.kubernetes.io/name: sas-comments
        sas.com/deployment: sas-viya
        workload.sas.com/class: stateless
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: In
                values:
                - stateless
              matchFields: []
            weight: 100
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: NotIn
                values:
                - compute
                - cas
                - stateful
                - connect
              matchFields: []
            weight: 50
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.azure.com/mode
                operator: NotIn
                values:
                - system
              matchFields: []
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - sas-comments
              namespaces: []
              topologyKey: kubernetes.io/hostname
            weight: 100
          requiredDuringSchedulingIgnoredDuringExecution: []
      automountServiceAccountToken: false
      containers:
      - args: null
        command: null
        env:
        - name: SAS_K8S_DEPLOYMENT_NAME
          value: sas-comments
        envFrom:
        - configMapRef:
            name: sas-go-config-7hc79bmf8m
        - configMapRef:
            name: sas-shared-config-49d8hthtb5
        - secretRef:
            name: sas-consul-client
        - configMapRef:
            name: sas-tls-config-99f79t29t5
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-comments:2.56.0-20201207.1607337374651
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - sh
              - -c
              - sleep 5
        livenessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http
            scheme: HTTPS
          periodSeconds: 10
        name: sas-comments
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/ready
            port: http
            scheme: HTTPS
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add: []
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        startupProbe:
          failureThreshold: 180
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http
            scheme: HTTPS
          periodSeconds: 10
        volumeDevices: []
        volumeMounts:
        - mountPath: /tmp
          name: tmp
        - mountPath: /security
          name: security
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/cacerts
          name: security
          subPath: cacerts
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/private
          name: security
          subPath: private
      hostAliases: []
      imagePullSecrets:
      - name: sas-image-pull-secrets-4m8cc729k8
      initContainers:
      - env:
        - name: KUBE_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: SAS_CERTFRAME_TOKEN_DIR
          value: /certframe-token
        - name: SAS_ADDITIONAL_CA_CERTIFICATES_DIR
          value: /customer-provided-ca-certificates
        envFrom:
        - configMapRef:
            name: sas-certframe-ingress-certificate-config-cmm2t44t88
        - configMapRef:
            name: sas-certframe-user-config-c4ch2c59m7
        - configMapRef:
            name: sas-certframe-config-ctgg29gf7t
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-certframe:3.9.0-20201203.1607016443086
        name: sas-certframe
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /certframe-token
          name: certframe-token
        - mountPath: /security
          name: security
        - mountPath: /customer-provided-ca-certificates
          name: customer-provided-ca-certificates
      - args:
        - cp -rf meta /data
        command:
        - /bin/sh
        - -c
        env: []
        envFrom: []
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-comments:2.56.0-20201207.1607337374651
        imagePullPolicy: IfNotPresent
        name: hydrator
        ports: []
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 75m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add: []
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeDevices: []
        volumeMounts:
        - mountPath: /data
          name: shared-vol
      - args: null
        command: null
        env:
        - name: SSL_CERT_FILE
          value: /security/trustedcerts.pem
        - name: SAS_SERVICE_NAME
          value: sas-comments
        envFrom:
        - configMapRef:
            name: sas-go-config-7hc79bmf8m
        - configMapRef:
            name: sas-shared-config-49d8hthtb5
        - configMapRef:
            name: sas-java-config-t7t5thbgkd
        - secretRef:
            name: sas-consul-client
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-db-migrator:1.1.0-20201209.1607523698073
        imagePullPolicy: IfNotPresent
        name: sas-db-migrator
        ports: []
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 100m
            memory: 90Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add: []
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeDevices: []
        volumeMounts:
        - mountPath: /security
          name: security
        - mountPath: /data
          name: shared-vol
      readinessGates: []
      securityContext:
        runAsNonRoot: true
        supplementalGroups: []
        sysctls: []
      tolerations:
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateful
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateless
      volumes:
      - name: certframe-token
        secret:
          secretName: sas-certframe-token
      - emptyDir: {}
        name: security
      - configMap:
          name: sas-customer-provided-ca-certificates-29kdmk686c
        name: customer-provided-ca-certificates
      - emptyDir: {}
        name: tmp
      - emptyDir: {}
        name: shared-vol
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sas.com/certificate-file-format: jks
    sas.com/component-name: sas-compute
    sas.com/component-version: 1.9.21-20201214.1607967809598
    sas.com/kustomize-base: spring
    sas.com/pod-uses-liveness-probe: http
    sas.com/pod-uses-readiness-probe: http
    sas.com/pod-uses-startup-probe: http
    sas.com/version: 1.9.21
    sidecar.istio.io/proxyCPU: 15m
    sidecar.istio.io/proxyMemory: 115Mi
  labels:
    app.kubernetes.io/name: sas-compute
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
    sas.com/deployment-base: spring
    workload.sas.com/class: stateless
  name: sas-compute
  namespace: franceavv
spec:
  selector:
    matchExpressions: []
    matchLabels:
      app.kubernetes.io/name: sas-compute
      sas.com/deployment: sas-viya
  template:
    metadata:
      annotations:
        prometheus.io/path: /internal/metrics
        prometheus.io/port: "10445"
        prometheus.io/scheme: https
        prometheus.io/scrape: "true"
        sas.com/certificate-file-format: jks
        sas.com/component-name: sas-compute
        sas.com/component-version: 1.9.21-20201214.1607967809598
        sas.com/kustomize-base: spring
        sas.com/pod-uses-liveness-probe: http
        sas.com/pod-uses-readiness-probe: http
        sas.com/pod-uses-startup-probe: http
        sas.com/tls-enabled-ports: all
        sas.com/version: 1.9.21
        seccomp.security.alpha.kubernetes.io/pod: runtime/default
        sidecar.istio.io/proxyCPU: 15m
        sidecar.istio.io/proxyMemory: 115Mi
      labels:
        app: sas-compute
        app.kubernetes.io/name: sas-compute
        sas.com/deployment: sas-viya
        workload.sas.com/class: stateless
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: In
                values:
                - stateless
              matchFields: []
            weight: 100
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: NotIn
                values:
                - compute
                - cas
                - stateful
                - connect
              matchFields: []
            weight: 50
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.azure.com/mode
                operator: NotIn
                values:
                - system
              matchFields: []
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - sas-compute
              namespaces: []
              topologyKey: kubernetes.io/hostname
            weight: 100
          requiredDuringSchedulingIgnoredDuringExecution: []
      automountServiceAccountToken: false
      containers:
      - args: null
        command: null
        env:
        - name: SAS_K8S_DEPLOYMENT_NAME
          value: sas-compute
        envFrom:
        - configMapRef:
            name: sas-java-config-t7t5thbgkd
        - configMapRef:
            name: sas-shared-config-49d8hthtb5
        - secretRef:
            name: sas-consul-client
        - configMapRef:
            name: sas-spring-management-config-d64bbkhb97
        - configMapRef:
            name: sas-java-tls-config-fch4777298
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-compute:1.9.21-20201214.1607967809598
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - sh
              - -c
              - sleep 5
        livenessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http-internal
            scheme: HTTPS
          periodSeconds: 10
        name: sas-compute
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        - containerPort: 10445
          name: http-internal
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/ready
            port: http-internal
            scheme: HTTPS
          periodSeconds: 10
        resources:
          limits:
            cpu: 2000m
            memory: 1Gi
          requests:
            cpu: 50m
            memory: 650M
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add: []
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        startupProbe:
          failureThreshold: 180
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http-internal
            scheme: HTTPS
          initialDelaySeconds: 20
          periodSeconds: 10
        volumeDevices: []
        volumeMounts:
        - mountPath: /tmp
          name: tmp
        - mountPath: /opt/sas/viya/config/tmp
          name: tmp
        - mountPath: /security
          name: security
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/cacerts
          name: security
          subPath: cacerts
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/private
          name: security
          subPath: private
      hostAliases: []
      imagePullSecrets:
      - name: sas-image-pull-secrets-4m8cc729k8
      initContainers:
      - env:
        - name: KUBE_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: SAS_CERTFRAME_TOKEN_DIR
          value: /certframe-token
        - name: SAS_ADDITIONAL_CA_CERTIFICATES_DIR
          value: /customer-provided-ca-certificates
        envFrom:
        - configMapRef:
            name: sas-certframe-ingress-certificate-config-cmm2t44t88
        - configMapRef:
            name: sas-certframe-user-config-c4ch2c59m7
        - configMapRef:
            name: sas-certframe-java-config-gf4kt94898
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-certframe:3.9.0-20201203.1607016443086
        name: sas-certframe
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /certframe-token
          name: certframe-token
        - mountPath: /security
          name: security
        - mountPath: /customer-provided-ca-certificates
          name: customer-provided-ca-certificates
      readinessGates: []
      securityContext:
        runAsNonRoot: true
        supplementalGroups: []
        sysctls: []
      tolerations:
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateful
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateless
      volumes:
      - name: certframe-token
        secret:
          secretName: sas-certframe-token
      - emptyDir: {}
        name: security
      - configMap:
          name: sas-customer-provided-ca-certificates-29kdmk686c
        name: customer-provided-ca-certificates
      - emptyDir: {}
        name: tmp
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sas.com/certificate-file-format: pem
    sas.com/component-name: sas-config-reconciler
    sas.com/component-version: 1.3.0-20201203.1607001188766
    sas.com/kustomize-base: golang
    sas.com/pod-uses-liveness-probe: http
    sas.com/pod-uses-readiness-probe: http
    sas.com/pod-uses-startup-probe: http
    sas.com/version: 1.3.0
    sidecar.istio.io/proxyCPU: 15m
    sidecar.istio.io/proxyMemory: 115Mi
  labels:
    app.kubernetes.io/name: sas-config-reconciler
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
    sas.com/deployment-base: golang
    workload.sas.com/class: stateless
  name: sas-config-reconciler
  namespace: franceavv
spec:
  selector:
    matchExpressions: []
    matchLabels:
      app.kubernetes.io/name: sas-config-reconciler
      sas.com/deployment: sas-viya
  template:
    metadata:
      annotations:
        prometheus.io/path: /internal/metrics
        prometheus.io/port: "8080"
        prometheus.io/scheme: https
        prometheus.io/scrape: "true"
        sas.com/certificate-file-format: pem
        sas.com/component-name: sas-config-reconciler
        sas.com/component-version: 1.3.0-20201203.1607001188766
        sas.com/kustomize-base: golang
        sas.com/pod-uses-liveness-probe: http
        sas.com/pod-uses-readiness-probe: http
        sas.com/pod-uses-startup-probe: http
        sas.com/tls-enabled-ports: all
        sas.com/version: 1.3.0
        seccomp.security.alpha.kubernetes.io/pod: runtime/default
        sidecar.istio.io/proxyCPU: 15m
        sidecar.istio.io/proxyMemory: 115Mi
      labels:
        app: sas-config-reconciler
        app.kubernetes.io/name: sas-config-reconciler
        sas.com/deployment: sas-viya
        workload.sas.com/class: stateless
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: In
                values:
                - stateless
              matchFields: []
            weight: 100
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: NotIn
                values:
                - compute
                - cas
                - stateful
                - connect
              matchFields: []
            weight: 50
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.azure.com/mode
                operator: NotIn
                values:
                - system
              matchFields: []
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - sas-config-reconciler
              namespaces: []
              topologyKey: kubernetes.io/hostname
            weight: 100
          requiredDuringSchedulingIgnoredDuringExecution: []
      automountServiceAccountToken: true
      containers:
      - args: null
        command: null
        env:
        - name: SAS_K8S_DEPLOYMENT_NAME
          value: sas-config-reconciler
        - name: SAS_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        envFrom:
        - configMapRef:
            name: sas-go-config-7hc79bmf8m
        - configMapRef:
            name: sas-shared-config-49d8hthtb5
        - secretRef:
            name: sas-consul-client
        - configMapRef:
            name: sas-tls-config-99f79t29t5
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-config-reconciler:1.3.0-20201203.1607001188766
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - sh
              - -c
              - sleep 5
        livenessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http
            scheme: HTTPS
          periodSeconds: 10
        name: sas-config-reconciler
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/ready
            port: http
            scheme: HTTPS
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add: []
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        startupProbe:
          failureThreshold: 180
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http
            scheme: HTTPS
          periodSeconds: 10
        volumeDevices: []
        volumeMounts:
        - mountPath: /tmp
          name: tmp
        - mountPath: /security
          name: security
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/cacerts
          name: security
          subPath: cacerts
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/private
          name: security
          subPath: private
      hostAliases: []
      imagePullSecrets:
      - name: sas-image-pull-secrets-4m8cc729k8
      initContainers:
      - env:
        - name: KUBE_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: SAS_CERTFRAME_TOKEN_DIR
          value: /certframe-token
        - name: SAS_ADDITIONAL_CA_CERTIFICATES_DIR
          value: /customer-provided-ca-certificates
        envFrom:
        - configMapRef:
            name: sas-certframe-ingress-certificate-config-cmm2t44t88
        - configMapRef:
            name: sas-certframe-user-config-c4ch2c59m7
        - configMapRef:
            name: sas-certframe-config-ctgg29gf7t
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-certframe:3.9.0-20201203.1607016443086
        name: sas-certframe
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /certframe-token
          name: certframe-token
        - mountPath: /security
          name: security
        - mountPath: /customer-provided-ca-certificates
          name: customer-provided-ca-certificates
      readinessGates: []
      securityContext:
        runAsNonRoot: true
        supplementalGroups: []
        sysctls: []
      serviceAccountName: sas-config-reconciler
      tolerations:
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateful
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateless
      volumes:
      - name: certframe-token
        secret:
          secretName: sas-certframe-token
      - emptyDir: {}
        name: security
      - configMap:
          name: sas-customer-provided-ca-certificates-29kdmk686c
        name: customer-provided-ca-certificates
      - emptyDir: {}
        name: tmp
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sas.com/certificate-file-format: jks
    sas.com/component-name: sas-configuration
    sas.com/component-version: 1.59.3-20201204.1607052795259
    sas.com/kustomize-base: spring
    sas.com/pod-uses-liveness-probe: http
    sas.com/pod-uses-readiness-probe: http
    sas.com/pod-uses-startup-probe: http
    sas.com/version: 1.59.3
    sidecar.istio.io/proxyCPU: 15m
    sidecar.istio.io/proxyMemory: 115Mi
  labels:
    app.kubernetes.io/name: sas-configuration
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
    sas.com/deployment-base: spring
    workload.sas.com/class: stateless
  name: sas-configuration
  namespace: franceavv
spec:
  selector:
    matchExpressions: []
    matchLabels:
      app.kubernetes.io/name: sas-configuration
      sas.com/deployment: sas-viya
  template:
    metadata:
      annotations:
        prometheus.io/path: /internal/metrics
        prometheus.io/port: "10445"
        prometheus.io/scheme: https
        prometheus.io/scrape: "true"
        sas.com/certificate-file-format: jks
        sas.com/component-name: sas-configuration
        sas.com/component-version: 1.59.3-20201204.1607052795259
        sas.com/kustomize-base: spring
        sas.com/pod-uses-liveness-probe: http
        sas.com/pod-uses-readiness-probe: http
        sas.com/pod-uses-startup-probe: http
        sas.com/tls-enabled-ports: all
        sas.com/version: 1.59.3
        seccomp.security.alpha.kubernetes.io/pod: runtime/default
        sidecar.istio.io/proxyCPU: 15m
        sidecar.istio.io/proxyMemory: 115Mi
      labels:
        app: sas-configuration
        app.kubernetes.io/name: sas-configuration
        sas.com/deployment: sas-viya
        workload.sas.com/class: stateless
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: In
                values:
                - stateless
              matchFields: []
            weight: 100
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: NotIn
                values:
                - compute
                - cas
                - stateful
                - connect
              matchFields: []
            weight: 50
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.azure.com/mode
                operator: NotIn
                values:
                - system
              matchFields: []
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - sas-configuration
              namespaces: []
              topologyKey: kubernetes.io/hostname
            weight: 100
          requiredDuringSchedulingIgnoredDuringExecution: []
      automountServiceAccountToken: false
      containers:
      - args: null
        command: null
        env:
        - name: SAS_K8S_DEPLOYMENT_NAME
          value: sas-configuration
        envFrom:
        - configMapRef:
            name: sas-java-config-t7t5thbgkd
        - configMapRef:
            name: sas-shared-config-49d8hthtb5
        - secretRef:
            name: sas-consul-client
        - configMapRef:
            name: sas-spring-management-config-d64bbkhb97
        - configMapRef:
            name: sas-java-tls-config-fch4777298
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-configuration:1.59.3-20201204.1607052795259
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - sh
              - -c
              - sleep 5
        livenessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http-internal
            scheme: HTTPS
          periodSeconds: 10
        name: sas-configuration
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        - containerPort: 10445
          name: http-internal
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/ready
            port: http-internal
            scheme: HTTPS
          periodSeconds: 10
        resources:
          limits:
            cpu: 2000m
            memory: 1Gi
          requests:
            cpu: 50m
            memory: 650M
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add: []
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        startupProbe:
          failureThreshold: 180
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http-internal
            scheme: HTTPS
          initialDelaySeconds: 20
          periodSeconds: 10
        volumeDevices: []
        volumeMounts:
        - mountPath: /tmp
          name: tmp
        - mountPath: /opt/sas/viya/config/tmp
          name: tmp
        - mountPath: /security
          name: security
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/cacerts
          name: security
          subPath: cacerts
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/private
          name: security
          subPath: private
      hostAliases: []
      imagePullSecrets:
      - name: sas-image-pull-secrets-4m8cc729k8
      initContainers:
      - env:
        - name: KUBE_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: SAS_CERTFRAME_TOKEN_DIR
          value: /certframe-token
        - name: SAS_ADDITIONAL_CA_CERTIFICATES_DIR
          value: /customer-provided-ca-certificates
        envFrom:
        - configMapRef:
            name: sas-certframe-ingress-certificate-config-cmm2t44t88
        - configMapRef:
            name: sas-certframe-user-config-c4ch2c59m7
        - configMapRef:
            name: sas-certframe-java-config-gf4kt94898
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-certframe:3.9.0-20201203.1607016443086
        name: sas-certframe
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /certframe-token
          name: certframe-token
        - mountPath: /security
          name: security
        - mountPath: /customer-provided-ca-certificates
          name: customer-provided-ca-certificates
      readinessGates: []
      securityContext:
        runAsNonRoot: true
        supplementalGroups: []
        sysctls: []
      tolerations:
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateful
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateless
      volumes:
      - name: certframe-token
        secret:
          secretName: sas-certframe-token
      - emptyDir: {}
        name: security
      - configMap:
          name: sas-customer-provided-ca-certificates-29kdmk686c
        name: customer-provided-ca-certificates
      - emptyDir: {}
        name: tmp
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sas.com/certificate-file-format: pem
    sas.com/component-name: sas-connect
    sas.com/component-version: 4.15.2-20201211.1607717177992
    sas.com/kustomize-base: golang
    sas.com/pod-uses-db-migrator: "true"
    sas.com/pod-uses-liveness-probe: http
    sas.com/pod-uses-readiness-probe: http
    sas.com/pod-uses-startup-probe: http
    sas.com/version: 4.15.2
    sidecar.istio.io/proxyCPU: 15m
    sidecar.istio.io/proxyMemory: 115Mi
  labels:
    app.kubernetes.io/name: sas-connect
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
    sas.com/deployment-base: golang
    workload.sas.com/class: stateless
  name: sas-connect
  namespace: franceavv
spec:
  selector:
    matchExpressions: []
    matchLabels:
      app.kubernetes.io/name: sas-connect
      sas.com/deployment: sas-viya
  template:
    metadata:
      annotations:
        prometheus.io/path: /internal/metrics
        prometheus.io/port: "8080"
        prometheus.io/scheme: https
        prometheus.io/scrape: "true"
        sas.com/certificate-file-format: pem
        sas.com/component-name: sas-connect
        sas.com/component-version: 4.15.2-20201211.1607717177992
        sas.com/kustomize-base: golang
        sas.com/pod-uses-liveness-probe: http
        sas.com/pod-uses-readiness-probe: http
        sas.com/pod-uses-startup-probe: http
        sas.com/tls-enabled-ports: all
        sas.com/version: 4.15.2
        seccomp.security.alpha.kubernetes.io/pod: runtime/default
        sidecar.istio.io/proxyCPU: 15m
        sidecar.istio.io/proxyMemory: 115Mi
      labels:
        app: sas-connect
        app.kubernetes.io/name: sas-connect
        sas.com/deployment: sas-viya
        workload.sas.com/class: stateless
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: In
                values:
                - stateless
              matchFields: []
            weight: 100
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: NotIn
                values:
                - compute
                - cas
                - stateful
                - connect
              matchFields: []
            weight: 50
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.azure.com/mode
                operator: NotIn
                values:
                - system
              matchFields: []
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - sas-connect
              namespaces: []
              topologyKey: kubernetes.io/hostname
            weight: 100
          requiredDuringSchedulingIgnoredDuringExecution: []
      automountServiceAccountToken: false
      containers:
      - args: null
        command: null
        env:
        - name: SAS_K8S_DEPLOYMENT_NAME
          value: sas-connect
        envFrom:
        - configMapRef:
            name: sas-go-config-7hc79bmf8m
        - configMapRef:
            name: sas-shared-config-49d8hthtb5
        - secretRef:
            name: sas-consul-client
        - configMapRef:
            name: sas-tls-config-99f79t29t5
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-connect:4.15.2-20201211.1607717177992
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - sh
              - -c
              - sleep 5
        livenessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http
            scheme: HTTPS
          periodSeconds: 10
        name: sas-connect
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/ready
            port: http
            scheme: HTTPS
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add: []
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        startupProbe:
          failureThreshold: 180
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http
            scheme: HTTPS
          periodSeconds: 10
        volumeDevices: []
        volumeMounts:
        - mountPath: /tmp
          name: tmp
        - mountPath: /security
          name: security
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/cacerts
          name: security
          subPath: cacerts
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/private
          name: security
          subPath: private
      hostAliases: []
      imagePullSecrets:
      - name: sas-image-pull-secrets-4m8cc729k8
      initContainers:
      - env:
        - name: KUBE_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: SAS_CERTFRAME_TOKEN_DIR
          value: /certframe-token
        - name: SAS_ADDITIONAL_CA_CERTIFICATES_DIR
          value: /customer-provided-ca-certificates
        envFrom:
        - configMapRef:
            name: sas-certframe-ingress-certificate-config-cmm2t44t88
        - configMapRef:
            name: sas-certframe-user-config-c4ch2c59m7
        - configMapRef:
            name: sas-certframe-config-ctgg29gf7t
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-certframe:3.9.0-20201203.1607016443086
        name: sas-certframe
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /certframe-token
          name: certframe-token
        - mountPath: /security
          name: security
        - mountPath: /customer-provided-ca-certificates
          name: customer-provided-ca-certificates
      - args:
        - cp -rf meta /data
        command:
        - /bin/sh
        - -c
        env: []
        envFrom: []
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-connect:4.15.2-20201211.1607717177992
        imagePullPolicy: IfNotPresent
        name: hydrator
        ports: []
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 75m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add: []
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeDevices: []
        volumeMounts:
        - mountPath: /data
          name: shared-vol
      - args: null
        command: null
        env:
        - name: SSL_CERT_FILE
          value: /security/trustedcerts.pem
        - name: SAS_SERVICE_NAME
          value: sas-connect
        envFrom:
        - configMapRef:
            name: sas-go-config-7hc79bmf8m
        - configMapRef:
            name: sas-shared-config-49d8hthtb5
        - configMapRef:
            name: sas-java-config-t7t5thbgkd
        - secretRef:
            name: sas-consul-client
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-db-migrator:1.1.0-20201209.1607523698073
        imagePullPolicy: IfNotPresent
        name: sas-db-migrator
        ports: []
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 100m
            memory: 90Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add: []
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeDevices: []
        volumeMounts:
        - mountPath: /security
          name: security
        - mountPath: /data
          name: shared-vol
      readinessGates: []
      securityContext:
        runAsNonRoot: true
        supplementalGroups: []
        sysctls: []
      tolerations:
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateful
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateless
      volumes:
      - name: certframe-token
        secret:
          secretName: sas-certframe-token
      - emptyDir: {}
        name: security
      - configMap:
          name: sas-customer-provided-ca-certificates-29kdmk686c
        name: customer-provided-ca-certificates
      - emptyDir: {}
        name: tmp
      - emptyDir: {}
        name: shared-vol
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sas.com/certificate-file-format: pem
    sas.com/component-name: sas-connect-spawner
    sas.com/component-version: 0.15.3-20201214.1607947188551
    sas.com/config-init-mode: initcontainer
    sas.com/kustomize-base: base
    sas.com/version: 0.15.3
    sidecar.istio.io/proxyCPU: 15m
    sidecar.istio.io/proxyMemory: 115Mi
  labels:
    app.kubernetes.io/name: sas-connect-spawner
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
    workload.sas.com/class: stateless
  name: sas-connect-spawner
  namespace: franceavv
spec:
  selector:
    matchExpressions: []
    matchLabels:
      app.kubernetes.io/name: sas-connect-spawner
      sas.com/deployment: sas-viya
  template:
    metadata:
      annotations:
        prometheus.io/path: /internal/metrics
        prometheus.io/port: "8080"
        prometheus.io/scheme: https
        prometheus.io/scrape: "true"
        sas.com/certificate-file-format: pem
        sas.com/component-name: sas-connect-spawner
        sas.com/component-version: 0.15.3-20201214.1607947188551
        sas.com/config-init-mode: initcontainer
        sas.com/kustomize-base: base
        sas.com/tls-enabled-ports: all
        sas.com/version: 0.15.3
        seccomp.security.alpha.kubernetes.io/pod: runtime/default
        sidecar.istio.io/proxyCPU: 15m
        sidecar.istio.io/proxyMemory: 115Mi
      labels:
        app: sas-connect-spawner
        app.kubernetes.io/name: sas-connect-spawner
        sas.com/deployment: sas-viya
        workload.sas.com/class: connect
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: In
                values:
                - connect
              matchFields: []
            weight: 100
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: NotIn
                values:
                - compute
                - stateless
                - stateful
              matchFields: []
            weight: 50
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.azure.com/mode
                operator: NotIn
                values:
                - system
              matchFields: []
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - sas-connect-spawner
              namespaces: []
              topologyKey: kubernetes.io/hostname
            weight: 100
          requiredDuringSchedulingIgnoredDuringExecution: []
      automountServiceAccountToken: false
      containers:
      - args: null
        command: null
        env:
        - name: SAS_K8S_DEPLOYMENT_NAME
          value: sas-connect-spawner
        - name: SAS_LICENSE
          valueFrom:
            secretKeyRef:
              key: SAS_LICENSE
              name: sas-license-mg9k2t69t7
        - name: POD_IP
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.podIP
        envFrom:
        - configMapRef:
            name: sas-shared-config-49d8hthtb5
        - secretRef:
            name: sas-consul-client
        - configMapRef:
            name: sas-java-config-t7t5thbgkd
        - configMapRef:
            name: sas-connect-spawner-config-5m2d69c96m
        - configMapRef:
            name: sas-launcher-lockdown-config-g96dc2km8g
        - configMapRef:
            name: sas-tls-config-99f79t29t5
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-connect-spawner:0.15.3-20201214.1607947188551
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - /opt/sas/viya/home/bin/unregister_connect.sh
        name: sas-connect-spawner
        ports:
        - containerPort: 17550
          name: sasdaemonsvc
          protocol: TCP
        - containerPort: 17551
          name: service
          protocol: TCP
        - containerPort: 17541
          name: mgmtport
          protocol: TCP
        readinessProbe:
          tcpSocket:
            port: mgmtport
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 128Mi
        securityContext:
          allowPrivilegeEscalation: true
          capabilities:
            add:
            - SETGID
            - SETUID
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeDevices: []
        volumeMounts:
        - mountPath: /tmp
          name: tmp
        - mountPath: /sashelp
          name: sashelp
        - mountPath: /sasuser
          name: sasuser
        - mountPath: /config
          name: config
        - mountPath: /var/lib/sss
          name: sss
        - mountPath: /opt/sas/viya/home/SASFoundation/install/log
          name: home-sasfoundation-install-log
        - mountPath: /opt/sas/viya/config/var/log
          name: config-var-log
        - mountPath: /opt/sas/viya/config/var/run
          name: config-var-run
        - mountPath: /opt/sas/viya/config/var/tmp
          name: config-var-tmp
        - mountPath: /security
          name: security
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/cacerts
          name: security
          subPath: cacerts
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/private
          name: security
          subPath: private
      hostAliases: []
      imagePullSecrets:
      - name: sas-image-pull-secrets-4m8cc729k8
      initContainers:
      - env:
        - name: KUBE_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: SAS_CERTFRAME_TOKEN_DIR
          value: /certframe-token
        - name: SAS_ADDITIONAL_CA_CERTIFICATES_DIR
          value: /customer-provided-ca-certificates
        - name: SAS_CERTIFICATE_PRIVATE_KEY_PERMISSIONS
          value: "644"
        envFrom:
        - configMapRef:
            name: sas-certframe-ingress-certificate-config-cmm2t44t88
        - configMapRef:
            name: sas-certframe-user-config-c4ch2c59m7
        - configMapRef:
            name: sas-certframe-config-ctgg29gf7t
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-certframe:3.9.0-20201203.1607016443086
        name: sas-certframe
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /certframe-token
          name: certframe-token
        - mountPath: /security
          name: security
        - mountPath: /customer-provided-ca-certificates
          name: customer-provided-ca-certificates
      - args:
        - /opt/sas/viya/config/etc/connect/default/connect-config-entrypoint.sh
        command:
        - /bin/bash
        env:
        - name: SSL_CERT_FILE
          value: /security/trustedcerts.pem
        envFrom:
        - configMapRef:
            name: sas-go-config-7hc79bmf8m
        - configMapRef:
            name: sas-shared-config-49d8hthtb5
        - configMapRef:
            name: sas-connect-spawner-config-5m2d69c96m
        - configMapRef:
            name: sas-launcher-lockdown-config-g96dc2km8g
        - secretRef:
            name: sas-consul-client
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-connect-spawner:0.15.3-20201214.1607947188551
        name: sas-connect-config-setup
        ports: []
        resources:
          limits:
            cpu: 500m
            memory: 256Mi
          requests:
            cpu: 75m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          privileged: false
          readOnlyRootFilesystem: true
        volumeDevices: []
        volumeMounts:
        - mountPath: /security
          name: security
        - mountPath: /config
          name: config
        - mountPath: /tmp
          name: tmp
        - mountPath: /opt/sas/viya/config/var/log
          name: config-var-log
        - mountPath: /opt/sas/viya/config/var/tmp
          name: config-var-tmp
      - args: null
        command: null
        env:
        - name: SSL_CERT_FILE
          value: /security/trustedcerts.pem
        envFrom:
        - configMapRef:
            name: sas-go-config-7hc79bmf8m
        - configMapRef:
            name: sas-shared-config-49d8hthtb5
        - configMapRef:
            name: sas-connect-spawner-config-5m2d69c96m
        - configMapRef:
            name: sas-launcher-lockdown-config-g96dc2km8g
        - secretRef:
            name: sas-consul-client
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-config-init:1.2.6-20200928.1601307316387
        name: sas-config-init
        ports: []
        resources:
          limits:
            cpu: 500m
            memory: 256Mi
          requests:
            cpu: 75m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          privileged: false
          readOnlyRootFilesystem: true
        volumeDevices: []
        volumeMounts:
        - mountPath: /security
          name: security
        - mountPath: /config
          name: config
      readinessGates: []
      securityContext:
        runAsNonRoot: true
        supplementalGroups: []
        sysctls: []
      tolerations:
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: connect
      volumes:
      - name: certframe-token
        secret:
          secretName: sas-certframe-token
      - emptyDir: {}
        name: security
      - configMap:
          name: sas-customer-provided-ca-certificates-29kdmk686c
        name: customer-provided-ca-certificates
      - emptyDir: {}
        name: tmp
      - emptyDir: {}
        name: sashelp
      - emptyDir: {}
        name: sasuser
      - emptyDir: {}
        name: config
      - emptyDir: {}
        name: sss
      - emptyDir: {}
        name: home-sasfoundation-install-log
      - emptyDir: {}
        name: config-var-log
      - emptyDir: {}
        name: config-var-run
      - emptyDir: {}
        name: config-var-tmp
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sas.com/certificate-file-format: jks
    sas.com/component-name: sas-conversation-designer-app
    sas.com/component-version: 1.3.0-20201203.1607012667858
    sas.com/kustomize-base: spring
    sas.com/pod-uses-liveness-probe: http
    sas.com/pod-uses-readiness-probe: http
    sas.com/pod-uses-startup-probe: http
    sas.com/version: 1.3.0
    sidecar.istio.io/proxyCPU: 15m
    sidecar.istio.io/proxyMemory: 115Mi
  labels:
    app.kubernetes.io/name: sas-conversation-designer-app
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
    sas.com/deployment-base: spring
    workload.sas.com/class: stateless
  name: sas-conversation-designer-app
  namespace: franceavv
spec:
  selector:
    matchExpressions: []
    matchLabels:
      app.kubernetes.io/name: sas-conversation-designer-app
      sas.com/deployment: sas-viya
  template:
    metadata:
      annotations:
        prometheus.io/path: /internal/metrics
        prometheus.io/port: "10445"
        prometheus.io/scheme: https
        prometheus.io/scrape: "true"
        sas.com/certificate-file-format: jks
        sas.com/component-name: sas-conversation-designer-app
        sas.com/component-version: 1.3.0-20201203.1607012667858
        sas.com/kustomize-base: spring
        sas.com/pod-uses-liveness-probe: http
        sas.com/pod-uses-readiness-probe: http
        sas.com/pod-uses-startup-probe: http
        sas.com/tls-enabled-ports: all
        sas.com/version: 1.3.0
        seccomp.security.alpha.kubernetes.io/pod: runtime/default
        sidecar.istio.io/proxyCPU: 15m
        sidecar.istio.io/proxyMemory: 115Mi
      labels:
        app: sas-conversation-designer-app
        app.kubernetes.io/name: sas-conversation-designer-app
        sas.com/deployment: sas-viya
        workload.sas.com/class: stateless
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: In
                values:
                - stateless
              matchFields: []
            weight: 100
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: NotIn
                values:
                - compute
                - cas
                - stateful
                - connect
              matchFields: []
            weight: 50
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.azure.com/mode
                operator: NotIn
                values:
                - system
              matchFields: []
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - sas-conversation-designer-app
              namespaces: []
              topologyKey: kubernetes.io/hostname
            weight: 100
          requiredDuringSchedulingIgnoredDuringExecution: []
      automountServiceAccountToken: false
      containers:
      - args: null
        command: null
        env:
        - name: SAS_K8S_DEPLOYMENT_NAME
          value: sas-conversation-designer-app
        envFrom:
        - configMapRef:
            name: sas-java-config-t7t5thbgkd
        - configMapRef:
            name: sas-shared-config-49d8hthtb5
        - secretRef:
            name: sas-consul-client
        - configMapRef:
            name: sas-spring-management-config-d64bbkhb97
        - configMapRef:
            name: sas-java-tls-config-fch4777298
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-conversation-designer-app:1.3.0-20201203.1607012667858
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - sh
              - -c
              - sleep 5
        livenessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http-internal
            scheme: HTTPS
          periodSeconds: 10
        name: sas-conversation-designer-app
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        - containerPort: 10445
          name: http-internal
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/ready
            port: http-internal
            scheme: HTTPS
          periodSeconds: 10
        resources:
          limits:
            cpu: 2000m
            memory: 1Gi
          requests:
            cpu: 50m
            memory: 650M
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add: []
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        startupProbe:
          failureThreshold: 180
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http-internal
            scheme: HTTPS
          initialDelaySeconds: 20
          periodSeconds: 10
        volumeDevices: []
        volumeMounts:
        - mountPath: /tmp
          name: tmp
        - mountPath: /opt/sas/viya/config/tmp
          name: tmp
        - mountPath: /security
          name: security
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/cacerts
          name: security
          subPath: cacerts
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/private
          name: security
          subPath: private
      hostAliases: []
      imagePullSecrets:
      - name: sas-image-pull-secrets-4m8cc729k8
      initContainers:
      - env:
        - name: KUBE_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: SAS_CERTFRAME_TOKEN_DIR
          value: /certframe-token
        - name: SAS_ADDITIONAL_CA_CERTIFICATES_DIR
          value: /customer-provided-ca-certificates
        envFrom:
        - configMapRef:
            name: sas-certframe-ingress-certificate-config-cmm2t44t88
        - configMapRef:
            name: sas-certframe-user-config-c4ch2c59m7
        - configMapRef:
            name: sas-certframe-java-config-gf4kt94898
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-certframe:3.9.0-20201203.1607016443086
        name: sas-certframe
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /certframe-token
          name: certframe-token
        - mountPath: /security
          name: security
        - mountPath: /customer-provided-ca-certificates
          name: customer-provided-ca-certificates
      readinessGates: []
      securityContext:
        runAsNonRoot: true
        supplementalGroups: []
        sysctls: []
      tolerations:
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateful
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateless
      volumes:
      - name: certframe-token
        secret:
          secretName: sas-certframe-token
      - emptyDir: {}
        name: security
      - configMap:
          name: sas-customer-provided-ca-certificates-29kdmk686c
        name: customer-provided-ca-certificates
      - emptyDir: {}
        name: tmp
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sas.com/certificate-file-format: jks
    sas.com/component-name: sas-credentials
    sas.com/component-version: 1.27.12-20201208.1607464004925
    sas.com/kustomize-base: spring
    sas.com/pod-uses-liveness-probe: http
    sas.com/pod-uses-readiness-probe: http
    sas.com/pod-uses-startup-probe: http
    sas.com/version: 1.27.12
    sidecar.istio.io/proxyCPU: 15m
    sidecar.istio.io/proxyMemory: 115Mi
  labels:
    app.kubernetes.io/name: sas-credentials
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
    sas.com/deployment-base: spring
    workload.sas.com/class: stateless
  name: sas-credentials
  namespace: franceavv
spec:
  selector:
    matchExpressions: []
    matchLabels:
      app.kubernetes.io/name: sas-credentials
      sas.com/deployment: sas-viya
  template:
    metadata:
      annotations:
        prometheus.io/path: /internal/metrics
        prometheus.io/port: "10445"
        prometheus.io/scheme: https
        prometheus.io/scrape: "true"
        sas.com/certificate-file-format: jks
        sas.com/component-name: sas-credentials
        sas.com/component-version: 1.27.12-20201208.1607464004925
        sas.com/kustomize-base: spring
        sas.com/pod-uses-liveness-probe: http
        sas.com/pod-uses-readiness-probe: http
        sas.com/pod-uses-startup-probe: http
        sas.com/tls-enabled-ports: all
        sas.com/version: 1.27.12
        seccomp.security.alpha.kubernetes.io/pod: runtime/default
        sidecar.istio.io/proxyCPU: 15m
        sidecar.istio.io/proxyMemory: 115Mi
      labels:
        app: sas-credentials
        app.kubernetes.io/name: sas-credentials
        sas.com/deployment: sas-viya
        workload.sas.com/class: stateless
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: In
                values:
                - stateless
              matchFields: []
            weight: 100
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: NotIn
                values:
                - compute
                - cas
                - stateful
                - connect
              matchFields: []
            weight: 50
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.azure.com/mode
                operator: NotIn
                values:
                - system
              matchFields: []
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - sas-credentials
              namespaces: []
              topologyKey: kubernetes.io/hostname
            weight: 100
          requiredDuringSchedulingIgnoredDuringExecution: []
      automountServiceAccountToken: false
      containers:
      - args: null
        command: null
        env:
        - name: SAS_K8S_DEPLOYMENT_NAME
          value: sas-credentials
        envFrom:
        - configMapRef:
            name: sas-java-config-t7t5thbgkd
        - configMapRef:
            name: sas-shared-config-49d8hthtb5
        - secretRef:
            name: sas-consul-client
        - configMapRef:
            name: sas-spring-management-config-d64bbkhb97
        - configMapRef:
            name: sas-java-tls-config-fch4777298
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-credentials:1.27.12-20201208.1607464004925
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - sh
              - -c
              - sleep 5
        livenessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http-internal
            scheme: HTTPS
          periodSeconds: 10
        name: sas-credentials
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        - containerPort: 10445
          name: http-internal
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/ready
            port: http-internal
            scheme: HTTPS
          periodSeconds: 10
        resources:
          limits:
            cpu: 2000m
            memory: 1Gi
          requests:
            cpu: 50m
            memory: 650M
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add: []
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        startupProbe:
          failureThreshold: 180
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http-internal
            scheme: HTTPS
          initialDelaySeconds: 20
          periodSeconds: 10
        volumeDevices: []
        volumeMounts:
        - mountPath: /tmp
          name: tmp
        - mountPath: /opt/sas/viya/config/tmp
          name: tmp
        - mountPath: /security
          name: security
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/cacerts
          name: security
          subPath: cacerts
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/private
          name: security
          subPath: private
      hostAliases: []
      imagePullSecrets:
      - name: sas-image-pull-secrets-4m8cc729k8
      initContainers:
      - env:
        - name: KUBE_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: SAS_CERTFRAME_TOKEN_DIR
          value: /certframe-token
        - name: SAS_ADDITIONAL_CA_CERTIFICATES_DIR
          value: /customer-provided-ca-certificates
        envFrom:
        - configMapRef:
            name: sas-certframe-ingress-certificate-config-cmm2t44t88
        - configMapRef:
            name: sas-certframe-user-config-c4ch2c59m7
        - configMapRef:
            name: sas-certframe-java-config-gf4kt94898
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-certframe:3.9.0-20201203.1607016443086
        name: sas-certframe
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /certframe-token
          name: certframe-token
        - mountPath: /security
          name: security
        - mountPath: /customer-provided-ca-certificates
          name: customer-provided-ca-certificates
      readinessGates: []
      securityContext:
        runAsNonRoot: true
        supplementalGroups: []
        sysctls: []
      tolerations:
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateful
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateless
      volumes:
      - name: certframe-token
        secret:
          secretName: sas-certframe-token
      - emptyDir: {}
        name: security
      - configMap:
          name: sas-customer-provided-ca-certificates-29kdmk686c
        name: customer-provided-ca-certificates
      - emptyDir: {}
        name: tmp
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sas.com/certificate-file-format: pem
    sas.com/component-name: sas-crossdomainproxy
    sas.com/component-version: 1.12.0-20201211.1607701073883
    sas.com/kustomize-base: golang
    sas.com/pod-uses-liveness-probe: http
    sas.com/pod-uses-readiness-probe: http
    sas.com/pod-uses-startup-probe: http
    sas.com/version: 1.12.0
    sidecar.istio.io/proxyCPU: 15m
    sidecar.istio.io/proxyMemory: 115Mi
  labels:
    app.kubernetes.io/name: sas-crossdomainproxy
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
    sas.com/deployment-base: golang
    workload.sas.com/class: stateless
  name: sas-crossdomainproxy
  namespace: franceavv
spec:
  selector:
    matchExpressions: []
    matchLabels:
      app.kubernetes.io/name: sas-crossdomainproxy
      sas.com/deployment: sas-viya
  template:
    metadata:
      annotations:
        prometheus.io/path: /internal/metrics
        prometheus.io/port: "8080"
        prometheus.io/scheme: https
        prometheus.io/scrape: "true"
        sas.com/certificate-file-format: pem
        sas.com/component-name: sas-crossdomainproxy
        sas.com/component-version: 1.12.0-20201211.1607701073883
        sas.com/kustomize-base: golang
        sas.com/pod-uses-liveness-probe: http
        sas.com/pod-uses-readiness-probe: http
        sas.com/pod-uses-startup-probe: http
        sas.com/tls-enabled-ports: all
        sas.com/version: 1.12.0
        seccomp.security.alpha.kubernetes.io/pod: runtime/default
        sidecar.istio.io/proxyCPU: 15m
        sidecar.istio.io/proxyMemory: 115Mi
      labels:
        app: sas-crossdomainproxy
        app.kubernetes.io/name: sas-crossdomainproxy
        sas.com/deployment: sas-viya
        workload.sas.com/class: stateless
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: In
                values:
                - stateless
              matchFields: []
            weight: 100
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: NotIn
                values:
                - compute
                - cas
                - stateful
                - connect
              matchFields: []
            weight: 50
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.azure.com/mode
                operator: NotIn
                values:
                - system
              matchFields: []
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - sas-crossdomainproxy
              namespaces: []
              topologyKey: kubernetes.io/hostname
            weight: 100
          requiredDuringSchedulingIgnoredDuringExecution: []
      automountServiceAccountToken: false
      containers:
      - args: null
        command: null
        env:
        - name: SAS_K8S_DEPLOYMENT_NAME
          value: sas-crossdomainproxy
        envFrom:
        - configMapRef:
            name: sas-go-config-7hc79bmf8m
        - configMapRef:
            name: sas-shared-config-49d8hthtb5
        - secretRef:
            name: sas-consul-client
        - configMapRef:
            name: sas-tls-config-99f79t29t5
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-crossdomainproxy:1.12.0-20201211.1607701073883
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - sh
              - -c
              - sleep 5
        livenessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http
            scheme: HTTPS
          periodSeconds: 10
        name: sas-crossdomainproxy
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/ready
            port: http
            scheme: HTTPS
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add: []
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        startupProbe:
          failureThreshold: 180
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http
            scheme: HTTPS
          periodSeconds: 10
        volumeDevices: []
        volumeMounts:
        - mountPath: /tmp
          name: tmp
        - mountPath: /security
          name: security
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/cacerts
          name: security
          subPath: cacerts
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/private
          name: security
          subPath: private
      hostAliases: []
      imagePullSecrets:
      - name: sas-image-pull-secrets-4m8cc729k8
      initContainers:
      - env:
        - name: KUBE_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: SAS_CERTFRAME_TOKEN_DIR
          value: /certframe-token
        - name: SAS_ADDITIONAL_CA_CERTIFICATES_DIR
          value: /customer-provided-ca-certificates
        envFrom:
        - configMapRef:
            name: sas-certframe-ingress-certificate-config-cmm2t44t88
        - configMapRef:
            name: sas-certframe-user-config-c4ch2c59m7
        - configMapRef:
            name: sas-certframe-config-ctgg29gf7t
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-certframe:3.9.0-20201203.1607016443086
        name: sas-certframe
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /certframe-token
          name: certframe-token
        - mountPath: /security
          name: security
        - mountPath: /customer-provided-ca-certificates
          name: customer-provided-ca-certificates
      readinessGates: []
      securityContext:
        runAsNonRoot: true
        supplementalGroups: []
        sysctls: []
      tolerations:
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateful
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateless
      volumes:
      - name: certframe-token
        secret:
          secretName: sas-certframe-token
      - emptyDir: {}
        name: security
      - configMap:
          name: sas-customer-provided-ca-certificates-29kdmk686c
        name: customer-provided-ca-certificates
      - emptyDir: {}
        name: tmp
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sas.com/certificate-file-format: jks
    sas.com/component-name: sas-data-explorer-app
    sas.com/component-version: 1.23.6-20201203.1607009499801
    sas.com/kustomize-base: spring
    sas.com/pod-uses-liveness-probe: http
    sas.com/pod-uses-readiness-probe: http
    sas.com/pod-uses-startup-probe: http
    sas.com/version: 1.23.6
    sidecar.istio.io/proxyCPU: 15m
    sidecar.istio.io/proxyMemory: 115Mi
  labels:
    app.kubernetes.io/name: sas-data-explorer-app
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
    sas.com/deployment-base: spring
    workload.sas.com/class: stateless
  name: sas-data-explorer-app
  namespace: franceavv
spec:
  selector:
    matchExpressions: []
    matchLabels:
      app.kubernetes.io/name: sas-data-explorer-app
      sas.com/deployment: sas-viya
  template:
    metadata:
      annotations:
        prometheus.io/path: /internal/metrics
        prometheus.io/port: "10445"
        prometheus.io/scheme: https
        prometheus.io/scrape: "true"
        sas.com/certificate-file-format: jks
        sas.com/component-name: sas-data-explorer-app
        sas.com/component-version: 1.23.6-20201203.1607009499801
        sas.com/kustomize-base: spring
        sas.com/pod-uses-liveness-probe: http
        sas.com/pod-uses-readiness-probe: http
        sas.com/pod-uses-startup-probe: http
        sas.com/tls-enabled-ports: all
        sas.com/version: 1.23.6
        seccomp.security.alpha.kubernetes.io/pod: runtime/default
        sidecar.istio.io/proxyCPU: 15m
        sidecar.istio.io/proxyMemory: 115Mi
      labels:
        app: sas-data-explorer-app
        app.kubernetes.io/name: sas-data-explorer-app
        sas.com/deployment: sas-viya
        workload.sas.com/class: stateless
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: In
                values:
                - stateless
              matchFields: []
            weight: 100
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: NotIn
                values:
                - compute
                - cas
                - stateful
                - connect
              matchFields: []
            weight: 50
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.azure.com/mode
                operator: NotIn
                values:
                - system
              matchFields: []
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - sas-data-explorer-app
              namespaces: []
              topologyKey: kubernetes.io/hostname
            weight: 100
          requiredDuringSchedulingIgnoredDuringExecution: []
      automountServiceAccountToken: false
      containers:
      - args: null
        command: null
        env:
        - name: SAS_K8S_DEPLOYMENT_NAME
          value: sas-data-explorer-app
        envFrom:
        - configMapRef:
            name: sas-java-config-t7t5thbgkd
        - configMapRef:
            name: sas-shared-config-49d8hthtb5
        - secretRef:
            name: sas-consul-client
        - configMapRef:
            name: sas-spring-management-config-d64bbkhb97
        - configMapRef:
            name: sas-java-tls-config-fch4777298
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-data-explorer-app:1.23.6-20201203.1607009499801
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - sh
              - -c
              - sleep 5
        livenessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http-internal
            scheme: HTTPS
          periodSeconds: 10
        name: sas-data-explorer-app
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        - containerPort: 10445
          name: http-internal
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/ready
            port: http-internal
            scheme: HTTPS
          periodSeconds: 10
        resources:
          limits:
            cpu: 2000m
            memory: 1Gi
          requests:
            cpu: 50m
            memory: 650M
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add: []
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        startupProbe:
          failureThreshold: 180
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http-internal
            scheme: HTTPS
          initialDelaySeconds: 20
          periodSeconds: 10
        volumeDevices: []
        volumeMounts:
        - mountPath: /tmp
          name: tmp
        - mountPath: /opt/sas/viya/config/tmp
          name: tmp
        - mountPath: /security
          name: security
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/cacerts
          name: security
          subPath: cacerts
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/private
          name: security
          subPath: private
      hostAliases: []
      imagePullSecrets:
      - name: sas-image-pull-secrets-4m8cc729k8
      initContainers:
      - env:
        - name: KUBE_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: SAS_CERTFRAME_TOKEN_DIR
          value: /certframe-token
        - name: SAS_ADDITIONAL_CA_CERTIFICATES_DIR
          value: /customer-provided-ca-certificates
        envFrom:
        - configMapRef:
            name: sas-certframe-ingress-certificate-config-cmm2t44t88
        - configMapRef:
            name: sas-certframe-user-config-c4ch2c59m7
        - configMapRef:
            name: sas-certframe-java-config-gf4kt94898
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-certframe:3.9.0-20201203.1607016443086
        name: sas-certframe
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /certframe-token
          name: certframe-token
        - mountPath: /security
          name: security
        - mountPath: /customer-provided-ca-certificates
          name: customer-provided-ca-certificates
      readinessGates: []
      securityContext:
        runAsNonRoot: true
        supplementalGroups: []
        sysctls: []
      tolerations:
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateful
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateless
      volumes:
      - name: certframe-token
        secret:
          secretName: sas-certframe-token
      - emptyDir: {}
        name: security
      - configMap:
          name: sas-customer-provided-ca-certificates-29kdmk686c
        name: customer-provided-ca-certificates
      - emptyDir: {}
        name: tmp
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sas.com/certificate-file-format: pem
    sas.com/component-name: sas-data-flows
    sas.com/component-version: 1.6.0-20201209.1607548143778
    sas.com/kustomize-base: golang
    sas.com/pod-uses-db-migrator: "true"
    sas.com/pod-uses-liveness-probe: http
    sas.com/pod-uses-readiness-probe: http
    sas.com/pod-uses-startup-probe: http
    sas.com/version: 1.6.0
    sidecar.istio.io/proxyCPU: 15m
    sidecar.istio.io/proxyMemory: 115Mi
  labels:
    app.kubernetes.io/name: sas-data-flows
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
    sas.com/deployment-base: golang
    workload.sas.com/class: stateless
  name: sas-data-flows
  namespace: franceavv
spec:
  selector:
    matchExpressions: []
    matchLabels:
      app.kubernetes.io/name: sas-data-flows
      sas.com/deployment: sas-viya
  template:
    metadata:
      annotations:
        prometheus.io/path: /internal/metrics
        prometheus.io/port: "8080"
        prometheus.io/scheme: https
        prometheus.io/scrape: "true"
        sas.com/certificate-file-format: pem
        sas.com/component-name: sas-data-flows
        sas.com/component-version: 1.6.0-20201209.1607548143778
        sas.com/kustomize-base: golang
        sas.com/pod-uses-liveness-probe: http
        sas.com/pod-uses-readiness-probe: http
        sas.com/pod-uses-startup-probe: http
        sas.com/tls-enabled-ports: all
        sas.com/version: 1.6.0
        seccomp.security.alpha.kubernetes.io/pod: runtime/default
        sidecar.istio.io/proxyCPU: 15m
        sidecar.istio.io/proxyMemory: 115Mi
      labels:
        app: sas-data-flows
        app.kubernetes.io/name: sas-data-flows
        sas.com/deployment: sas-viya
        workload.sas.com/class: stateless
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: In
                values:
                - stateless
              matchFields: []
            weight: 100
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: NotIn
                values:
                - compute
                - cas
                - stateful
                - connect
              matchFields: []
            weight: 50
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.azure.com/mode
                operator: NotIn
                values:
                - system
              matchFields: []
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - sas-data-flows
              namespaces: []
              topologyKey: kubernetes.io/hostname
            weight: 100
          requiredDuringSchedulingIgnoredDuringExecution: []
      automountServiceAccountToken: false
      containers:
      - args: null
        command: null
        env:
        - name: SAS_K8S_DEPLOYMENT_NAME
          value: sas-data-flows
        - name: SAS_CADENCE_NAME
          valueFrom:
            configMapKeyRef:
              key: SAS_CADENCE_NAME
              name: sas-deployment-metadata-t4927tg597
        - name: SAS_CADENCE_VERSION
          valueFrom:
            configMapKeyRef:
              key: SAS_CADENCE_VERSION
              name: sas-deployment-metadata-t4927tg597
        - name: SAS_CADENCE_RELEASE
          valueFrom:
            configMapKeyRef:
              key: SAS_CADENCE_RELEASE
              name: sas-deployment-metadata-t4927tg597
        envFrom:
        - configMapRef:
            name: sas-go-config-7hc79bmf8m
        - configMapRef:
            name: sas-shared-config-49d8hthtb5
        - secretRef:
            name: sas-consul-client
        - configMapRef:
            name: sas-tls-config-99f79t29t5
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-data-flows:1.6.0-20201209.1607548143778
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - sh
              - -c
              - sleep 5
        livenessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http
            scheme: HTTPS
          periodSeconds: 10
        name: sas-data-flows
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/ready
            port: http
            scheme: HTTPS
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add: []
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        startupProbe:
          failureThreshold: 180
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http
            scheme: HTTPS
          periodSeconds: 10
        volumeDevices: []
        volumeMounts:
        - mountPath: /tmp
          name: tmp
        - mountPath: /security
          name: security
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/cacerts
          name: security
          subPath: cacerts
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/private
          name: security
          subPath: private
      hostAliases: []
      imagePullSecrets:
      - name: sas-image-pull-secrets-4m8cc729k8
      initContainers:
      - env:
        - name: KUBE_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: SAS_CERTFRAME_TOKEN_DIR
          value: /certframe-token
        - name: SAS_ADDITIONAL_CA_CERTIFICATES_DIR
          value: /customer-provided-ca-certificates
        envFrom:
        - configMapRef:
            name: sas-certframe-ingress-certificate-config-cmm2t44t88
        - configMapRef:
            name: sas-certframe-user-config-c4ch2c59m7
        - configMapRef:
            name: sas-certframe-config-ctgg29gf7t
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-certframe:3.9.0-20201203.1607016443086
        name: sas-certframe
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /certframe-token
          name: certframe-token
        - mountPath: /security
          name: security
        - mountPath: /customer-provided-ca-certificates
          name: customer-provided-ca-certificates
      - args:
        - cp -rf meta /data
        command:
        - /bin/sh
        - -c
        env: []
        envFrom: []
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-data-flows:1.6.0-20201209.1607548143778
        imagePullPolicy: IfNotPresent
        name: hydrator
        ports: []
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 75m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add: []
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeDevices: []
        volumeMounts:
        - mountPath: /data
          name: shared-vol
      - args: null
        command: null
        env:
        - name: SSL_CERT_FILE
          value: /security/trustedcerts.pem
        - name: SAS_SERVICE_NAME
          value: sas-data-flows
        envFrom:
        - configMapRef:
            name: sas-go-config-7hc79bmf8m
        - configMapRef:
            name: sas-shared-config-49d8hthtb5
        - configMapRef:
            name: sas-java-config-t7t5thbgkd
        - secretRef:
            name: sas-consul-client
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-db-migrator:1.1.0-20201209.1607523698073
        imagePullPolicy: IfNotPresent
        name: sas-db-migrator
        ports: []
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 100m
            memory: 90Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add: []
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeDevices: []
        volumeMounts:
        - mountPath: /security
          name: security
        - mountPath: /data
          name: shared-vol
      readinessGates: []
      securityContext:
        runAsNonRoot: true
        supplementalGroups: []
        sysctls: []
      tolerations:
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateful
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateless
      volumes:
      - name: certframe-token
        secret:
          secretName: sas-certframe-token
      - emptyDir: {}
        name: security
      - configMap:
          name: sas-customer-provided-ca-certificates-29kdmk686c
        name: customer-provided-ca-certificates
      - emptyDir: {}
        name: tmp
      - emptyDir: {}
        name: shared-vol
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sas.com/certificate-file-format: pem
    sas.com/component-name: sas-data-mining-models
    sas.com/component-version: 39.11.2-20201203.1607025419402
    sas.com/kustomize-base: golang
    sas.com/pod-uses-db-migrator: "true"
    sas.com/pod-uses-liveness-probe: http
    sas.com/pod-uses-readiness-probe: http
    sas.com/pod-uses-startup-probe: http
    sas.com/version: 39.11.2
    sidecar.istio.io/proxyCPU: 15m
    sidecar.istio.io/proxyMemory: 115Mi
  labels:
    app.kubernetes.io/name: sas-data-mining-models
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
    sas.com/deployment-base: golang
    workload.sas.com/class: stateless
  name: sas-data-mining-models
  namespace: franceavv
spec:
  selector:
    matchExpressions: []
    matchLabels:
      app.kubernetes.io/name: sas-data-mining-models
      sas.com/deployment: sas-viya
  template:
    metadata:
      annotations:
        prometheus.io/path: /internal/metrics
        prometheus.io/port: "8080"
        prometheus.io/scheme: https
        prometheus.io/scrape: "true"
        sas.com/certificate-file-format: pem
        sas.com/component-name: sas-data-mining-models
        sas.com/component-version: 39.11.2-20201203.1607025419402
        sas.com/kustomize-base: golang
        sas.com/pod-uses-liveness-probe: http
        sas.com/pod-uses-readiness-probe: http
        sas.com/pod-uses-startup-probe: http
        sas.com/tls-enabled-ports: all
        sas.com/version: 39.11.2
        seccomp.security.alpha.kubernetes.io/pod: runtime/default
        sidecar.istio.io/proxyCPU: 15m
        sidecar.istio.io/proxyMemory: 115Mi
      labels:
        app: sas-data-mining-models
        app.kubernetes.io/name: sas-data-mining-models
        sas.com/deployment: sas-viya
        workload.sas.com/class: stateless
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: In
                values:
                - stateless
              matchFields: []
            weight: 100
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: NotIn
                values:
                - compute
                - cas
                - stateful
                - connect
              matchFields: []
            weight: 50
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.azure.com/mode
                operator: NotIn
                values:
                - system
              matchFields: []
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - sas-data-mining-models
              namespaces: []
              topologyKey: kubernetes.io/hostname
            weight: 100
          requiredDuringSchedulingIgnoredDuringExecution: []
      automountServiceAccountToken: false
      containers:
      - args: null
        command: null
        env:
        - name: SAS_K8S_DEPLOYMENT_NAME
          value: sas-data-mining-models
        envFrom:
        - configMapRef:
            name: sas-go-config-7hc79bmf8m
        - configMapRef:
            name: sas-shared-config-49d8hthtb5
        - secretRef:
            name: sas-consul-client
        - configMapRef:
            name: sas-tls-config-99f79t29t5
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-data-mining-models:39.11.2-20201203.1607025419402
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - sh
              - -c
              - sleep 5
        livenessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http
            scheme: HTTPS
          periodSeconds: 10
        name: sas-data-mining-models
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/ready
            port: http
            scheme: HTTPS
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add: []
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        startupProbe:
          failureThreshold: 180
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http
            scheme: HTTPS
          periodSeconds: 10
        volumeDevices: []
        volumeMounts:
        - mountPath: /tmp
          name: tmp
        - mountPath: /security
          name: security
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/cacerts
          name: security
          subPath: cacerts
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/private
          name: security
          subPath: private
      hostAliases: []
      imagePullSecrets:
      - name: sas-image-pull-secrets-4m8cc729k8
      initContainers:
      - env:
        - name: KUBE_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: SAS_CERTFRAME_TOKEN_DIR
          value: /certframe-token
        - name: SAS_ADDITIONAL_CA_CERTIFICATES_DIR
          value: /customer-provided-ca-certificates
        envFrom:
        - configMapRef:
            name: sas-certframe-ingress-certificate-config-cmm2t44t88
        - configMapRef:
            name: sas-certframe-user-config-c4ch2c59m7
        - configMapRef:
            name: sas-certframe-config-ctgg29gf7t
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-certframe:3.9.0-20201203.1607016443086
        name: sas-certframe
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /certframe-token
          name: certframe-token
        - mountPath: /security
          name: security
        - mountPath: /customer-provided-ca-certificates
          name: customer-provided-ca-certificates
      - args:
        - cp -rf meta /data
        command:
        - /bin/sh
        - -c
        env: []
        envFrom: []
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-data-mining-models:39.11.2-20201203.1607025419402
        imagePullPolicy: IfNotPresent
        name: hydrator
        ports: []
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 75m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add: []
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeDevices: []
        volumeMounts:
        - mountPath: /data
          name: shared-vol
      - args: null
        command: null
        env:
        - name: SSL_CERT_FILE
          value: /security/trustedcerts.pem
        - name: SAS_SERVICE_NAME
          value: sas-data-mining-models
        envFrom:
        - configMapRef:
            name: sas-go-config-7hc79bmf8m
        - configMapRef:
            name: sas-shared-config-49d8hthtb5
        - configMapRef:
            name: sas-java-config-t7t5thbgkd
        - secretRef:
            name: sas-consul-client
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-db-migrator:1.1.0-20201209.1607523698073
        imagePullPolicy: IfNotPresent
        name: sas-db-migrator
        ports: []
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 100m
            memory: 90Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add: []
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeDevices: []
        volumeMounts:
        - mountPath: /security
          name: security
        - mountPath: /data
          name: shared-vol
      readinessGates: []
      securityContext:
        runAsNonRoot: true
        supplementalGroups: []
        sysctls: []
      tolerations:
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateful
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateless
      volumes:
      - name: certframe-token
        secret:
          secretName: sas-certframe-token
      - emptyDir: {}
        name: security
      - configMap:
          name: sas-customer-provided-ca-certificates-29kdmk686c
        name: customer-provided-ca-certificates
      - emptyDir: {}
        name: tmp
      - emptyDir: {}
        name: shared-vol
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sas.com/certificate-file-format: pem
    sas.com/component-name: sas-data-mining-project-settings
    sas.com/component-version: 39.10.1-20201203.1607025448043
    sas.com/kustomize-base: golang
    sas.com/pod-uses-db-migrator: "true"
    sas.com/pod-uses-liveness-probe: http
    sas.com/pod-uses-readiness-probe: http
    sas.com/pod-uses-startup-probe: http
    sas.com/version: 39.10.1
    sidecar.istio.io/proxyCPU: 15m
    sidecar.istio.io/proxyMemory: 115Mi
  labels:
    app.kubernetes.io/name: sas-data-mining-project-settings
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
    sas.com/deployment-base: golang
    workload.sas.com/class: stateless
  name: sas-data-mining-project-settings
  namespace: franceavv
spec:
  selector:
    matchExpressions: []
    matchLabels:
      app.kubernetes.io/name: sas-data-mining-project-settings
      sas.com/deployment: sas-viya
  template:
    metadata:
      annotations:
        prometheus.io/path: /internal/metrics
        prometheus.io/port: "8080"
        prometheus.io/scheme: https
        prometheus.io/scrape: "true"
        sas.com/certificate-file-format: pem
        sas.com/component-name: sas-data-mining-project-settings
        sas.com/component-version: 39.10.1-20201203.1607025448043
        sas.com/kustomize-base: golang
        sas.com/pod-uses-liveness-probe: http
        sas.com/pod-uses-readiness-probe: http
        sas.com/pod-uses-startup-probe: http
        sas.com/tls-enabled-ports: all
        sas.com/version: 39.10.1
        seccomp.security.alpha.kubernetes.io/pod: runtime/default
        sidecar.istio.io/proxyCPU: 15m
        sidecar.istio.io/proxyMemory: 115Mi
      labels:
        app: sas-data-mining-project-settings
        app.kubernetes.io/name: sas-data-mining-project-settings
        sas.com/deployment: sas-viya
        workload.sas.com/class: stateless
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: In
                values:
                - stateless
              matchFields: []
            weight: 100
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: NotIn
                values:
                - compute
                - cas
                - stateful
                - connect
              matchFields: []
            weight: 50
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.azure.com/mode
                operator: NotIn
                values:
                - system
              matchFields: []
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - sas-data-mining-project-settings
              namespaces: []
              topologyKey: kubernetes.io/hostname
            weight: 100
          requiredDuringSchedulingIgnoredDuringExecution: []
      automountServiceAccountToken: false
      containers:
      - args: null
        command: null
        env:
        - name: SAS_K8S_DEPLOYMENT_NAME
          value: sas-data-mining-project-settings
        envFrom:
        - configMapRef:
            name: sas-go-config-7hc79bmf8m
        - configMapRef:
            name: sas-shared-config-49d8hthtb5
        - secretRef:
            name: sas-consul-client
        - configMapRef:
            name: sas-tls-config-99f79t29t5
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-data-mining-project-settings:39.10.1-20201203.1607025448043
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - sh
              - -c
              - sleep 5
        livenessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http
            scheme: HTTPS
          periodSeconds: 10
        name: sas-data-mining-project-settings
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/ready
            port: http
            scheme: HTTPS
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add: []
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        startupProbe:
          failureThreshold: 180
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http
            scheme: HTTPS
          periodSeconds: 10
        volumeDevices: []
        volumeMounts:
        - mountPath: /tmp
          name: tmp
        - mountPath: /security
          name: security
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/cacerts
          name: security
          subPath: cacerts
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/private
          name: security
          subPath: private
      hostAliases: []
      imagePullSecrets:
      - name: sas-image-pull-secrets-4m8cc729k8
      initContainers:
      - env:
        - name: KUBE_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: SAS_CERTFRAME_TOKEN_DIR
          value: /certframe-token
        - name: SAS_ADDITIONAL_CA_CERTIFICATES_DIR
          value: /customer-provided-ca-certificates
        envFrom:
        - configMapRef:
            name: sas-certframe-ingress-certificate-config-cmm2t44t88
        - configMapRef:
            name: sas-certframe-user-config-c4ch2c59m7
        - configMapRef:
            name: sas-certframe-config-ctgg29gf7t
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-certframe:3.9.0-20201203.1607016443086
        name: sas-certframe
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /certframe-token
          name: certframe-token
        - mountPath: /security
          name: security
        - mountPath: /customer-provided-ca-certificates
          name: customer-provided-ca-certificates
      - args:
        - cp -rf meta /data
        command:
        - /bin/sh
        - -c
        env: []
        envFrom: []
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-data-mining-project-settings:39.10.1-20201203.1607025448043
        imagePullPolicy: IfNotPresent
        name: hydrator
        ports: []
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 75m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add: []
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeDevices: []
        volumeMounts:
        - mountPath: /data
          name: shared-vol
      - args: null
        command: null
        env:
        - name: SSL_CERT_FILE
          value: /security/trustedcerts.pem
        - name: SAS_SERVICE_NAME
          value: sas-data-mining-project-settings
        envFrom:
        - configMapRef:
            name: sas-go-config-7hc79bmf8m
        - configMapRef:
            name: sas-shared-config-49d8hthtb5
        - configMapRef:
            name: sas-java-config-t7t5thbgkd
        - secretRef:
            name: sas-consul-client
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-db-migrator:1.1.0-20201209.1607523698073
        imagePullPolicy: IfNotPresent
        name: sas-db-migrator
        ports: []
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 100m
            memory: 90Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add: []
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeDevices: []
        volumeMounts:
        - mountPath: /security
          name: security
        - mountPath: /data
          name: shared-vol
      readinessGates: []
      securityContext:
        runAsNonRoot: true
        supplementalGroups: []
        sysctls: []
      tolerations:
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateful
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateless
      volumes:
      - name: certframe-token
        secret:
          secretName: sas-certframe-token
      - emptyDir: {}
        name: security
      - configMap:
          name: sas-customer-provided-ca-certificates-29kdmk686c
        name: customer-provided-ca-certificates
      - emptyDir: {}
        name: tmp
      - emptyDir: {}
        name: shared-vol
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sas.com/certificate-file-format: pem
    sas.com/component-name: sas-data-mining-results
    sas.com/component-version: 22.23.7-20201203.1607025661511
    sas.com/kustomize-base: golang
    sas.com/pod-uses-liveness-probe: http
    sas.com/pod-uses-readiness-probe: http
    sas.com/pod-uses-startup-probe: http
    sas.com/version: 22.23.7
    sidecar.istio.io/proxyCPU: 15m
    sidecar.istio.io/proxyMemory: 115Mi
  labels:
    app.kubernetes.io/name: sas-data-mining-results
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
    sas.com/deployment-base: golang
    workload.sas.com/class: stateless
  name: sas-data-mining-results
  namespace: franceavv
spec:
  selector:
    matchExpressions: []
    matchLabels:
      app.kubernetes.io/name: sas-data-mining-results
      sas.com/deployment: sas-viya
  template:
    metadata:
      annotations:
        prometheus.io/path: /internal/metrics
        prometheus.io/port: "8080"
        prometheus.io/scheme: https
        prometheus.io/scrape: "true"
        sas.com/certificate-file-format: pem
        sas.com/component-name: sas-data-mining-results
        sas.com/component-version: 22.23.7-20201203.1607025661511
        sas.com/kustomize-base: golang
        sas.com/pod-uses-liveness-probe: http
        sas.com/pod-uses-readiness-probe: http
        sas.com/pod-uses-startup-probe: http
        sas.com/tls-enabled-ports: all
        sas.com/version: 22.23.7
        seccomp.security.alpha.kubernetes.io/pod: runtime/default
        sidecar.istio.io/proxyCPU: 15m
        sidecar.istio.io/proxyMemory: 115Mi
      labels:
        app: sas-data-mining-results
        app.kubernetes.io/name: sas-data-mining-results
        sas.com/deployment: sas-viya
        workload.sas.com/class: stateless
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: In
                values:
                - stateless
              matchFields: []
            weight: 100
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: NotIn
                values:
                - compute
                - cas
                - stateful
                - connect
              matchFields: []
            weight: 50
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.azure.com/mode
                operator: NotIn
                values:
                - system
              matchFields: []
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - sas-data-mining-results
              namespaces: []
              topologyKey: kubernetes.io/hostname
            weight: 100
          requiredDuringSchedulingIgnoredDuringExecution: []
      automountServiceAccountToken: false
      containers:
      - args: null
        command: null
        env:
        - name: SAS_K8S_DEPLOYMENT_NAME
          value: sas-data-mining-results
        envFrom:
        - configMapRef:
            name: sas-go-config-7hc79bmf8m
        - configMapRef:
            name: sas-shared-config-49d8hthtb5
        - secretRef:
            name: sas-consul-client
        - configMapRef:
            name: sas-tls-config-99f79t29t5
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-data-mining-results:22.23.7-20201203.1607025661511
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - sh
              - -c
              - sleep 5
        livenessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http
            scheme: HTTPS
          periodSeconds: 10
        name: sas-data-mining-results
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/ready
            port: http
            scheme: HTTPS
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 2Gi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add: []
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        startupProbe:
          failureThreshold: 180
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http
            scheme: HTTPS
          periodSeconds: 10
        volumeDevices: []
        volumeMounts:
        - mountPath: /tmp
          name: tmp
        - mountPath: /security
          name: security
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/cacerts
          name: security
          subPath: cacerts
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/private
          name: security
          subPath: private
      hostAliases: []
      imagePullSecrets:
      - name: sas-image-pull-secrets-4m8cc729k8
      initContainers:
      - env:
        - name: KUBE_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: SAS_CERTFRAME_TOKEN_DIR
          value: /certframe-token
        - name: SAS_ADDITIONAL_CA_CERTIFICATES_DIR
          value: /customer-provided-ca-certificates
        envFrom:
        - configMapRef:
            name: sas-certframe-ingress-certificate-config-cmm2t44t88
        - configMapRef:
            name: sas-certframe-user-config-c4ch2c59m7
        - configMapRef:
            name: sas-certframe-config-ctgg29gf7t
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-certframe:3.9.0-20201203.1607016443086
        name: sas-certframe
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /certframe-token
          name: certframe-token
        - mountPath: /security
          name: security
        - mountPath: /customer-provided-ca-certificates
          name: customer-provided-ca-certificates
      readinessGates: []
      securityContext:
        runAsNonRoot: true
        supplementalGroups: []
        sysctls: []
      tolerations:
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateful
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateless
      volumes:
      - name: certframe-token
        secret:
          secretName: sas-certframe-token
      - emptyDir: {}
        name: security
      - configMap:
          name: sas-customer-provided-ca-certificates-29kdmk686c
        name: customer-provided-ca-certificates
      - emptyDir: {}
        name: tmp
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sas.com/certificate-file-format: jks
    sas.com/component-name: sas-data-mining-services
    sas.com/component-version: 39.20.78-20201203.1607026321951
    sas.com/kustomize-base: spring
    sas.com/pod-uses-liveness-probe: http
    sas.com/pod-uses-readiness-probe: http
    sas.com/pod-uses-startup-probe: http
    sas.com/version: 39.20.78
    sidecar.istio.io/proxyCPU: 15m
    sidecar.istio.io/proxyMemory: 115Mi
  labels:
    app.kubernetes.io/name: sas-data-mining-services
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
    sas.com/deployment-base: spring
    workload.sas.com/class: stateless
  name: sas-data-mining-services
  namespace: franceavv
spec:
  selector:
    matchExpressions: []
    matchLabels:
      app.kubernetes.io/name: sas-data-mining-services
      sas.com/deployment: sas-viya
  template:
    metadata:
      annotations:
        prometheus.io/path: /internal/metrics
        prometheus.io/port: "10445"
        prometheus.io/scheme: https
        prometheus.io/scrape: "true"
        sas.com/certificate-file-format: jks
        sas.com/component-name: sas-data-mining-services
        sas.com/component-version: 39.20.78-20201203.1607026321951
        sas.com/kustomize-base: spring
        sas.com/pod-uses-liveness-probe: http
        sas.com/pod-uses-readiness-probe: http
        sas.com/pod-uses-startup-probe: http
        sas.com/tls-enabled-ports: all
        sas.com/version: 39.20.78
        seccomp.security.alpha.kubernetes.io/pod: runtime/default
        sidecar.istio.io/proxyCPU: 15m
        sidecar.istio.io/proxyMemory: 115Mi
      labels:
        app: sas-data-mining-services
        app.kubernetes.io/name: sas-data-mining-services
        sas.com/deployment: sas-viya
        workload.sas.com/class: stateless
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: In
                values:
                - stateless
              matchFields: []
            weight: 100
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: NotIn
                values:
                - compute
                - cas
                - stateful
                - connect
              matchFields: []
            weight: 50
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.azure.com/mode
                operator: NotIn
                values:
                - system
              matchFields: []
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - sas-data-mining-services
              namespaces: []
              topologyKey: kubernetes.io/hostname
            weight: 100
          requiredDuringSchedulingIgnoredDuringExecution: []
      automountServiceAccountToken: false
      containers:
      - args: null
        command: null
        env:
        - name: SAS_K8S_DEPLOYMENT_NAME
          value: sas-data-mining-services
        - name: JAVA_OPTION_SERVER_PORT
        - name: MANAGEMENT_SERVER_PORT
          value: ${sas.${spring.application.name}.management.server.port:10445}
        envFrom:
        - configMapRef:
            name: sas-java-config-t7t5thbgkd
        - configMapRef:
            name: sas-shared-config-49d8hthtb5
        - secretRef:
            name: sas-consul-client
        - configMapRef:
            name: sas-spring-management-config-d64bbkhb97
        - configMapRef:
            name: sas-java-tls-config-fch4777298
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-data-mining-services:39.20.78-20201203.1607026321951
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - sh
              - -c
              - sleep 5
        livenessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http-internal
            scheme: HTTPS
          periodSeconds: 10
        name: sas-data-mining-services
        ports:
        - containerPort: 10445
          name: http-internal
          protocol: TCP
        - containerPort: 8081
          name: dminewh
          protocol: TCP
        - containerPort: 8082
          name: dmine
          protocol: TCP
        - containerPort: 8083
          name: mlpa
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/ready
            port: http-internal
            scheme: HTTPS
          periodSeconds: 10
        resources:
          limits:
            cpu: 2000m
            memory: 2Gi
          requests:
            cpu: 50m
            memory: 1Gi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add: []
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        startupProbe:
          failureThreshold: 180
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http-internal
            scheme: HTTPS
          initialDelaySeconds: 20
          periodSeconds: 10
        volumeDevices: []
        volumeMounts:
        - mountPath: /tmp
          name: tmp
        - mountPath: /opt/sas/viya/config/tmp
          name: tmp
        - mountPath: /security
          name: security
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/cacerts
          name: security
          subPath: cacerts
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/private
          name: security
          subPath: private
      hostAliases: []
      imagePullSecrets:
      - name: sas-image-pull-secrets-4m8cc729k8
      initContainers:
      - env:
        - name: KUBE_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: SAS_CERTFRAME_TOKEN_DIR
          value: /certframe-token
        - name: SAS_ADDITIONAL_CA_CERTIFICATES_DIR
          value: /customer-provided-ca-certificates
        envFrom:
        - configMapRef:
            name: sas-certframe-ingress-certificate-config-cmm2t44t88
        - configMapRef:
            name: sas-certframe-user-config-c4ch2c59m7
        - configMapRef:
            name: sas-certframe-java-config-gf4kt94898
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-certframe:3.9.0-20201203.1607016443086
        name: sas-certframe
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /certframe-token
          name: certframe-token
        - mountPath: /security
          name: security
        - mountPath: /customer-provided-ca-certificates
          name: customer-provided-ca-certificates
      readinessGates: []
      securityContext:
        runAsNonRoot: true
        supplementalGroups: []
        sysctls: []
      tolerations:
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateful
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateless
      volumes:
      - name: certframe-token
        secret:
          secretName: sas-certframe-token
      - emptyDir: {}
        name: security
      - configMap:
          name: sas-customer-provided-ca-certificates-29kdmk686c
        name: customer-provided-ca-certificates
      - emptyDir: {}
        name: tmp
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sas.com/certificate-file-format: jks
    sas.com/component-name: sas-data-plans
    sas.com/component-version: 1.22.14-20201209.1607474940409
    sas.com/kustomize-base: spring
    sas.com/pod-uses-liveness-probe: http
    sas.com/pod-uses-readiness-probe: http
    sas.com/pod-uses-startup-probe: http
    sas.com/version: 1.22.14
    sidecar.istio.io/proxyCPU: 15m
    sidecar.istio.io/proxyMemory: 115Mi
  labels:
    app.kubernetes.io/name: sas-data-plans
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
    sas.com/deployment-base: spring
    workload.sas.com/class: stateless
  name: sas-data-plans
  namespace: franceavv
spec:
  selector:
    matchExpressions: []
    matchLabels:
      app.kubernetes.io/name: sas-data-plans
      sas.com/deployment: sas-viya
  template:
    metadata:
      annotations:
        prometheus.io/path: /internal/metrics
        prometheus.io/port: "10445"
        prometheus.io/scheme: https
        prometheus.io/scrape: "true"
        sas.com/certificate-file-format: jks
        sas.com/component-name: sas-data-plans
        sas.com/component-version: 1.22.14-20201209.1607474940409
        sas.com/kustomize-base: spring
        sas.com/pod-uses-liveness-probe: http
        sas.com/pod-uses-readiness-probe: http
        sas.com/pod-uses-startup-probe: http
        sas.com/tls-enabled-ports: all
        sas.com/version: 1.22.14
        seccomp.security.alpha.kubernetes.io/pod: runtime/default
        sidecar.istio.io/proxyCPU: 15m
        sidecar.istio.io/proxyMemory: 115Mi
      labels:
        app: sas-data-plans
        app.kubernetes.io/name: sas-data-plans
        sas.com/deployment: sas-viya
        workload.sas.com/class: stateless
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: In
                values:
                - stateless
              matchFields: []
            weight: 100
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: NotIn
                values:
                - compute
                - cas
                - stateful
                - connect
              matchFields: []
            weight: 50
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.azure.com/mode
                operator: NotIn
                values:
                - system
              matchFields: []
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - sas-data-plans
              namespaces: []
              topologyKey: kubernetes.io/hostname
            weight: 100
          requiredDuringSchedulingIgnoredDuringExecution: []
      automountServiceAccountToken: false
      containers:
      - args: null
        command: null
        env:
        - name: SAS_K8S_DEPLOYMENT_NAME
          value: sas-data-plans
        envFrom:
        - configMapRef:
            name: sas-java-config-t7t5thbgkd
        - configMapRef:
            name: sas-shared-config-49d8hthtb5
        - secretRef:
            name: sas-consul-client
        - configMapRef:
            name: sas-spring-management-config-d64bbkhb97
        - configMapRef:
            name: sas-java-tls-config-fch4777298
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-data-plans:1.22.14-20201209.1607474940409
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - sh
              - -c
              - sleep 5
        livenessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http-internal
            scheme: HTTPS
          periodSeconds: 10
        name: sas-data-plans
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        - containerPort: 10445
          name: http-internal
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/ready
            port: http-internal
            scheme: HTTPS
          periodSeconds: 10
        resources:
          limits:
            cpu: 2000m
            memory: 1Gi
          requests:
            cpu: 50m
            memory: 650M
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add: []
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        startupProbe:
          failureThreshold: 180
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http-internal
            scheme: HTTPS
          initialDelaySeconds: 20
          periodSeconds: 10
        volumeDevices: []
        volumeMounts:
        - mountPath: /tmp
          name: tmp
        - mountPath: /opt/sas/viya/config/tmp
          name: tmp
        - mountPath: /security
          name: security
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/cacerts
          name: security
          subPath: cacerts
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/private
          name: security
          subPath: private
      hostAliases: []
      imagePullSecrets:
      - name: sas-image-pull-secrets-4m8cc729k8
      initContainers:
      - env:
        - name: KUBE_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: SAS_CERTFRAME_TOKEN_DIR
          value: /certframe-token
        - name: SAS_ADDITIONAL_CA_CERTIFICATES_DIR
          value: /customer-provided-ca-certificates
        envFrom:
        - configMapRef:
            name: sas-certframe-ingress-certificate-config-cmm2t44t88
        - configMapRef:
            name: sas-certframe-user-config-c4ch2c59m7
        - configMapRef:
            name: sas-certframe-java-config-gf4kt94898
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-certframe:3.9.0-20201203.1607016443086
        name: sas-certframe
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /certframe-token
          name: certframe-token
        - mountPath: /security
          name: security
        - mountPath: /customer-provided-ca-certificates
          name: customer-provided-ca-certificates
      readinessGates: []
      securityContext:
        runAsNonRoot: true
        supplementalGroups: []
        sysctls: []
      tolerations:
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateful
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateless
      volumes:
      - name: certframe-token
        secret:
          secretName: sas-certframe-token
      - emptyDir: {}
        name: security
      - configMap:
          name: sas-customer-provided-ca-certificates-29kdmk686c
        name: customer-provided-ca-certificates
      - emptyDir: {}
        name: tmp
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sas.com/certificate-file-format: pem
    sas.com/component-name: sas-data-profiles
    sas.com/component-version: 4.32.1-20201203.1607011072196
    sas.com/kustomize-base: golang
    sas.com/pod-uses-db-migrator: "true"
    sas.com/pod-uses-liveness-probe: http
    sas.com/pod-uses-readiness-probe: http
    sas.com/pod-uses-startup-probe: http
    sas.com/version: 4.32.1
    sidecar.istio.io/proxyCPU: 15m
    sidecar.istio.io/proxyMemory: 115Mi
  labels:
    app.kubernetes.io/name: sas-data-profiles
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
    sas.com/deployment-base: golang
    workload.sas.com/class: stateless
  name: sas-data-profiles
  namespace: franceavv
spec:
  selector:
    matchExpressions: []
    matchLabels:
      app.kubernetes.io/name: sas-data-profiles
      sas.com/deployment: sas-viya
  template:
    metadata:
      annotations:
        prometheus.io/path: /internal/metrics
        prometheus.io/port: "8080"
        prometheus.io/scheme: https
        prometheus.io/scrape: "true"
        sas.com/certificate-file-format: pem
        sas.com/component-name: sas-data-profiles
        sas.com/component-version: 4.32.1-20201203.1607011072196
        sas.com/kustomize-base: golang
        sas.com/pod-uses-liveness-probe: http
        sas.com/pod-uses-readiness-probe: http
        sas.com/pod-uses-startup-probe: http
        sas.com/tls-enabled-ports: all
        sas.com/version: 4.32.1
        seccomp.security.alpha.kubernetes.io/pod: runtime/default
        sidecar.istio.io/proxyCPU: 15m
        sidecar.istio.io/proxyMemory: 115Mi
      labels:
        app: sas-data-profiles
        app.kubernetes.io/name: sas-data-profiles
        sas.com/deployment: sas-viya
        workload.sas.com/class: stateless
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: In
                values:
                - stateless
              matchFields: []
            weight: 100
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: NotIn
                values:
                - compute
                - cas
                - stateful
                - connect
              matchFields: []
            weight: 50
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.azure.com/mode
                operator: NotIn
                values:
                - system
              matchFields: []
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - sas-data-profiles
              namespaces: []
              topologyKey: kubernetes.io/hostname
            weight: 100
          requiredDuringSchedulingIgnoredDuringExecution: []
      automountServiceAccountToken: false
      containers:
      - args: null
        command: null
        env:
        - name: SAS_K8S_DEPLOYMENT_NAME
          value: sas-data-profiles
        envFrom:
        - configMapRef:
            name: sas-go-config-7hc79bmf8m
        - configMapRef:
            name: sas-shared-config-49d8hthtb5
        - secretRef:
            name: sas-consul-client
        - configMapRef:
            name: sas-tls-config-99f79t29t5
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-data-profiles:4.32.1-20201203.1607011072196
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - sh
              - -c
              - sleep 5
        livenessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http
            scheme: HTTPS
          periodSeconds: 10
        name: sas-data-profiles
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/ready
            port: http
            scheme: HTTPS
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add: []
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        startupProbe:
          failureThreshold: 180
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http
            scheme: HTTPS
          periodSeconds: 10
        volumeDevices: []
        volumeMounts:
        - mountPath: /tmp
          name: tmp
        - mountPath: /security
          name: security
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/cacerts
          name: security
          subPath: cacerts
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/private
          name: security
          subPath: private
      hostAliases: []
      imagePullSecrets:
      - name: sas-image-pull-secrets-4m8cc729k8
      initContainers:
      - env:
        - name: KUBE_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: SAS_CERTFRAME_TOKEN_DIR
          value: /certframe-token
        - name: SAS_ADDITIONAL_CA_CERTIFICATES_DIR
          value: /customer-provided-ca-certificates
        envFrom:
        - configMapRef:
            name: sas-certframe-ingress-certificate-config-cmm2t44t88
        - configMapRef:
            name: sas-certframe-user-config-c4ch2c59m7
        - configMapRef:
            name: sas-certframe-config-ctgg29gf7t
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-certframe:3.9.0-20201203.1607016443086
        name: sas-certframe
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /certframe-token
          name: certframe-token
        - mountPath: /security
          name: security
        - mountPath: /customer-provided-ca-certificates
          name: customer-provided-ca-certificates
      - args:
        - cp -rf meta /data
        command:
        - /bin/sh
        - -c
        env: []
        envFrom: []
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-data-profiles:4.32.1-20201203.1607011072196
        imagePullPolicy: IfNotPresent
        name: hydrator
        ports: []
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 75m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add: []
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeDevices: []
        volumeMounts:
        - mountPath: /data
          name: shared-vol
      - args: null
        command: null
        env:
        - name: SSL_CERT_FILE
          value: /security/trustedcerts.pem
        - name: SAS_SERVICE_NAME
          value: sas-data-profiles
        envFrom:
        - configMapRef:
            name: sas-go-config-7hc79bmf8m
        - configMapRef:
            name: sas-shared-config-49d8hthtb5
        - configMapRef:
            name: sas-java-config-t7t5thbgkd
        - secretRef:
            name: sas-consul-client
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-db-migrator:1.1.0-20201209.1607523698073
        imagePullPolicy: IfNotPresent
        name: sas-db-migrator
        ports: []
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 100m
            memory: 90Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add: []
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeDevices: []
        volumeMounts:
        - mountPath: /security
          name: security
        - mountPath: /data
          name: shared-vol
      readinessGates: []
      securityContext:
        runAsNonRoot: true
        supplementalGroups: []
        sysctls: []
      tolerations:
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateful
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateless
      volumes:
      - name: certframe-token
        secret:
          secretName: sas-certframe-token
      - emptyDir: {}
        name: security
      - configMap:
          name: sas-customer-provided-ca-certificates-29kdmk686c
        name: customer-provided-ca-certificates
      - emptyDir: {}
        name: tmp
      - emptyDir: {}
        name: shared-vol
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sas.com/certificate-file-format: pem
    sas.com/component-name: sas-data-quality-services
    sas.com/component-version: 3.8.1-20201202.1606939069890
    sas.com/kustomize-base: golang
    sas.com/pod-uses-db-migrator: "true"
    sas.com/pod-uses-liveness-probe: http
    sas.com/pod-uses-readiness-probe: http
    sas.com/pod-uses-startup-probe: http
    sas.com/version: 3.8.1
    sidecar.istio.io/proxyCPU: 15m
    sidecar.istio.io/proxyMemory: 115Mi
  labels:
    app.kubernetes.io/name: sas-data-quality-services
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
    sas.com/deployment-base: golang
    workload.sas.com/class: stateless
  name: sas-data-quality-services
  namespace: franceavv
spec:
  selector:
    matchExpressions: []
    matchLabels:
      app.kubernetes.io/name: sas-data-quality-services
      sas.com/deployment: sas-viya
  template:
    metadata:
      annotations:
        prometheus.io/path: /internal/metrics
        prometheus.io/port: "8080"
        prometheus.io/scheme: https
        prometheus.io/scrape: "true"
        sas.com/certificate-file-format: pem
        sas.com/component-name: sas-data-quality-services
        sas.com/component-version: 3.8.1-20201202.1606939069890
        sas.com/kustomize-base: golang
        sas.com/pod-uses-liveness-probe: http
        sas.com/pod-uses-readiness-probe: http
        sas.com/pod-uses-startup-probe: http
        sas.com/tls-enabled-ports: all
        sas.com/version: 3.8.1
        seccomp.security.alpha.kubernetes.io/pod: runtime/default
        sidecar.istio.io/proxyCPU: 15m
        sidecar.istio.io/proxyMemory: 115Mi
      labels:
        app: sas-data-quality-services
        app.kubernetes.io/name: sas-data-quality-services
        sas.com/deployment: sas-viya
        workload.sas.com/class: stateless
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: In
                values:
                - stateless
              matchFields: []
            weight: 100
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: NotIn
                values:
                - compute
                - cas
                - stateful
                - connect
              matchFields: []
            weight: 50
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.azure.com/mode
                operator: NotIn
                values:
                - system
              matchFields: []
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - sas-data-quality-services
              namespaces: []
              topologyKey: kubernetes.io/hostname
            weight: 100
          requiredDuringSchedulingIgnoredDuringExecution: []
      automountServiceAccountToken: false
      containers:
      - args: null
        command: null
        env:
        - name: SAS_K8S_DEPLOYMENT_NAME
          value: sas-data-quality-services
        envFrom:
        - configMapRef:
            name: sas-go-config-7hc79bmf8m
        - configMapRef:
            name: sas-shared-config-49d8hthtb5
        - secretRef:
            name: sas-consul-client
        - configMapRef:
            name: sas-tls-config-99f79t29t5
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-data-quality-services:3.8.1-20201202.1606939069890
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - sh
              - -c
              - sleep 5
        livenessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http
            scheme: HTTPS
          periodSeconds: 10
        name: sas-data-quality-services
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/ready
            port: http
            scheme: HTTPS
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add: []
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        startupProbe:
          failureThreshold: 180
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http
            scheme: HTTPS
          periodSeconds: 10
        volumeDevices: []
        volumeMounts:
        - mountPath: /tmp
          name: tmp
        - mountPath: /qkb
          name: sas-quality-knowledge-base-volume
        - mountPath: /security
          name: security
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/cacerts
          name: security
          subPath: cacerts
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/private
          name: security
          subPath: private
      hostAliases: []
      imagePullSecrets:
      - name: sas-image-pull-secrets-4m8cc729k8
      initContainers:
      - env:
        - name: KUBE_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: SAS_CERTFRAME_TOKEN_DIR
          value: /certframe-token
        - name: SAS_ADDITIONAL_CA_CERTIFICATES_DIR
          value: /customer-provided-ca-certificates
        envFrom:
        - configMapRef:
            name: sas-certframe-ingress-certificate-config-cmm2t44t88
        - configMapRef:
            name: sas-certframe-user-config-c4ch2c59m7
        - configMapRef:
            name: sas-certframe-config-ctgg29gf7t
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-certframe:3.9.0-20201203.1607016443086
        name: sas-certframe
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /certframe-token
          name: certframe-token
        - mountPath: /security
          name: security
        - mountPath: /customer-provided-ca-certificates
          name: customer-provided-ca-certificates
      - args:
        - cp -rf meta /data
        command:
        - /bin/sh
        - -c
        env: []
        envFrom: []
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-data-quality-services:3.8.1-20201202.1606939069890
        imagePullPolicy: IfNotPresent
        name: hydrator
        ports: []
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 75m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add: []
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeDevices: []
        volumeMounts:
        - mountPath: /data
          name: shared-vol
      - args: null
        command: null
        env:
        - name: SSL_CERT_FILE
          value: /security/trustedcerts.pem
        - name: SAS_SERVICE_NAME
          value: sas-data-quality-services
        envFrom:
        - configMapRef:
            name: sas-go-config-7hc79bmf8m
        - configMapRef:
            name: sas-shared-config-49d8hthtb5
        - configMapRef:
            name: sas-java-config-t7t5thbgkd
        - secretRef:
            name: sas-consul-client
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-db-migrator:1.1.0-20201209.1607523698073
        imagePullPolicy: IfNotPresent
        name: sas-db-migrator
        ports: []
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 100m
            memory: 90Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add: []
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeDevices: []
        volumeMounts:
        - mountPath: /security
          name: security
        - mountPath: /data
          name: shared-vol
      readinessGates: []
      securityContext:
        runAsNonRoot: true
        supplementalGroups: []
        sysctls: []
      tolerations:
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateful
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateless
      volumes:
      - name: certframe-token
        secret:
          secretName: sas-certframe-token
      - emptyDir: {}
        name: security
      - configMap:
          name: sas-customer-provided-ca-certificates-29kdmk686c
        name: customer-provided-ca-certificates
      - emptyDir: {}
        name: tmp
      - emptyDir: {}
        name: shared-vol
      - name: sas-quality-knowledge-base-volume
        persistentVolumeClaim:
          claimName: sas-quality-knowledge-base
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sas.com/certificate-file-format: pem
    sas.com/component-name: sas-data-server-utility
    sas.com/component-version: 20.6.0-20201118.1605736584855
    sas.com/kustomize-base: base
    sas.com/version: 20.6.0
    sidecar.istio.io/proxyCPU: 15m
    sidecar.istio.io/proxyMemory: 115Mi
  labels:
    app.kubernetes.io/name: sas-data-server-utility
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
    workload.sas.com/class: stateless
  name: sas-data-server-utility
  namespace: franceavv
spec:
  selector:
    matchExpressions: []
    matchLabels:
      app.kubernetes.io/name: sas-data-server-utility
      sas.com/deployment: sas-viya
  template:
    metadata:
      annotations:
        prometheus.io/path: /internal/metrics
        prometheus.io/port: "8080"
        prometheus.io/scheme: https
        prometheus.io/scrape: "true"
        sas.com/certificate-file-format: pem
        sas.com/component-name: sas-data-server-utility
        sas.com/component-version: 20.6.0-20201118.1605736584855
        sas.com/kustomize-base: base
        sas.com/tls-enabled-ports: all
        sas.com/version: 20.6.0
        sidecar.istio.io/proxyCPU: 15m
        sidecar.istio.io/proxyMemory: 115Mi
      labels:
        app: sas-data-server-utility
        app.kubernetes.io/name: sas-data-server-utility
        sas.com/deployment: sas-viya
        workload.sas.com/class: stateless
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: In
                values:
                - stateless
              matchFields: []
            weight: 100
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: NotIn
                values:
                - compute
                - cas
                - stateful
                - connect
              matchFields: []
            weight: 50
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.azure.com/mode
                operator: NotIn
                values:
                - system
              matchFields: []
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - sas-data-server-utility
              namespaces: []
              topologyKey: kubernetes.io/hostname
            weight: 100
          requiredDuringSchedulingIgnoredDuringExecution: []
      automountServiceAccountToken: true
      containers:
      - args: null
        command: null
        env:
        - name: SAS_K8S_DEPLOYMENT_NAME
          value: sas-data-server-utility
        envFrom:
        - configMapRef:
            name: sas-shared-config-49d8hthtb5
        - secretRef:
            name: sas-consul-client
        - configMapRef:
            name: sas-postgres-config-bc9cd67gm8
            optional: false
        - configMapRef:
            name: sas-go-config-7hc79bmf8m
            optional: true
        - configMapRef:
            name: sas-tls-config-99f79t29t5
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-data-server-utility:20.6.0-20201118.1605736584855
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - sh
              - -c
              - sleep 5
        name: sas-data-server-utility
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        resources:
          limits:
            cpu: 100m
            memory: 530Mi
          requests:
            cpu: 10m
            memory: 53Mi
        securityContext:
          allowPrivilegeEscalation: false
          privileged: false
          readOnlyRootFilesystem: true
        volumeDevices: []
        volumeMounts:
        - mountPath: /tmp
          name: tmp
        - mountPath: /security
          name: security
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/cacerts
          name: security
          subPath: cacerts
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/private
          name: security
          subPath: private
      hostAliases: []
      imagePullSecrets:
      - name: sas-image-pull-secrets-4m8cc729k8
      initContainers:
      - env:
        - name: KUBE_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: SAS_CERTFRAME_TOKEN_DIR
          value: /certframe-token
        - name: SAS_ADDITIONAL_CA_CERTIFICATES_DIR
          value: /customer-provided-ca-certificates
        envFrom:
        - configMapRef:
            name: sas-certframe-ingress-certificate-config-cmm2t44t88
        - configMapRef:
            name: sas-certframe-user-config-c4ch2c59m7
        - configMapRef:
            name: sas-certframe-config-ctgg29gf7t
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-certframe:3.9.0-20201203.1607016443086
        name: sas-certframe
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /certframe-token
          name: certframe-token
        - mountPath: /security
          name: security
        - mountPath: /customer-provided-ca-certificates
          name: customer-provided-ca-certificates
      readinessGates: []
      securityContext:
        runAsNonRoot: true
        supplementalGroups: []
        sysctls: []
      serviceAccountName: sas-data-server-utility
      tolerations:
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateful
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateless
      volumes:
      - name: certframe-token
        secret:
          secretName: sas-certframe-token
      - emptyDir: {}
        name: security
      - configMap:
          name: sas-customer-provided-ca-certificates-29kdmk686c
        name: customer-provided-ca-certificates
      - emptyDir: {}
        name: tmp
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sas.com/certificate-file-format: pem
    sas.com/component-name: sas-data-sources
    sas.com/component-version: 3.33.1-20201202.1606937911915
    sas.com/kustomize-base: golang
    sas.com/pod-uses-db-migrator: "true"
    sas.com/pod-uses-liveness-probe: http
    sas.com/pod-uses-readiness-probe: http
    sas.com/pod-uses-startup-probe: http
    sas.com/version: 3.33.1
    sidecar.istio.io/proxyCPU: 15m
    sidecar.istio.io/proxyMemory: 115Mi
  labels:
    app.kubernetes.io/name: sas-data-sources
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
    sas.com/deployment-base: golang
    workload.sas.com/class: stateless
  name: sas-data-sources
  namespace: franceavv
spec:
  selector:
    matchExpressions: []
    matchLabels:
      app.kubernetes.io/name: sas-data-sources
      sas.com/deployment: sas-viya
  template:
    metadata:
      annotations:
        prometheus.io/path: /internal/metrics
        prometheus.io/port: "8080"
        prometheus.io/scheme: https
        prometheus.io/scrape: "true"
        sas.com/certificate-file-format: pem
        sas.com/component-name: sas-data-sources
        sas.com/component-version: 3.33.1-20201202.1606937911915
        sas.com/kustomize-base: golang
        sas.com/pod-uses-liveness-probe: http
        sas.com/pod-uses-readiness-probe: http
        sas.com/pod-uses-startup-probe: http
        sas.com/tls-enabled-ports: all
        sas.com/version: 3.33.1
        seccomp.security.alpha.kubernetes.io/pod: runtime/default
        sidecar.istio.io/proxyCPU: 15m
        sidecar.istio.io/proxyMemory: 115Mi
      labels:
        app: sas-data-sources
        app.kubernetes.io/name: sas-data-sources
        sas.com/deployment: sas-viya
        workload.sas.com/class: stateless
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: In
                values:
                - stateless
              matchFields: []
            weight: 100
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: NotIn
                values:
                - compute
                - cas
                - stateful
                - connect
              matchFields: []
            weight: 50
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.azure.com/mode
                operator: NotIn
                values:
                - system
              matchFields: []
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - sas-data-sources
              namespaces: []
              topologyKey: kubernetes.io/hostname
            weight: 100
          requiredDuringSchedulingIgnoredDuringExecution: []
      automountServiceAccountToken: false
      containers:
      - args: null
        command: null
        env:
        - name: SAS_K8S_DEPLOYMENT_NAME
          value: sas-data-sources
        envFrom:
        - configMapRef:
            name: sas-go-config-7hc79bmf8m
        - configMapRef:
            name: sas-shared-config-49d8hthtb5
        - secretRef:
            name: sas-consul-client
        - configMapRef:
            name: sas-tls-config-99f79t29t5
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-data-sources:3.33.1-20201202.1606937911915
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - sh
              - -c
              - sleep 5
        livenessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http
            scheme: HTTPS
          periodSeconds: 10
        name: sas-data-sources
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/ready
            port: http
            scheme: HTTPS
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add: []
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        startupProbe:
          failureThreshold: 180
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http
            scheme: HTTPS
          periodSeconds: 10
        volumeDevices: []
        volumeMounts:
        - mountPath: /tmp
          name: tmp
        - mountPath: /security
          name: security
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/cacerts
          name: security
          subPath: cacerts
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/private
          name: security
          subPath: private
      hostAliases: []
      imagePullSecrets:
      - name: sas-image-pull-secrets-4m8cc729k8
      initContainers:
      - env:
        - name: KUBE_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: SAS_CERTFRAME_TOKEN_DIR
          value: /certframe-token
        - name: SAS_ADDITIONAL_CA_CERTIFICATES_DIR
          value: /customer-provided-ca-certificates
        envFrom:
        - configMapRef:
            name: sas-certframe-ingress-certificate-config-cmm2t44t88
        - configMapRef:
            name: sas-certframe-user-config-c4ch2c59m7
        - configMapRef:
            name: sas-certframe-config-ctgg29gf7t
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-certframe:3.9.0-20201203.1607016443086
        name: sas-certframe
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /certframe-token
          name: certframe-token
        - mountPath: /security
          name: security
        - mountPath: /customer-provided-ca-certificates
          name: customer-provided-ca-certificates
      - args:
        - cp -rf meta /data
        command:
        - /bin/sh
        - -c
        env: []
        envFrom: []
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-data-sources:3.33.1-20201202.1606937911915
        imagePullPolicy: IfNotPresent
        name: hydrator
        ports: []
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 75m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add: []
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeDevices: []
        volumeMounts:
        - mountPath: /data
          name: shared-vol
      - args: null
        command: null
        env:
        - name: SSL_CERT_FILE
          value: /security/trustedcerts.pem
        - name: SAS_SERVICE_NAME
          value: sas-data-sources
        envFrom:
        - configMapRef:
            name: sas-go-config-7hc79bmf8m
        - configMapRef:
            name: sas-shared-config-49d8hthtb5
        - configMapRef:
            name: sas-java-config-t7t5thbgkd
        - secretRef:
            name: sas-consul-client
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-db-migrator:1.1.0-20201209.1607523698073
        imagePullPolicy: IfNotPresent
        name: sas-db-migrator
        ports: []
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 100m
            memory: 90Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add: []
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeDevices: []
        volumeMounts:
        - mountPath: /security
          name: security
        - mountPath: /data
          name: shared-vol
      readinessGates: []
      securityContext:
        runAsNonRoot: true
        supplementalGroups: []
        sysctls: []
      tolerations:
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateful
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateless
      volumes:
      - name: certframe-token
        secret:
          secretName: sas-certframe-token
      - emptyDir: {}
        name: security
      - configMap:
          name: sas-customer-provided-ca-certificates-29kdmk686c
        name: customer-provided-ca-certificates
      - emptyDir: {}
        name: tmp
      - emptyDir: {}
        name: shared-vol
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sas.com/certificate-file-format: jks
    sas.com/component-name: sas-data-studio-app
    sas.com/component-version: 1.22.25-20201209.1607475335725
    sas.com/kustomize-base: spring
    sas.com/pod-uses-liveness-probe: http
    sas.com/pod-uses-readiness-probe: http
    sas.com/pod-uses-startup-probe: http
    sas.com/version: 1.22.25
    sidecar.istio.io/proxyCPU: 15m
    sidecar.istio.io/proxyMemory: 115Mi
  labels:
    app.kubernetes.io/name: sas-data-studio-app
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
    sas.com/deployment-base: spring
    workload.sas.com/class: stateless
  name: sas-data-studio-app
  namespace: franceavv
spec:
  selector:
    matchExpressions: []
    matchLabels:
      app.kubernetes.io/name: sas-data-studio-app
      sas.com/deployment: sas-viya
  template:
    metadata:
      annotations:
        prometheus.io/path: /internal/metrics
        prometheus.io/port: "10445"
        prometheus.io/scheme: https
        prometheus.io/scrape: "true"
        sas.com/certificate-file-format: jks
        sas.com/component-name: sas-data-studio-app
        sas.com/component-version: 1.22.25-20201209.1607475335725
        sas.com/kustomize-base: spring
        sas.com/pod-uses-liveness-probe: http
        sas.com/pod-uses-readiness-probe: http
        sas.com/pod-uses-startup-probe: http
        sas.com/tls-enabled-ports: all
        sas.com/version: 1.22.25
        seccomp.security.alpha.kubernetes.io/pod: runtime/default
        sidecar.istio.io/proxyCPU: 15m
        sidecar.istio.io/proxyMemory: 115Mi
      labels:
        app: sas-data-studio-app
        app.kubernetes.io/name: sas-data-studio-app
        sas.com/deployment: sas-viya
        workload.sas.com/class: stateless
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: In
                values:
                - stateless
              matchFields: []
            weight: 100
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: NotIn
                values:
                - compute
                - cas
                - stateful
                - connect
              matchFields: []
            weight: 50
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.azure.com/mode
                operator: NotIn
                values:
                - system
              matchFields: []
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - sas-data-studio-app
              namespaces: []
              topologyKey: kubernetes.io/hostname
            weight: 100
          requiredDuringSchedulingIgnoredDuringExecution: []
      automountServiceAccountToken: false
      containers:
      - args: null
        command: null
        env:
        - name: SAS_K8S_DEPLOYMENT_NAME
          value: sas-data-studio-app
        envFrom:
        - configMapRef:
            name: sas-java-config-t7t5thbgkd
        - configMapRef:
            name: sas-shared-config-49d8hthtb5
        - secretRef:
            name: sas-consul-client
        - configMapRef:
            name: sas-spring-management-config-d64bbkhb97
        - configMapRef:
            name: sas-java-tls-config-fch4777298
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-data-studio-app:1.22.25-20201209.1607475335725
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - sh
              - -c
              - sleep 5
        livenessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http-internal
            scheme: HTTPS
          periodSeconds: 10
        name: sas-data-studio-app
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        - containerPort: 10445
          name: http-internal
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/ready
            port: http-internal
            scheme: HTTPS
          periodSeconds: 10
        resources:
          limits:
            cpu: 2000m
            memory: 1Gi
          requests:
            cpu: 50m
            memory: 650M
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add: []
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        startupProbe:
          failureThreshold: 180
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http-internal
            scheme: HTTPS
          initialDelaySeconds: 20
          periodSeconds: 10
        volumeDevices: []
        volumeMounts:
        - mountPath: /tmp
          name: tmp
        - mountPath: /opt/sas/viya/config/tmp
          name: tmp
        - mountPath: /security
          name: security
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/cacerts
          name: security
          subPath: cacerts
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/private
          name: security
          subPath: private
      hostAliases: []
      imagePullSecrets:
      - name: sas-image-pull-secrets-4m8cc729k8
      initContainers:
      - env:
        - name: KUBE_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: SAS_CERTFRAME_TOKEN_DIR
          value: /certframe-token
        - name: SAS_ADDITIONAL_CA_CERTIFICATES_DIR
          value: /customer-provided-ca-certificates
        envFrom:
        - configMapRef:
            name: sas-certframe-ingress-certificate-config-cmm2t44t88
        - configMapRef:
            name: sas-certframe-user-config-c4ch2c59m7
        - configMapRef:
            name: sas-certframe-java-config-gf4kt94898
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-certframe:3.9.0-20201203.1607016443086
        name: sas-certframe
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /certframe-token
          name: certframe-token
        - mountPath: /security
          name: security
        - mountPath: /customer-provided-ca-certificates
          name: customer-provided-ca-certificates
      readinessGates: []
      securityContext:
        runAsNonRoot: true
        supplementalGroups: []
        sysctls: []
      tolerations:
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateful
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateless
      volumes:
      - name: certframe-token
        secret:
          secretName: sas-certframe-token
      - emptyDir: {}
        name: security
      - configMap:
          name: sas-customer-provided-ca-certificates-29kdmk686c
        name: customer-provided-ca-certificates
      - emptyDir: {}
        name: tmp
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sas.com/certificate-file-format: pem
    sas.com/component-name: sas-decision-manager-app
    sas.com/component-version: 5.19.0-20201210.1607632727866
    sas.com/kustomize-base: golang
    sas.com/pod-uses-liveness-probe: http
    sas.com/pod-uses-readiness-probe: http
    sas.com/pod-uses-startup-probe: http
    sas.com/version: 5.19.0
    sidecar.istio.io/proxyCPU: 15m
    sidecar.istio.io/proxyMemory: 115Mi
  labels:
    app.kubernetes.io/name: sas-decision-manager-app
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
    sas.com/deployment-base: golang
    workload.sas.com/class: stateless
  name: sas-decision-manager-app
  namespace: franceavv
spec:
  selector:
    matchExpressions: []
    matchLabels:
      app.kubernetes.io/name: sas-decision-manager-app
      sas.com/deployment: sas-viya
  template:
    metadata:
      annotations:
        prometheus.io/path: /internal/metrics
        prometheus.io/port: "8080"
        prometheus.io/scheme: https
        prometheus.io/scrape: "true"
        sas.com/certificate-file-format: pem
        sas.com/component-name: sas-decision-manager-app
        sas.com/component-version: 5.19.0-20201210.1607632727866
        sas.com/kustomize-base: golang
        sas.com/pod-uses-liveness-probe: http
        sas.com/pod-uses-readiness-probe: http
        sas.com/pod-uses-startup-probe: http
        sas.com/tls-enabled-ports: all
        sas.com/version: 5.19.0
        seccomp.security.alpha.kubernetes.io/pod: runtime/default
        sidecar.istio.io/proxyCPU: 15m
        sidecar.istio.io/proxyMemory: 115Mi
      labels:
        app: sas-decision-manager-app
        app.kubernetes.io/name: sas-decision-manager-app
        sas.com/deployment: sas-viya
        workload.sas.com/class: stateless
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: In
                values:
                - stateless
              matchFields: []
            weight: 100
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: NotIn
                values:
                - compute
                - cas
                - stateful
                - connect
              matchFields: []
            weight: 50
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.azure.com/mode
                operator: NotIn
                values:
                - system
              matchFields: []
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - sas-decision-manager-app
              namespaces: []
              topologyKey: kubernetes.io/hostname
            weight: 100
          requiredDuringSchedulingIgnoredDuringExecution: []
      automountServiceAccountToken: false
      containers:
      - args: null
        command: null
        env:
        - name: SAS_K8S_DEPLOYMENT_NAME
          value: sas-decision-manager-app
        envFrom:
        - configMapRef:
            name: sas-go-config-7hc79bmf8m
        - configMapRef:
            name: sas-shared-config-49d8hthtb5
        - secretRef:
            name: sas-consul-client
        - configMapRef:
            name: sas-tls-config-99f79t29t5
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-decision-manager-app:5.19.0-20201210.1607632727866
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - sh
              - -c
              - sleep 5
        livenessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http
            scheme: HTTPS
          periodSeconds: 10
        name: sas-decision-manager-app
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/ready
            port: http
            scheme: HTTPS
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add: []
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        startupProbe:
          failureThreshold: 180
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http
            scheme: HTTPS
          periodSeconds: 10
        volumeDevices: []
        volumeMounts:
        - mountPath: /tmp
          name: tmp
        - mountPath: /security
          name: security
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/cacerts
          name: security
          subPath: cacerts
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/private
          name: security
          subPath: private
      hostAliases: []
      imagePullSecrets:
      - name: sas-image-pull-secrets-4m8cc729k8
      initContainers:
      - env:
        - name: KUBE_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: SAS_CERTFRAME_TOKEN_DIR
          value: /certframe-token
        - name: SAS_ADDITIONAL_CA_CERTIFICATES_DIR
          value: /customer-provided-ca-certificates
        envFrom:
        - configMapRef:
            name: sas-certframe-ingress-certificate-config-cmm2t44t88
        - configMapRef:
            name: sas-certframe-user-config-c4ch2c59m7
        - configMapRef:
            name: sas-certframe-config-ctgg29gf7t
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-certframe:3.9.0-20201203.1607016443086
        name: sas-certframe
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /certframe-token
          name: certframe-token
        - mountPath: /security
          name: security
        - mountPath: /customer-provided-ca-certificates
          name: customer-provided-ca-certificates
      readinessGates: []
      securityContext:
        runAsNonRoot: true
        supplementalGroups: []
        sysctls: []
      tolerations:
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateful
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateless
      volumes:
      - name: certframe-token
        secret:
          secretName: sas-certframe-token
      - emptyDir: {}
        name: security
      - configMap:
          name: sas-customer-provided-ca-certificates-29kdmk686c
        name: customer-provided-ca-certificates
      - emptyDir: {}
        name: tmp
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sas.com/certificate-file-format: jks
    sas.com/component-name: sas-decisions-definitions
    sas.com/component-version: 3.10.15-20201210.1607644445003
    sas.com/kustomize-base: spring
    sas.com/pod-uses-liveness-probe: http
    sas.com/pod-uses-readiness-probe: http
    sas.com/pod-uses-startup-probe: http
    sas.com/version: 3.10.15
    sidecar.istio.io/proxyCPU: 15m
    sidecar.istio.io/proxyMemory: 115Mi
  labels:
    app.kubernetes.io/name: sas-decisions-definitions
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
    sas.com/deployment-base: spring
    workload.sas.com/class: stateless
  name: sas-decisions-definitions
  namespace: franceavv
spec:
  selector:
    matchExpressions: []
    matchLabels:
      app.kubernetes.io/name: sas-decisions-definitions
      sas.com/deployment: sas-viya
  template:
    metadata:
      annotations:
        prometheus.io/path: /internal/metrics
        prometheus.io/port: "10445"
        prometheus.io/scheme: https
        prometheus.io/scrape: "true"
        sas.com/certificate-file-format: jks
        sas.com/component-name: sas-decisions-definitions
        sas.com/component-version: 3.10.15-20201210.1607644445003
        sas.com/kustomize-base: spring
        sas.com/pod-uses-liveness-probe: http
        sas.com/pod-uses-readiness-probe: http
        sas.com/pod-uses-startup-probe: http
        sas.com/tls-enabled-ports: all
        sas.com/version: 3.10.15
        seccomp.security.alpha.kubernetes.io/pod: runtime/default
        sidecar.istio.io/proxyCPU: 15m
        sidecar.istio.io/proxyMemory: 115Mi
      labels:
        app: sas-decisions-definitions
        app.kubernetes.io/name: sas-decisions-definitions
        sas.com/deployment: sas-viya
        workload.sas.com/class: stateless
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: In
                values:
                - stateless
              matchFields: []
            weight: 100
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: NotIn
                values:
                - compute
                - cas
                - stateful
                - connect
              matchFields: []
            weight: 50
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.azure.com/mode
                operator: NotIn
                values:
                - system
              matchFields: []
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - sas-decisions-definitions
              namespaces: []
              topologyKey: kubernetes.io/hostname
            weight: 100
          requiredDuringSchedulingIgnoredDuringExecution: []
      automountServiceAccountToken: false
      containers:
      - args: null
        command: null
        env:
        - name: SAS_K8S_DEPLOYMENT_NAME
          value: sas-decisions-definitions
        - name: JAVA_OPTION_SERVER_PORT
        - name: MANAGEMENT_SERVER_PORT
          value: ${sas.${spring.application.name}.management.server.port:10445}
        envFrom:
        - configMapRef:
            name: sas-java-config-t7t5thbgkd
        - configMapRef:
            name: sas-shared-config-49d8hthtb5
        - secretRef:
            name: sas-consul-client
        - configMapRef:
            name: sas-spring-management-config-d64bbkhb97
        - configMapRef:
            name: sas-java-tls-config-fch4777298
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-decisions-definitions:3.10.15-20201210.1607644445003
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - sh
              - -c
              - sleep 5
        livenessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http-internal
            scheme: HTTPS
          periodSeconds: 10
        name: sas-decisions-definitions
        ports:
        - containerPort: 10445
          name: http-internal
          protocol: TCP
        - containerPort: 8081
          name: decisions
          protocol: TCP
        - containerPort: 8082
          name: treatmentdefs
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/ready
            port: http-internal
            scheme: HTTPS
          periodSeconds: 10
        resources:
          limits:
            cpu: 2000m
            memory: 1Gi
          requests:
            cpu: 50m
            memory: 650M
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add: []
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        startupProbe:
          failureThreshold: 180
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http-internal
            scheme: HTTPS
          initialDelaySeconds: 20
          periodSeconds: 10
        volumeDevices: []
        volumeMounts:
        - mountPath: /tmp
          name: tmp
        - mountPath: /opt/sas/viya/config/tmp
          name: tmp
        - mountPath: /security
          name: security
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/cacerts
          name: security
          subPath: cacerts
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/private
          name: security
          subPath: private
      hostAliases: []
      imagePullSecrets:
      - name: sas-image-pull-secrets-4m8cc729k8
      initContainers:
      - env:
        - name: KUBE_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: SAS_CERTFRAME_TOKEN_DIR
          value: /certframe-token
        - name: SAS_ADDITIONAL_CA_CERTIFICATES_DIR
          value: /customer-provided-ca-certificates
        envFrom:
        - configMapRef:
            name: sas-certframe-ingress-certificate-config-cmm2t44t88
        - configMapRef:
            name: sas-certframe-user-config-c4ch2c59m7
        - configMapRef:
            name: sas-certframe-java-config-gf4kt94898
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-certframe:3.9.0-20201203.1607016443086
        name: sas-certframe
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /certframe-token
          name: certframe-token
        - mountPath: /security
          name: security
        - mountPath: /customer-provided-ca-certificates
          name: customer-provided-ca-certificates
      readinessGates: []
      securityContext:
        runAsNonRoot: true
        supplementalGroups: []
        sysctls: []
      tolerations:
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateful
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateless
      volumes:
      - name: certframe-token
        secret:
          secretName: sas-certframe-token
      - emptyDir: {}
        name: security
      - configMap:
          name: sas-customer-provided-ca-certificates-29kdmk686c
        name: customer-provided-ca-certificates
      - emptyDir: {}
        name: tmp
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sas.com/certificate-file-format: pem
    sas.com/component-name: sas-deployment-data
    sas.com/component-version: 1.2.0-20201209.1607530266025
    sas.com/kustomize-base: golang
    sas.com/pod-uses-db-migrator: "true"
    sas.com/pod-uses-liveness-probe: http
    sas.com/pod-uses-readiness-probe: http
    sas.com/pod-uses-startup-probe: http
    sas.com/version: 1.2.0
    sidecar.istio.io/proxyCPU: 15m
    sidecar.istio.io/proxyMemory: 115Mi
  labels:
    app.kubernetes.io/name: sas-deployment-data
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
    sas.com/deployment-base: golang
    workload.sas.com/class: stateless
  name: sas-deployment-data
  namespace: franceavv
spec:
  selector:
    matchExpressions: []
    matchLabels:
      app.kubernetes.io/name: sas-deployment-data
      sas.com/deployment: sas-viya
  template:
    metadata:
      annotations:
        prometheus.io/path: /internal/metrics
        prometheus.io/port: "8080"
        prometheus.io/scheme: https
        prometheus.io/scrape: "true"
        sas.com/certificate-file-format: pem
        sas.com/component-name: sas-deployment-data
        sas.com/component-version: 1.2.0-20201209.1607530266025
        sas.com/kustomize-base: golang
        sas.com/pod-uses-liveness-probe: http
        sas.com/pod-uses-readiness-probe: http
        sas.com/pod-uses-startup-probe: http
        sas.com/tls-enabled-ports: all
        sas.com/version: 1.2.0
        seccomp.security.alpha.kubernetes.io/pod: runtime/default
        sidecar.istio.io/proxyCPU: 15m
        sidecar.istio.io/proxyMemory: 115Mi
      labels:
        app: sas-deployment-data
        app.kubernetes.io/name: sas-deployment-data
        sas.com/deployment: sas-viya
        workload.sas.com/class: stateless
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: In
                values:
                - stateless
              matchFields: []
            weight: 100
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: NotIn
                values:
                - compute
                - cas
                - stateful
                - connect
              matchFields: []
            weight: 50
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.azure.com/mode
                operator: NotIn
                values:
                - system
              matchFields: []
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - sas-deployment-data
              namespaces: []
              topologyKey: kubernetes.io/hostname
            weight: 100
          requiredDuringSchedulingIgnoredDuringExecution: []
      automountServiceAccountToken: false
      containers:
      - args: null
        command: null
        env:
        - name: SAS_K8S_DEPLOYMENT_NAME
          value: sas-deployment-data
        envFrom:
        - configMapRef:
            name: sas-deployment-metadata-t4927tg597
        - configMapRef:
            name: sas-go-config-7hc79bmf8m
        - configMapRef:
            name: sas-shared-config-49d8hthtb5
        - secretRef:
            name: sas-consul-client
        - configMapRef:
            name: sas-tls-config-99f79t29t5
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-deployment-data:1.2.0-20201209.1607530266025
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - sh
              - -c
              - sleep 5
        livenessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http
            scheme: HTTPS
          periodSeconds: 10
        name: sas-deployment-data
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/ready
            port: http
            scheme: HTTPS
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add: []
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        startupProbe:
          failureThreshold: 180
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http
            scheme: HTTPS
          periodSeconds: 10
        volumeDevices: []
        volumeMounts:
        - mountPath: /tmp
          name: tmp
        - mountPath: /usr/local/share/sas-deployment-data
          name: sas-license
          readOnly: true
        - mountPath: /security
          name: security
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/cacerts
          name: security
          subPath: cacerts
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/private
          name: security
          subPath: private
      hostAliases: []
      imagePullSecrets:
      - name: sas-image-pull-secrets-4m8cc729k8
      initContainers:
      - env:
        - name: KUBE_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: SAS_CERTFRAME_TOKEN_DIR
          value: /certframe-token
        - name: SAS_ADDITIONAL_CA_CERTIFICATES_DIR
          value: /customer-provided-ca-certificates
        envFrom:
        - configMapRef:
            name: sas-certframe-ingress-certificate-config-cmm2t44t88
        - configMapRef:
            name: sas-certframe-user-config-c4ch2c59m7
        - configMapRef:
            name: sas-certframe-config-ctgg29gf7t
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-certframe:3.9.0-20201203.1607016443086
        name: sas-certframe
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /certframe-token
          name: certframe-token
        - mountPath: /security
          name: security
        - mountPath: /customer-provided-ca-certificates
          name: customer-provided-ca-certificates
      - args:
        - cp -rf meta /data
        command:
        - /bin/sh
        - -c
        env: []
        envFrom: []
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-deployment-data:1.2.0-20201209.1607530266025
        imagePullPolicy: IfNotPresent
        name: hydrator
        ports: []
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 75m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add: []
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeDevices: []
        volumeMounts:
        - mountPath: /data
          name: shared-vol
      - args: null
        command: null
        env:
        - name: SSL_CERT_FILE
          value: /security/trustedcerts.pem
        - name: SAS_SERVICE_NAME
          value: sas-deployment-data
        envFrom:
        - configMapRef:
            name: sas-go-config-7hc79bmf8m
        - configMapRef:
            name: sas-shared-config-49d8hthtb5
        - configMapRef:
            name: sas-java-config-t7t5thbgkd
        - secretRef:
            name: sas-consul-client
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-db-migrator:1.1.0-20201209.1607523698073
        imagePullPolicy: IfNotPresent
        name: sas-db-migrator
        ports: []
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 100m
            memory: 90Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add: []
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeDevices: []
        volumeMounts:
        - mountPath: /security
          name: security
        - mountPath: /data
          name: shared-vol
      readinessGates: []
      securityContext:
        runAsNonRoot: true
        supplementalGroups: []
        sysctls: []
      tolerations:
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateful
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateless
      volumes:
      - name: certframe-token
        secret:
          secretName: sas-certframe-token
      - emptyDir: {}
        name: security
      - configMap:
          name: sas-customer-provided-ca-certificates-29kdmk686c
        name: customer-provided-ca-certificates
      - emptyDir: {}
        name: tmp
      - emptyDir: {}
        name: shared-vol
      - name: sas-license
        secret:
          items:
          - key: SAS_LICENSE
            path: license.jwt
          secretName: sas-license-mg9k2t69t7
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sas.com/certificate-file-format: pem
    sas.com/component-name: sas-device-management
    sas.com/component-version: 2.21.0-20201203.1606974091293
    sas.com/kustomize-base: golang
    sas.com/pod-uses-db-migrator: "true"
    sas.com/pod-uses-liveness-probe: http
    sas.com/pod-uses-readiness-probe: http
    sas.com/pod-uses-startup-probe: http
    sas.com/version: 2.21.0
    sidecar.istio.io/proxyCPU: 15m
    sidecar.istio.io/proxyMemory: 115Mi
  labels:
    app.kubernetes.io/name: sas-device-management
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
    sas.com/deployment-base: golang
    workload.sas.com/class: stateless
  name: sas-device-management
  namespace: franceavv
spec:
  selector:
    matchExpressions: []
    matchLabels:
      app.kubernetes.io/name: sas-device-management
      sas.com/deployment: sas-viya
  template:
    metadata:
      annotations:
        prometheus.io/path: /internal/metrics
        prometheus.io/port: "8080"
        prometheus.io/scheme: https
        prometheus.io/scrape: "true"
        sas.com/certificate-file-format: pem
        sas.com/component-name: sas-device-management
        sas.com/component-version: 2.21.0-20201203.1606974091293
        sas.com/kustomize-base: golang
        sas.com/pod-uses-liveness-probe: http
        sas.com/pod-uses-readiness-probe: http
        sas.com/pod-uses-startup-probe: http
        sas.com/tls-enabled-ports: all
        sas.com/version: 2.21.0
        seccomp.security.alpha.kubernetes.io/pod: runtime/default
        sidecar.istio.io/proxyCPU: 15m
        sidecar.istio.io/proxyMemory: 115Mi
      labels:
        app: sas-device-management
        app.kubernetes.io/name: sas-device-management
        sas.com/deployment: sas-viya
        workload.sas.com/class: stateless
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: In
                values:
                - stateless
              matchFields: []
            weight: 100
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: NotIn
                values:
                - compute
                - cas
                - stateful
                - connect
              matchFields: []
            weight: 50
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.azure.com/mode
                operator: NotIn
                values:
                - system
              matchFields: []
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - sas-device-management
              namespaces: []
              topologyKey: kubernetes.io/hostname
            weight: 100
          requiredDuringSchedulingIgnoredDuringExecution: []
      automountServiceAccountToken: false
      containers:
      - args: null
        command: null
        env:
        - name: SAS_K8S_DEPLOYMENT_NAME
          value: sas-device-management
        envFrom:
        - configMapRef:
            name: sas-go-config-7hc79bmf8m
        - configMapRef:
            name: sas-shared-config-49d8hthtb5
        - secretRef:
            name: sas-consul-client
        - configMapRef:
            name: sas-tls-config-99f79t29t5
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-device-management:2.21.0-20201203.1606974091293
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - sh
              - -c
              - sleep 5
        livenessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http
            scheme: HTTPS
          periodSeconds: 10
        name: sas-device-management
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/ready
            port: http
            scheme: HTTPS
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add: []
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        startupProbe:
          failureThreshold: 180
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http
            scheme: HTTPS
          periodSeconds: 10
        volumeDevices: []
        volumeMounts:
        - mountPath: /tmp
          name: tmp
        - mountPath: /security
          name: security
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/cacerts
          name: security
          subPath: cacerts
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/private
          name: security
          subPath: private
      hostAliases: []
      imagePullSecrets:
      - name: sas-image-pull-secrets-4m8cc729k8
      initContainers:
      - env:
        - name: KUBE_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: SAS_CERTFRAME_TOKEN_DIR
          value: /certframe-token
        - name: SAS_ADDITIONAL_CA_CERTIFICATES_DIR
          value: /customer-provided-ca-certificates
        envFrom:
        - configMapRef:
            name: sas-certframe-ingress-certificate-config-cmm2t44t88
        - configMapRef:
            name: sas-certframe-user-config-c4ch2c59m7
        - configMapRef:
            name: sas-certframe-config-ctgg29gf7t
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-certframe:3.9.0-20201203.1607016443086
        name: sas-certframe
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /certframe-token
          name: certframe-token
        - mountPath: /security
          name: security
        - mountPath: /customer-provided-ca-certificates
          name: customer-provided-ca-certificates
      - args:
        - cp -rf meta /data
        command:
        - /bin/sh
        - -c
        env: []
        envFrom: []
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-device-management:2.21.0-20201203.1606974091293
        imagePullPolicy: IfNotPresent
        name: hydrator
        ports: []
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 75m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add: []
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeDevices: []
        volumeMounts:
        - mountPath: /data
          name: shared-vol
      - args: null
        command: null
        env:
        - name: SSL_CERT_FILE
          value: /security/trustedcerts.pem
        - name: SAS_SERVICE_NAME
          value: sas-device-management
        envFrom:
        - configMapRef:
            name: sas-go-config-7hc79bmf8m
        - configMapRef:
            name: sas-shared-config-49d8hthtb5
        - configMapRef:
            name: sas-java-config-t7t5thbgkd
        - secretRef:
            name: sas-consul-client
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-db-migrator:1.1.0-20201209.1607523698073
        imagePullPolicy: IfNotPresent
        name: sas-db-migrator
        ports: []
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 100m
            memory: 90Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add: []
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeDevices: []
        volumeMounts:
        - mountPath: /security
          name: security
        - mountPath: /data
          name: shared-vol
      readinessGates: []
      securityContext:
        runAsNonRoot: true
        supplementalGroups: []
        sysctls: []
      tolerations:
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateful
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateless
      volumes:
      - name: certframe-token
        secret:
          secretName: sas-certframe-token
      - emptyDir: {}
        name: security
      - configMap:
          name: sas-customer-provided-ca-certificates-29kdmk686c
        name: customer-provided-ca-certificates
      - emptyDir: {}
        name: tmp
      - emptyDir: {}
        name: shared-vol
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sas.com/certificate-file-format: pem
    sas.com/component-name: sas-drive-app
    sas.com/component-version: 3.9.2-20201208.1607415324393
    sas.com/kustomize-base: golang
    sas.com/pod-uses-liveness-probe: http
    sas.com/pod-uses-readiness-probe: http
    sas.com/pod-uses-startup-probe: http
    sas.com/version: 3.9.2
    sidecar.istio.io/proxyCPU: 15m
    sidecar.istio.io/proxyMemory: 115Mi
  labels:
    app.kubernetes.io/name: sas-drive-app
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
    sas.com/deployment-base: golang
    workload.sas.com/class: stateless
  name: sas-drive-app
  namespace: franceavv
spec:
  selector:
    matchExpressions: []
    matchLabels:
      app.kubernetes.io/name: sas-drive-app
      sas.com/deployment: sas-viya
  template:
    metadata:
      annotations:
        prometheus.io/path: /internal/metrics
        prometheus.io/port: "8080"
        prometheus.io/scheme: https
        prometheus.io/scrape: "true"
        sas.com/certificate-file-format: pem
        sas.com/component-name: sas-drive-app
        sas.com/component-version: 3.9.2-20201208.1607415324393
        sas.com/kustomize-base: golang
        sas.com/pod-uses-liveness-probe: http
        sas.com/pod-uses-readiness-probe: http
        sas.com/pod-uses-startup-probe: http
        sas.com/tls-enabled-ports: all
        sas.com/version: 3.9.2
        seccomp.security.alpha.kubernetes.io/pod: runtime/default
        sidecar.istio.io/proxyCPU: 15m
        sidecar.istio.io/proxyMemory: 115Mi
      labels:
        app: sas-drive-app
        app.kubernetes.io/name: sas-drive-app
        sas.com/deployment: sas-viya
        workload.sas.com/class: stateless
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: In
                values:
                - stateless
              matchFields: []
            weight: 100
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: NotIn
                values:
                - compute
                - cas
                - stateful
                - connect
              matchFields: []
            weight: 50
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.azure.com/mode
                operator: NotIn
                values:
                - system
              matchFields: []
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - sas-drive-app
              namespaces: []
              topologyKey: kubernetes.io/hostname
            weight: 100
          requiredDuringSchedulingIgnoredDuringExecution: []
      automountServiceAccountToken: false
      containers:
      - args: null
        command: null
        env:
        - name: SAS_K8S_DEPLOYMENT_NAME
          value: sas-drive-app
        envFrom:
        - configMapRef:
            name: sas-go-config-7hc79bmf8m
        - configMapRef:
            name: sas-shared-config-49d8hthtb5
        - secretRef:
            name: sas-consul-client
        - configMapRef:
            name: sas-tls-config-99f79t29t5
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-drive-app:3.9.2-20201208.1607415324393
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - sh
              - -c
              - sleep 5
        livenessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http
            scheme: HTTPS
          periodSeconds: 10
        name: sas-drive-app
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/ready
            port: http
            scheme: HTTPS
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add: []
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        startupProbe:
          failureThreshold: 180
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http
            scheme: HTTPS
          periodSeconds: 10
        volumeDevices: []
        volumeMounts:
        - mountPath: /tmp
          name: tmp
        - mountPath: /security
          name: security
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/cacerts
          name: security
          subPath: cacerts
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/private
          name: security
          subPath: private
      hostAliases: []
      imagePullSecrets:
      - name: sas-image-pull-secrets-4m8cc729k8
      initContainers:
      - env:
        - name: KUBE_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: SAS_CERTFRAME_TOKEN_DIR
          value: /certframe-token
        - name: SAS_ADDITIONAL_CA_CERTIFICATES_DIR
          value: /customer-provided-ca-certificates
        envFrom:
        - configMapRef:
            name: sas-certframe-ingress-certificate-config-cmm2t44t88
        - configMapRef:
            name: sas-certframe-user-config-c4ch2c59m7
        - configMapRef:
            name: sas-certframe-config-ctgg29gf7t
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-certframe:3.9.0-20201203.1607016443086
        name: sas-certframe
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /certframe-token
          name: certframe-token
        - mountPath: /security
          name: security
        - mountPath: /customer-provided-ca-certificates
          name: customer-provided-ca-certificates
      readinessGates: []
      securityContext:
        runAsNonRoot: true
        supplementalGroups: []
        sysctls: []
      tolerations:
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateful
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateless
      volumes:
      - name: certframe-token
        secret:
          secretName: sas-certframe-token
      - emptyDir: {}
        name: security
      - configMap:
          name: sas-customer-provided-ca-certificates-29kdmk686c
        name: customer-provided-ca-certificates
      - emptyDir: {}
        name: tmp
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sas.com/certificate-file-format: pem
    sas.com/component-name: sas-environment-manager-app
    sas.com/component-version: 4.7.18-20201210.1607608415476
    sas.com/kustomize-base: golang
    sas.com/pod-uses-liveness-probe: http
    sas.com/pod-uses-readiness-probe: http
    sas.com/pod-uses-startup-probe: http
    sas.com/version: 4.7.18
    sidecar.istio.io/proxyCPU: 15m
    sidecar.istio.io/proxyMemory: 115Mi
  labels:
    app.kubernetes.io/name: sas-environment-manager-app
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
    sas.com/deployment-base: golang
    workload.sas.com/class: stateless
  name: sas-environment-manager-app
  namespace: franceavv
spec:
  selector:
    matchExpressions: []
    matchLabels:
      app.kubernetes.io/name: sas-environment-manager-app
      sas.com/deployment: sas-viya
  template:
    metadata:
      annotations:
        prometheus.io/path: /internal/metrics
        prometheus.io/port: "8080"
        prometheus.io/scheme: https
        prometheus.io/scrape: "true"
        sas.com/certificate-file-format: pem
        sas.com/component-name: sas-environment-manager-app
        sas.com/component-version: 4.7.18-20201210.1607608415476
        sas.com/kustomize-base: golang
        sas.com/pod-uses-liveness-probe: http
        sas.com/pod-uses-readiness-probe: http
        sas.com/pod-uses-startup-probe: http
        sas.com/tls-enabled-ports: all
        sas.com/version: 4.7.18
        seccomp.security.alpha.kubernetes.io/pod: runtime/default
        sidecar.istio.io/proxyCPU: 15m
        sidecar.istio.io/proxyMemory: 115Mi
      labels:
        app: sas-environment-manager-app
        app.kubernetes.io/name: sas-environment-manager-app
        sas.com/deployment: sas-viya
        workload.sas.com/class: stateless
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: In
                values:
                - stateless
              matchFields: []
            weight: 100
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: NotIn
                values:
                - compute
                - cas
                - stateful
                - connect
              matchFields: []
            weight: 50
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.azure.com/mode
                operator: NotIn
                values:
                - system
              matchFields: []
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - sas-environment-manager-app
              namespaces: []
              topologyKey: kubernetes.io/hostname
            weight: 100
          requiredDuringSchedulingIgnoredDuringExecution: []
      automountServiceAccountToken: false
      containers:
      - args: null
        command: null
        env:
        - name: SAS_K8S_DEPLOYMENT_NAME
          value: sas-environment-manager-app
        envFrom:
        - configMapRef:
            name: sas-go-config-7hc79bmf8m
        - configMapRef:
            name: sas-shared-config-49d8hthtb5
        - secretRef:
            name: sas-consul-client
        - configMapRef:
            name: sas-tls-config-99f79t29t5
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-environment-manager-app:4.7.18-20201210.1607608415476
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - sh
              - -c
              - sleep 5
        livenessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http
            scheme: HTTPS
          periodSeconds: 10
        name: sas-environment-manager-app
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/ready
            port: http
            scheme: HTTPS
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add: []
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        startupProbe:
          failureThreshold: 180
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http
            scheme: HTTPS
          periodSeconds: 10
        volumeDevices: []
        volumeMounts:
        - mountPath: /tmp
          name: tmp
        - mountPath: /security
          name: security
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/cacerts
          name: security
          subPath: cacerts
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/private
          name: security
          subPath: private
      hostAliases: []
      imagePullSecrets:
      - name: sas-image-pull-secrets-4m8cc729k8
      initContainers:
      - env:
        - name: KUBE_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: SAS_CERTFRAME_TOKEN_DIR
          value: /certframe-token
        - name: SAS_ADDITIONAL_CA_CERTIFICATES_DIR
          value: /customer-provided-ca-certificates
        envFrom:
        - configMapRef:
            name: sas-certframe-ingress-certificate-config-cmm2t44t88
        - configMapRef:
            name: sas-certframe-user-config-c4ch2c59m7
        - configMapRef:
            name: sas-certframe-config-ctgg29gf7t
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-certframe:3.9.0-20201203.1607016443086
        name: sas-certframe
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /certframe-token
          name: certframe-token
        - mountPath: /security
          name: security
        - mountPath: /customer-provided-ca-certificates
          name: customer-provided-ca-certificates
      readinessGates: []
      securityContext:
        runAsNonRoot: true
        supplementalGroups: []
        sysctls: []
      tolerations:
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateful
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateless
      volumes:
      - name: certframe-token
        secret:
          secretName: sas-certframe-token
      - emptyDir: {}
        name: security
      - configMap:
          name: sas-customer-provided-ca-certificates-29kdmk686c
        name: customer-provided-ca-certificates
      - emptyDir: {}
        name: tmp
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sas.com/certificate-file-format: pem
    sas.com/component-name: sas-esp-operator
    sas.com/component-version: 10.77.2-20201210.1607615447889
    sas.com/version: 10.77.2
  labels:
    app.kubernetes.io/name: sas-esp-operator
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
    sas.com/zero-scale-phase: "1"
    workload.sas.com/class: stateless
  name: sas-esp-operator
  namespace: franceavv
spec:
  replicas: 1
  selector:
    matchExpressions: []
    matchLabels:
      name: sas-esp-operator
      sas.com/deployment: sas-viya
  template:
    metadata:
      annotations:
        prometheus.io/port: "8383"
        prometheus.io/scheme: http
        prometheus.io/scrape: "true"
        sas.com/certificate-file-format: pem
        sas.com/component-name: sas-esp-operator
        sas.com/component-version: 10.77.2-20201210.1607615447889
        sas.com/tls-enabled-ports: all
        sas.com/version: 10.77.2
      labels:
        app.kubernetes.io/name: sas-esp-operator
        name: sas-esp-operator
        sas.com/deployment: sas-viya
        workload.sas.com/class: stateless
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: In
                values:
                - stateless
              matchFields: []
            weight: 100
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: NotIn
                values:
                - compute
                - cas
                - stateful
              matchFields: []
            weight: 50
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.azure.com/mode
                operator: NotIn
                values:
                - system
              matchFields: []
      containers:
      - args: null
        command: null
        env:
        - name: WATCH_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: SAS_LICENSE
          valueFrom:
            secretKeyRef:
              key: SAS_LICENSE
              name: sas-license-mg9k2t69t7
        - name: OPERATOR_NAME
          value: sas-esp-operator
        - name: CONSUL_TOKEN
          valueFrom:
            secretKeyRef:
              key: CONSUL_TOKEN
              name: sas-consul-client
        - name: ESPOP_ESPCONFIG
          value: sas-esp-operator
        - name: ESPOP_PUBLICHOSTNAME
          valueFrom:
            configMapKeyRef:
              key: INGRESS_HOST
              name: ingress-input-hg64t6bd6h
        - name: ESPOP_SERVER__HTTP_PORT
          value: "31415"
        - name: ESPOP_SERVER__PUBSUB_PORT
          value: "31416"
        envFrom:
        - configMapRef:
            name: sas-shared-config-49d8hthtb5
        - configMapRef:
            name: sas-tls-config-99f79t29t5
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-esp-operator:10.77.2-20201210.1607615447889
        imagePullPolicy: Always
        name: sas-esp-operator
        ports: []
        volumeDevices: []
        volumeMounts:
        - mountPath: /security
          name: security
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/cacerts
          name: security
          subPath: cacerts
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/private
          name: security
          subPath: private
      hostAliases: []
      imagePullSecrets:
      - name: sas-image-pull-secrets-4m8cc729k8
      initContainers:
      - env:
        - name: KUBE_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: SAS_CERTFRAME_TOKEN_DIR
          value: /certframe-token
        - name: SAS_ADDITIONAL_CA_CERTIFICATES_DIR
          value: /customer-provided-ca-certificates
        envFrom:
        - configMapRef:
            name: sas-certframe-ingress-certificate-config-cmm2t44t88
        - configMapRef:
            name: sas-certframe-user-config-c4ch2c59m7
        - configMapRef:
            name: sas-certframe-config-ctgg29gf7t
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-certframe:3.9.0-20201203.1607016443086
        name: sas-certframe
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /certframe-token
          name: certframe-token
        - mountPath: /security
          name: security
        - mountPath: /customer-provided-ca-certificates
          name: customer-provided-ca-certificates
      readinessGates: []
      serviceAccountName: sas-esp-operator
      tolerations:
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateful
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateless
      volumes:
      - name: certframe-token
        secret:
          secretName: sas-certframe-token
      - emptyDir: {}
        name: security
      - configMap:
          name: sas-customer-provided-ca-certificates-29kdmk686c
        name: customer-provided-ca-certificates
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sas.com/certificate-file-format: jks
    sas.com/component-name: sas-event-stream-manager-app
    sas.com/component-version: 7.8.24-20201211.1607650331718
    sas.com/kustomize-base: spring
    sas.com/pod-uses-liveness-probe: http
    sas.com/pod-uses-readiness-probe: http
    sas.com/pod-uses-startup-probe: http
    sas.com/version: 7.8.24
    sidecar.istio.io/proxyCPU: 15m
    sidecar.istio.io/proxyMemory: 115Mi
  labels:
    app.kubernetes.io/name: sas-event-stream-manager-app
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
    sas.com/deployment-base: spring
    workload.sas.com/class: stateless
  name: sas-event-stream-manager-app
  namespace: franceavv
spec:
  selector:
    matchExpressions: []
    matchLabels:
      app.kubernetes.io/name: sas-event-stream-manager-app
      sas.com/deployment: sas-viya
  template:
    metadata:
      annotations:
        prometheus.io/path: /internal/metrics
        prometheus.io/port: "10445"
        prometheus.io/scheme: https
        prometheus.io/scrape: "true"
        sas.com/certificate-file-format: jks
        sas.com/component-name: sas-event-stream-manager-app
        sas.com/component-version: 7.8.24-20201211.1607650331718
        sas.com/kustomize-base: spring
        sas.com/pod-uses-liveness-probe: http
        sas.com/pod-uses-readiness-probe: http
        sas.com/pod-uses-startup-probe: http
        sas.com/tls-enabled-ports: all
        sas.com/version: 7.8.24
        seccomp.security.alpha.kubernetes.io/pod: runtime/default
        sidecar.istio.io/proxyCPU: 15m
        sidecar.istio.io/proxyMemory: 115Mi
      labels:
        app: sas-event-stream-manager-app
        app.kubernetes.io/name: sas-event-stream-manager-app
        sas.com/deployment: sas-viya
        workload.sas.com/class: stateless
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: In
                values:
                - stateless
              matchFields: []
            weight: 100
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: NotIn
                values:
                - compute
                - cas
                - stateful
                - connect
              matchFields: []
            weight: 50
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.azure.com/mode
                operator: NotIn
                values:
                - system
              matchFields: []
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - sas-event-stream-manager-app
              namespaces: []
              topologyKey: kubernetes.io/hostname
            weight: 100
          requiredDuringSchedulingIgnoredDuringExecution: []
      automountServiceAccountToken: true
      containers:
      - args: null
        command: null
        env:
        - name: SAS_ESP_COMMON_KUBERNETES
          value: "true"
        - name: SAS_ESP_COMMON_APP_AUTHZ_TOKEN_K8S_OAUTH
          value: "true"
        - name: SAS_K8S_DEPLOYMENT_NAME
          value: sas-event-stream-manager-app
        envFrom:
        - configMapRef:
            name: sas-java-config-t7t5thbgkd
        - configMapRef:
            name: sas-shared-config-49d8hthtb5
        - secretRef:
            name: sas-consul-client
        - configMapRef:
            name: sas-spring-management-config-d64bbkhb97
        - configMapRef:
            name: sas-java-tls-config-fch4777298
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-event-stream-manager-app:7.8.24-20201211.1607650331718
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - sh
              - -c
              - sleep 5
        livenessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http-internal
            scheme: HTTPS
          periodSeconds: 10
        name: sas-event-stream-manager-app
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        - containerPort: 10445
          name: http-internal
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/ready
            port: http-internal
            scheme: HTTPS
          periodSeconds: 10
        resources:
          limits:
            cpu: 2000m
            memory: 1Gi
          requests:
            cpu: 50m
            memory: 650M
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add: []
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        startupProbe:
          failureThreshold: 180
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http-internal
            scheme: HTTPS
          initialDelaySeconds: 20
          periodSeconds: 10
        volumeDevices: []
        volumeMounts:
        - mountPath: /tmp
          name: tmp
        - mountPath: /opt/sas/viya/config/tmp
          name: tmp
        - mountPath: /security
          name: security
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/cacerts
          name: security
          subPath: cacerts
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/private
          name: security
          subPath: private
      hostAliases: []
      imagePullSecrets:
      - name: sas-image-pull-secrets-4m8cc729k8
      initContainers:
      - env:
        - name: KUBE_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: SAS_CERTFRAME_TOKEN_DIR
          value: /certframe-token
        - name: SAS_ADDITIONAL_CA_CERTIFICATES_DIR
          value: /customer-provided-ca-certificates
        envFrom:
        - configMapRef:
            name: sas-certframe-ingress-certificate-config-cmm2t44t88
        - configMapRef:
            name: sas-certframe-user-config-c4ch2c59m7
        - configMapRef:
            name: sas-certframe-java-config-gf4kt94898
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-certframe:3.9.0-20201203.1607016443086
        name: sas-certframe
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /certframe-token
          name: certframe-token
        - mountPath: /security
          name: security
        - mountPath: /customer-provided-ca-certificates
          name: customer-provided-ca-certificates
      readinessGates: []
      securityContext:
        runAsNonRoot: true
        supplementalGroups: []
        sysctls: []
      serviceAccountName: sas-esp-clients
      tolerations:
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateful
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateless
      volumes:
      - name: certframe-token
        secret:
          secretName: sas-certframe-token
      - emptyDir: {}
        name: security
      - configMap:
          name: sas-customer-provided-ca-certificates-29kdmk686c
        name: customer-provided-ca-certificates
      - emptyDir: {}
        name: tmp
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sas.com/certificate-file-format: jks
    sas.com/component-name: sas-event-stream-processing-metering-app
    sas.com/component-version: 10.78.0-20201214.1607929237374
    sas.com/database-consumer: "true"
    sas.com/pod-uses-readiness-probe: http
    sas.com/version: 10.78.0
  labels:
    app.kubernetes.io/name: sas-event-stream-processing-metering-app
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
    workload.sas.com/class: stateless
  name: sas-event-stream-processing-metering-app
  namespace: franceavv
spec:
  replicas: 1
  selector:
    matchExpressions: []
    matchLabels:
      app: sas-event-stream-processing-metering-app
      sas.com/deployment: sas-viya
  template:
    metadata:
      annotations:
        prometheus.io/scheme: https
        sas.com/certificate-file-format: jks
        sas.com/component-name: sas-event-stream-processing-metering-app
        sas.com/component-version: 10.78.0-20201214.1607929237374
        sas.com/pod-uses-readiness-probe: http
        sas.com/tls-enabled-ports: all
        sas.com/version: 10.78.0
      labels:
        app: sas-event-stream-processing-metering-app
        app.kubernetes.io/name: sas-event-stream-processing-metering-app
        sas.com/deployment: sas-viya
        workload.sas.com/class: stateless
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: In
                values:
                - stateless
              matchFields: []
            weight: 100
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: NotIn
                values:
                - compute
                - cas
                - stateful
              matchFields: []
            weight: 50
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.azure.com/mode
                operator: NotIn
                values:
                - system
              matchFields: []
      containers:
      - args: null
        command: null
        env:
        - name: server_port
          value: "31415"
        - name: file_encoding
          value: UTF-8
        - name: application_schema
          value: espmetering
        - name: SPRING_DATASOURCE_USERNAME
          valueFrom:
            secretKeyRef:
              key: username
              name: postgres-sas-user-gd57ch2287
        - name: SPRING_DATASOURCE_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: postgres-sas-user-gd57ch2287
        envFrom:
        - configMapRef:
            name: sas-java-tls-config-fch4777298
        - configMapRef:
            name: sas-postgres-config-bc9cd67gm8
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-event-stream-processing-metering-app:10.78.0-20201214.1607929237374
        name: sas-event-stream-processing-metering-app
        ports:
        - containerPort: 31415
          name: http
        readinessProbe:
          httpGet:
            httpHeaders: []
            path: /internal/ready
            port: http
            scheme: HTTPS
        volumeDevices: []
        volumeMounts:
        - mountPath: /security
          name: security
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/cacerts
          name: security
          subPath: cacerts
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/private
          name: security
          subPath: private
      hostAliases: []
      imagePullSecrets:
      - name: sas-image-pull-secrets-4m8cc729k8
      initContainers:
      - env:
        - name: KUBE_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: SAS_CERTFRAME_TOKEN_DIR
          value: /certframe-token
        - name: SAS_ADDITIONAL_CA_CERTIFICATES_DIR
          value: /customer-provided-ca-certificates
        envFrom:
        - configMapRef:
            name: sas-certframe-ingress-certificate-config-cmm2t44t88
        - configMapRef:
            name: sas-certframe-user-config-c4ch2c59m7
        - configMapRef:
            name: sas-certframe-java-config-gf4kt94898
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-certframe:3.9.0-20201203.1607016443086
        name: sas-certframe
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /certframe-token
          name: certframe-token
        - mountPath: /security
          name: security
        - mountPath: /customer-provided-ca-certificates
          name: customer-provided-ca-certificates
      readinessGates: []
      tolerations:
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateful
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateless
      volumes:
      - name: certframe-token
        secret:
          secretName: sas-certframe-token
      - emptyDir: {}
        name: security
      - configMap:
          name: sas-customer-provided-ca-certificates-29kdmk686c
        name: customer-provided-ca-certificates
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sas.com/certificate-file-format: jks
    sas.com/component-name: sas-event-stream-processing-streamviewer-app
    sas.com/component-version: 7.8.27-20201211.1607648686559
    sas.com/kustomize-base: spring
    sas.com/pod-uses-liveness-probe: http
    sas.com/pod-uses-readiness-probe: http
    sas.com/pod-uses-startup-probe: http
    sas.com/version: 7.8.27
    sidecar.istio.io/proxyCPU: 15m
    sidecar.istio.io/proxyMemory: 115Mi
  labels:
    app.kubernetes.io/name: sas-event-stream-processing-streamviewer-app
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
    sas.com/deployment-base: spring
    workload.sas.com/class: stateless
  name: sas-event-stream-processing-streamviewer-app
  namespace: franceavv
spec:
  selector:
    matchExpressions: []
    matchLabels:
      app.kubernetes.io/name: sas-event-stream-processing-streamviewer-app
      sas.com/deployment: sas-viya
  template:
    metadata:
      annotations:
        prometheus.io/path: /internal/metrics
        prometheus.io/port: "10445"
        prometheus.io/scheme: https
        prometheus.io/scrape: "true"
        sas.com/certificate-file-format: jks
        sas.com/component-name: sas-event-stream-processing-streamviewer-app
        sas.com/component-version: 7.8.27-20201211.1607648686559
        sas.com/kustomize-base: spring
        sas.com/pod-uses-liveness-probe: http
        sas.com/pod-uses-readiness-probe: http
        sas.com/pod-uses-startup-probe: http
        sas.com/tls-enabled-ports: all
        sas.com/version: 7.8.27
        seccomp.security.alpha.kubernetes.io/pod: runtime/default
        sidecar.istio.io/proxyCPU: 15m
        sidecar.istio.io/proxyMemory: 115Mi
      labels:
        app: sas-event-stream-processing-streamviewer-app
        app.kubernetes.io/name: sas-event-stream-processing-streamviewer-app
        sas.com/deployment: sas-viya
        workload.sas.com/class: stateless
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: In
                values:
                - stateless
              matchFields: []
            weight: 100
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: NotIn
                values:
                - compute
                - cas
                - stateful
                - connect
              matchFields: []
            weight: 50
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.azure.com/mode
                operator: NotIn
                values:
                - system
              matchFields: []
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - sas-event-stream-processing-streamviewer-app
              namespaces: []
              topologyKey: kubernetes.io/hostname
            weight: 100
          requiredDuringSchedulingIgnoredDuringExecution: []
      automountServiceAccountToken: true
      containers:
      - args: null
        command: null
        env:
        - name: SAS_ESP_COMMON_KUBERNETES
          value: "true"
        - name: SAS_ESP_COMMON_APP_AUTHZ_TOKEN_K8S_OAUTH
          value: "true"
        - name: SAS_K8S_DEPLOYMENT_NAME
          value: sas-event-stream-processing-streamviewer-app
        envFrom:
        - configMapRef:
            name: sas-java-config-t7t5thbgkd
        - configMapRef:
            name: sas-shared-config-49d8hthtb5
        - secretRef:
            name: sas-consul-client
        - configMapRef:
            name: sas-spring-management-config-d64bbkhb97
        - configMapRef:
            name: sas-java-tls-config-fch4777298
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-event-stream-processing-streamviewer-app:7.8.27-20201211.1607648686559
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - sh
              - -c
              - sleep 5
        livenessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http-internal
            scheme: HTTPS
          periodSeconds: 10
        name: sas-event-stream-processing-streamviewer-app
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        - containerPort: 10445
          name: http-internal
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/ready
            port: http-internal
            scheme: HTTPS
          periodSeconds: 10
        resources:
          limits:
            cpu: 2000m
            memory: 1Gi
          requests:
            cpu: 50m
            memory: 650M
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add: []
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        startupProbe:
          failureThreshold: 180
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http-internal
            scheme: HTTPS
          initialDelaySeconds: 20
          periodSeconds: 10
        volumeDevices: []
        volumeMounts:
        - mountPath: /tmp
          name: tmp
        - mountPath: /opt/sas/viya/config/tmp
          name: tmp
        - mountPath: /security
          name: security
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/cacerts
          name: security
          subPath: cacerts
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/private
          name: security
          subPath: private
      hostAliases: []
      imagePullSecrets:
      - name: sas-image-pull-secrets-4m8cc729k8
      initContainers:
      - env:
        - name: KUBE_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: SAS_CERTFRAME_TOKEN_DIR
          value: /certframe-token
        - name: SAS_ADDITIONAL_CA_CERTIFICATES_DIR
          value: /customer-provided-ca-certificates
        envFrom:
        - configMapRef:
            name: sas-certframe-ingress-certificate-config-cmm2t44t88
        - configMapRef:
            name: sas-certframe-user-config-c4ch2c59m7
        - configMapRef:
            name: sas-certframe-java-config-gf4kt94898
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-certframe:3.9.0-20201203.1607016443086
        name: sas-certframe
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /certframe-token
          name: certframe-token
        - mountPath: /security
          name: security
        - mountPath: /customer-provided-ca-certificates
          name: customer-provided-ca-certificates
      readinessGates: []
      securityContext:
        runAsNonRoot: true
        supplementalGroups: []
        sysctls: []
      serviceAccountName: sas-esp-clients
      tolerations:
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateful
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateless
      volumes:
      - name: certframe-token
        secret:
          secretName: sas-certframe-token
      - emptyDir: {}
        name: security
      - configMap:
          name: sas-customer-provided-ca-certificates-29kdmk686c
        name: customer-provided-ca-certificates
      - emptyDir: {}
        name: tmp
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sas.com/certificate-file-format: jks
    sas.com/component-name: sas-event-stream-processing-studio-app
    sas.com/component-version: 7.8.24-20201211.1607651463964
    sas.com/kustomize-base: spring
    sas.com/pod-uses-liveness-probe: http
    sas.com/pod-uses-readiness-probe: http
    sas.com/pod-uses-startup-probe: http
    sas.com/version: 7.8.24
    sidecar.istio.io/proxyCPU: 15m
    sidecar.istio.io/proxyMemory: 115Mi
  labels:
    app.kubernetes.io/name: sas-event-stream-processing-studio-app
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
    sas.com/deployment-base: spring
    workload.sas.com/class: stateless
  name: sas-event-stream-processing-studio-app
  namespace: franceavv
spec:
  selector:
    matchExpressions: []
    matchLabels:
      app.kubernetes.io/name: sas-event-stream-processing-studio-app
      sas.com/deployment: sas-viya
  template:
    metadata:
      annotations:
        prometheus.io/path: /internal/metrics
        prometheus.io/port: "10445"
        prometheus.io/scheme: https
        prometheus.io/scrape: "true"
        sas.com/certificate-file-format: jks
        sas.com/component-name: sas-event-stream-processing-studio-app
        sas.com/component-version: 7.8.24-20201211.1607651463964
        sas.com/kustomize-base: spring
        sas.com/pod-uses-liveness-probe: http
        sas.com/pod-uses-readiness-probe: http
        sas.com/pod-uses-startup-probe: http
        sas.com/tls-enabled-ports: all
        sas.com/version: 7.8.24
        seccomp.security.alpha.kubernetes.io/pod: runtime/default
        sidecar.istio.io/proxyCPU: 15m
        sidecar.istio.io/proxyMemory: 115Mi
      labels:
        app: sas-event-stream-processing-studio-app
        app.kubernetes.io/name: sas-event-stream-processing-studio-app
        sas.com/deployment: sas-viya
        workload.sas.com/class: stateless
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: In
                values:
                - stateless
              matchFields: []
            weight: 100
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: NotIn
                values:
                - compute
                - cas
                - stateful
                - connect
              matchFields: []
            weight: 50
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.azure.com/mode
                operator: NotIn
                values:
                - system
              matchFields: []
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - sas-event-stream-processing-studio-app
              namespaces: []
              topologyKey: kubernetes.io/hostname
            weight: 100
          requiredDuringSchedulingIgnoredDuringExecution: []
      automountServiceAccountToken: true
      containers:
      - args: null
        command: null
        env:
        - name: SAS_ESP_COMMON_KUBERNETES
          value: "true"
        - name: SAS_ESP_COMMON_APP_AUTHZ_TOKEN_K8S_OAUTH
          value: "true"
        - name: SAS_K8S_DEPLOYMENT_NAME
          value: sas-event-stream-processing-studio-app
        envFrom:
        - configMapRef:
            name: sas-java-config-t7t5thbgkd
        - configMapRef:
            name: sas-shared-config-49d8hthtb5
        - secretRef:
            name: sas-consul-client
        - configMapRef:
            name: sas-spring-management-config-d64bbkhb97
        - configMapRef:
            name: sas-java-tls-config-fch4777298
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-event-stream-processing-studio-app:7.8.24-20201211.1607651463964
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - sh
              - -c
              - sleep 5
        livenessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http-internal
            scheme: HTTPS
          periodSeconds: 10
        name: sas-event-stream-processing-studio-app
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        - containerPort: 10445
          name: http-internal
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/ready
            port: http-internal
            scheme: HTTPS
          periodSeconds: 10
        resources:
          limits:
            cpu: 2000m
            memory: 1Gi
          requests:
            cpu: 50m
            memory: 650M
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add: []
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        startupProbe:
          failureThreshold: 180
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http-internal
            scheme: HTTPS
          initialDelaySeconds: 20
          periodSeconds: 10
        volumeDevices: []
        volumeMounts:
        - mountPath: /tmp
          name: tmp
        - mountPath: /opt/sas/viya/config/tmp
          name: tmp
        - mountPath: /security
          name: security
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/cacerts
          name: security
          subPath: cacerts
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/private
          name: security
          subPath: private
      hostAliases: []
      imagePullSecrets:
      - name: sas-image-pull-secrets-4m8cc729k8
      initContainers:
      - env:
        - name: KUBE_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: SAS_CERTFRAME_TOKEN_DIR
          value: /certframe-token
        - name: SAS_ADDITIONAL_CA_CERTIFICATES_DIR
          value: /customer-provided-ca-certificates
        envFrom:
        - configMapRef:
            name: sas-certframe-ingress-certificate-config-cmm2t44t88
        - configMapRef:
            name: sas-certframe-user-config-c4ch2c59m7
        - configMapRef:
            name: sas-certframe-java-config-gf4kt94898
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-certframe:3.9.0-20201203.1607016443086
        name: sas-certframe
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /certframe-token
          name: certframe-token
        - mountPath: /security
          name: security
        - mountPath: /customer-provided-ca-certificates
          name: customer-provided-ca-certificates
      readinessGates: []
      securityContext:
        runAsNonRoot: true
        supplementalGroups: []
        sysctls: []
      serviceAccountName: sas-esp-clients
      tolerations:
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateful
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateless
      volumes:
      - name: certframe-token
        secret:
          secretName: sas-certframe-token
      - emptyDir: {}
        name: security
      - configMap:
          name: sas-customer-provided-ca-certificates-29kdmk686c
        name: customer-provided-ca-certificates
      - emptyDir: {}
        name: tmp
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sas.com/certificate-file-format: jks
    sas.com/component-name: sas-files
    sas.com/component-version: 2.36.7-20201204.1607053741549
    sas.com/kustomize-base: spring
    sas.com/pod-uses-liveness-probe: http
    sas.com/pod-uses-readiness-probe: http
    sas.com/pod-uses-startup-probe: http
    sas.com/version: 2.36.7
    sidecar.istio.io/proxyCPU: 15m
    sidecar.istio.io/proxyMemory: 115Mi
  labels:
    app.kubernetes.io/name: sas-files
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
    sas.com/deployment-base: spring
    workload.sas.com/class: stateless
  name: sas-files
  namespace: franceavv
spec:
  selector:
    matchExpressions: []
    matchLabels:
      app.kubernetes.io/name: sas-files
      sas.com/deployment: sas-viya
  template:
    metadata:
      annotations:
        prometheus.io/path: /internal/metrics
        prometheus.io/port: "10445"
        prometheus.io/scheme: https
        prometheus.io/scrape: "true"
        sas.com/certificate-file-format: jks
        sas.com/component-name: sas-files
        sas.com/component-version: 2.36.7-20201204.1607053741549
        sas.com/kustomize-base: spring
        sas.com/pod-uses-liveness-probe: http
        sas.com/pod-uses-readiness-probe: http
        sas.com/pod-uses-startup-probe: http
        sas.com/tls-enabled-ports: all
        sas.com/version: 2.36.7
        seccomp.security.alpha.kubernetes.io/pod: runtime/default
        sidecar.istio.io/proxyCPU: 15m
        sidecar.istio.io/proxyMemory: 115Mi
      labels:
        app: sas-files
        app.kubernetes.io/name: sas-files
        sas.com/deployment: sas-viya
        workload.sas.com/class: stateless
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: In
                values:
                - stateless
              matchFields: []
            weight: 100
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: NotIn
                values:
                - compute
                - cas
                - stateful
                - connect
              matchFields: []
            weight: 50
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.azure.com/mode
                operator: NotIn
                values:
                - system
              matchFields: []
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - sas-files
              namespaces: []
              topologyKey: kubernetes.io/hostname
            weight: 100
          requiredDuringSchedulingIgnoredDuringExecution: []
      automountServiceAccountToken: false
      containers:
      - args: null
        command: null
        env:
        - name: SAS_K8S_DEPLOYMENT_NAME
          value: sas-files
        envFrom:
        - configMapRef:
            name: sas-java-config-t7t5thbgkd
        - configMapRef:
            name: sas-shared-config-49d8hthtb5
        - secretRef:
            name: sas-consul-client
        - configMapRef:
            name: sas-spring-management-config-d64bbkhb97
        - configMapRef:
            name: sas-java-tls-config-fch4777298
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-files:2.36.7-20201204.1607053741549
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - sh
              - -c
              - sleep 5
        livenessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http-internal
            scheme: HTTPS
          periodSeconds: 10
        name: sas-files
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        - containerPort: 10445
          name: http-internal
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/ready
            port: http-internal
            scheme: HTTPS
          periodSeconds: 10
        resources:
          limits:
            cpu: 2000m
            memory: 1Gi
          requests:
            cpu: 50m
            memory: 650M
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add: []
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        startupProbe:
          failureThreshold: 180
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http-internal
            scheme: HTTPS
          initialDelaySeconds: 20
          periodSeconds: 10
        volumeDevices: []
        volumeMounts:
        - mountPath: /tmp
          name: tmp
        - mountPath: /opt/sas/viya/config/tmp
          name: tmp
        - mountPath: /security
          name: security
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/cacerts
          name: security
          subPath: cacerts
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/private
          name: security
          subPath: private
      hostAliases: []
      imagePullSecrets:
      - name: sas-image-pull-secrets-4m8cc729k8
      initContainers:
      - env:
        - name: KUBE_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: SAS_CERTFRAME_TOKEN_DIR
          value: /certframe-token
        - name: SAS_ADDITIONAL_CA_CERTIFICATES_DIR
          value: /customer-provided-ca-certificates
        envFrom:
        - configMapRef:
            name: sas-certframe-ingress-certificate-config-cmm2t44t88
        - configMapRef:
            name: sas-certframe-user-config-c4ch2c59m7
        - configMapRef:
            name: sas-certframe-java-config-gf4kt94898
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-certframe:3.9.0-20201203.1607016443086
        name: sas-certframe
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /certframe-token
          name: certframe-token
        - mountPath: /security
          name: security
        - mountPath: /customer-provided-ca-certificates
          name: customer-provided-ca-certificates
      readinessGates: []
      securityContext:
        runAsNonRoot: true
        supplementalGroups: []
        sysctls: []
      tolerations:
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateful
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateless
      volumes:
      - name: certframe-token
        secret:
          secretName: sas-certframe-token
      - emptyDir: {}
        name: security
      - configMap:
          name: sas-customer-provided-ca-certificates-29kdmk686c
        name: customer-provided-ca-certificates
      - emptyDir: {}
        name: tmp
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sas.com/certificate-file-format: pem
    sas.com/component-name: sas-folders
    sas.com/component-version: 2.57.3-20201204.1607080745145
    sas.com/kustomize-base: golang
    sas.com/pod-uses-db-migrator: "true"
    sas.com/pod-uses-liveness-probe: http
    sas.com/pod-uses-readiness-probe: http
    sas.com/pod-uses-startup-probe: http
    sas.com/version: 2.57.3
    sidecar.istio.io/proxyCPU: 15m
    sidecar.istio.io/proxyMemory: 115Mi
  labels:
    app.kubernetes.io/name: sas-folders
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
    sas.com/deployment-base: golang
    workload.sas.com/class: stateless
  name: sas-folders
  namespace: franceavv
spec:
  selector:
    matchExpressions: []
    matchLabels:
      app.kubernetes.io/name: sas-folders
      sas.com/deployment: sas-viya
  template:
    metadata:
      annotations:
        prometheus.io/path: /internal/metrics
        prometheus.io/port: "8080"
        prometheus.io/scheme: https
        prometheus.io/scrape: "true"
        sas.com/certificate-file-format: pem
        sas.com/component-name: sas-folders
        sas.com/component-version: 2.57.3-20201204.1607080745145
        sas.com/kustomize-base: golang
        sas.com/pod-uses-liveness-probe: http
        sas.com/pod-uses-readiness-probe: http
        sas.com/pod-uses-startup-probe: http
        sas.com/tls-enabled-ports: all
        sas.com/version: 2.57.3
        seccomp.security.alpha.kubernetes.io/pod: runtime/default
        sidecar.istio.io/proxyCPU: 15m
        sidecar.istio.io/proxyMemory: 115Mi
      labels:
        app: sas-folders
        app.kubernetes.io/name: sas-folders
        sas.com/deployment: sas-viya
        workload.sas.com/class: stateless
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: In
                values:
                - stateless
              matchFields: []
            weight: 100
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: NotIn
                values:
                - compute
                - cas
                - stateful
                - connect
              matchFields: []
            weight: 50
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.azure.com/mode
                operator: NotIn
                values:
                - system
              matchFields: []
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - sas-folders
              namespaces: []
              topologyKey: kubernetes.io/hostname
            weight: 100
          requiredDuringSchedulingIgnoredDuringExecution: []
      automountServiceAccountToken: false
      containers:
      - args: null
        command: null
        env:
        - name: SAS_K8S_DEPLOYMENT_NAME
          value: sas-folders
        envFrom:
        - configMapRef:
            name: sas-go-config-7hc79bmf8m
        - configMapRef:
            name: sas-shared-config-49d8hthtb5
        - secretRef:
            name: sas-consul-client
        - configMapRef:
            name: sas-tls-config-99f79t29t5
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-folders:2.57.3-20201204.1607080745145
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - sh
              - -c
              - sleep 5
        livenessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http
            scheme: HTTPS
          periodSeconds: 10
        name: sas-folders
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/ready
            port: http
            scheme: HTTPS
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add: []
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        startupProbe:
          failureThreshold: 180
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http
            scheme: HTTPS
          periodSeconds: 10
        volumeDevices: []
        volumeMounts:
        - mountPath: /tmp
          name: tmp
        - mountPath: /security
          name: security
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/cacerts
          name: security
          subPath: cacerts
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/private
          name: security
          subPath: private
      hostAliases: []
      imagePullSecrets:
      - name: sas-image-pull-secrets-4m8cc729k8
      initContainers:
      - env:
        - name: KUBE_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: SAS_CERTFRAME_TOKEN_DIR
          value: /certframe-token
        - name: SAS_ADDITIONAL_CA_CERTIFICATES_DIR
          value: /customer-provided-ca-certificates
        envFrom:
        - configMapRef:
            name: sas-certframe-ingress-certificate-config-cmm2t44t88
        - configMapRef:
            name: sas-certframe-user-config-c4ch2c59m7
        - configMapRef:
            name: sas-certframe-config-ctgg29gf7t
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-certframe:3.9.0-20201203.1607016443086
        name: sas-certframe
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /certframe-token
          name: certframe-token
        - mountPath: /security
          name: security
        - mountPath: /customer-provided-ca-certificates
          name: customer-provided-ca-certificates
      - args:
        - cp -rf meta /data
        command:
        - /bin/sh
        - -c
        env: []
        envFrom: []
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-folders:2.57.3-20201204.1607080745145
        imagePullPolicy: IfNotPresent
        name: hydrator
        ports: []
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 75m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add: []
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeDevices: []
        volumeMounts:
        - mountPath: /data
          name: shared-vol
      - args: null
        command: null
        env:
        - name: SSL_CERT_FILE
          value: /security/trustedcerts.pem
        - name: SAS_SERVICE_NAME
          value: sas-folders
        envFrom:
        - configMapRef:
            name: sas-go-config-7hc79bmf8m
        - configMapRef:
            name: sas-shared-config-49d8hthtb5
        - configMapRef:
            name: sas-java-config-t7t5thbgkd
        - secretRef:
            name: sas-consul-client
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-db-migrator:1.1.0-20201209.1607523698073
        imagePullPolicy: IfNotPresent
        name: sas-db-migrator
        ports: []
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 100m
            memory: 90Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add: []
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeDevices: []
        volumeMounts:
        - mountPath: /security
          name: security
        - mountPath: /data
          name: shared-vol
      readinessGates: []
      securityContext:
        runAsNonRoot: true
        supplementalGroups: []
        sysctls: []
      tolerations:
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateful
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateless
      volumes:
      - name: certframe-token
        secret:
          secretName: sas-certframe-token
      - emptyDir: {}
        name: security
      - configMap:
          name: sas-customer-provided-ca-certificates-29kdmk686c
        name: customer-provided-ca-certificates
      - emptyDir: {}
        name: tmp
      - emptyDir: {}
        name: shared-vol
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sas.com/certificate-file-format: pem
    sas.com/component-name: sas-fonts
    sas.com/component-version: 1.76.2-20201202.1606968212309
    sas.com/kustomize-base: golang
    sas.com/pod-uses-db-migrator: "true"
    sas.com/pod-uses-liveness-probe: http
    sas.com/pod-uses-readiness-probe: http
    sas.com/pod-uses-startup-probe: http
    sas.com/version: 1.76.2
    sidecar.istio.io/proxyCPU: 15m
    sidecar.istio.io/proxyMemory: 115Mi
  labels:
    app.kubernetes.io/name: sas-fonts
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
    sas.com/deployment-base: golang
    workload.sas.com/class: stateless
  name: sas-fonts
  namespace: franceavv
spec:
  selector:
    matchExpressions: []
    matchLabels:
      app.kubernetes.io/name: sas-fonts
      sas.com/deployment: sas-viya
  template:
    metadata:
      annotations:
        prometheus.io/path: /internal/metrics
        prometheus.io/port: "8080"
        prometheus.io/scheme: https
        prometheus.io/scrape: "true"
        sas.com/certificate-file-format: pem
        sas.com/component-name: sas-fonts
        sas.com/component-version: 1.76.2-20201202.1606968212309
        sas.com/kustomize-base: golang
        sas.com/pod-uses-liveness-probe: http
        sas.com/pod-uses-readiness-probe: http
        sas.com/pod-uses-startup-probe: http
        sas.com/tls-enabled-ports: all
        sas.com/version: 1.76.2
        seccomp.security.alpha.kubernetes.io/pod: runtime/default
        sidecar.istio.io/proxyCPU: 15m
        sidecar.istio.io/proxyMemory: 115Mi
      labels:
        app: sas-fonts
        app.kubernetes.io/name: sas-fonts
        sas.com/deployment: sas-viya
        workload.sas.com/class: stateless
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: In
                values:
                - stateless
              matchFields: []
            weight: 100
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: NotIn
                values:
                - compute
                - cas
                - stateful
                - connect
              matchFields: []
            weight: 50
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.azure.com/mode
                operator: NotIn
                values:
                - system
              matchFields: []
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - sas-fonts
              namespaces: []
              topologyKey: kubernetes.io/hostname
            weight: 100
          requiredDuringSchedulingIgnoredDuringExecution: []
      automountServiceAccountToken: false
      containers:
      - args: null
        command: null
        env:
        - name: SAS_K8S_DEPLOYMENT_NAME
          value: sas-fonts
        envFrom:
        - configMapRef:
            name: sas-go-config-7hc79bmf8m
        - configMapRef:
            name: sas-shared-config-49d8hthtb5
        - secretRef:
            name: sas-consul-client
        - configMapRef:
            name: sas-tls-config-99f79t29t5
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-fonts:1.76.2-20201202.1606968212309
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - sh
              - -c
              - sleep 5
        livenessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http
            scheme: HTTPS
          periodSeconds: 10
        name: sas-fonts
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/ready
            port: http
            scheme: HTTPS
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 750Mi
          requests:
            cpu: 100m
            memory: 90Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add: []
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        startupProbe:
          failureThreshold: 180
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http
            scheme: HTTPS
          periodSeconds: 10
        volumeDevices: []
        volumeMounts:
        - mountPath: /tmp
          name: tmp
        - mountPath: /security
          name: security
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/cacerts
          name: security
          subPath: cacerts
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/private
          name: security
          subPath: private
      hostAliases: []
      imagePullSecrets:
      - name: sas-image-pull-secrets-4m8cc729k8
      initContainers:
      - env:
        - name: KUBE_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: SAS_CERTFRAME_TOKEN_DIR
          value: /certframe-token
        - name: SAS_ADDITIONAL_CA_CERTIFICATES_DIR
          value: /customer-provided-ca-certificates
        envFrom:
        - configMapRef:
            name: sas-certframe-ingress-certificate-config-cmm2t44t88
        - configMapRef:
            name: sas-certframe-user-config-c4ch2c59m7
        - configMapRef:
            name: sas-certframe-config-ctgg29gf7t
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-certframe:3.9.0-20201203.1607016443086
        name: sas-certframe
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /certframe-token
          name: certframe-token
        - mountPath: /security
          name: security
        - mountPath: /customer-provided-ca-certificates
          name: customer-provided-ca-certificates
      - args:
        - cp -rf meta /data
        command:
        - /bin/sh
        - -c
        env: []
        envFrom: []
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-fonts:1.76.2-20201202.1606968212309
        imagePullPolicy: IfNotPresent
        name: hydrator
        ports: []
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 75m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add: []
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeDevices: []
        volumeMounts:
        - mountPath: /data
          name: shared-vol
      - args: null
        command: null
        env:
        - name: SSL_CERT_FILE
          value: /security/trustedcerts.pem
        - name: SAS_SERVICE_NAME
          value: sas-fonts
        envFrom:
        - configMapRef:
            name: sas-go-config-7hc79bmf8m
        - configMapRef:
            name: sas-shared-config-49d8hthtb5
        - configMapRef:
            name: sas-java-config-t7t5thbgkd
        - secretRef:
            name: sas-consul-client
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-db-migrator:1.1.0-20201209.1607523698073
        imagePullPolicy: IfNotPresent
        name: sas-db-migrator
        ports: []
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 100m
            memory: 90Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add: []
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeDevices: []
        volumeMounts:
        - mountPath: /security
          name: security
        - mountPath: /data
          name: shared-vol
      readinessGates: []
      securityContext:
        runAsNonRoot: true
        supplementalGroups: []
        sysctls: []
      tolerations:
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateful
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateless
      volumes:
      - name: certframe-token
        secret:
          secretName: sas-certframe-token
      - emptyDir: {}
        name: security
      - configMap:
          name: sas-customer-provided-ca-certificates-29kdmk686c
        name: customer-provided-ca-certificates
      - emptyDir: {}
        name: tmp
      - emptyDir: {}
        name: shared-vol
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sas.com/certificate-file-format: pem
    sas.com/component-name: sas-forecasting-comparison
    sas.com/component-version: 15.11.0-20201203.1607012315095
    sas.com/kustomize-base: golang
    sas.com/pod-uses-liveness-probe: http
    sas.com/pod-uses-readiness-probe: http
    sas.com/pod-uses-startup-probe: http
    sas.com/version: 15.11.0
    sidecar.istio.io/proxyCPU: 15m
    sidecar.istio.io/proxyMemory: 115Mi
  labels:
    app.kubernetes.io/name: sas-forecasting-comparison
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
    sas.com/deployment-base: golang
    workload.sas.com/class: stateless
  name: sas-forecasting-comparison
  namespace: franceavv
spec:
  selector:
    matchExpressions: []
    matchLabels:
      app.kubernetes.io/name: sas-forecasting-comparison
      sas.com/deployment: sas-viya
  template:
    metadata:
      annotations:
        prometheus.io/path: /internal/metrics
        prometheus.io/port: "8080"
        prometheus.io/scheme: https
        prometheus.io/scrape: "true"
        sas.com/certificate-file-format: pem
        sas.com/component-name: sas-forecasting-comparison
        sas.com/component-version: 15.11.0-20201203.1607012315095
        sas.com/kustomize-base: golang
        sas.com/pod-uses-liveness-probe: http
        sas.com/pod-uses-readiness-probe: http
        sas.com/pod-uses-startup-probe: http
        sas.com/tls-enabled-ports: all
        sas.com/version: 15.11.0
        seccomp.security.alpha.kubernetes.io/pod: runtime/default
        sidecar.istio.io/proxyCPU: 15m
        sidecar.istio.io/proxyMemory: 115Mi
      labels:
        app: sas-forecasting-comparison
        app.kubernetes.io/name: sas-forecasting-comparison
        sas.com/deployment: sas-viya
        workload.sas.com/class: stateless
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: In
                values:
                - stateless
              matchFields: []
            weight: 100
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: NotIn
                values:
                - compute
                - cas
                - stateful
                - connect
              matchFields: []
            weight: 50
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.azure.com/mode
                operator: NotIn
                values:
                - system
              matchFields: []
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - sas-forecasting-comparison
              namespaces: []
              topologyKey: kubernetes.io/hostname
            weight: 100
          requiredDuringSchedulingIgnoredDuringExecution: []
      automountServiceAccountToken: false
      containers:
      - args: null
        command: null
        env:
        - name: SAS_K8S_DEPLOYMENT_NAME
          value: sas-forecasting-comparison
        envFrom:
        - configMapRef:
            name: sas-go-config-7hc79bmf8m
        - configMapRef:
            name: sas-shared-config-49d8hthtb5
        - secretRef:
            name: sas-consul-client
        - configMapRef:
            name: sas-tls-config-99f79t29t5
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-forecasting-comparison:15.11.0-20201203.1607012315095
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - sh
              - -c
              - sleep 5
        livenessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http
            scheme: HTTPS
          periodSeconds: 10
        name: sas-forecasting-comparison
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/ready
            port: http
            scheme: HTTPS
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add: []
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        startupProbe:
          failureThreshold: 180
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http
            scheme: HTTPS
          periodSeconds: 10
        volumeDevices: []
        volumeMounts:
        - mountPath: /tmp
          name: tmp
        - mountPath: /security
          name: security
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/cacerts
          name: security
          subPath: cacerts
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/private
          name: security
          subPath: private
      hostAliases: []
      imagePullSecrets:
      - name: sas-image-pull-secrets-4m8cc729k8
      initContainers:
      - env:
        - name: KUBE_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: SAS_CERTFRAME_TOKEN_DIR
          value: /certframe-token
        - name: SAS_ADDITIONAL_CA_CERTIFICATES_DIR
          value: /customer-provided-ca-certificates
        envFrom:
        - configMapRef:
            name: sas-certframe-ingress-certificate-config-cmm2t44t88
        - configMapRef:
            name: sas-certframe-user-config-c4ch2c59m7
        - configMapRef:
            name: sas-certframe-config-ctgg29gf7t
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-certframe:3.9.0-20201203.1607016443086
        name: sas-certframe
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /certframe-token
          name: certframe-token
        - mountPath: /security
          name: security
        - mountPath: /customer-provided-ca-certificates
          name: customer-provided-ca-certificates
      readinessGates: []
      securityContext:
        runAsNonRoot: true
        supplementalGroups: []
        sysctls: []
      tolerations:
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateful
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateless
      volumes:
      - name: certframe-token
        secret:
          secretName: sas-certframe-token
      - emptyDir: {}
        name: security
      - configMap:
          name: sas-customer-provided-ca-certificates-29kdmk686c
        name: customer-provided-ca-certificates
      - emptyDir: {}
        name: tmp
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sas.com/certificate-file-format: pem
    sas.com/component-name: sas-forecasting-events
    sas.com/component-version: 15.11.0-20201203.1607012406763
    sas.com/kustomize-base: golang
    sas.com/pod-uses-db-migrator: "true"
    sas.com/pod-uses-liveness-probe: http
    sas.com/pod-uses-readiness-probe: http
    sas.com/pod-uses-startup-probe: http
    sas.com/version: 15.11.0
    sidecar.istio.io/proxyCPU: 15m
    sidecar.istio.io/proxyMemory: 115Mi
  labels:
    app.kubernetes.io/name: sas-forecasting-events
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
    sas.com/deployment-base: golang
    workload.sas.com/class: stateless
  name: sas-forecasting-events
  namespace: franceavv
spec:
  selector:
    matchExpressions: []
    matchLabels:
      app.kubernetes.io/name: sas-forecasting-events
      sas.com/deployment: sas-viya
  template:
    metadata:
      annotations:
        prometheus.io/path: /internal/metrics
        prometheus.io/port: "8080"
        prometheus.io/scheme: https
        prometheus.io/scrape: "true"
        sas.com/certificate-file-format: pem
        sas.com/component-name: sas-forecasting-events
        sas.com/component-version: 15.11.0-20201203.1607012406763
        sas.com/kustomize-base: golang
        sas.com/pod-uses-liveness-probe: http
        sas.com/pod-uses-readiness-probe: http
        sas.com/pod-uses-startup-probe: http
        sas.com/tls-enabled-ports: all
        sas.com/version: 15.11.0
        seccomp.security.alpha.kubernetes.io/pod: runtime/default
        sidecar.istio.io/proxyCPU: 15m
        sidecar.istio.io/proxyMemory: 115Mi
      labels:
        app: sas-forecasting-events
        app.kubernetes.io/name: sas-forecasting-events
        sas.com/deployment: sas-viya
        workload.sas.com/class: stateless
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: In
                values:
                - stateless
              matchFields: []
            weight: 100
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: NotIn
                values:
                - compute
                - cas
                - stateful
                - connect
              matchFields: []
            weight: 50
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.azure.com/mode
                operator: NotIn
                values:
                - system
              matchFields: []
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - sas-forecasting-events
              namespaces: []
              topologyKey: kubernetes.io/hostname
            weight: 100
          requiredDuringSchedulingIgnoredDuringExecution: []
      automountServiceAccountToken: false
      containers:
      - args: null
        command: null
        env:
        - name: SAS_K8S_DEPLOYMENT_NAME
          value: sas-forecasting-events
        envFrom:
        - configMapRef:
            name: sas-go-config-7hc79bmf8m
        - configMapRef:
            name: sas-shared-config-49d8hthtb5
        - secretRef:
            name: sas-consul-client
        - configMapRef:
            name: sas-tls-config-99f79t29t5
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-forecasting-events:15.11.0-20201203.1607012406763
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - sh
              - -c
              - sleep 5
        livenessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http
            scheme: HTTPS
          periodSeconds: 10
        name: sas-forecasting-events
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/ready
            port: http
            scheme: HTTPS
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add: []
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        startupProbe:
          failureThreshold: 180
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http
            scheme: HTTPS
          periodSeconds: 10
        volumeDevices: []
        volumeMounts:
        - mountPath: /tmp
          name: tmp
        - mountPath: /security
          name: security
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/cacerts
          name: security
          subPath: cacerts
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/private
          name: security
          subPath: private
      hostAliases: []
      imagePullSecrets:
      - name: sas-image-pull-secrets-4m8cc729k8
      initContainers:
      - env:
        - name: KUBE_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: SAS_CERTFRAME_TOKEN_DIR
          value: /certframe-token
        - name: SAS_ADDITIONAL_CA_CERTIFICATES_DIR
          value: /customer-provided-ca-certificates
        envFrom:
        - configMapRef:
            name: sas-certframe-ingress-certificate-config-cmm2t44t88
        - configMapRef:
            name: sas-certframe-user-config-c4ch2c59m7
        - configMapRef:
            name: sas-certframe-config-ctgg29gf7t
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-certframe:3.9.0-20201203.1607016443086
        name: sas-certframe
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /certframe-token
          name: certframe-token
        - mountPath: /security
          name: security
        - mountPath: /customer-provided-ca-certificates
          name: customer-provided-ca-certificates
      - args:
        - cp -rf meta /data
        command:
        - /bin/sh
        - -c
        env: []
        envFrom: []
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-forecasting-events:15.11.0-20201203.1607012406763
        imagePullPolicy: IfNotPresent
        name: hydrator
        ports: []
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 75m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add: []
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeDevices: []
        volumeMounts:
        - mountPath: /data
          name: shared-vol
      - args: null
        command: null
        env:
        - name: SSL_CERT_FILE
          value: /security/trustedcerts.pem
        - name: SAS_SERVICE_NAME
          value: sas-forecasting-events
        envFrom:
        - configMapRef:
            name: sas-go-config-7hc79bmf8m
        - configMapRef:
            name: sas-shared-config-49d8hthtb5
        - configMapRef:
            name: sas-java-config-t7t5thbgkd
        - secretRef:
            name: sas-consul-client
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-db-migrator:1.1.0-20201209.1607523698073
        imagePullPolicy: IfNotPresent
        name: sas-db-migrator
        ports: []
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 100m
            memory: 90Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add: []
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeDevices: []
        volumeMounts:
        - mountPath: /security
          name: security
        - mountPath: /data
          name: shared-vol
      readinessGates: []
      securityContext:
        runAsNonRoot: true
        supplementalGroups: []
        sysctls: []
      tolerations:
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateful
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateless
      volumes:
      - name: certframe-token
        secret:
          secretName: sas-certframe-token
      - emptyDir: {}
        name: security
      - configMap:
          name: sas-customer-provided-ca-certificates-29kdmk686c
        name: customer-provided-ca-certificates
      - emptyDir: {}
        name: tmp
      - emptyDir: {}
        name: shared-vol
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sas.com/certificate-file-format: pem
    sas.com/component-name: sas-forecasting-exploration
    sas.com/component-version: 15.12.0-20201203.1607024186781
    sas.com/kustomize-base: golang
    sas.com/pod-uses-liveness-probe: http
    sas.com/pod-uses-readiness-probe: http
    sas.com/pod-uses-startup-probe: http
    sas.com/version: 15.12.0
    sidecar.istio.io/proxyCPU: 15m
    sidecar.istio.io/proxyMemory: 115Mi
  labels:
    app.kubernetes.io/name: sas-forecasting-exploration
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
    sas.com/deployment-base: golang
    workload.sas.com/class: stateless
  name: sas-forecasting-exploration
  namespace: franceavv
spec:
  selector:
    matchExpressions: []
    matchLabels:
      app.kubernetes.io/name: sas-forecasting-exploration
      sas.com/deployment: sas-viya
  template:
    metadata:
      annotations:
        prometheus.io/path: /internal/metrics
        prometheus.io/port: "8080"
        prometheus.io/scheme: https
        prometheus.io/scrape: "true"
        sas.com/certificate-file-format: pem
        sas.com/component-name: sas-forecasting-exploration
        sas.com/component-version: 15.12.0-20201203.1607024186781
        sas.com/kustomize-base: golang
        sas.com/pod-uses-liveness-probe: http
        sas.com/pod-uses-readiness-probe: http
        sas.com/pod-uses-startup-probe: http
        sas.com/tls-enabled-ports: all
        sas.com/version: 15.12.0
        seccomp.security.alpha.kubernetes.io/pod: runtime/default
        sidecar.istio.io/proxyCPU: 15m
        sidecar.istio.io/proxyMemory: 115Mi
      labels:
        app: sas-forecasting-exploration
        app.kubernetes.io/name: sas-forecasting-exploration
        sas.com/deployment: sas-viya
        workload.sas.com/class: stateless
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: In
                values:
                - stateless
              matchFields: []
            weight: 100
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: NotIn
                values:
                - compute
                - cas
                - stateful
                - connect
              matchFields: []
            weight: 50
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.azure.com/mode
                operator: NotIn
                values:
                - system
              matchFields: []
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - sas-forecasting-exploration
              namespaces: []
              topologyKey: kubernetes.io/hostname
            weight: 100
          requiredDuringSchedulingIgnoredDuringExecution: []
      automountServiceAccountToken: false
      containers:
      - args: null
        command: null
        env:
        - name: SAS_K8S_DEPLOYMENT_NAME
          value: sas-forecasting-exploration
        envFrom:
        - configMapRef:
            name: sas-go-config-7hc79bmf8m
        - configMapRef:
            name: sas-shared-config-49d8hthtb5
        - secretRef:
            name: sas-consul-client
        - configMapRef:
            name: sas-tls-config-99f79t29t5
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-forecasting-exploration:15.12.0-20201203.1607024186781
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - sh
              - -c
              - sleep 5
        livenessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http
            scheme: HTTPS
          periodSeconds: 10
        name: sas-forecasting-exploration
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/ready
            port: http
            scheme: HTTPS
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add: []
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        startupProbe:
          failureThreshold: 180
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http
            scheme: HTTPS
          periodSeconds: 10
        volumeDevices: []
        volumeMounts:
        - mountPath: /tmp
          name: tmp
        - mountPath: /security
          name: security
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/cacerts
          name: security
          subPath: cacerts
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/private
          name: security
          subPath: private
      hostAliases: []
      imagePullSecrets:
      - name: sas-image-pull-secrets-4m8cc729k8
      initContainers:
      - env:
        - name: KUBE_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: SAS_CERTFRAME_TOKEN_DIR
          value: /certframe-token
        - name: SAS_ADDITIONAL_CA_CERTIFICATES_DIR
          value: /customer-provided-ca-certificates
        envFrom:
        - configMapRef:
            name: sas-certframe-ingress-certificate-config-cmm2t44t88
        - configMapRef:
            name: sas-certframe-user-config-c4ch2c59m7
        - configMapRef:
            name: sas-certframe-config-ctgg29gf7t
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-certframe:3.9.0-20201203.1607016443086
        name: sas-certframe
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /certframe-token
          name: certframe-token
        - mountPath: /security
          name: security
        - mountPath: /customer-provided-ca-certificates
          name: customer-provided-ca-certificates
      readinessGates: []
      securityContext:
        runAsNonRoot: true
        supplementalGroups: []
        sysctls: []
      tolerations:
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateful
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateless
      volumes:
      - name: certframe-token
        secret:
          secretName: sas-certframe-token
      - emptyDir: {}
        name: security
      - configMap:
          name: sas-customer-provided-ca-certificates-29kdmk686c
        name: customer-provided-ca-certificates
      - emptyDir: {}
        name: tmp
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sas.com/certificate-file-format: pem
    sas.com/component-name: sas-forecasting-filters
    sas.com/component-version: 15.12.0-20201203.1607026228979
    sas.com/kustomize-base: golang
    sas.com/pod-uses-db-migrator: "true"
    sas.com/pod-uses-liveness-probe: http
    sas.com/pod-uses-readiness-probe: http
    sas.com/pod-uses-startup-probe: http
    sas.com/version: 15.12.0
    sidecar.istio.io/proxyCPU: 15m
    sidecar.istio.io/proxyMemory: 115Mi
  labels:
    app.kubernetes.io/name: sas-forecasting-filters
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
    sas.com/deployment-base: golang
    workload.sas.com/class: stateless
  name: sas-forecasting-filters
  namespace: franceavv
spec:
  selector:
    matchExpressions: []
    matchLabels:
      app.kubernetes.io/name: sas-forecasting-filters
      sas.com/deployment: sas-viya
  template:
    metadata:
      annotations:
        prometheus.io/path: /internal/metrics
        prometheus.io/port: "8080"
        prometheus.io/scheme: https
        prometheus.io/scrape: "true"
        sas.com/certificate-file-format: pem
        sas.com/component-name: sas-forecasting-filters
        sas.com/component-version: 15.12.0-20201203.1607026228979
        sas.com/kustomize-base: golang
        sas.com/pod-uses-liveness-probe: http
        sas.com/pod-uses-readiness-probe: http
        sas.com/pod-uses-startup-probe: http
        sas.com/tls-enabled-ports: all
        sas.com/version: 15.12.0
        seccomp.security.alpha.kubernetes.io/pod: runtime/default
        sidecar.istio.io/proxyCPU: 15m
        sidecar.istio.io/proxyMemory: 115Mi
      labels:
        app: sas-forecasting-filters
        app.kubernetes.io/name: sas-forecasting-filters
        sas.com/deployment: sas-viya
        workload.sas.com/class: stateless
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: In
                values:
                - stateless
              matchFields: []
            weight: 100
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: NotIn
                values:
                - compute
                - cas
                - stateful
                - connect
              matchFields: []
            weight: 50
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.azure.com/mode
                operator: NotIn
                values:
                - system
              matchFields: []
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - sas-forecasting-filters
              namespaces: []
              topologyKey: kubernetes.io/hostname
            weight: 100
          requiredDuringSchedulingIgnoredDuringExecution: []
      automountServiceAccountToken: false
      containers:
      - args: null
        command: null
        env:
        - name: SAS_K8S_DEPLOYMENT_NAME
          value: sas-forecasting-filters
        envFrom:
        - configMapRef:
            name: sas-go-config-7hc79bmf8m
        - configMapRef:
            name: sas-shared-config-49d8hthtb5
        - secretRef:
            name: sas-consul-client
        - configMapRef:
            name: sas-tls-config-99f79t29t5
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-forecasting-filters:15.12.0-20201203.1607026228979
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - sh
              - -c
              - sleep 5
        livenessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http
            scheme: HTTPS
          periodSeconds: 10
        name: sas-forecasting-filters
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/ready
            port: http
            scheme: HTTPS
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add: []
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        startupProbe:
          failureThreshold: 180
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http
            scheme: HTTPS
          periodSeconds: 10
        volumeDevices: []
        volumeMounts:
        - mountPath: /tmp
          name: tmp
        - mountPath: /security
          name: security
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/cacerts
          name: security
          subPath: cacerts
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/private
          name: security
          subPath: private
      hostAliases: []
      imagePullSecrets:
      - name: sas-image-pull-secrets-4m8cc729k8
      initContainers:
      - env:
        - name: KUBE_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: SAS_CERTFRAME_TOKEN_DIR
          value: /certframe-token
        - name: SAS_ADDITIONAL_CA_CERTIFICATES_DIR
          value: /customer-provided-ca-certificates
        envFrom:
        - configMapRef:
            name: sas-certframe-ingress-certificate-config-cmm2t44t88
        - configMapRef:
            name: sas-certframe-user-config-c4ch2c59m7
        - configMapRef:
            name: sas-certframe-config-ctgg29gf7t
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-certframe:3.9.0-20201203.1607016443086
        name: sas-certframe
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /certframe-token
          name: certframe-token
        - mountPath: /security
          name: security
        - mountPath: /customer-provided-ca-certificates
          name: customer-provided-ca-certificates
      - args:
        - cp -rf meta /data
        command:
        - /bin/sh
        - -c
        env: []
        envFrom: []
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-forecasting-filters:15.12.0-20201203.1607026228979
        imagePullPolicy: IfNotPresent
        name: hydrator
        ports: []
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 75m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add: []
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeDevices: []
        volumeMounts:
        - mountPath: /data
          name: shared-vol
      - args: null
        command: null
        env:
        - name: SSL_CERT_FILE
          value: /security/trustedcerts.pem
        - name: SAS_SERVICE_NAME
          value: sas-forecasting-filters
        envFrom:
        - configMapRef:
            name: sas-go-config-7hc79bmf8m
        - configMapRef:
            name: sas-shared-config-49d8hthtb5
        - configMapRef:
            name: sas-java-config-t7t5thbgkd
        - secretRef:
            name: sas-consul-client
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-db-migrator:1.1.0-20201209.1607523698073
        imagePullPolicy: IfNotPresent
        name: sas-db-migrator
        ports: []
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 100m
            memory: 90Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add: []
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeDevices: []
        volumeMounts:
        - mountPath: /security
          name: security
        - mountPath: /data
          name: shared-vol
      readinessGates: []
      securityContext:
        runAsNonRoot: true
        supplementalGroups: []
        sysctls: []
      tolerations:
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateful
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateless
      volumes:
      - name: certframe-token
        secret:
          secretName: sas-certframe-token
      - emptyDir: {}
        name: security
      - configMap:
          name: sas-customer-provided-ca-certificates-29kdmk686c
        name: customer-provided-ca-certificates
      - emptyDir: {}
        name: tmp
      - emptyDir: {}
        name: shared-vol
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sas.com/certificate-file-format: pem
    sas.com/component-name: sas-forecasting-pipelines
    sas.com/component-version: 15.15.5-20201209.1607532908435
    sas.com/kustomize-base: golang
    sas.com/pod-uses-liveness-probe: http
    sas.com/pod-uses-readiness-probe: http
    sas.com/pod-uses-startup-probe: http
    sas.com/version: 15.15.5
    sidecar.istio.io/proxyCPU: 15m
    sidecar.istio.io/proxyMemory: 115Mi
  labels:
    app.kubernetes.io/name: sas-forecasting-pipelines
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
    sas.com/deployment-base: golang
    workload.sas.com/class: stateless
  name: sas-forecasting-pipelines
  namespace: franceavv
spec:
  selector:
    matchExpressions: []
    matchLabels:
      app.kubernetes.io/name: sas-forecasting-pipelines
      sas.com/deployment: sas-viya
  template:
    metadata:
      annotations:
        prometheus.io/path: /internal/metrics
        prometheus.io/port: "8080"
        prometheus.io/scheme: https
        prometheus.io/scrape: "true"
        sas.com/certificate-file-format: pem
        sas.com/component-name: sas-forecasting-pipelines
        sas.com/component-version: 15.15.5-20201209.1607532908435
        sas.com/kustomize-base: golang
        sas.com/pod-uses-liveness-probe: http
        sas.com/pod-uses-readiness-probe: http
        sas.com/pod-uses-startup-probe: http
        sas.com/tls-enabled-ports: all
        sas.com/version: 15.15.5
        seccomp.security.alpha.kubernetes.io/pod: runtime/default
        sidecar.istio.io/proxyCPU: 15m
        sidecar.istio.io/proxyMemory: 115Mi
      labels:
        app: sas-forecasting-pipelines
        app.kubernetes.io/name: sas-forecasting-pipelines
        sas.com/deployment: sas-viya
        workload.sas.com/class: stateless
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: In
                values:
                - stateless
              matchFields: []
            weight: 100
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: NotIn
                values:
                - compute
                - cas
                - stateful
                - connect
              matchFields: []
            weight: 50
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.azure.com/mode
                operator: NotIn
                values:
                - system
              matchFields: []
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - sas-forecasting-pipelines
              namespaces: []
              topologyKey: kubernetes.io/hostname
            weight: 100
          requiredDuringSchedulingIgnoredDuringExecution: []
      automountServiceAccountToken: false
      containers:
      - args: null
        command: null
        env:
        - name: SAS_K8S_DEPLOYMENT_NAME
          value: sas-forecasting-pipelines
        envFrom:
        - configMapRef:
            name: sas-go-config-7hc79bmf8m
        - configMapRef:
            name: sas-shared-config-49d8hthtb5
        - secretRef:
            name: sas-consul-client
        - configMapRef:
            name: sas-tls-config-99f79t29t5
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-forecasting-pipelines:15.15.5-20201209.1607532908435
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - sh
              - -c
              - sleep 5
        livenessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http
            scheme: HTTPS
          periodSeconds: 10
        name: sas-forecasting-pipelines
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/ready
            port: http
            scheme: HTTPS
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add: []
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        startupProbe:
          failureThreshold: 180
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http
            scheme: HTTPS
          periodSeconds: 10
        volumeDevices: []
        volumeMounts:
        - mountPath: /tmp
          name: tmp
        - mountPath: /security
          name: security
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/cacerts
          name: security
          subPath: cacerts
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/private
          name: security
          subPath: private
      hostAliases: []
      imagePullSecrets:
      - name: sas-image-pull-secrets-4m8cc729k8
      initContainers:
      - env:
        - name: KUBE_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: SAS_CERTFRAME_TOKEN_DIR
          value: /certframe-token
        - name: SAS_ADDITIONAL_CA_CERTIFICATES_DIR
          value: /customer-provided-ca-certificates
        envFrom:
        - configMapRef:
            name: sas-certframe-ingress-certificate-config-cmm2t44t88
        - configMapRef:
            name: sas-certframe-user-config-c4ch2c59m7
        - configMapRef:
            name: sas-certframe-config-ctgg29gf7t
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-certframe:3.9.0-20201203.1607016443086
        name: sas-certframe
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /certframe-token
          name: certframe-token
        - mountPath: /security
          name: security
        - mountPath: /customer-provided-ca-certificates
          name: customer-provided-ca-certificates
      readinessGates: []
      securityContext:
        runAsNonRoot: true
        supplementalGroups: []
        sysctls: []
      tolerations:
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateful
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateless
      volumes:
      - name: certframe-token
        secret:
          secretName: sas-certframe-token
      - emptyDir: {}
        name: security
      - configMap:
          name: sas-customer-provided-ca-certificates-29kdmk686c
        name: customer-provided-ca-certificates
      - emptyDir: {}
        name: tmp
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sas.com/certificate-file-format: jks
    sas.com/component-name: sas-forecasting-services
    sas.com/component-version: 15.20.4-20201209.1607555830814
    sas.com/kustomize-base: spring
    sas.com/pod-uses-liveness-probe: http
    sas.com/pod-uses-readiness-probe: http
    sas.com/pod-uses-startup-probe: http
    sas.com/version: 15.20.4
    sidecar.istio.io/proxyCPU: 15m
    sidecar.istio.io/proxyMemory: 115Mi
  labels:
    app.kubernetes.io/name: sas-forecasting-services
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
    sas.com/deployment-base: spring
    workload.sas.com/class: stateless
  name: sas-forecasting-services
  namespace: franceavv
spec:
  selector:
    matchExpressions: []
    matchLabels:
      app.kubernetes.io/name: sas-forecasting-services
      sas.com/deployment: sas-viya
  template:
    metadata:
      annotations:
        prometheus.io/path: /internal/metrics
        prometheus.io/port: "10445"
        prometheus.io/scheme: https
        prometheus.io/scrape: "true"
        sas.com/certificate-file-format: jks
        sas.com/component-name: sas-forecasting-services
        sas.com/component-version: 15.20.4-20201209.1607555830814
        sas.com/kustomize-base: spring
        sas.com/pod-uses-liveness-probe: http
        sas.com/pod-uses-readiness-probe: http
        sas.com/pod-uses-startup-probe: http
        sas.com/tls-enabled-ports: all
        sas.com/version: 15.20.4
        seccomp.security.alpha.kubernetes.io/pod: runtime/default
        sidecar.istio.io/proxyCPU: 15m
        sidecar.istio.io/proxyMemory: 115Mi
      labels:
        app: sas-forecasting-services
        app.kubernetes.io/name: sas-forecasting-services
        sas.com/deployment: sas-viya
        workload.sas.com/class: stateless
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: In
                values:
                - stateless
              matchFields: []
            weight: 100
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: NotIn
                values:
                - compute
                - cas
                - stateful
                - connect
              matchFields: []
            weight: 50
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.azure.com/mode
                operator: NotIn
                values:
                - system
              matchFields: []
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - sas-forecasting-services
              namespaces: []
              topologyKey: kubernetes.io/hostname
            weight: 100
          requiredDuringSchedulingIgnoredDuringExecution: []
      automountServiceAccountToken: false
      containers:
      - args: null
        command: null
        env:
        - name: SAS_K8S_DEPLOYMENT_NAME
          value: sas-forecasting-services
        - name: JAVA_OPTION_SERVER_PORT
        - name: MANAGEMENT_SERVER_PORT
          value: ${sas.${spring.application.name}.management.server.port:10445}
        - name: LOGGING_LEVEL_COM_SAS_COMMONS_REST_BOOT_INITIALIZATION
          value: TRACE
        - name: LOGGING_LEVEL_COM_SAS_COMMONS_DB
          value: TRACE
        envFrom:
        - configMapRef:
            name: sas-java-config-t7t5thbgkd
        - configMapRef:
            name: sas-shared-config-49d8hthtb5
        - secretRef:
            name: sas-consul-client
        - configMapRef:
            name: sas-spring-management-config-d64bbkhb97
        - configMapRef:
            name: sas-java-tls-config-fch4777298
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-forecasting-services:15.20.4-20201209.1607555830814
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - sh
              - -c
              - sleep 5
        livenessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http-internal
            scheme: HTTPS
          periodSeconds: 10
        name: sas-forecasting-services
        ports:
        - containerPort: 10445
          name: http-internal
          protocol: TCP
        - containerPort: 8081
          name: vfgateway
          protocol: TCP
        - containerPort: 8082
          name: vfdatadef
          protocol: TCP
        - containerPort: 8083
          name: vfstrategies
          protocol: TCP
        - containerPort: 8084
          name: vfoverrides
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/ready
            port: http-internal
            scheme: HTTPS
          periodSeconds: 10
        resources:
          limits:
            cpu: 2000m
            memory: 800Mi
          requests:
            cpu: 50m
            memory: 650Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add: []
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        startupProbe:
          failureThreshold: 180
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http-internal
            scheme: HTTPS
          initialDelaySeconds: 20
          periodSeconds: 10
        volumeDevices: []
        volumeMounts:
        - mountPath: /tmp
          name: tmp
        - mountPath: /opt/sas/viya/config/tmp
          name: tmp
        - mountPath: /security
          name: security
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/cacerts
          name: security
          subPath: cacerts
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/private
          name: security
          subPath: private
      hostAliases: []
      imagePullSecrets:
      - name: sas-image-pull-secrets-4m8cc729k8
      initContainers:
      - env:
        - name: KUBE_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: SAS_CERTFRAME_TOKEN_DIR
          value: /certframe-token
        - name: SAS_ADDITIONAL_CA_CERTIFICATES_DIR
          value: /customer-provided-ca-certificates
        envFrom:
        - configMapRef:
            name: sas-certframe-ingress-certificate-config-cmm2t44t88
        - configMapRef:
            name: sas-certframe-user-config-c4ch2c59m7
        - configMapRef:
            name: sas-certframe-java-config-gf4kt94898
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-certframe:3.9.0-20201203.1607016443086
        name: sas-certframe
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /certframe-token
          name: certframe-token
        - mountPath: /security
          name: security
        - mountPath: /customer-provided-ca-certificates
          name: customer-provided-ca-certificates
      readinessGates: []
      securityContext:
        runAsNonRoot: true
        supplementalGroups: []
        sysctls: []
      tolerations:
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateful
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateless
      volumes:
      - name: certframe-token
        secret:
          secretName: sas-certframe-token
      - emptyDir: {}
        name: security
      - configMap:
          name: sas-customer-provided-ca-certificates-29kdmk686c
        name: customer-provided-ca-certificates
      - emptyDir: {}
        name: tmp
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sas.com/certificate-file-format: jks
    sas.com/component-name: sas-geo-enrichment
    sas.com/component-version: 1.20.0-20201209.1607532669891
    sas.com/kustomize-base: spring
    sas.com/pod-uses-liveness-probe: http
    sas.com/pod-uses-readiness-probe: http
    sas.com/pod-uses-startup-probe: http
    sas.com/version: 1.20.0
    sidecar.istio.io/proxyCPU: 15m
    sidecar.istio.io/proxyMemory: 115Mi
  labels:
    app.kubernetes.io/name: sas-geo-enrichment
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
    sas.com/deployment-base: spring
    workload.sas.com/class: stateless
  name: sas-geo-enrichment
  namespace: franceavv
spec:
  selector:
    matchExpressions: []
    matchLabels:
      app.kubernetes.io/name: sas-geo-enrichment
      sas.com/deployment: sas-viya
  template:
    metadata:
      annotations:
        prometheus.io/path: /internal/metrics
        prometheus.io/port: "10445"
        prometheus.io/scheme: https
        prometheus.io/scrape: "true"
        sas.com/certificate-file-format: jks
        sas.com/component-name: sas-geo-enrichment
        sas.com/component-version: 1.20.0-20201209.1607532669891
        sas.com/kustomize-base: spring
        sas.com/pod-uses-liveness-probe: http
        sas.com/pod-uses-readiness-probe: http
        sas.com/pod-uses-startup-probe: http
        sas.com/tls-enabled-ports: all
        sas.com/version: 1.20.0
        seccomp.security.alpha.kubernetes.io/pod: runtime/default
        sidecar.istio.io/proxyCPU: 15m
        sidecar.istio.io/proxyMemory: 115Mi
      labels:
        app: sas-geo-enrichment
        app.kubernetes.io/name: sas-geo-enrichment
        sas.com/deployment: sas-viya
        workload.sas.com/class: stateless
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: In
                values:
                - stateless
              matchFields: []
            weight: 100
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: NotIn
                values:
                - compute
                - cas
                - stateful
                - connect
              matchFields: []
            weight: 50
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.azure.com/mode
                operator: NotIn
                values:
                - system
              matchFields: []
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - sas-geo-enrichment
              namespaces: []
              topologyKey: kubernetes.io/hostname
            weight: 100
          requiredDuringSchedulingIgnoredDuringExecution: []
      automountServiceAccountToken: false
      containers:
      - args: null
        command: null
        env:
        - name: SAS_K8S_DEPLOYMENT_NAME
          value: sas-geo-enrichment
        envFrom:
        - configMapRef:
            name: sas-java-config-t7t5thbgkd
        - configMapRef:
            name: sas-shared-config-49d8hthtb5
        - secretRef:
            name: sas-consul-client
        - configMapRef:
            name: sas-spring-management-config-d64bbkhb97
        - configMapRef:
            name: sas-java-tls-config-fch4777298
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-geo-enrichment:1.20.0-20201209.1607532669891
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - sh
              - -c
              - sleep 5
        livenessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http-internal
            scheme: HTTPS
          periodSeconds: 10
        name: sas-geo-enrichment
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        - containerPort: 10445
          name: http-internal
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/ready
            port: http-internal
            scheme: HTTPS
          periodSeconds: 10
        resources:
          limits:
            cpu: 2000m
            memory: 1Gi
          requests:
            cpu: 50m
            memory: 650M
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add: []
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        startupProbe:
          failureThreshold: 180
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http-internal
            scheme: HTTPS
          initialDelaySeconds: 20
          periodSeconds: 10
        volumeDevices: []
        volumeMounts:
        - mountPath: /tmp
          name: tmp
        - mountPath: /opt/sas/viya/config/tmp
          name: tmp
        - mountPath: /security
          name: security
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/cacerts
          name: security
          subPath: cacerts
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/private
          name: security
          subPath: private
      hostAliases: []
      imagePullSecrets:
      - name: sas-image-pull-secrets-4m8cc729k8
      initContainers:
      - env:
        - name: KUBE_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: SAS_CERTFRAME_TOKEN_DIR
          value: /certframe-token
        - name: SAS_ADDITIONAL_CA_CERTIFICATES_DIR
          value: /customer-provided-ca-certificates
        envFrom:
        - configMapRef:
            name: sas-certframe-ingress-certificate-config-cmm2t44t88
        - configMapRef:
            name: sas-certframe-user-config-c4ch2c59m7
        - configMapRef:
            name: sas-certframe-java-config-gf4kt94898
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-certframe:3.9.0-20201203.1607016443086
        name: sas-certframe
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /certframe-token
          name: certframe-token
        - mountPath: /security
          name: security
        - mountPath: /customer-provided-ca-certificates
          name: customer-provided-ca-certificates
      readinessGates: []
      securityContext:
        runAsNonRoot: true
        supplementalGroups: []
        sysctls: []
      tolerations:
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateful
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateless
      volumes:
      - name: certframe-token
        secret:
          secretName: sas-certframe-token
      - emptyDir: {}
        name: security
      - configMap:
          name: sas-customer-provided-ca-certificates-29kdmk686c
        name: customer-provided-ca-certificates
      - emptyDir: {}
        name: tmp
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sas.com/certificate-file-format: pem
    sas.com/component-name: sas-graph-builder-app
    sas.com/component-version: 1.65.0-20201203.1607022262435
    sas.com/kustomize-base: golang
    sas.com/pod-uses-liveness-probe: http
    sas.com/pod-uses-readiness-probe: http
    sas.com/pod-uses-startup-probe: http
    sas.com/version: 1.65.0
    sidecar.istio.io/proxyCPU: 15m
    sidecar.istio.io/proxyMemory: 115Mi
  labels:
    app.kubernetes.io/name: sas-graph-builder-app
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
    sas.com/deployment-base: golang
    workload.sas.com/class: stateless
  name: sas-graph-builder-app
  namespace: franceavv
spec:
  selector:
    matchExpressions: []
    matchLabels:
      app.kubernetes.io/name: sas-graph-builder-app
      sas.com/deployment: sas-viya
  template:
    metadata:
      annotations:
        prometheus.io/path: /internal/metrics
        prometheus.io/port: "8080"
        prometheus.io/scheme: https
        prometheus.io/scrape: "true"
        sas.com/certificate-file-format: pem
        sas.com/component-name: sas-graph-builder-app
        sas.com/component-version: 1.65.0-20201203.1607022262435
        sas.com/kustomize-base: golang
        sas.com/pod-uses-liveness-probe: http
        sas.com/pod-uses-readiness-probe: http
        sas.com/pod-uses-startup-probe: http
        sas.com/tls-enabled-ports: all
        sas.com/version: 1.65.0
        seccomp.security.alpha.kubernetes.io/pod: runtime/default
        sidecar.istio.io/proxyCPU: 15m
        sidecar.istio.io/proxyMemory: 115Mi
      labels:
        app: sas-graph-builder-app
        app.kubernetes.io/name: sas-graph-builder-app
        sas.com/deployment: sas-viya
        workload.sas.com/class: stateless
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: In
                values:
                - stateless
              matchFields: []
            weight: 100
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: NotIn
                values:
                - compute
                - cas
                - stateful
                - connect
              matchFields: []
            weight: 50
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.azure.com/mode
                operator: NotIn
                values:
                - system
              matchFields: []
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - sas-graph-builder-app
              namespaces: []
              topologyKey: kubernetes.io/hostname
            weight: 100
          requiredDuringSchedulingIgnoredDuringExecution: []
      automountServiceAccountToken: false
      containers:
      - args: null
        command: null
        env:
        - name: SAS_K8S_DEPLOYMENT_NAME
          value: sas-graph-builder-app
        envFrom:
        - configMapRef:
            name: sas-go-config-7hc79bmf8m
        - configMapRef:
            name: sas-shared-config-49d8hthtb5
        - secretRef:
            name: sas-consul-client
        - configMapRef:
            name: sas-tls-config-99f79t29t5
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-graph-builder-app:1.65.0-20201203.1607022262435
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - sh
              - -c
              - sleep 5
        livenessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http
            scheme: HTTPS
          periodSeconds: 10
        name: sas-graph-builder-app
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/ready
            port: http
            scheme: HTTPS
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add: []
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        startupProbe:
          failureThreshold: 180
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http
            scheme: HTTPS
          periodSeconds: 10
        volumeDevices: []
        volumeMounts:
        - mountPath: /tmp
          name: tmp
        - mountPath: /security
          name: security
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/cacerts
          name: security
          subPath: cacerts
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/private
          name: security
          subPath: private
      hostAliases: []
      imagePullSecrets:
      - name: sas-image-pull-secrets-4m8cc729k8
      initContainers:
      - env:
        - name: KUBE_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: SAS_CERTFRAME_TOKEN_DIR
          value: /certframe-token
        - name: SAS_ADDITIONAL_CA_CERTIFICATES_DIR
          value: /customer-provided-ca-certificates
        envFrom:
        - configMapRef:
            name: sas-certframe-ingress-certificate-config-cmm2t44t88
        - configMapRef:
            name: sas-certframe-user-config-c4ch2c59m7
        - configMapRef:
            name: sas-certframe-config-ctgg29gf7t
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-certframe:3.9.0-20201203.1607016443086
        name: sas-certframe
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /certframe-token
          name: certframe-token
        - mountPath: /security
          name: security
        - mountPath: /customer-provided-ca-certificates
          name: customer-provided-ca-certificates
      readinessGates: []
      securityContext:
        runAsNonRoot: true
        supplementalGroups: []
        sysctls: []
      tolerations:
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateful
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateless
      volumes:
      - name: certframe-token
        secret:
          secretName: sas-certframe-token
      - emptyDir: {}
        name: security
      - configMap:
          name: sas-customer-provided-ca-certificates-29kdmk686c
        name: customer-provided-ca-certificates
      - emptyDir: {}
        name: tmp
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sas.com/certificate-file-format: pem
    sas.com/component-name: sas-graph-templates
    sas.com/component-version: 1.71.0-20201203.1607004187481
    sas.com/kustomize-base: golang
    sas.com/pod-uses-db-migrator: "true"
    sas.com/pod-uses-liveness-probe: http
    sas.com/pod-uses-readiness-probe: http
    sas.com/pod-uses-startup-probe: http
    sas.com/version: 1.71.0
    sidecar.istio.io/proxyCPU: 15m
    sidecar.istio.io/proxyMemory: 115Mi
  labels:
    app.kubernetes.io/name: sas-graph-templates
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
    sas.com/deployment-base: golang
    workload.sas.com/class: stateless
  name: sas-graph-templates
  namespace: franceavv
spec:
  selector:
    matchExpressions: []
    matchLabels:
      app.kubernetes.io/name: sas-graph-templates
      sas.com/deployment: sas-viya
  template:
    metadata:
      annotations:
        prometheus.io/path: /internal/metrics
        prometheus.io/port: "8080"
        prometheus.io/scheme: https
        prometheus.io/scrape: "true"
        sas.com/certificate-file-format: pem
        sas.com/component-name: sas-graph-templates
        sas.com/component-version: 1.71.0-20201203.1607004187481
        sas.com/kustomize-base: golang
        sas.com/pod-uses-liveness-probe: http
        sas.com/pod-uses-readiness-probe: http
        sas.com/pod-uses-startup-probe: http
        sas.com/tls-enabled-ports: all
        sas.com/version: 1.71.0
        seccomp.security.alpha.kubernetes.io/pod: runtime/default
        sidecar.istio.io/proxyCPU: 15m
        sidecar.istio.io/proxyMemory: 115Mi
      labels:
        app: sas-graph-templates
        app.kubernetes.io/name: sas-graph-templates
        sas.com/deployment: sas-viya
        workload.sas.com/class: stateless
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: In
                values:
                - stateless
              matchFields: []
            weight: 100
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: NotIn
                values:
                - compute
                - cas
                - stateful
                - connect
              matchFields: []
            weight: 50
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.azure.com/mode
                operator: NotIn
                values:
                - system
              matchFields: []
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - sas-graph-templates
              namespaces: []
              topologyKey: kubernetes.io/hostname
            weight: 100
          requiredDuringSchedulingIgnoredDuringExecution: []
      automountServiceAccountToken: false
      containers:
      - args: null
        command: null
        env:
        - name: SAS_K8S_DEPLOYMENT_NAME
          value: sas-graph-templates
        envFrom:
        - configMapRef:
            name: sas-go-config-7hc79bmf8m
        - configMapRef:
            name: sas-shared-config-49d8hthtb5
        - secretRef:
            name: sas-consul-client
        - configMapRef:
            name: sas-tls-config-99f79t29t5
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-graph-templates:1.71.0-20201203.1607004187481
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - sh
              - -c
              - sleep 5
        livenessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http
            scheme: HTTPS
          periodSeconds: 10
        name: sas-graph-templates
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/ready
            port: http
            scheme: HTTPS
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add: []
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        startupProbe:
          failureThreshold: 180
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http
            scheme: HTTPS
          periodSeconds: 10
        volumeDevices: []
        volumeMounts:
        - mountPath: /tmp
          name: tmp
        - mountPath: /security
          name: security
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/cacerts
          name: security
          subPath: cacerts
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/private
          name: security
          subPath: private
      hostAliases: []
      imagePullSecrets:
      - name: sas-image-pull-secrets-4m8cc729k8
      initContainers:
      - env:
        - name: KUBE_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: SAS_CERTFRAME_TOKEN_DIR
          value: /certframe-token
        - name: SAS_ADDITIONAL_CA_CERTIFICATES_DIR
          value: /customer-provided-ca-certificates
        envFrom:
        - configMapRef:
            name: sas-certframe-ingress-certificate-config-cmm2t44t88
        - configMapRef:
            name: sas-certframe-user-config-c4ch2c59m7
        - configMapRef:
            name: sas-certframe-config-ctgg29gf7t
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-certframe:3.9.0-20201203.1607016443086
        name: sas-certframe
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /certframe-token
          name: certframe-token
        - mountPath: /security
          name: security
        - mountPath: /customer-provided-ca-certificates
          name: customer-provided-ca-certificates
      - args:
        - cp -rf meta /data
        command:
        - /bin/sh
        - -c
        env: []
        envFrom: []
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-graph-templates:1.71.0-20201203.1607004187481
        imagePullPolicy: IfNotPresent
        name: hydrator
        ports: []
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 75m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add: []
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeDevices: []
        volumeMounts:
        - mountPath: /data
          name: shared-vol
      - args: null
        command: null
        env:
        - name: SSL_CERT_FILE
          value: /security/trustedcerts.pem
        - name: SAS_SERVICE_NAME
          value: sas-graph-templates
        envFrom:
        - configMapRef:
            name: sas-go-config-7hc79bmf8m
        - configMapRef:
            name: sas-shared-config-49d8hthtb5
        - configMapRef:
            name: sas-java-config-t7t5thbgkd
        - secretRef:
            name: sas-consul-client
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-db-migrator:1.1.0-20201209.1607523698073
        imagePullPolicy: IfNotPresent
        name: sas-db-migrator
        ports: []
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 100m
            memory: 90Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add: []
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeDevices: []
        volumeMounts:
        - mountPath: /security
          name: security
        - mountPath: /data
          name: shared-vol
      readinessGates: []
      securityContext:
        runAsNonRoot: true
        supplementalGroups: []
        sysctls: []
      tolerations:
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateful
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateless
      volumes:
      - name: certframe-token
        secret:
          secretName: sas-certframe-token
      - emptyDir: {}
        name: security
      - configMap:
          name: sas-customer-provided-ca-certificates-29kdmk686c
        name: customer-provided-ca-certificates
      - emptyDir: {}
        name: tmp
      - emptyDir: {}
        name: shared-vol
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sas.com/certificate-file-format: jks
    sas.com/component-name: sas-identities
    sas.com/component-version: 2.40.14-20201204.1607054361393
    sas.com/kustomize-base: spring
    sas.com/pod-uses-liveness-probe: http
    sas.com/pod-uses-readiness-probe: http
    sas.com/pod-uses-startup-probe: http
    sas.com/version: 2.40.14
    sidecar.istio.io/proxyCPU: 15m
    sidecar.istio.io/proxyMemory: 115Mi
  labels:
    app.kubernetes.io/name: sas-identities
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
    sas.com/deployment-base: spring
    workload.sas.com/class: stateless
  name: sas-identities
  namespace: franceavv
spec:
  selector:
    matchExpressions: []
    matchLabels:
      app.kubernetes.io/name: sas-identities
      sas.com/deployment: sas-viya
  template:
    metadata:
      annotations:
        prometheus.io/path: /internal/metrics
        prometheus.io/port: "10445"
        prometheus.io/scheme: https
        prometheus.io/scrape: "true"
        sas.com/certificate-file-format: jks
        sas.com/component-name: sas-identities
        sas.com/component-version: 2.40.14-20201204.1607054361393
        sas.com/kustomize-base: spring
        sas.com/pod-uses-liveness-probe: http
        sas.com/pod-uses-readiness-probe: http
        sas.com/pod-uses-startup-probe: http
        sas.com/tls-enabled-ports: all
        sas.com/version: 2.40.14
        seccomp.security.alpha.kubernetes.io/pod: runtime/default
        sidecar.istio.io/proxyCPU: 15m
        sidecar.istio.io/proxyMemory: 115Mi
      labels:
        app: sas-identities
        app.kubernetes.io/name: sas-identities
        sas.com/deployment: sas-viya
        workload.sas.com/class: stateless
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: In
                values:
                - stateless
              matchFields: []
            weight: 100
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: NotIn
                values:
                - compute
                - cas
                - stateful
                - connect
              matchFields: []
            weight: 50
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.azure.com/mode
                operator: NotIn
                values:
                - system
              matchFields: []
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - sas-identities
              namespaces: []
              topologyKey: kubernetes.io/hostname
            weight: 100
          requiredDuringSchedulingIgnoredDuringExecution: []
      automountServiceAccountToken: false
      containers:
      - args: null
        command: null
        env:
        - name: SAS_K8S_DEPLOYMENT_NAME
          value: sas-identities
        envFrom:
        - configMapRef:
            name: sas-java-config-t7t5thbgkd
        - configMapRef:
            name: sas-shared-config-49d8hthtb5
        - secretRef:
            name: sas-consul-client
        - configMapRef:
            name: sas-spring-management-config-d64bbkhb97
        - configMapRef:
            name: sas-java-tls-config-fch4777298
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-identities:2.40.14-20201204.1607054361393
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - sh
              - -c
              - sleep 5
        livenessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http-internal
            scheme: HTTPS
          periodSeconds: 10
        name: sas-identities
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        - containerPort: 10445
          name: http-internal
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/ready
            port: http-internal
            scheme: HTTPS
          periodSeconds: 10
        resources:
          limits:
            cpu: 2000m
            memory: 1Gi
          requests:
            cpu: 50m
            memory: 650M
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add: []
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        startupProbe:
          failureThreshold: 180
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http-internal
            scheme: HTTPS
          initialDelaySeconds: 20
          periodSeconds: 10
        volumeDevices: []
        volumeMounts:
        - mountPath: /tmp
          name: tmp
        - mountPath: /opt/sas/viya/config/tmp
          name: tmp
        - mountPath: /security
          name: security
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/cacerts
          name: security
          subPath: cacerts
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/private
          name: security
          subPath: private
      hostAliases: []
      imagePullSecrets:
      - name: sas-image-pull-secrets-4m8cc729k8
      initContainers:
      - env:
        - name: KUBE_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: SAS_CERTFRAME_TOKEN_DIR
          value: /certframe-token
        - name: SAS_ADDITIONAL_CA_CERTIFICATES_DIR
          value: /customer-provided-ca-certificates
        envFrom:
        - configMapRef:
            name: sas-certframe-ingress-certificate-config-cmm2t44t88
        - configMapRef:
            name: sas-certframe-user-config-c4ch2c59m7
        - configMapRef:
            name: sas-certframe-java-config-gf4kt94898
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-certframe:3.9.0-20201203.1607016443086
        name: sas-certframe
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /certframe-token
          name: certframe-token
        - mountPath: /security
          name: security
        - mountPath: /customer-provided-ca-certificates
          name: customer-provided-ca-certificates
      readinessGates: []
      securityContext:
        runAsNonRoot: true
        supplementalGroups: []
        sysctls: []
      tolerations:
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateful
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateless
      volumes:
      - name: certframe-token
        secret:
          secretName: sas-certframe-token
      - emptyDir: {}
        name: security
      - configMap:
          name: sas-customer-provided-ca-certificates-29kdmk686c
        name: customer-provided-ca-certificates
      - emptyDir: {}
        name: tmp
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sas.com/certificate-file-format: jks
    sas.com/component-name: sas-import-9
    sas.com/component-version: 1.9.9-20201211.1607711349452
    sas.com/kustomize-base: spring
    sas.com/pod-uses-liveness-probe: http
    sas.com/pod-uses-readiness-probe: http
    sas.com/pod-uses-startup-probe: http
    sas.com/version: 1.9.9
    sidecar.istio.io/proxyCPU: 15m
    sidecar.istio.io/proxyMemory: 115Mi
  labels:
    app.kubernetes.io/name: sas-import-9
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
    sas.com/deployment-base: spring
    workload.sas.com/class: stateless
  name: sas-import-9
  namespace: franceavv
spec:
  selector:
    matchExpressions: []
    matchLabels:
      app.kubernetes.io/name: sas-import-9
      sas.com/deployment: sas-viya
  template:
    metadata:
      annotations:
        prometheus.io/path: /internal/metrics
        prometheus.io/port: "10445"
        prometheus.io/scheme: https
        prometheus.io/scrape: "true"
        sas.com/certificate-file-format: jks
        sas.com/component-name: sas-import-9
        sas.com/component-version: 1.9.9-20201211.1607711349452
        sas.com/kustomize-base: spring
        sas.com/pod-uses-liveness-probe: http
        sas.com/pod-uses-readiness-probe: http
        sas.com/pod-uses-startup-probe: http
        sas.com/tls-enabled-ports: all
        sas.com/version: 1.9.9
        seccomp.security.alpha.kubernetes.io/pod: runtime/default
        sidecar.istio.io/proxyCPU: 15m
        sidecar.istio.io/proxyMemory: 115Mi
      labels:
        app: sas-import-9
        app.kubernetes.io/name: sas-import-9
        sas.com/deployment: sas-viya
        workload.sas.com/class: stateless
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: In
                values:
                - stateless
              matchFields: []
            weight: 100
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: NotIn
                values:
                - compute
                - cas
                - stateful
                - connect
              matchFields: []
            weight: 50
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.azure.com/mode
                operator: NotIn
                values:
                - system
              matchFields: []
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - sas-import-9
              namespaces: []
              topologyKey: kubernetes.io/hostname
            weight: 100
          requiredDuringSchedulingIgnoredDuringExecution: []
      automountServiceAccountToken: false
      containers:
      - args: null
        command: null
        env:
        - name: SAS_K8S_DEPLOYMENT_NAME
          value: sas-import-9
        envFrom:
        - configMapRef:
            name: sas-java-config-t7t5thbgkd
        - configMapRef:
            name: sas-shared-config-49d8hthtb5
        - secretRef:
            name: sas-consul-client
        - configMapRef:
            name: sas-spring-management-config-d64bbkhb97
        - configMapRef:
            name: sas-java-tls-config-fch4777298
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-import-9:1.9.9-20201211.1607711349452
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - sh
              - -c
              - sleep 5
        livenessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http-internal
            scheme: HTTPS
          periodSeconds: 10
        name: sas-import-9
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        - containerPort: 10445
          name: http-internal
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/ready
            port: http-internal
            scheme: HTTPS
          periodSeconds: 10
        resources:
          limits:
            cpu: 2000m
            memory: 1Gi
          requests:
            cpu: 50m
            memory: 650M
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add: []
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        startupProbe:
          failureThreshold: 180
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http-internal
            scheme: HTTPS
          initialDelaySeconds: 20
          periodSeconds: 10
        volumeDevices: []
        volumeMounts:
        - mountPath: /tmp
          name: tmp
        - mountPath: /opt/sas/viya/config/tmp
          name: tmp
        - mountPath: /security
          name: security
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/cacerts
          name: security
          subPath: cacerts
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/private
          name: security
          subPath: private
      hostAliases: []
      imagePullSecrets:
      - name: sas-image-pull-secrets-4m8cc729k8
      initContainers:
      - env:
        - name: KUBE_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: SAS_CERTFRAME_TOKEN_DIR
          value: /certframe-token
        - name: SAS_ADDITIONAL_CA_CERTIFICATES_DIR
          value: /customer-provided-ca-certificates
        envFrom:
        - configMapRef:
            name: sas-certframe-ingress-certificate-config-cmm2t44t88
        - configMapRef:
            name: sas-certframe-user-config-c4ch2c59m7
        - configMapRef:
            name: sas-certframe-java-config-gf4kt94898
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-certframe:3.9.0-20201203.1607016443086
        name: sas-certframe
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /certframe-token
          name: certframe-token
        - mountPath: /security
          name: security
        - mountPath: /customer-provided-ca-certificates
          name: customer-provided-ca-certificates
      readinessGates: []
      securityContext:
        runAsNonRoot: true
        supplementalGroups: []
        sysctls: []
      tolerations:
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateful
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateless
      volumes:
      - name: certframe-token
        secret:
          secretName: sas-certframe-token
      - emptyDir: {}
        name: security
      - configMap:
          name: sas-customer-provided-ca-certificates-29kdmk686c
        name: customer-provided-ca-certificates
      - emptyDir: {}
        name: tmp
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sas.com/certificate-file-format: jks
    sas.com/component-name: sas-job-execution
    sas.com/component-version: 2.28.12-20201204.1607054870985
    sas.com/kustomize-base: spring
    sas.com/pod-uses-liveness-probe: http
    sas.com/pod-uses-readiness-probe: http
    sas.com/pod-uses-startup-probe: http
    sas.com/version: 2.28.12
    sidecar.istio.io/proxyCPU: 15m
    sidecar.istio.io/proxyMemory: 115Mi
  labels:
    app.kubernetes.io/name: sas-job-execution
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
    sas.com/deployment-base: spring
    workload.sas.com/class: stateless
  name: sas-job-execution
  namespace: franceavv
spec:
  selector:
    matchExpressions: []
    matchLabels:
      app.kubernetes.io/name: sas-job-execution
      sas.com/deployment: sas-viya
  template:
    metadata:
      annotations:
        prometheus.io/path: /internal/metrics
        prometheus.io/port: "10445"
        prometheus.io/scheme: https
        prometheus.io/scrape: "true"
        sas.com/certificate-file-format: jks
        sas.com/component-name: sas-job-execution
        sas.com/component-version: 2.28.12-20201204.1607054870985
        sas.com/kustomize-base: spring
        sas.com/pod-uses-liveness-probe: http
        sas.com/pod-uses-readiness-probe: http
        sas.com/pod-uses-startup-probe: http
        sas.com/tls-enabled-ports: all
        sas.com/version: 2.28.12
        seccomp.security.alpha.kubernetes.io/pod: runtime/default
        sidecar.istio.io/proxyCPU: 15m
        sidecar.istio.io/proxyMemory: 115Mi
      labels:
        app: sas-job-execution
        app.kubernetes.io/name: sas-job-execution
        sas.com/deployment: sas-viya
        workload.sas.com/class: stateless
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: In
                values:
                - stateless
              matchFields: []
            weight: 100
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: NotIn
                values:
                - compute
                - cas
                - stateful
                - connect
              matchFields: []
            weight: 50
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.azure.com/mode
                operator: NotIn
                values:
                - system
              matchFields: []
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - sas-job-execution
              namespaces: []
              topologyKey: kubernetes.io/hostname
            weight: 100
          requiredDuringSchedulingIgnoredDuringExecution: []
      automountServiceAccountToken: false
      containers:
      - args: null
        command: null
        env:
        - name: SAS_K8S_DEPLOYMENT_NAME
          value: sas-job-execution
        envFrom:
        - configMapRef:
            name: sas-java-config-t7t5thbgkd
        - configMapRef:
            name: sas-shared-config-49d8hthtb5
        - secretRef:
            name: sas-consul-client
        - configMapRef:
            name: sas-spring-management-config-d64bbkhb97
        - configMapRef:
            name: sas-java-tls-config-fch4777298
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-job-execution:2.28.12-20201204.1607054870985
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - sh
              - -c
              - sleep 5
        livenessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http-internal
            scheme: HTTPS
          periodSeconds: 10
        name: sas-job-execution
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        - containerPort: 10445
          name: http-internal
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/ready
            port: http-internal
            scheme: HTTPS
          periodSeconds: 10
        resources:
          limits:
            cpu: 2000m
            memory: 1Gi
          requests:
            cpu: 50m
            memory: 650M
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add: []
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        startupProbe:
          failureThreshold: 180
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http-internal
            scheme: HTTPS
          initialDelaySeconds: 20
          periodSeconds: 10
        volumeDevices: []
        volumeMounts:
        - mountPath: /tmp
          name: tmp
        - mountPath: /opt/sas/viya/config/tmp
          name: tmp
        - mountPath: /security
          name: security
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/cacerts
          name: security
          subPath: cacerts
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/private
          name: security
          subPath: private
      hostAliases: []
      imagePullSecrets:
      - name: sas-image-pull-secrets-4m8cc729k8
      initContainers:
      - env:
        - name: KUBE_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: SAS_CERTFRAME_TOKEN_DIR
          value: /certframe-token
        - name: SAS_ADDITIONAL_CA_CERTIFICATES_DIR
          value: /customer-provided-ca-certificates
        envFrom:
        - configMapRef:
            name: sas-certframe-ingress-certificate-config-cmm2t44t88
        - configMapRef:
            name: sas-certframe-user-config-c4ch2c59m7
        - configMapRef:
            name: sas-certframe-java-config-gf4kt94898
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-certframe:3.9.0-20201203.1607016443086
        name: sas-certframe
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /certframe-token
          name: certframe-token
        - mountPath: /security
          name: security
        - mountPath: /customer-provided-ca-certificates
          name: customer-provided-ca-certificates
      readinessGates: []
      securityContext:
        runAsNonRoot: true
        supplementalGroups: []
        sysctls: []
      tolerations:
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateful
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateless
      volumes:
      - name: certframe-token
        secret:
          secretName: sas-certframe-token
      - emptyDir: {}
        name: security
      - configMap:
          name: sas-customer-provided-ca-certificates-29kdmk686c
        name: customer-provided-ca-certificates
      - emptyDir: {}
        name: tmp
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sas.com/certificate-file-format: pem
    sas.com/component-name: sas-job-execution-app
    sas.com/component-version: 2.18.3-20201209.1607521207111
    sas.com/kustomize-base: golang
    sas.com/pod-uses-liveness-probe: http
    sas.com/pod-uses-readiness-probe: http
    sas.com/pod-uses-startup-probe: http
    sas.com/version: 2.18.3
    sidecar.istio.io/proxyCPU: 15m
    sidecar.istio.io/proxyMemory: 115Mi
  labels:
    app.kubernetes.io/name: sas-job-execution-app
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
    sas.com/deployment-base: golang
    workload.sas.com/class: stateless
  name: sas-job-execution-app
  namespace: franceavv
spec:
  selector:
    matchExpressions: []
    matchLabels:
      app.kubernetes.io/name: sas-job-execution-app
      sas.com/deployment: sas-viya
  template:
    metadata:
      annotations:
        prometheus.io/path: /internal/metrics
        prometheus.io/port: "8080"
        prometheus.io/scheme: https
        prometheus.io/scrape: "true"
        sas.com/certificate-file-format: pem
        sas.com/component-name: sas-job-execution-app
        sas.com/component-version: 2.18.3-20201209.1607521207111
        sas.com/kustomize-base: golang
        sas.com/pod-uses-liveness-probe: http
        sas.com/pod-uses-readiness-probe: http
        sas.com/pod-uses-startup-probe: http
        sas.com/tls-enabled-ports: all
        sas.com/version: 2.18.3
        seccomp.security.alpha.kubernetes.io/pod: runtime/default
        sidecar.istio.io/proxyCPU: 15m
        sidecar.istio.io/proxyMemory: 115Mi
      labels:
        app: sas-job-execution-app
        app.kubernetes.io/name: sas-job-execution-app
        sas.com/deployment: sas-viya
        workload.sas.com/class: stateless
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: In
                values:
                - stateless
              matchFields: []
            weight: 100
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: NotIn
                values:
                - compute
                - cas
                - stateful
                - connect
              matchFields: []
            weight: 50
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.azure.com/mode
                operator: NotIn
                values:
                - system
              matchFields: []
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - sas-job-execution-app
              namespaces: []
              topologyKey: kubernetes.io/hostname
            weight: 100
          requiredDuringSchedulingIgnoredDuringExecution: []
      automountServiceAccountToken: false
      containers:
      - args: null
        command: null
        env:
        - name: SAS_K8S_DEPLOYMENT_NAME
          value: sas-job-execution-app
        envFrom:
        - configMapRef:
            name: sas-go-config-7hc79bmf8m
        - configMapRef:
            name: sas-shared-config-49d8hthtb5
        - secretRef:
            name: sas-consul-client
        - configMapRef:
            name: sas-tls-config-99f79t29t5
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-job-execution-app:2.18.3-20201209.1607521207111
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - sh
              - -c
              - sleep 5
        livenessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http
            scheme: HTTPS
          periodSeconds: 10
        name: sas-job-execution-app
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/ready
            port: http
            scheme: HTTPS
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add: []
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        startupProbe:
          failureThreshold: 180
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http
            scheme: HTTPS
          periodSeconds: 10
        volumeDevices: []
        volumeMounts:
        - mountPath: /tmp
          name: tmp
        - mountPath: /security
          name: security
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/cacerts
          name: security
          subPath: cacerts
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/private
          name: security
          subPath: private
      hostAliases: []
      imagePullSecrets:
      - name: sas-image-pull-secrets-4m8cc729k8
      initContainers:
      - env:
        - name: KUBE_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: SAS_CERTFRAME_TOKEN_DIR
          value: /certframe-token
        - name: SAS_ADDITIONAL_CA_CERTIFICATES_DIR
          value: /customer-provided-ca-certificates
        envFrom:
        - configMapRef:
            name: sas-certframe-ingress-certificate-config-cmm2t44t88
        - configMapRef:
            name: sas-certframe-user-config-c4ch2c59m7
        - configMapRef:
            name: sas-certframe-config-ctgg29gf7t
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-certframe:3.9.0-20201203.1607016443086
        name: sas-certframe
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /certframe-token
          name: certframe-token
        - mountPath: /security
          name: security
        - mountPath: /customer-provided-ca-certificates
          name: customer-provided-ca-certificates
      readinessGates: []
      securityContext:
        runAsNonRoot: true
        supplementalGroups: []
        sysctls: []
      tolerations:
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateful
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateless
      volumes:
      - name: certframe-token
        secret:
          secretName: sas-certframe-token
      - emptyDir: {}
        name: security
      - configMap:
          name: sas-customer-provided-ca-certificates-29kdmk686c
        name: customer-provided-ca-certificates
      - emptyDir: {}
        name: tmp
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sas.com/certificate-file-format: jks
    sas.com/component-name: sas-job-flow-scheduling
    sas.com/component-version: 2.2.7-20201002.1601644744469
    sas.com/kustomize-base: spring
    sas.com/pod-uses-readiness-probe: http
    sas.com/version: 2.2.7
    sidecar.istio.io/proxyCPU: 15m
    sidecar.istio.io/proxyMemory: 115Mi
  labels:
    app.kubernetes.io/name: sas-job-flow-scheduling
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
    sas.com/deployment-base: spring
    workload.sas.com/class: stateless
  name: sas-job-flow-scheduling
  namespace: franceavv
spec:
  selector:
    matchExpressions: []
    matchLabels:
      app.kubernetes.io/name: sas-job-flow-scheduling
      sas.com/deployment: sas-viya
  template:
    metadata:
      annotations:
        prometheus.io/path: /internal/metrics
        prometheus.io/port: "10445"
        prometheus.io/scheme: https
        prometheus.io/scrape: "true"
        sas.com/certificate-file-format: jks
        sas.com/component-name: sas-job-flow-scheduling
        sas.com/component-version: 2.2.7-20201002.1601644744469
        sas.com/kustomize-base: spring
        sas.com/pod-uses-readiness-probe: http
        sas.com/tls-enabled-ports: all
        sas.com/version: 2.2.7
        sidecar.istio.io/proxyCPU: 15m
        sidecar.istio.io/proxyMemory: 115Mi
      labels:
        app: sas-job-flow-scheduling
        app.kubernetes.io/name: sas-job-flow-scheduling
        sas.com/deployment: sas-viya
        workload.sas.com/class: stateless
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: In
                values:
                - stateless
              matchFields: []
            weight: 100
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: NotIn
                values:
                - compute
                - cas
                - stateful
                - connect
              matchFields: []
            weight: 50
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.azure.com/mode
                operator: NotIn
                values:
                - system
              matchFields: []
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - sas-job-flow-scheduling
              namespaces: []
              topologyKey: kubernetes.io/hostname
            weight: 100
          requiredDuringSchedulingIgnoredDuringExecution: []
      automountServiceAccountToken: true
      containers:
      - args: null
        command: null
        env:
        - name: SAS_K8S_DEPLOYMENT_NAME
          value: sas-job-flow-scheduling
        envFrom:
        - configMapRef:
            name: sas-java-config-t7t5thbgkd
        - configMapRef:
            name: sas-shared-config-49d8hthtb5
        - secretRef:
            name: sas-consul-client
        - configMapRef:
            name: sas-spring-management-config-d64bbkhb97
        - configMapRef:
            name: sas-java-tls-config-fch4777298
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-job-flow-scheduling:2.2.7-20201002.1601644744469
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - sh
              - -c
              - sleep 5
        name: sas-job-flow-scheduling
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        - containerPort: 10445
          name: http-internal
          protocol: TCP
        readinessProbe:
          httpGet:
            httpHeaders: []
            path: /internal/ready
            port: http-internal
            scheme: HTTPS
        resources:
          limits:
            cpu: 2000m
            memory: 1Gi
          requests:
            cpu: 50m
            memory: 650M
        securityContext:
          allowPrivilegeEscalation: false
          privileged: false
          readOnlyRootFilesystem: true
        volumeDevices: []
        volumeMounts:
        - mountPath: /tmp
          name: tmp
        - mountPath: /opt/sas/viya/config/tmp
          name: tmp
        - mountPath: /security
          name: security
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/cacerts
          name: security
          subPath: cacerts
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/private
          name: security
          subPath: private
      hostAliases: []
      imagePullSecrets:
      - name: sas-image-pull-secrets-4m8cc729k8
      initContainers:
      - env:
        - name: KUBE_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: SAS_CERTFRAME_TOKEN_DIR
          value: /certframe-token
        - name: SAS_ADDITIONAL_CA_CERTIFICATES_DIR
          value: /customer-provided-ca-certificates
        envFrom:
        - configMapRef:
            name: sas-certframe-ingress-certificate-config-cmm2t44t88
        - configMapRef:
            name: sas-certframe-user-config-c4ch2c59m7
        - configMapRef:
            name: sas-certframe-java-config-gf4kt94898
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-certframe:3.9.0-20201203.1607016443086
        name: sas-certframe
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /certframe-token
          name: certframe-token
        - mountPath: /security
          name: security
        - mountPath: /customer-provided-ca-certificates
          name: customer-provided-ca-certificates
      readinessGates: []
      securityContext:
        runAsNonRoot: true
        supplementalGroups: []
        sysctls: []
      tolerations:
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateful
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateless
      volumes:
      - name: certframe-token
        secret:
          secretName: sas-certframe-token
      - emptyDir: {}
        name: security
      - configMap:
          name: sas-customer-provided-ca-certificates-29kdmk686c
        name: customer-provided-ca-certificates
      - emptyDir: {}
        name: tmp
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sas.com/certificate-file-format: jks
    sas.com/component-name: sas-launcher
    sas.com/component-version: 1.18.8-20201208.1607443790845
    sas.com/kustomize-base: spring
    sas.com/pod-uses-liveness-probe: http
    sas.com/pod-uses-readiness-probe: http
    sas.com/pod-uses-startup-probe: http
    sas.com/version: 1.18.8
    sidecar.istio.io/proxyCPU: 15m
    sidecar.istio.io/proxyMemory: 115Mi
  labels:
    app.kubernetes.io/name: sas-launcher
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
    sas.com/deployment-base: spring
    workload.sas.com/class: stateless
  name: sas-launcher
  namespace: franceavv
spec:
  selector:
    matchExpressions: []
    matchLabels:
      app.kubernetes.io/name: sas-launcher
      sas.com/deployment: sas-viya
  template:
    metadata:
      annotations:
        prometheus.io/path: /internal/metrics
        prometheus.io/port: "10445"
        prometheus.io/scheme: https
        prometheus.io/scrape: "true"
        sas.com/certificate-file-format: jks
        sas.com/component-name: sas-launcher
        sas.com/component-version: 1.18.8-20201208.1607443790845
        sas.com/kustomize-base: spring
        sas.com/pod-uses-liveness-probe: http
        sas.com/pod-uses-readiness-probe: http
        sas.com/pod-uses-startup-probe: http
        sas.com/tls-enabled-ports: all
        sas.com/version: 1.18.8
        seccomp.security.alpha.kubernetes.io/pod: runtime/default
        sidecar.istio.io/proxyCPU: 15m
        sidecar.istio.io/proxyMemory: 115Mi
      labels:
        app: sas-launcher
        app.kubernetes.io/name: sas-launcher
        sas.com/deployment: sas-viya
        workload.sas.com/class: stateless
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: In
                values:
                - stateless
              matchFields: []
            weight: 100
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: NotIn
                values:
                - compute
                - cas
                - stateful
                - connect
              matchFields: []
            weight: 50
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.azure.com/mode
                operator: NotIn
                values:
                - system
              matchFields: []
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - sas-launcher
              namespaces: []
              topologyKey: kubernetes.io/hostname
            weight: 100
          requiredDuringSchedulingIgnoredDuringExecution: []
      automountServiceAccountToken: true
      containers:
      - args: null
        command: null
        env:
        - name: SAS_LAUNCHER_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        envFrom:
        - configMapRef:
            name: sas-java-config-t7t5thbgkd
        - configMapRef:
            name: sas-shared-config-49d8hthtb5
        - secretRef:
            name: sas-consul-client
        - configMapRef:
            name: sas-spring-management-config-d64bbkhb97
        - configMapRef:
            name: sas-java-tls-config-fch4777298
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-launcher:1.18.8-20201208.1607443790845
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - sh
              - -c
              - sleep 5
        livenessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http-internal
            scheme: HTTPS
          periodSeconds: 10
        name: sas-launcher
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        - containerPort: 10445
          name: http-internal
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/ready
            port: http-internal
            scheme: HTTPS
          periodSeconds: 10
        resources:
          limits:
            cpu: 2000m
            memory: 1Gi
          requests:
            cpu: 50m
            memory: 650M
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add: []
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        startupProbe:
          failureThreshold: 180
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http-internal
            scheme: HTTPS
          initialDelaySeconds: 20
          periodSeconds: 10
        volumeDevices: []
        volumeMounts:
        - mountPath: /tmp
          name: tmp
        - mountPath: /opt/sas/viya/config/tmp
          name: tmp
        - mountPath: /security
          name: security
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/cacerts
          name: security
          subPath: cacerts
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/private
          name: security
          subPath: private
      hostAliases: []
      imagePullSecrets:
      - name: sas-image-pull-secrets-4m8cc729k8
      initContainers:
      - env:
        - name: KUBE_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: SAS_CERTFRAME_TOKEN_DIR
          value: /certframe-token
        - name: SAS_ADDITIONAL_CA_CERTIFICATES_DIR
          value: /customer-provided-ca-certificates
        envFrom:
        - configMapRef:
            name: sas-certframe-ingress-certificate-config-cmm2t44t88
        - configMapRef:
            name: sas-certframe-user-config-c4ch2c59m7
        - configMapRef:
            name: sas-certframe-java-config-gf4kt94898
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-certframe:3.9.0-20201203.1607016443086
        name: sas-certframe
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /certframe-token
          name: certframe-token
        - mountPath: /security
          name: security
        - mountPath: /customer-provided-ca-certificates
          name: customer-provided-ca-certificates
      readinessGates: []
      securityContext:
        runAsNonRoot: true
        supplementalGroups: []
        sysctls: []
      serviceAccountName: sas-launcher
      tolerations:
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateful
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateless
      volumes:
      - name: certframe-token
        secret:
          secretName: sas-certframe-token
      - emptyDir: {}
        name: security
      - configMap:
          name: sas-customer-provided-ca-certificates-29kdmk686c
        name: customer-provided-ca-certificates
      - emptyDir: {}
        name: tmp
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sas.com/certificate-file-format: pem
    sas.com/component-name: sas-lineage-app
    sas.com/component-version: 2.8.1-20201202.1606960621719
    sas.com/kustomize-base: golang
    sas.com/pod-uses-liveness-probe: http
    sas.com/pod-uses-readiness-probe: http
    sas.com/pod-uses-startup-probe: http
    sas.com/version: 2.8.1
    sidecar.istio.io/proxyCPU: 15m
    sidecar.istio.io/proxyMemory: 115Mi
  labels:
    app.kubernetes.io/name: sas-lineage-app
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
    sas.com/deployment-base: golang
    workload.sas.com/class: stateless
  name: sas-lineage-app
  namespace: franceavv
spec:
  selector:
    matchExpressions: []
    matchLabels:
      app.kubernetes.io/name: sas-lineage-app
      sas.com/deployment: sas-viya
  template:
    metadata:
      annotations:
        prometheus.io/path: /internal/metrics
        prometheus.io/port: "8080"
        prometheus.io/scheme: https
        prometheus.io/scrape: "true"
        sas.com/certificate-file-format: pem
        sas.com/component-name: sas-lineage-app
        sas.com/component-version: 2.8.1-20201202.1606960621719
        sas.com/kustomize-base: golang
        sas.com/pod-uses-liveness-probe: http
        sas.com/pod-uses-readiness-probe: http
        sas.com/pod-uses-startup-probe: http
        sas.com/tls-enabled-ports: all
        sas.com/version: 2.8.1
        seccomp.security.alpha.kubernetes.io/pod: runtime/default
        sidecar.istio.io/proxyCPU: 15m
        sidecar.istio.io/proxyMemory: 115Mi
      labels:
        app: sas-lineage-app
        app.kubernetes.io/name: sas-lineage-app
        sas.com/deployment: sas-viya
        workload.sas.com/class: stateless
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: In
                values:
                - stateless
              matchFields: []
            weight: 100
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: NotIn
                values:
                - compute
                - cas
                - stateful
                - connect
              matchFields: []
            weight: 50
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.azure.com/mode
                operator: NotIn
                values:
                - system
              matchFields: []
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - sas-lineage-app
              namespaces: []
              topologyKey: kubernetes.io/hostname
            weight: 100
          requiredDuringSchedulingIgnoredDuringExecution: []
      automountServiceAccountToken: false
      containers:
      - args: null
        command: null
        env:
        - name: SAS_K8S_DEPLOYMENT_NAME
          value: sas-lineage-app
        envFrom:
        - configMapRef:
            name: sas-go-config-7hc79bmf8m
        - configMapRef:
            name: sas-shared-config-49d8hthtb5
        - secretRef:
            name: sas-consul-client
        - configMapRef:
            name: sas-tls-config-99f79t29t5
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-lineage-app:2.8.1-20201202.1606960621719
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - sh
              - -c
              - sleep 5
        livenessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http
            scheme: HTTPS
          periodSeconds: 10
        name: sas-lineage-app
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/ready
            port: http
            scheme: HTTPS
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add: []
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        startupProbe:
          failureThreshold: 180
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http
            scheme: HTTPS
          periodSeconds: 10
        volumeDevices: []
        volumeMounts:
        - mountPath: /tmp
          name: tmp
        - mountPath: /security
          name: security
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/cacerts
          name: security
          subPath: cacerts
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/private
          name: security
          subPath: private
      hostAliases: []
      imagePullSecrets:
      - name: sas-image-pull-secrets-4m8cc729k8
      initContainers:
      - env:
        - name: KUBE_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: SAS_CERTFRAME_TOKEN_DIR
          value: /certframe-token
        - name: SAS_ADDITIONAL_CA_CERTIFICATES_DIR
          value: /customer-provided-ca-certificates
        envFrom:
        - configMapRef:
            name: sas-certframe-ingress-certificate-config-cmm2t44t88
        - configMapRef:
            name: sas-certframe-user-config-c4ch2c59m7
        - configMapRef:
            name: sas-certframe-config-ctgg29gf7t
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-certframe:3.9.0-20201203.1607016443086
        name: sas-certframe
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /certframe-token
          name: certframe-token
        - mountPath: /security
          name: security
        - mountPath: /customer-provided-ca-certificates
          name: customer-provided-ca-certificates
      readinessGates: []
      securityContext:
        runAsNonRoot: true
        supplementalGroups: []
        sysctls: []
      tolerations:
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateful
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateless
      volumes:
      - name: certframe-token
        secret:
          secretName: sas-certframe-token
      - emptyDir: {}
        name: security
      - configMap:
          name: sas-customer-provided-ca-certificates-29kdmk686c
        name: customer-provided-ca-certificates
      - emptyDir: {}
        name: tmp
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sas.com/certificate-file-format: pem
    sas.com/component-name: sas-links
    sas.com/component-version: 1.73.0-20201204.1607077133902
    sas.com/kustomize-base: golang
    sas.com/pod-uses-liveness-probe: http
    sas.com/pod-uses-readiness-probe: http
    sas.com/pod-uses-startup-probe: http
    sas.com/version: 1.73.0
    sidecar.istio.io/proxyCPU: 15m
    sidecar.istio.io/proxyMemory: 115Mi
  labels:
    app.kubernetes.io/name: sas-links
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
    sas.com/deployment-base: golang
    workload.sas.com/class: stateless
  name: sas-links
  namespace: franceavv
spec:
  selector:
    matchExpressions: []
    matchLabels:
      app.kubernetes.io/name: sas-links
      sas.com/deployment: sas-viya
  template:
    metadata:
      annotations:
        prometheus.io/path: /internal/metrics
        prometheus.io/port: "8080"
        prometheus.io/scheme: https
        prometheus.io/scrape: "true"
        sas.com/certificate-file-format: pem
        sas.com/component-name: sas-links
        sas.com/component-version: 1.73.0-20201204.1607077133902
        sas.com/kustomize-base: golang
        sas.com/pod-uses-liveness-probe: http
        sas.com/pod-uses-readiness-probe: http
        sas.com/pod-uses-startup-probe: http
        sas.com/tls-enabled-ports: all
        sas.com/version: 1.73.0
        seccomp.security.alpha.kubernetes.io/pod: runtime/default
        sidecar.istio.io/proxyCPU: 15m
        sidecar.istio.io/proxyMemory: 115Mi
      labels:
        app: sas-links
        app.kubernetes.io/name: sas-links
        sas.com/deployment: sas-viya
        workload.sas.com/class: stateless
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: In
                values:
                - stateless
              matchFields: []
            weight: 100
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: NotIn
                values:
                - compute
                - cas
                - stateful
                - connect
              matchFields: []
            weight: 50
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.azure.com/mode
                operator: NotIn
                values:
                - system
              matchFields: []
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - sas-links
              namespaces: []
              topologyKey: kubernetes.io/hostname
            weight: 100
          requiredDuringSchedulingIgnoredDuringExecution: []
      automountServiceAccountToken: false
      containers:
      - args: null
        command: null
        env:
        - name: SAS_K8S_DEPLOYMENT_NAME
          value: sas-links
        envFrom:
        - configMapRef:
            name: sas-go-config-7hc79bmf8m
        - configMapRef:
            name: sas-shared-config-49d8hthtb5
        - secretRef:
            name: sas-consul-client
        - configMapRef:
            name: sas-tls-config-99f79t29t5
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-links:1.73.0-20201204.1607077133902
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - sh
              - -c
              - sleep 5
        livenessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http
            scheme: HTTPS
          periodSeconds: 10
        name: sas-links
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/ready
            port: http
            scheme: HTTPS
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add: []
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        startupProbe:
          failureThreshold: 180
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http
            scheme: HTTPS
          periodSeconds: 10
        volumeDevices: []
        volumeMounts:
        - mountPath: /tmp
          name: tmp
        - mountPath: /security
          name: security
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/cacerts
          name: security
          subPath: cacerts
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/private
          name: security
          subPath: private
      hostAliases: []
      imagePullSecrets:
      - name: sas-image-pull-secrets-4m8cc729k8
      initContainers:
      - env:
        - name: KUBE_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: SAS_CERTFRAME_TOKEN_DIR
          value: /certframe-token
        - name: SAS_ADDITIONAL_CA_CERTIFICATES_DIR
          value: /customer-provided-ca-certificates
        envFrom:
        - configMapRef:
            name: sas-certframe-ingress-certificate-config-cmm2t44t88
        - configMapRef:
            name: sas-certframe-user-config-c4ch2c59m7
        - configMapRef:
            name: sas-certframe-config-ctgg29gf7t
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-certframe:3.9.0-20201203.1607016443086
        name: sas-certframe
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /certframe-token
          name: certframe-token
        - mountPath: /security
          name: security
        - mountPath: /customer-provided-ca-certificates
          name: customer-provided-ca-certificates
      readinessGates: []
      securityContext:
        runAsNonRoot: true
        supplementalGroups: []
        sysctls: []
      tolerations:
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateful
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateless
      volumes:
      - name: certframe-token
        secret:
          secretName: sas-certframe-token
      - emptyDir: {}
        name: security
      - configMap:
          name: sas-customer-provided-ca-certificates-29kdmk686c
        name: customer-provided-ca-certificates
      - emptyDir: {}
        name: tmp
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sas.com/certificate-file-format: pem
    sas.com/component-name: sas-localization
    sas.com/component-version: 1.9.3-20201217.1608245885998
    sas.com/kustomize-base: golang
    sas.com/pod-uses-liveness-probe: http
    sas.com/pod-uses-readiness-probe: http
    sas.com/pod-uses-startup-probe: http
    sas.com/version: 1.9.3
    sidecar.istio.io/proxyCPU: 15m
    sidecar.istio.io/proxyMemory: 115Mi
  labels:
    app.kubernetes.io/name: sas-localization
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
    sas.com/deployment-base: golang
    workload.sas.com/class: stateless
  name: sas-localization
  namespace: franceavv
spec:
  selector:
    matchExpressions: []
    matchLabels:
      app.kubernetes.io/name: sas-localization
      sas.com/deployment: sas-viya
  template:
    metadata:
      annotations:
        prometheus.io/path: /internal/metrics
        prometheus.io/port: "8080"
        prometheus.io/scheme: https
        prometheus.io/scrape: "true"
        sas.com/certificate-file-format: pem
        sas.com/component-name: sas-localization
        sas.com/component-version: 1.9.3-20201217.1608245885998
        sas.com/kustomize-base: golang
        sas.com/pod-uses-liveness-probe: http
        sas.com/pod-uses-readiness-probe: http
        sas.com/pod-uses-startup-probe: http
        sas.com/tls-enabled-ports: all
        sas.com/version: 1.9.3
        seccomp.security.alpha.kubernetes.io/pod: runtime/default
        sidecar.istio.io/proxyCPU: 15m
        sidecar.istio.io/proxyMemory: 115Mi
      labels:
        app: sas-localization
        app.kubernetes.io/name: sas-localization
        sas.com/deployment: sas-viya
        workload.sas.com/class: stateless
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: In
                values:
                - stateless
              matchFields: []
            weight: 100
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: NotIn
                values:
                - compute
                - cas
                - stateful
                - connect
              matchFields: []
            weight: 50
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.azure.com/mode
                operator: NotIn
                values:
                - system
              matchFields: []
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - sas-localization
              namespaces: []
              topologyKey: kubernetes.io/hostname
            weight: 100
          requiredDuringSchedulingIgnoredDuringExecution: []
      automountServiceAccountToken: false
      containers:
      - args: null
        command: null
        env:
        - name: SAS_K8S_DEPLOYMENT_NAME
          value: sas-localization
        envFrom:
        - configMapRef:
            name: sas-go-config-7hc79bmf8m
        - configMapRef:
            name: sas-shared-config-49d8hthtb5
        - secretRef:
            name: sas-consul-client
        - configMapRef:
            name: sas-tls-config-99f79t29t5
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-localization:1.9.3-20201217.1608245885998
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - sh
              - -c
              - sleep 5
        livenessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http
            scheme: HTTPS
          periodSeconds: 10
        name: sas-localization
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/ready
            port: http
            scheme: HTTPS
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add: []
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        startupProbe:
          failureThreshold: 180
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http
            scheme: HTTPS
          periodSeconds: 10
        volumeDevices: []
        volumeMounts:
        - mountPath: /tmp
          name: tmp
        - mountPath: /security
          name: security
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/cacerts
          name: security
          subPath: cacerts
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/private
          name: security
          subPath: private
      hostAliases: []
      imagePullSecrets:
      - name: sas-image-pull-secrets-4m8cc729k8
      initContainers:
      - env:
        - name: KUBE_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: SAS_CERTFRAME_TOKEN_DIR
          value: /certframe-token
        - name: SAS_ADDITIONAL_CA_CERTIFICATES_DIR
          value: /customer-provided-ca-certificates
        envFrom:
        - configMapRef:
            name: sas-certframe-ingress-certificate-config-cmm2t44t88
        - configMapRef:
            name: sas-certframe-user-config-c4ch2c59m7
        - configMapRef:
            name: sas-certframe-config-ctgg29gf7t
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-certframe:3.9.0-20201203.1607016443086
        name: sas-certframe
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /certframe-token
          name: certframe-token
        - mountPath: /security
          name: security
        - mountPath: /customer-provided-ca-certificates
          name: customer-provided-ca-certificates
      readinessGates: []
      securityContext:
        runAsNonRoot: true
        supplementalGroups: []
        sysctls: []
      tolerations:
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateful
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateless
      volumes:
      - name: certframe-token
        secret:
          secretName: sas-certframe-token
      - emptyDir: {}
        name: security
      - configMap:
          name: sas-customer-provided-ca-certificates-29kdmk686c
        name: customer-provided-ca-certificates
      - emptyDir: {}
        name: tmp
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sas.com/certificate-file-format: jks
    sas.com/component-name: sas-logon-app
    sas.com/component-version: 2.40.17-20201208.1607458236727
    sas.com/kustomize-base: spring
    sas.com/pod-uses-liveness-probe: http
    sas.com/pod-uses-readiness-probe: http
    sas.com/pod-uses-startup-probe: http
    sas.com/version: 2.40.17
    sidecar.istio.io/proxyCPU: 15m
    sidecar.istio.io/proxyMemory: 115Mi
  labels:
    app.kubernetes.io/name: sas-logon-app
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
    sas.com/deployment-base: spring
    workload.sas.com/class: stateless
  name: sas-logon-app
  namespace: franceavv
spec:
  selector:
    matchExpressions: []
    matchLabels:
      app.kubernetes.io/name: sas-logon-app
      sas.com/deployment: sas-viya
  template:
    metadata:
      annotations:
        prometheus.io/path: /internal/metrics
        prometheus.io/port: "10445"
        prometheus.io/scheme: https
        prometheus.io/scrape: "true"
        sas.com/certificate-file-format: jks
        sas.com/component-name: sas-logon-app
        sas.com/component-version: 2.40.17-20201208.1607458236727
        sas.com/kustomize-base: spring
        sas.com/pod-uses-liveness-probe: http
        sas.com/pod-uses-readiness-probe: http
        sas.com/pod-uses-startup-probe: http
        sas.com/tls-enabled-ports: all
        sas.com/version: 2.40.17
        seccomp.security.alpha.kubernetes.io/pod: runtime/default
        sidecar.istio.io/proxyCPU: 15m
        sidecar.istio.io/proxyMemory: 115Mi
      labels:
        app: sas-logon-app
        app.kubernetes.io/name: sas-logon-app
        sas.com/deployment: sas-viya
        workload.sas.com/class: stateless
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: In
                values:
                - stateless
              matchFields: []
            weight: 100
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: NotIn
                values:
                - compute
                - cas
                - stateful
                - connect
              matchFields: []
            weight: 50
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.azure.com/mode
                operator: NotIn
                values:
                - system
              matchFields: []
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - sas-logon-app
              namespaces: []
              topologyKey: kubernetes.io/hostname
            weight: 100
          requiredDuringSchedulingIgnoredDuringExecution: []
      automountServiceAccountToken: false
      containers:
      - args: null
        command: null
        env:
        - name: SAS_K8S_DEPLOYMENT_NAME
          value: sas-logon-app
        envFrom:
        - configMapRef:
            name: sas-java-config-t7t5thbgkd
        - configMapRef:
            name: sas-shared-config-49d8hthtb5
        - secretRef:
            name: sas-consul-client
        - configMapRef:
            name: sas-spring-management-config-d64bbkhb97
        - configMapRef:
            name: sas-java-tls-config-fch4777298
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-logon-app:2.40.17-20201208.1607458236727
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - sh
              - -c
              - sleep 5
        livenessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http-internal
            scheme: HTTPS
          periodSeconds: 10
        name: sas-logon-app
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        - containerPort: 10445
          name: http-internal
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/ready
            port: http-internal
            scheme: HTTPS
          periodSeconds: 10
        resources:
          limits:
            cpu: 2000m
            memory: 1Gi
          requests:
            cpu: 50m
            memory: 763Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add: []
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        startupProbe:
          failureThreshold: 180
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http-internal
            scheme: HTTPS
          initialDelaySeconds: 20
          periodSeconds: 10
        volumeDevices: []
        volumeMounts:
        - mountPath: /tmp
          name: tmp
        - mountPath: /opt/sas/viya/config/tmp
          name: tmp
        - mountPath: /security
          name: security
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/cacerts
          name: security
          subPath: cacerts
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/private
          name: security
          subPath: private
      hostAliases: []
      imagePullSecrets:
      - name: sas-image-pull-secrets-4m8cc729k8
      initContainers:
      - env:
        - name: KUBE_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: SAS_CERTFRAME_TOKEN_DIR
          value: /certframe-token
        - name: SAS_ADDITIONAL_CA_CERTIFICATES_DIR
          value: /customer-provided-ca-certificates
        envFrom:
        - configMapRef:
            name: sas-certframe-ingress-certificate-config-cmm2t44t88
        - configMapRef:
            name: sas-certframe-user-config-c4ch2c59m7
        - configMapRef:
            name: sas-certframe-java-config-gf4kt94898
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-certframe:3.9.0-20201203.1607016443086
        name: sas-certframe
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /certframe-token
          name: certframe-token
        - mountPath: /security
          name: security
        - mountPath: /customer-provided-ca-certificates
          name: customer-provided-ca-certificates
      readinessGates: []
      securityContext:
        runAsNonRoot: true
        supplementalGroups: []
        sysctls: []
      tolerations:
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateful
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateless
      volumes:
      - name: certframe-token
        secret:
          secretName: sas-certframe-token
      - emptyDir: {}
        name: security
      - configMap:
          name: sas-customer-provided-ca-certificates-29kdmk686c
        name: customer-provided-ca-certificates
      - emptyDir: {}
        name: tmp
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sas.com/certificate-file-format: pem
    sas.com/component-name: sas-mail
    sas.com/component-version: 1.56.1-20201203.1607023389621
    sas.com/kustomize-base: golang
    sas.com/pod-uses-liveness-probe: http
    sas.com/pod-uses-readiness-probe: http
    sas.com/pod-uses-startup-probe: http
    sas.com/version: 1.56.1
    sidecar.istio.io/proxyCPU: 15m
    sidecar.istio.io/proxyMemory: 115Mi
  labels:
    app.kubernetes.io/name: sas-mail
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
    sas.com/deployment-base: golang
    workload.sas.com/class: stateless
  name: sas-mail
  namespace: franceavv
spec:
  selector:
    matchExpressions: []
    matchLabels:
      app.kubernetes.io/name: sas-mail
      sas.com/deployment: sas-viya
  template:
    metadata:
      annotations:
        prometheus.io/path: /internal/metrics
        prometheus.io/port: "8080"
        prometheus.io/scheme: https
        prometheus.io/scrape: "true"
        sas.com/certificate-file-format: pem
        sas.com/component-name: sas-mail
        sas.com/component-version: 1.56.1-20201203.1607023389621
        sas.com/kustomize-base: golang
        sas.com/pod-uses-liveness-probe: http
        sas.com/pod-uses-readiness-probe: http
        sas.com/pod-uses-startup-probe: http
        sas.com/tls-enabled-ports: all
        sas.com/version: 1.56.1
        seccomp.security.alpha.kubernetes.io/pod: runtime/default
        sidecar.istio.io/proxyCPU: 15m
        sidecar.istio.io/proxyMemory: 115Mi
      labels:
        app: sas-mail
        app.kubernetes.io/name: sas-mail
        sas.com/deployment: sas-viya
        workload.sas.com/class: stateless
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: In
                values:
                - stateless
              matchFields: []
            weight: 100
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: NotIn
                values:
                - compute
                - cas
                - stateful
                - connect
              matchFields: []
            weight: 50
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.azure.com/mode
                operator: NotIn
                values:
                - system
              matchFields: []
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - sas-mail
              namespaces: []
              topologyKey: kubernetes.io/hostname
            weight: 100
          requiredDuringSchedulingIgnoredDuringExecution: []
      automountServiceAccountToken: false
      containers:
      - args: null
        command: null
        env:
        - name: SAS_K8S_DEPLOYMENT_NAME
          value: sas-mail
        envFrom:
        - configMapRef:
            name: sas-go-config-7hc79bmf8m
        - configMapRef:
            name: sas-shared-config-49d8hthtb5
        - secretRef:
            name: sas-consul-client
        - configMapRef:
            name: sas-tls-config-99f79t29t5
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-mail:1.56.1-20201203.1607023389621
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - sh
              - -c
              - sleep 5
        livenessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http
            scheme: HTTPS
          periodSeconds: 10
        name: sas-mail
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/ready
            port: http
            scheme: HTTPS
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add: []
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        startupProbe:
          failureThreshold: 180
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http
            scheme: HTTPS
          periodSeconds: 10
        volumeDevices: []
        volumeMounts:
        - mountPath: /tmp
          name: tmp
        - mountPath: /security
          name: security
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/cacerts
          name: security
          subPath: cacerts
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/private
          name: security
          subPath: private
      hostAliases: []
      imagePullSecrets:
      - name: sas-image-pull-secrets-4m8cc729k8
      initContainers:
      - env:
        - name: KUBE_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: SAS_CERTFRAME_TOKEN_DIR
          value: /certframe-token
        - name: SAS_ADDITIONAL_CA_CERTIFICATES_DIR
          value: /customer-provided-ca-certificates
        envFrom:
        - configMapRef:
            name: sas-certframe-ingress-certificate-config-cmm2t44t88
        - configMapRef:
            name: sas-certframe-user-config-c4ch2c59m7
        - configMapRef:
            name: sas-certframe-config-ctgg29gf7t
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-certframe:3.9.0-20201203.1607016443086
        name: sas-certframe
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /certframe-token
          name: certframe-token
        - mountPath: /security
          name: security
        - mountPath: /customer-provided-ca-certificates
          name: customer-provided-ca-certificates
      readinessGates: []
      securityContext:
        runAsNonRoot: true
        supplementalGroups: []
        sysctls: []
      tolerations:
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateful
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateless
      volumes:
      - name: certframe-token
        secret:
          secretName: sas-certframe-token
      - emptyDir: {}
        name: security
      - configMap:
          name: sas-customer-provided-ca-certificates-29kdmk686c
        name: customer-provided-ca-certificates
      - emptyDir: {}
        name: tmp
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sas.com/certificate-file-format: pem
    sas.com/component-name: sas-maps
    sas.com/component-version: 1.76.0-20201209.1607538010156
    sas.com/kustomize-base: golang
    sas.com/pod-uses-db-migrator: "true"
    sas.com/pod-uses-liveness-probe: http
    sas.com/pod-uses-readiness-probe: http
    sas.com/pod-uses-startup-probe: http
    sas.com/version: 1.76.0
    sidecar.istio.io/proxyCPU: 15m
    sidecar.istio.io/proxyMemory: 115Mi
  labels:
    app.kubernetes.io/name: sas-maps
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
    sas.com/deployment-base: golang
    workload.sas.com/class: stateless
  name: sas-maps
  namespace: franceavv
spec:
  selector:
    matchExpressions: []
    matchLabels:
      app.kubernetes.io/name: sas-maps
      sas.com/deployment: sas-viya
  template:
    metadata:
      annotations:
        prometheus.io/path: /internal/metrics
        prometheus.io/port: "8080"
        prometheus.io/scheme: https
        prometheus.io/scrape: "true"
        sas.com/certificate-file-format: pem
        sas.com/component-name: sas-maps
        sas.com/component-version: 1.76.0-20201209.1607538010156
        sas.com/kustomize-base: golang
        sas.com/pod-uses-liveness-probe: http
        sas.com/pod-uses-readiness-probe: http
        sas.com/pod-uses-startup-probe: http
        sas.com/tls-enabled-ports: all
        sas.com/version: 1.76.0
        seccomp.security.alpha.kubernetes.io/pod: runtime/default
        sidecar.istio.io/proxyCPU: 15m
        sidecar.istio.io/proxyMemory: 115Mi
      labels:
        app: sas-maps
        app.kubernetes.io/name: sas-maps
        sas.com/deployment: sas-viya
        workload.sas.com/class: stateless
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: In
                values:
                - stateless
              matchFields: []
            weight: 100
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: NotIn
                values:
                - compute
                - cas
                - stateful
                - connect
              matchFields: []
            weight: 50
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.azure.com/mode
                operator: NotIn
                values:
                - system
              matchFields: []
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - sas-maps
              namespaces: []
              topologyKey: kubernetes.io/hostname
            weight: 100
          requiredDuringSchedulingIgnoredDuringExecution: []
      automountServiceAccountToken: false
      containers:
      - args: null
        command: null
        env:
        - name: SAS_K8S_DEPLOYMENT_NAME
          value: sas-maps
        - name: SAS_MAPS_ENABLE_POLLING
          value: "false"
        envFrom:
        - configMapRef:
            name: sas-go-config-7hc79bmf8m
        - configMapRef:
            name: sas-shared-config-49d8hthtb5
        - secretRef:
            name: sas-consul-client
        - configMapRef:
            name: sas-tls-config-99f79t29t5
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-maps:1.76.0-20201209.1607538010156
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - sh
              - -c
              - sleep 5
        livenessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http
            scheme: HTTPS
          periodSeconds: 10
        name: sas-maps
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/ready
            port: http
            scheme: HTTPS
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 1200Mi
          requests:
            cpu: 100m
            memory: 90Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add: []
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        startupProbe:
          failureThreshold: 180
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http
            scheme: HTTPS
          periodSeconds: 10
        volumeDevices: []
        volumeMounts:
        - mountPath: /tmp
          name: tmp
        - mountPath: /security
          name: security
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/cacerts
          name: security
          subPath: cacerts
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/private
          name: security
          subPath: private
      hostAliases: []
      imagePullSecrets:
      - name: sas-image-pull-secrets-4m8cc729k8
      initContainers:
      - env:
        - name: KUBE_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: SAS_CERTFRAME_TOKEN_DIR
          value: /certframe-token
        - name: SAS_ADDITIONAL_CA_CERTIFICATES_DIR
          value: /customer-provided-ca-certificates
        envFrom:
        - configMapRef:
            name: sas-certframe-ingress-certificate-config-cmm2t44t88
        - configMapRef:
            name: sas-certframe-user-config-c4ch2c59m7
        - configMapRef:
            name: sas-certframe-config-ctgg29gf7t
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-certframe:3.9.0-20201203.1607016443086
        name: sas-certframe
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /certframe-token
          name: certframe-token
        - mountPath: /security
          name: security
        - mountPath: /customer-provided-ca-certificates
          name: customer-provided-ca-certificates
      - args:
        - cp -rf meta /data
        command:
        - /bin/sh
        - -c
        env: []
        envFrom: []
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-maps:1.76.0-20201209.1607538010156
        imagePullPolicy: IfNotPresent
        name: hydrator
        ports: []
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 75m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add: []
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeDevices: []
        volumeMounts:
        - mountPath: /data
          name: shared-vol
      - args: null
        command: null
        env:
        - name: SSL_CERT_FILE
          value: /security/trustedcerts.pem
        - name: SAS_SERVICE_NAME
          value: sas-maps
        envFrom:
        - configMapRef:
            name: sas-go-config-7hc79bmf8m
        - configMapRef:
            name: sas-shared-config-49d8hthtb5
        - configMapRef:
            name: sas-java-config-t7t5thbgkd
        - secretRef:
            name: sas-consul-client
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-db-migrator:1.1.0-20201209.1607523698073
        imagePullPolicy: IfNotPresent
        name: sas-db-migrator
        ports: []
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 100m
            memory: 90Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add: []
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeDevices: []
        volumeMounts:
        - mountPath: /security
          name: security
        - mountPath: /data
          name: shared-vol
      readinessGates: []
      securityContext:
        runAsNonRoot: true
        supplementalGroups: []
        sysctls: []
      tolerations:
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateful
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateless
      volumes:
      - name: certframe-token
        secret:
          secretName: sas-certframe-token
      - emptyDir: {}
        name: security
      - configMap:
          name: sas-customer-provided-ca-certificates-29kdmk686c
        name: customer-provided-ca-certificates
      - emptyDir: {}
        name: tmp
      - emptyDir: {}
        name: shared-vol
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sas.com/certificate-file-format: jks
    sas.com/component-name: sas-microanalytic-score
    sas.com/component-version: 2.34.6-20201214.1607955335324
    sas.com/kustomize-base: spring
    sas.com/pod-uses-liveness-probe: http
    sas.com/pod-uses-readiness-probe: http
    sas.com/pod-uses-startup-probe: http
    sas.com/version: 2.34.6
    sidecar.istio.io/proxyCPU: 15m
    sidecar.istio.io/proxyMemory: 115Mi
  labels:
    app.kubernetes.io/name: sas-microanalytic-score
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
    sas.com/deployment-base: spring
    workload.sas.com/class: stateless
  name: sas-microanalytic-score
  namespace: franceavv
spec:
  selector:
    matchExpressions: []
    matchLabels:
      app.kubernetes.io/name: sas-microanalytic-score
      sas.com/deployment: sas-viya
  template:
    metadata:
      annotations:
        prometheus.io/path: /internal/metrics
        prometheus.io/port: "10445"
        prometheus.io/scheme: https
        prometheus.io/scrape: "true"
        sas.com/certificate-file-format: jks
        sas.com/component-name: sas-microanalytic-score
        sas.com/component-version: 2.34.6-20201214.1607955335324
        sas.com/kustomize-base: spring
        sas.com/pod-uses-liveness-probe: http
        sas.com/pod-uses-readiness-probe: http
        sas.com/pod-uses-startup-probe: http
        sas.com/tls-enabled-ports: all
        sas.com/version: 2.34.6
        seccomp.security.alpha.kubernetes.io/pod: runtime/default
        sidecar.istio.io/proxyCPU: 15m
        sidecar.istio.io/proxyMemory: 115Mi
      labels:
        app: sas-microanalytic-score
        app.kubernetes.io/name: sas-microanalytic-score
        sas.com/deployment: sas-viya
        workload.sas.com/class: stateless
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: In
                values:
                - stateless
              matchFields: []
            weight: 100
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: NotIn
                values:
                - compute
                - cas
                - stateful
                - connect
              matchFields: []
            weight: 50
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.azure.com/mode
                operator: NotIn
                values:
                - system
              matchFields: []
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - sas-microanalytic-score
              namespaces: []
              topologyKey: kubernetes.io/hostname
            weight: 100
          requiredDuringSchedulingIgnoredDuringExecution: []
      automountServiceAccountToken: false
      containers:
      - args: null
        command: null
        env:
        - name: SAS_K8S_DEPLOYMENT_NAME
          value: sas-microanalytic-score
        envFrom:
        - configMapRef:
            name: sas-java-config-t7t5thbgkd
        - configMapRef:
            name: sas-shared-config-49d8hthtb5
        - secretRef:
            name: sas-consul-client
        - configMapRef:
            name: sas-spring-management-config-d64bbkhb97
        - configMapRef:
            name: sas-microanalytic-score-db-config-9t796842d9
        - configMapRef:
            name: sas-java-tls-config-fch4777298
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-microanalytic-score:2.34.6-20201214.1607955335324
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - sh
              - -c
              - sleep 5
        livenessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http-internal
            scheme: HTTPS
          periodSeconds: 10
        name: sas-microanalytic-score
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        - containerPort: 10445
          name: http-internal
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/ready
            port: http-internal
            scheme: HTTPS
          periodSeconds: 10
        resources:
          limits:
            cpu: 4000m
            memory: 2Gi
          requests:
            cpu: 250m
            memory: 750M
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add: []
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        startupProbe:
          failureThreshold: 180
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http-internal
            scheme: HTTPS
          initialDelaySeconds: 20
          periodSeconds: 10
        volumeDevices: []
        volumeMounts:
        - mountPath: /tmp
          name: tmp
        - mountPath: /opt/sas/viya/config/tmp
          name: tmp
        - mountPath: /opt/sas/viya/config/etc/licenses
          name: sas-license
          readOnly: true
        - mountPath: /security
          name: security
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/cacerts
          name: security
          subPath: cacerts
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/private
          name: security
          subPath: private
      hostAliases: []
      imagePullSecrets:
      - name: sas-image-pull-secrets-4m8cc729k8
      initContainers:
      - env:
        - name: KUBE_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: SAS_CERTFRAME_TOKEN_DIR
          value: /certframe-token
        - name: SAS_ADDITIONAL_CA_CERTIFICATES_DIR
          value: /customer-provided-ca-certificates
        envFrom:
        - configMapRef:
            name: sas-certframe-ingress-certificate-config-cmm2t44t88
        - configMapRef:
            name: sas-certframe-user-config-c4ch2c59m7
        - configMapRef:
            name: sas-certframe-java-config-gf4kt94898
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-certframe:3.9.0-20201203.1607016443086
        name: sas-certframe
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /certframe-token
          name: certframe-token
        - mountPath: /security
          name: security
        - mountPath: /customer-provided-ca-certificates
          name: customer-provided-ca-certificates
      readinessGates: []
      securityContext:
        runAsNonRoot: true
        supplementalGroups: []
        sysctls: []
      tolerations:
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateful
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateless
      volumes:
      - name: certframe-token
        secret:
          secretName: sas-certframe-token
      - emptyDir: {}
        name: security
      - configMap:
          name: sas-customer-provided-ca-certificates-29kdmk686c
        name: customer-provided-ca-certificates
      - emptyDir: {}
        name: tmp
      - name: sas-license
        secret:
          items:
          - key: SAS_LICENSE
            path: default
          secretName: sas-license-mg9k2t69t7
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sas.com/certificate-file-format: jks
    sas.com/component-name: sas-model-management
    sas.com/component-version: 1.16.58-20201214.1607964538030
    sas.com/kustomize-base: spring
    sas.com/pod-uses-liveness-probe: http
    sas.com/pod-uses-readiness-probe: http
    sas.com/pod-uses-startup-probe: http
    sas.com/version: 1.16.58
    sidecar.istio.io/proxyCPU: 15m
    sidecar.istio.io/proxyMemory: 115Mi
  labels:
    app.kubernetes.io/name: sas-model-management
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
    sas.com/deployment-base: spring
    workload.sas.com/class: stateless
  name: sas-model-management
  namespace: franceavv
spec:
  selector:
    matchExpressions: []
    matchLabels:
      app.kubernetes.io/name: sas-model-management
      sas.com/deployment: sas-viya
  template:
    metadata:
      annotations:
        prometheus.io/path: /internal/metrics
        prometheus.io/port: "10445"
        prometheus.io/scheme: https
        prometheus.io/scrape: "true"
        sas.com/certificate-file-format: jks
        sas.com/component-name: sas-model-management
        sas.com/component-version: 1.16.58-20201214.1607964538030
        sas.com/kustomize-base: spring
        sas.com/pod-uses-liveness-probe: http
        sas.com/pod-uses-readiness-probe: http
        sas.com/pod-uses-startup-probe: http
        sas.com/tls-enabled-ports: all
        sas.com/version: 1.16.58
        seccomp.security.alpha.kubernetes.io/pod: runtime/default
        sidecar.istio.io/proxyCPU: 15m
        sidecar.istio.io/proxyMemory: 115Mi
      labels:
        app: sas-model-management
        app.kubernetes.io/name: sas-model-management
        sas.com/deployment: sas-viya
        workload.sas.com/class: stateless
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: In
                values:
                - stateless
              matchFields: []
            weight: 100
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: NotIn
                values:
                - compute
                - cas
                - stateful
                - connect
              matchFields: []
            weight: 50
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.azure.com/mode
                operator: NotIn
                values:
                - system
              matchFields: []
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - sas-model-management
              namespaces: []
              topologyKey: kubernetes.io/hostname
            weight: 100
          requiredDuringSchedulingIgnoredDuringExecution: []
      automountServiceAccountToken: false
      containers:
      - args: null
        command: null
        env:
        - name: SAS_K8S_DEPLOYMENT_NAME
          value: sas-model-management
        envFrom:
        - configMapRef:
            name: sas-java-config-t7t5thbgkd
        - configMapRef:
            name: sas-shared-config-49d8hthtb5
        - secretRef:
            name: sas-consul-client
        - configMapRef:
            name: sas-spring-management-config-d64bbkhb97
        - configMapRef:
            name: sas-java-tls-config-fch4777298
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-model-management:1.16.58-20201214.1607964538030
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - sh
              - -c
              - sleep 5
        livenessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http-internal
            scheme: HTTPS
          periodSeconds: 10
        name: sas-model-management
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        - containerPort: 10445
          name: http-internal
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/ready
            port: http-internal
            scheme: HTTPS
          periodSeconds: 10
        resources:
          limits:
            cpu: 2000m
            memory: 1Gi
          requests:
            cpu: 50m
            memory: 650M
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add: []
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        startupProbe:
          failureThreshold: 180
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http-internal
            scheme: HTTPS
          initialDelaySeconds: 20
          periodSeconds: 10
        volumeDevices: []
        volumeMounts:
        - mountPath: /tmp
          name: tmp
        - mountPath: /opt/sas/viya/config/tmp
          name: tmp
        - mountPath: /security
          name: security
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/cacerts
          name: security
          subPath: cacerts
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/private
          name: security
          subPath: private
      hostAliases: []
      imagePullSecrets:
      - name: sas-image-pull-secrets-4m8cc729k8
      initContainers:
      - env:
        - name: KUBE_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: SAS_CERTFRAME_TOKEN_DIR
          value: /certframe-token
        - name: SAS_ADDITIONAL_CA_CERTIFICATES_DIR
          value: /customer-provided-ca-certificates
        envFrom:
        - configMapRef:
            name: sas-certframe-ingress-certificate-config-cmm2t44t88
        - configMapRef:
            name: sas-certframe-user-config-c4ch2c59m7
        - configMapRef:
            name: sas-certframe-java-config-gf4kt94898
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-certframe:3.9.0-20201203.1607016443086
        name: sas-certframe
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /certframe-token
          name: certframe-token
        - mountPath: /security
          name: security
        - mountPath: /customer-provided-ca-certificates
          name: customer-provided-ca-certificates
      readinessGates: []
      securityContext:
        runAsNonRoot: true
        supplementalGroups: []
        sysctls: []
      tolerations:
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateful
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateless
      volumes:
      - name: certframe-token
        secret:
          secretName: sas-certframe-token
      - emptyDir: {}
        name: security
      - configMap:
          name: sas-customer-provided-ca-certificates-29kdmk686c
        name: customer-provided-ca-certificates
      - emptyDir: {}
        name: tmp
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sas.com/certificate-file-format: pem
    sas.com/component-name: sas-model-manager-app
    sas.com/component-version: 1.19.0-20201214.1607962203037
    sas.com/kustomize-base: golang
    sas.com/pod-uses-liveness-probe: http
    sas.com/pod-uses-readiness-probe: http
    sas.com/pod-uses-startup-probe: http
    sas.com/version: 1.19.0
    sidecar.istio.io/proxyCPU: 15m
    sidecar.istio.io/proxyMemory: 115Mi
  labels:
    app.kubernetes.io/name: sas-model-manager-app
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
    sas.com/deployment-base: golang
    workload.sas.com/class: stateless
  name: sas-model-manager-app
  namespace: franceavv
spec:
  selector:
    matchExpressions: []
    matchLabels:
      app.kubernetes.io/name: sas-model-manager-app
      sas.com/deployment: sas-viya
  template:
    metadata:
      annotations:
        prometheus.io/path: /internal/metrics
        prometheus.io/port: "8080"
        prometheus.io/scheme: https
        prometheus.io/scrape: "true"
        sas.com/certificate-file-format: pem
        sas.com/component-name: sas-model-manager-app
        sas.com/component-version: 1.19.0-20201214.1607962203037
        sas.com/kustomize-base: golang
        sas.com/pod-uses-liveness-probe: http
        sas.com/pod-uses-readiness-probe: http
        sas.com/pod-uses-startup-probe: http
        sas.com/tls-enabled-ports: all
        sas.com/version: 1.19.0
        seccomp.security.alpha.kubernetes.io/pod: runtime/default
        sidecar.istio.io/proxyCPU: 15m
        sidecar.istio.io/proxyMemory: 115Mi
      labels:
        app: sas-model-manager-app
        app.kubernetes.io/name: sas-model-manager-app
        sas.com/deployment: sas-viya
        workload.sas.com/class: stateless
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: In
                values:
                - stateless
              matchFields: []
            weight: 100
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: NotIn
                values:
                - compute
                - cas
                - stateful
                - connect
              matchFields: []
            weight: 50
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.azure.com/mode
                operator: NotIn
                values:
                - system
              matchFields: []
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - sas-model-manager-app
              namespaces: []
              topologyKey: kubernetes.io/hostname
            weight: 100
          requiredDuringSchedulingIgnoredDuringExecution: []
      automountServiceAccountToken: false
      containers:
      - args: null
        command: null
        env:
        - name: SAS_K8S_DEPLOYMENT_NAME
          value: sas-model-manager-app
        envFrom:
        - configMapRef:
            name: sas-go-config-7hc79bmf8m
        - configMapRef:
            name: sas-shared-config-49d8hthtb5
        - secretRef:
            name: sas-consul-client
        - configMapRef:
            name: sas-tls-config-99f79t29t5
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-model-manager-app:1.19.0-20201214.1607962203037
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - sh
              - -c
              - sleep 5
        livenessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http
            scheme: HTTPS
          periodSeconds: 10
        name: sas-model-manager-app
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/ready
            port: http
            scheme: HTTPS
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add: []
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        startupProbe:
          failureThreshold: 180
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http
            scheme: HTTPS
          periodSeconds: 10
        volumeDevices: []
        volumeMounts:
        - mountPath: /tmp
          name: tmp
        - mountPath: /security
          name: security
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/cacerts
          name: security
          subPath: cacerts
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/private
          name: security
          subPath: private
      hostAliases: []
      imagePullSecrets:
      - name: sas-image-pull-secrets-4m8cc729k8
      initContainers:
      - env:
        - name: KUBE_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: SAS_CERTFRAME_TOKEN_DIR
          value: /certframe-token
        - name: SAS_ADDITIONAL_CA_CERTIFICATES_DIR
          value: /customer-provided-ca-certificates
        envFrom:
        - configMapRef:
            name: sas-certframe-ingress-certificate-config-cmm2t44t88
        - configMapRef:
            name: sas-certframe-user-config-c4ch2c59m7
        - configMapRef:
            name: sas-certframe-config-ctgg29gf7t
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-certframe:3.9.0-20201203.1607016443086
        name: sas-certframe
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /certframe-token
          name: certframe-token
        - mountPath: /security
          name: security
        - mountPath: /customer-provided-ca-certificates
          name: customer-provided-ca-certificates
      readinessGates: []
      securityContext:
        runAsNonRoot: true
        supplementalGroups: []
        sysctls: []
      tolerations:
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateful
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateless
      volumes:
      - name: certframe-token
        secret:
          secretName: sas-certframe-token
      - emptyDir: {}
        name: security
      - configMap:
          name: sas-customer-provided-ca-certificates-29kdmk686c
        name: customer-provided-ca-certificates
      - emptyDir: {}
        name: tmp
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sas.com/certificate-file-format: pem
    sas.com/component-name: sas-model-publish
    sas.com/component-version: 2.27.0-20201209.1607555293093
    sas.com/kustomize-base: golang
    sas.com/pod-uses-db-migrator: "true"
    sas.com/pod-uses-liveness-probe: http
    sas.com/pod-uses-readiness-probe: http
    sas.com/pod-uses-startup-probe: http
    sas.com/version: 2.27.0
    sidecar.istio.io/proxyCPU: 15m
    sidecar.istio.io/proxyMemory: 115Mi
  labels:
    app.kubernetes.io/name: sas-model-publish
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
    sas.com/deployment-base: golang
    workload.sas.com/class: stateless
  name: sas-model-publish
  namespace: franceavv
spec:
  selector:
    matchExpressions: []
    matchLabels:
      app.kubernetes.io/name: sas-model-publish
      sas.com/deployment: sas-viya
  template:
    metadata:
      annotations:
        prometheus.io/path: /internal/metrics
        prometheus.io/port: "8080"
        prometheus.io/scheme: https
        prometheus.io/scrape: "true"
        sas.com/certificate-file-format: pem
        sas.com/component-name: sas-model-publish
        sas.com/component-version: 2.27.0-20201209.1607555293093
        sas.com/kustomize-base: golang
        sas.com/pod-uses-liveness-probe: http
        sas.com/pod-uses-readiness-probe: http
        sas.com/pod-uses-startup-probe: http
        sas.com/tls-enabled-ports: all
        sas.com/version: 2.27.0
        seccomp.security.alpha.kubernetes.io/pod: runtime/default
        sidecar.istio.io/proxyCPU: 15m
        sidecar.istio.io/proxyMemory: 115Mi
      labels:
        app: sas-model-publish
        app.kubernetes.io/name: sas-model-publish
        sas.com/deployment: sas-viya
        workload.sas.com/class: stateless
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: In
                values:
                - stateless
              matchFields: []
            weight: 100
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: NotIn
                values:
                - compute
                - cas
                - stateful
                - connect
              matchFields: []
            weight: 50
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.azure.com/mode
                operator: NotIn
                values:
                - system
              matchFields: []
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - sas-model-publish
              namespaces: []
              topologyKey: kubernetes.io/hostname
            weight: 100
          requiredDuringSchedulingIgnoredDuringExecution: []
      automountServiceAccountToken: false
      containers:
      - args: null
        command: null
        env:
        - name: SAS_K8S_DEPLOYMENT_NAME
          value: sas-model-publish
        - name: MY_POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        envFrom:
        - configMapRef:
            name: sas-go-config-7hc79bmf8m
        - configMapRef:
            name: sas-shared-config-49d8hthtb5
        - secretRef:
            name: sas-consul-client
        - configMapRef:
            name: sas-tls-config-99f79t29t5
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-model-publish:2.27.0-20201209.1607555293093
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - sh
              - -c
              - sleep 5
        livenessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http
            scheme: HTTPS
          periodSeconds: 10
        name: sas-model-publish
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/ready
            port: http
            scheme: HTTPS
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add: []
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        startupProbe:
          failureThreshold: 180
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http
            scheme: HTTPS
          periodSeconds: 10
        volumeDevices: []
        volumeMounts:
        - mountPath: /tmp
          name: tmp
        - mountPath: /security
          name: security
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/cacerts
          name: security
          subPath: cacerts
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/private
          name: security
          subPath: private
      hostAliases: []
      imagePullSecrets:
      - name: sas-image-pull-secrets-4m8cc729k8
      initContainers:
      - env:
        - name: KUBE_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: SAS_CERTFRAME_TOKEN_DIR
          value: /certframe-token
        - name: SAS_ADDITIONAL_CA_CERTIFICATES_DIR
          value: /customer-provided-ca-certificates
        envFrom:
        - configMapRef:
            name: sas-certframe-ingress-certificate-config-cmm2t44t88
        - configMapRef:
            name: sas-certframe-user-config-c4ch2c59m7
        - configMapRef:
            name: sas-certframe-config-ctgg29gf7t
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-certframe:3.9.0-20201203.1607016443086
        name: sas-certframe
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /certframe-token
          name: certframe-token
        - mountPath: /security
          name: security
        - mountPath: /customer-provided-ca-certificates
          name: customer-provided-ca-certificates
      - args:
        - cp -rf meta /data
        command:
        - /bin/sh
        - -c
        env: []
        envFrom: []
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-model-publish:2.27.0-20201209.1607555293093
        imagePullPolicy: IfNotPresent
        name: hydrator
        ports: []
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 75m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add: []
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeDevices: []
        volumeMounts:
        - mountPath: /data
          name: shared-vol
      - args: null
        command: null
        env:
        - name: SSL_CERT_FILE
          value: /security/trustedcerts.pem
        - name: SAS_SERVICE_NAME
          value: sas-model-publish
        envFrom:
        - configMapRef:
            name: sas-go-config-7hc79bmf8m
        - configMapRef:
            name: sas-shared-config-49d8hthtb5
        - configMapRef:
            name: sas-java-config-t7t5thbgkd
        - secretRef:
            name: sas-consul-client
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-db-migrator:1.1.0-20201209.1607523698073
        imagePullPolicy: IfNotPresent
        name: sas-db-migrator
        ports: []
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 100m
            memory: 90Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add: []
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeDevices: []
        volumeMounts:
        - mountPath: /security
          name: security
        - mountPath: /data
          name: shared-vol
      readinessGates: []
      securityContext:
        runAsNonRoot: true
        supplementalGroups: []
        sysctls: []
      serviceAccountName: sas-model-publish
      tolerations:
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateful
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateless
      volumes:
      - name: certframe-token
        secret:
          secretName: sas-certframe-token
      - emptyDir: {}
        name: security
      - configMap:
          name: sas-customer-provided-ca-certificates-29kdmk686c
        name: customer-provided-ca-certificates
      - emptyDir: {}
        name: tmp
      - emptyDir: {}
        name: shared-vol
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sas.com/certificate-file-format: jks
    sas.com/component-name: sas-model-repository
    sas.com/component-version: 3.14.56-20201214.1607964567719
    sas.com/kustomize-base: spring
    sas.com/pod-uses-liveness-probe: http
    sas.com/pod-uses-readiness-probe: http
    sas.com/pod-uses-startup-probe: http
    sas.com/version: 3.14.56
    sidecar.istio.io/proxyCPU: 15m
    sidecar.istio.io/proxyMemory: 115Mi
  labels:
    app.kubernetes.io/name: sas-model-repository
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
    sas.com/deployment-base: spring
    workload.sas.com/class: stateless
  name: sas-model-repository
  namespace: franceavv
spec:
  selector:
    matchExpressions: []
    matchLabels:
      app.kubernetes.io/name: sas-model-repository
      sas.com/deployment: sas-viya
  template:
    metadata:
      annotations:
        prometheus.io/path: /internal/metrics
        prometheus.io/port: "10445"
        prometheus.io/scheme: https
        prometheus.io/scrape: "true"
        sas.com/certificate-file-format: jks
        sas.com/component-name: sas-model-repository
        sas.com/component-version: 3.14.56-20201214.1607964567719
        sas.com/kustomize-base: spring
        sas.com/pod-uses-liveness-probe: http
        sas.com/pod-uses-readiness-probe: http
        sas.com/pod-uses-startup-probe: http
        sas.com/tls-enabled-ports: all
        sas.com/version: 3.14.56
        seccomp.security.alpha.kubernetes.io/pod: runtime/default
        sidecar.istio.io/proxyCPU: 15m
        sidecar.istio.io/proxyMemory: 115Mi
      labels:
        app: sas-model-repository
        app.kubernetes.io/name: sas-model-repository
        sas.com/deployment: sas-viya
        workload.sas.com/class: stateless
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: In
                values:
                - stateless
              matchFields: []
            weight: 100
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: NotIn
                values:
                - compute
                - cas
                - stateful
                - connect
              matchFields: []
            weight: 50
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.azure.com/mode
                operator: NotIn
                values:
                - system
              matchFields: []
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - sas-model-repository
              namespaces: []
              topologyKey: kubernetes.io/hostname
            weight: 100
          requiredDuringSchedulingIgnoredDuringExecution: []
      automountServiceAccountToken: false
      containers:
      - args: null
        command: null
        env:
        - name: SAS_K8S_DEPLOYMENT_NAME
          value: sas-model-repository
        envFrom:
        - configMapRef:
            name: sas-java-config-t7t5thbgkd
        - configMapRef:
            name: sas-shared-config-49d8hthtb5
        - secretRef:
            name: sas-consul-client
        - configMapRef:
            name: sas-spring-management-config-d64bbkhb97
        - configMapRef:
            name: sas-java-tls-config-fch4777298
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-model-repository:3.14.56-20201214.1607964567719
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - sh
              - -c
              - sleep 5
        livenessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http-internal
            scheme: HTTPS
          periodSeconds: 10
        name: sas-model-repository
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        - containerPort: 10445
          name: http-internal
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/ready
            port: http-internal
            scheme: HTTPS
          periodSeconds: 10
        resources:
          limits:
            cpu: 2000m
            memory: 2Gi
          requests:
            cpu: 50m
            memory: 850Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add: []
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        startupProbe:
          failureThreshold: 180
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http-internal
            scheme: HTTPS
          initialDelaySeconds: 20
          periodSeconds: 10
        volumeDevices: []
        volumeMounts:
        - mountPath: /tmp
          name: tmp
        - mountPath: /opt/sas/viya/config/tmp
          name: tmp
        - mountPath: /security
          name: security
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/cacerts
          name: security
          subPath: cacerts
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/private
          name: security
          subPath: private
      hostAliases: []
      imagePullSecrets:
      - name: sas-image-pull-secrets-4m8cc729k8
      initContainers:
      - env:
        - name: KUBE_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: SAS_CERTFRAME_TOKEN_DIR
          value: /certframe-token
        - name: SAS_ADDITIONAL_CA_CERTIFICATES_DIR
          value: /customer-provided-ca-certificates
        envFrom:
        - configMapRef:
            name: sas-certframe-ingress-certificate-config-cmm2t44t88
        - configMapRef:
            name: sas-certframe-user-config-c4ch2c59m7
        - configMapRef:
            name: sas-certframe-java-config-gf4kt94898
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-certframe:3.9.0-20201203.1607016443086
        name: sas-certframe
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /certframe-token
          name: certframe-token
        - mountPath: /security
          name: security
        - mountPath: /customer-provided-ca-certificates
          name: customer-provided-ca-certificates
      readinessGates: []
      securityContext:
        runAsNonRoot: true
        supplementalGroups: []
        sysctls: []
      tolerations:
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateful
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateless
      volumes:
      - name: certframe-token
        secret:
          secretName: sas-certframe-token
      - emptyDir: {}
        name: security
      - configMap:
          name: sas-customer-provided-ca-certificates-29kdmk686c
        name: customer-provided-ca-certificates
      - emptyDir: {}
        name: tmp
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sas.com/certificate-file-format: pem
    sas.com/component-name: sas-model-studio-app
    sas.com/component-version: 1.51.2-20201209.1607544692059
    sas.com/kustomize-base: golang
    sas.com/pod-uses-liveness-probe: http
    sas.com/pod-uses-readiness-probe: http
    sas.com/pod-uses-startup-probe: http
    sas.com/version: 1.51.2
    sidecar.istio.io/proxyCPU: 15m
    sidecar.istio.io/proxyMemory: 115Mi
  labels:
    app.kubernetes.io/name: sas-model-studio-app
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
    sas.com/deployment-base: golang
    workload.sas.com/class: stateless
  name: sas-model-studio-app
  namespace: franceavv
spec:
  selector:
    matchExpressions: []
    matchLabels:
      app.kubernetes.io/name: sas-model-studio-app
      sas.com/deployment: sas-viya
  template:
    metadata:
      annotations:
        prometheus.io/path: /internal/metrics
        prometheus.io/port: "8080"
        prometheus.io/scheme: https
        prometheus.io/scrape: "true"
        sas.com/certificate-file-format: pem
        sas.com/component-name: sas-model-studio-app
        sas.com/component-version: 1.51.2-20201209.1607544692059
        sas.com/kustomize-base: golang
        sas.com/pod-uses-liveness-probe: http
        sas.com/pod-uses-readiness-probe: http
        sas.com/pod-uses-startup-probe: http
        sas.com/tls-enabled-ports: all
        sas.com/version: 1.51.2
        seccomp.security.alpha.kubernetes.io/pod: runtime/default
        sidecar.istio.io/proxyCPU: 15m
        sidecar.istio.io/proxyMemory: 115Mi
      labels:
        app: sas-model-studio-app
        app.kubernetes.io/name: sas-model-studio-app
        sas.com/deployment: sas-viya
        workload.sas.com/class: stateless
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: In
                values:
                - stateless
              matchFields: []
            weight: 100
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: NotIn
                values:
                - compute
                - cas
                - stateful
                - connect
              matchFields: []
            weight: 50
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.azure.com/mode
                operator: NotIn
                values:
                - system
              matchFields: []
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - sas-model-studio-app
              namespaces: []
              topologyKey: kubernetes.io/hostname
            weight: 100
          requiredDuringSchedulingIgnoredDuringExecution: []
      automountServiceAccountToken: false
      containers:
      - args: null
        command: null
        env:
        - name: SAS_K8S_DEPLOYMENT_NAME
          value: sas-model-studio-app
        envFrom:
        - configMapRef:
            name: sas-go-config-7hc79bmf8m
        - configMapRef:
            name: sas-shared-config-49d8hthtb5
        - secretRef:
            name: sas-consul-client
        - configMapRef:
            name: sas-tls-config-99f79t29t5
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-model-studio-app:1.51.2-20201209.1607544692059
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - sh
              - -c
              - sleep 5
        livenessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http
            scheme: HTTPS
          periodSeconds: 10
        name: sas-model-studio-app
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/ready
            port: http
            scheme: HTTPS
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add: []
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        startupProbe:
          failureThreshold: 180
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http
            scheme: HTTPS
          periodSeconds: 10
        volumeDevices: []
        volumeMounts:
        - mountPath: /tmp
          name: tmp
        - mountPath: /security
          name: security
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/cacerts
          name: security
          subPath: cacerts
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/private
          name: security
          subPath: private
      hostAliases: []
      imagePullSecrets:
      - name: sas-image-pull-secrets-4m8cc729k8
      initContainers:
      - env:
        - name: KUBE_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: SAS_CERTFRAME_TOKEN_DIR
          value: /certframe-token
        - name: SAS_ADDITIONAL_CA_CERTIFICATES_DIR
          value: /customer-provided-ca-certificates
        envFrom:
        - configMapRef:
            name: sas-certframe-ingress-certificate-config-cmm2t44t88
        - configMapRef:
            name: sas-certframe-user-config-c4ch2c59m7
        - configMapRef:
            name: sas-certframe-config-ctgg29gf7t
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-certframe:3.9.0-20201203.1607016443086
        name: sas-certframe
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /certframe-token
          name: certframe-token
        - mountPath: /security
          name: security
        - mountPath: /customer-provided-ca-certificates
          name: customer-provided-ca-certificates
      readinessGates: []
      securityContext:
        runAsNonRoot: true
        supplementalGroups: []
        sysctls: []
      tolerations:
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateful
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateless
      volumes:
      - name: certframe-token
        secret:
          secretName: sas-certframe-token
      - emptyDir: {}
        name: security
      - configMap:
          name: sas-customer-provided-ca-certificates-29kdmk686c
        name: customer-provided-ca-certificates
      - emptyDir: {}
        name: tmp
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sas.com/certificate-file-format: jks
    sas.com/component-name: sas-natural-language-conversations
    sas.com/component-version: 1.3.1-20201204.1607111974163
    sas.com/kustomize-base: spring
    sas.com/pod-uses-liveness-probe: http
    sas.com/pod-uses-readiness-probe: http
    sas.com/pod-uses-startup-probe: http
    sas.com/version: 1.3.1
    sidecar.istio.io/proxyCPU: 15m
    sidecar.istio.io/proxyMemory: 115Mi
  labels:
    app.kubernetes.io/name: sas-natural-language-conversations
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
    sas.com/deployment-base: spring
    workload.sas.com/class: stateless
  name: sas-natural-language-conversations
  namespace: franceavv
spec:
  selector:
    matchExpressions: []
    matchLabels:
      app.kubernetes.io/name: sas-natural-language-conversations
      sas.com/deployment: sas-viya
  template:
    metadata:
      annotations:
        prometheus.io/path: /internal/metrics
        prometheus.io/port: "10445"
        prometheus.io/scheme: https
        prometheus.io/scrape: "true"
        sas.com/certificate-file-format: jks
        sas.com/component-name: sas-natural-language-conversations
        sas.com/component-version: 1.3.1-20201204.1607111974163
        sas.com/kustomize-base: spring
        sas.com/pod-uses-liveness-probe: http
        sas.com/pod-uses-readiness-probe: http
        sas.com/pod-uses-startup-probe: http
        sas.com/tls-enabled-ports: all
        sas.com/version: 1.3.1
        seccomp.security.alpha.kubernetes.io/pod: runtime/default
        sidecar.istio.io/proxyCPU: 15m
        sidecar.istio.io/proxyMemory: 115Mi
      labels:
        app: sas-natural-language-conversations
        app.kubernetes.io/name: sas-natural-language-conversations
        sas.com/deployment: sas-viya
        workload.sas.com/class: stateless
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: In
                values:
                - stateless
              matchFields: []
            weight: 100
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: NotIn
                values:
                - compute
                - cas
                - stateful
                - connect
              matchFields: []
            weight: 50
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.azure.com/mode
                operator: NotIn
                values:
                - system
              matchFields: []
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - sas-natural-language-conversations
              namespaces: []
              topologyKey: kubernetes.io/hostname
            weight: 100
          requiredDuringSchedulingIgnoredDuringExecution: []
      automountServiceAccountToken: false
      containers:
      - args: null
        command: null
        env:
        - name: SAS_K8S_DEPLOYMENT_NAME
          value: sas-natural-language-conversations
        envFrom:
        - configMapRef:
            name: sas-java-config-t7t5thbgkd
        - configMapRef:
            name: sas-shared-config-49d8hthtb5
        - secretRef:
            name: sas-consul-client
        - configMapRef:
            name: sas-spring-management-config-d64bbkhb97
        - configMapRef:
            name: sas-java-tls-config-fch4777298
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-natural-language-conversations:1.3.1-20201204.1607111974163
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - sh
              - -c
              - sleep 5
        livenessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http-internal
            scheme: HTTPS
          periodSeconds: 10
        name: sas-natural-language-conversations
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        - containerPort: 10445
          name: http-internal
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/ready
            port: http-internal
            scheme: HTTPS
          periodSeconds: 10
        resources:
          limits:
            cpu: 2000m
            memory: 1Gi
          requests:
            cpu: 50m
            memory: 650M
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add: []
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        startupProbe:
          failureThreshold: 180
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http-internal
            scheme: HTTPS
          initialDelaySeconds: 20
          periodSeconds: 10
        volumeDevices: []
        volumeMounts:
        - mountPath: /tmp
          name: tmp
        - mountPath: /opt/sas/viya/config/tmp
          name: tmp
        - mountPath: /security
          name: security
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/cacerts
          name: security
          subPath: cacerts
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/private
          name: security
          subPath: private
      hostAliases: []
      imagePullSecrets:
      - name: sas-image-pull-secrets-4m8cc729k8
      initContainers:
      - env:
        - name: KUBE_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: SAS_CERTFRAME_TOKEN_DIR
          value: /certframe-token
        - name: SAS_ADDITIONAL_CA_CERTIFICATES_DIR
          value: /customer-provided-ca-certificates
        envFrom:
        - configMapRef:
            name: sas-certframe-ingress-certificate-config-cmm2t44t88
        - configMapRef:
            name: sas-certframe-user-config-c4ch2c59m7
        - configMapRef:
            name: sas-certframe-java-config-gf4kt94898
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-certframe:3.9.0-20201203.1607016443086
        name: sas-certframe
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /certframe-token
          name: certframe-token
        - mountPath: /security
          name: security
        - mountPath: /customer-provided-ca-certificates
          name: customer-provided-ca-certificates
      readinessGates: []
      securityContext:
        runAsNonRoot: true
        supplementalGroups: []
        sysctls: []
      tolerations:
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateful
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateless
      volumes:
      - name: certframe-token
        secret:
          secretName: sas-certframe-token
      - emptyDir: {}
        name: security
      - configMap:
          name: sas-customer-provided-ca-certificates-29kdmk686c
        name: customer-provided-ca-certificates
      - emptyDir: {}
        name: tmp
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sas.com/certificate-file-format: jks
    sas.com/component-name: sas-natural-language-generation
    sas.com/component-version: 1.6.0-20201203.1607013425049
    sas.com/kustomize-base: spring
    sas.com/pod-uses-liveness-probe: http
    sas.com/pod-uses-readiness-probe: http
    sas.com/pod-uses-startup-probe: http
    sas.com/version: 1.6.0
    sidecar.istio.io/proxyCPU: 15m
    sidecar.istio.io/proxyMemory: 115Mi
  labels:
    app.kubernetes.io/name: sas-natural-language-generation
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
    sas.com/deployment-base: spring
    workload.sas.com/class: stateless
  name: sas-natural-language-generation
  namespace: franceavv
spec:
  selector:
    matchExpressions: []
    matchLabels:
      app.kubernetes.io/name: sas-natural-language-generation
      sas.com/deployment: sas-viya
  template:
    metadata:
      annotations:
        prometheus.io/path: /internal/metrics
        prometheus.io/port: "10445"
        prometheus.io/scheme: https
        prometheus.io/scrape: "true"
        sas.com/certificate-file-format: jks
        sas.com/component-name: sas-natural-language-generation
        sas.com/component-version: 1.6.0-20201203.1607013425049
        sas.com/kustomize-base: spring
        sas.com/pod-uses-liveness-probe: http
        sas.com/pod-uses-readiness-probe: http
        sas.com/pod-uses-startup-probe: http
        sas.com/tls-enabled-ports: all
        sas.com/version: 1.6.0
        seccomp.security.alpha.kubernetes.io/pod: runtime/default
        sidecar.istio.io/proxyCPU: 15m
        sidecar.istio.io/proxyMemory: 115Mi
      labels:
        app: sas-natural-language-generation
        app.kubernetes.io/name: sas-natural-language-generation
        sas.com/deployment: sas-viya
        workload.sas.com/class: stateless
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: In
                values:
                - stateless
              matchFields: []
            weight: 100
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: NotIn
                values:
                - compute
                - cas
                - stateful
                - connect
              matchFields: []
            weight: 50
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.azure.com/mode
                operator: NotIn
                values:
                - system
              matchFields: []
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - sas-natural-language-generation
              namespaces: []
              topologyKey: kubernetes.io/hostname
            weight: 100
          requiredDuringSchedulingIgnoredDuringExecution: []
      automountServiceAccountToken: false
      containers:
      - args: null
        command: null
        env:
        - name: SAS_K8S_DEPLOYMENT_NAME
          value: sas-natural-language-generation
        envFrom:
        - configMapRef:
            name: sas-java-config-t7t5thbgkd
        - configMapRef:
            name: sas-shared-config-49d8hthtb5
        - secretRef:
            name: sas-consul-client
        - configMapRef:
            name: sas-spring-management-config-d64bbkhb97
        - configMapRef:
            name: sas-java-tls-config-fch4777298
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-natural-language-generation:1.6.0-20201203.1607013425049
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - sh
              - -c
              - sleep 5
        livenessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http-internal
            scheme: HTTPS
          periodSeconds: 10
        name: sas-natural-language-generation
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        - containerPort: 10445
          name: http-internal
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/ready
            port: http-internal
            scheme: HTTPS
          periodSeconds: 10
        resources:
          limits:
            cpu: 2000m
            memory: 1Gi
          requests:
            cpu: 50m
            memory: 650M
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add: []
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        startupProbe:
          failureThreshold: 180
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http-internal
            scheme: HTTPS
          initialDelaySeconds: 20
          periodSeconds: 10
        volumeDevices: []
        volumeMounts:
        - mountPath: /tmp
          name: tmp
        - mountPath: /opt/sas/viya/config/tmp
          name: tmp
        - mountPath: /security
          name: security
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/cacerts
          name: security
          subPath: cacerts
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/private
          name: security
          subPath: private
      hostAliases: []
      imagePullSecrets:
      - name: sas-image-pull-secrets-4m8cc729k8
      initContainers:
      - env:
        - name: KUBE_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: SAS_CERTFRAME_TOKEN_DIR
          value: /certframe-token
        - name: SAS_ADDITIONAL_CA_CERTIFICATES_DIR
          value: /customer-provided-ca-certificates
        envFrom:
        - configMapRef:
            name: sas-certframe-ingress-certificate-config-cmm2t44t88
        - configMapRef:
            name: sas-certframe-user-config-c4ch2c59m7
        - configMapRef:
            name: sas-certframe-java-config-gf4kt94898
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-certframe:3.9.0-20201203.1607016443086
        name: sas-certframe
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /certframe-token
          name: certframe-token
        - mountPath: /security
          name: security
        - mountPath: /customer-provided-ca-certificates
          name: customer-provided-ca-certificates
      readinessGates: []
      securityContext:
        runAsNonRoot: true
        supplementalGroups: []
        sysctls: []
      tolerations:
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateful
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateless
      volumes:
      - name: certframe-token
        secret:
          secretName: sas-certframe-token
      - emptyDir: {}
        name: security
      - configMap:
          name: sas-customer-provided-ca-certificates-29kdmk686c
        name: customer-provided-ca-certificates
      - emptyDir: {}
        name: tmp
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sas.com/certificate-file-format: jks
    sas.com/component-name: sas-natural-language-understanding
    sas.com/component-version: 3.4.0-20201203.1607014016368
    sas.com/kustomize-base: spring
    sas.com/pod-uses-liveness-probe: http
    sas.com/pod-uses-readiness-probe: http
    sas.com/pod-uses-startup-probe: http
    sas.com/version: 3.4.0
    sidecar.istio.io/proxyCPU: 15m
    sidecar.istio.io/proxyMemory: 115Mi
  labels:
    app.kubernetes.io/name: sas-natural-language-understanding
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
    sas.com/deployment-base: spring
    workload.sas.com/class: stateless
  name: sas-natural-language-understanding
  namespace: franceavv
spec:
  selector:
    matchExpressions: []
    matchLabels:
      app.kubernetes.io/name: sas-natural-language-understanding
      sas.com/deployment: sas-viya
  template:
    metadata:
      annotations:
        prometheus.io/path: /internal/metrics
        prometheus.io/port: "10445"
        prometheus.io/scheme: https
        prometheus.io/scrape: "true"
        sas.com/certificate-file-format: jks
        sas.com/component-name: sas-natural-language-understanding
        sas.com/component-version: 3.4.0-20201203.1607014016368
        sas.com/kustomize-base: spring
        sas.com/pod-uses-liveness-probe: http
        sas.com/pod-uses-readiness-probe: http
        sas.com/pod-uses-startup-probe: http
        sas.com/tls-enabled-ports: all
        sas.com/version: 3.4.0
        seccomp.security.alpha.kubernetes.io/pod: runtime/default
        sidecar.istio.io/proxyCPU: 15m
        sidecar.istio.io/proxyMemory: 115Mi
      labels:
        app: sas-natural-language-understanding
        app.kubernetes.io/name: sas-natural-language-understanding
        sas.com/deployment: sas-viya
        workload.sas.com/class: stateless
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: In
                values:
                - stateless
              matchFields: []
            weight: 100
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: NotIn
                values:
                - compute
                - cas
                - stateful
                - connect
              matchFields: []
            weight: 50
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.azure.com/mode
                operator: NotIn
                values:
                - system
              matchFields: []
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - sas-natural-language-understanding
              namespaces: []
              topologyKey: kubernetes.io/hostname
            weight: 100
          requiredDuringSchedulingIgnoredDuringExecution: []
      automountServiceAccountToken: false
      containers:
      - args: null
        command: null
        env:
        - name: SAS_K8S_DEPLOYMENT_NAME
          value: sas-natural-language-understanding
        envFrom:
        - configMapRef:
            name: sas-java-config-t7t5thbgkd
        - configMapRef:
            name: sas-shared-config-49d8hthtb5
        - secretRef:
            name: sas-consul-client
        - configMapRef:
            name: sas-spring-management-config-d64bbkhb97
        - configMapRef:
            name: sas-java-tls-config-fch4777298
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-natural-language-understanding:3.4.0-20201203.1607014016368
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - sh
              - -c
              - sleep 5
        livenessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http-internal
            scheme: HTTPS
          periodSeconds: 10
        name: sas-natural-language-understanding
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        - containerPort: 10445
          name: http-internal
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/ready
            port: http-internal
            scheme: HTTPS
          periodSeconds: 10
        resources:
          limits:
            cpu: 2000m
            memory: 6Gi
          requests:
            cpu: 50m
            memory: 4Gi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add: []
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        startupProbe:
          failureThreshold: 180
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http-internal
            scheme: HTTPS
          initialDelaySeconds: 20
          periodSeconds: 10
        volumeDevices: []
        volumeMounts:
        - mountPath: /tmp
          name: tmp
        - mountPath: /opt/sas/viya/config/tmp
          name: tmp
        - mountPath: /security
          name: security
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/cacerts
          name: security
          subPath: cacerts
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/private
          name: security
          subPath: private
      hostAliases: []
      imagePullSecrets:
      - name: sas-image-pull-secrets-4m8cc729k8
      initContainers:
      - env:
        - name: KUBE_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: SAS_CERTFRAME_TOKEN_DIR
          value: /certframe-token
        - name: SAS_ADDITIONAL_CA_CERTIFICATES_DIR
          value: /customer-provided-ca-certificates
        envFrom:
        - configMapRef:
            name: sas-certframe-ingress-certificate-config-cmm2t44t88
        - configMapRef:
            name: sas-certframe-user-config-c4ch2c59m7
        - configMapRef:
            name: sas-certframe-java-config-gf4kt94898
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-certframe:3.9.0-20201203.1607016443086
        name: sas-certframe
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /certframe-token
          name: certframe-token
        - mountPath: /security
          name: security
        - mountPath: /customer-provided-ca-certificates
          name: customer-provided-ca-certificates
      readinessGates: []
      securityContext:
        runAsNonRoot: true
        supplementalGroups: []
        sysctls: []
      tolerations:
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateful
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateless
      volumes:
      - name: certframe-token
        secret:
          secretName: sas-certframe-token
      - emptyDir: {}
        name: security
      - configMap:
          name: sas-customer-provided-ca-certificates-29kdmk686c
        name: customer-provided-ca-certificates
      - emptyDir: {}
        name: tmp
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sas.com/certificate-file-format: pem
    sas.com/component-name: sas-notifications
    sas.com/component-version: 1.55.1-20201207.1607355364455
    sas.com/kustomize-base: golang
    sas.com/pod-uses-db-migrator: "true"
    sas.com/pod-uses-liveness-probe: http
    sas.com/pod-uses-readiness-probe: http
    sas.com/pod-uses-startup-probe: http
    sas.com/version: 1.55.1
    sidecar.istio.io/proxyCPU: 15m
    sidecar.istio.io/proxyMemory: 115Mi
  labels:
    app.kubernetes.io/name: sas-notifications
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
    sas.com/deployment-base: golang
    workload.sas.com/class: stateless
  name: sas-notifications
  namespace: franceavv
spec:
  selector:
    matchExpressions: []
    matchLabels:
      app.kubernetes.io/name: sas-notifications
      sas.com/deployment: sas-viya
  template:
    metadata:
      annotations:
        prometheus.io/path: /internal/metrics
        prometheus.io/port: "8080"
        prometheus.io/scheme: https
        prometheus.io/scrape: "true"
        sas.com/certificate-file-format: pem
        sas.com/component-name: sas-notifications
        sas.com/component-version: 1.55.1-20201207.1607355364455
        sas.com/kustomize-base: golang
        sas.com/pod-uses-liveness-probe: http
        sas.com/pod-uses-readiness-probe: http
        sas.com/pod-uses-startup-probe: http
        sas.com/tls-enabled-ports: all
        sas.com/version: 1.55.1
        seccomp.security.alpha.kubernetes.io/pod: runtime/default
        sidecar.istio.io/proxyCPU: 15m
        sidecar.istio.io/proxyMemory: 115Mi
      labels:
        app: sas-notifications
        app.kubernetes.io/name: sas-notifications
        sas.com/deployment: sas-viya
        workload.sas.com/class: stateless
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: In
                values:
                - stateless
              matchFields: []
            weight: 100
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: NotIn
                values:
                - compute
                - cas
                - stateful
                - connect
              matchFields: []
            weight: 50
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.azure.com/mode
                operator: NotIn
                values:
                - system
              matchFields: []
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - sas-notifications
              namespaces: []
              topologyKey: kubernetes.io/hostname
            weight: 100
          requiredDuringSchedulingIgnoredDuringExecution: []
      automountServiceAccountToken: false
      containers:
      - args: null
        command: null
        env:
        - name: SAS_K8S_DEPLOYMENT_NAME
          value: sas-notifications
        envFrom:
        - configMapRef:
            name: sas-go-config-7hc79bmf8m
        - configMapRef:
            name: sas-shared-config-49d8hthtb5
        - secretRef:
            name: sas-consul-client
        - configMapRef:
            name: sas-tls-config-99f79t29t5
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-notifications:1.55.1-20201207.1607355364455
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - sh
              - -c
              - sleep 5
        livenessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http
            scheme: HTTPS
          periodSeconds: 10
        name: sas-notifications
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/ready
            port: http
            scheme: HTTPS
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add: []
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        startupProbe:
          failureThreshold: 180
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http
            scheme: HTTPS
          periodSeconds: 10
        volumeDevices: []
        volumeMounts:
        - mountPath: /tmp
          name: tmp
        - mountPath: /security
          name: security
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/cacerts
          name: security
          subPath: cacerts
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/private
          name: security
          subPath: private
      hostAliases: []
      imagePullSecrets:
      - name: sas-image-pull-secrets-4m8cc729k8
      initContainers:
      - env:
        - name: KUBE_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: SAS_CERTFRAME_TOKEN_DIR
          value: /certframe-token
        - name: SAS_ADDITIONAL_CA_CERTIFICATES_DIR
          value: /customer-provided-ca-certificates
        envFrom:
        - configMapRef:
            name: sas-certframe-ingress-certificate-config-cmm2t44t88
        - configMapRef:
            name: sas-certframe-user-config-c4ch2c59m7
        - configMapRef:
            name: sas-certframe-config-ctgg29gf7t
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-certframe:3.9.0-20201203.1607016443086
        name: sas-certframe
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /certframe-token
          name: certframe-token
        - mountPath: /security
          name: security
        - mountPath: /customer-provided-ca-certificates
          name: customer-provided-ca-certificates
      - args:
        - cp -rf meta /data
        command:
        - /bin/sh
        - -c
        env: []
        envFrom: []
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-notifications:1.55.1-20201207.1607355364455
        imagePullPolicy: IfNotPresent
        name: hydrator
        ports: []
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 75m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add: []
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeDevices: []
        volumeMounts:
        - mountPath: /data
          name: shared-vol
      - args: null
        command: null
        env:
        - name: SSL_CERT_FILE
          value: /security/trustedcerts.pem
        - name: SAS_SERVICE_NAME
          value: sas-notifications
        envFrom:
        - configMapRef:
            name: sas-go-config-7hc79bmf8m
        - configMapRef:
            name: sas-shared-config-49d8hthtb5
        - configMapRef:
            name: sas-java-config-t7t5thbgkd
        - secretRef:
            name: sas-consul-client
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-db-migrator:1.1.0-20201209.1607523698073
        imagePullPolicy: IfNotPresent
        name: sas-db-migrator
        ports: []
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 100m
            memory: 90Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add: []
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeDevices: []
        volumeMounts:
        - mountPath: /security
          name: security
        - mountPath: /data
          name: shared-vol
      readinessGates: []
      securityContext:
        runAsNonRoot: true
        supplementalGroups: []
        sysctls: []
      tolerations:
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateful
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateless
      volumes:
      - name: certframe-token
        secret:
          secretName: sas-certframe-token
      - emptyDir: {}
        name: security
      - configMap:
          name: sas-customer-provided-ca-certificates-29kdmk686c
        name: customer-provided-ca-certificates
      - emptyDir: {}
        name: tmp
      - emptyDir: {}
        name: shared-vol
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sas.com/certificate-file-format: pem
    sas.com/component-name: sas-preferences
    sas.com/component-version: 1.57.1-20201204.1607093916383
    sas.com/kustomize-base: golang
    sas.com/pod-uses-db-migrator: "true"
    sas.com/pod-uses-liveness-probe: http
    sas.com/pod-uses-readiness-probe: http
    sas.com/pod-uses-startup-probe: http
    sas.com/version: 1.57.1
    sidecar.istio.io/proxyCPU: 15m
    sidecar.istio.io/proxyMemory: 115Mi
  labels:
    app.kubernetes.io/name: sas-preferences
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
    sas.com/deployment-base: golang
    workload.sas.com/class: stateless
  name: sas-preferences
  namespace: franceavv
spec:
  selector:
    matchExpressions: []
    matchLabels:
      app.kubernetes.io/name: sas-preferences
      sas.com/deployment: sas-viya
  template:
    metadata:
      annotations:
        prometheus.io/path: /internal/metrics
        prometheus.io/port: "8080"
        prometheus.io/scheme: https
        prometheus.io/scrape: "true"
        sas.com/certificate-file-format: pem
        sas.com/component-name: sas-preferences
        sas.com/component-version: 1.57.1-20201204.1607093916383
        sas.com/kustomize-base: golang
        sas.com/pod-uses-liveness-probe: http
        sas.com/pod-uses-readiness-probe: http
        sas.com/pod-uses-startup-probe: http
        sas.com/tls-enabled-ports: all
        sas.com/version: 1.57.1
        seccomp.security.alpha.kubernetes.io/pod: runtime/default
        sidecar.istio.io/proxyCPU: 15m
        sidecar.istio.io/proxyMemory: 115Mi
      labels:
        app: sas-preferences
        app.kubernetes.io/name: sas-preferences
        sas.com/deployment: sas-viya
        workload.sas.com/class: stateless
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: In
                values:
                - stateless
              matchFields: []
            weight: 100
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: NotIn
                values:
                - compute
                - cas
                - stateful
                - connect
              matchFields: []
            weight: 50
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.azure.com/mode
                operator: NotIn
                values:
                - system
              matchFields: []
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - sas-preferences
              namespaces: []
              topologyKey: kubernetes.io/hostname
            weight: 100
          requiredDuringSchedulingIgnoredDuringExecution: []
      automountServiceAccountToken: false
      containers:
      - args: null
        command: null
        env:
        - name: SAS_K8S_DEPLOYMENT_NAME
          value: sas-preferences
        envFrom:
        - configMapRef:
            name: sas-go-config-7hc79bmf8m
        - configMapRef:
            name: sas-shared-config-49d8hthtb5
        - secretRef:
            name: sas-consul-client
        - configMapRef:
            name: sas-tls-config-99f79t29t5
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-preferences:1.57.1-20201204.1607093916383
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - sh
              - -c
              - sleep 5
        livenessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http
            scheme: HTTPS
          periodSeconds: 10
        name: sas-preferences
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/ready
            port: http
            scheme: HTTPS
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add: []
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        startupProbe:
          failureThreshold: 180
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http
            scheme: HTTPS
          periodSeconds: 10
        volumeDevices: []
        volumeMounts:
        - mountPath: /tmp
          name: tmp
        - mountPath: /security
          name: security
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/cacerts
          name: security
          subPath: cacerts
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/private
          name: security
          subPath: private
      hostAliases: []
      imagePullSecrets:
      - name: sas-image-pull-secrets-4m8cc729k8
      initContainers:
      - env:
        - name: KUBE_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: SAS_CERTFRAME_TOKEN_DIR
          value: /certframe-token
        - name: SAS_ADDITIONAL_CA_CERTIFICATES_DIR
          value: /customer-provided-ca-certificates
        envFrom:
        - configMapRef:
            name: sas-certframe-ingress-certificate-config-cmm2t44t88
        - configMapRef:
            name: sas-certframe-user-config-c4ch2c59m7
        - configMapRef:
            name: sas-certframe-config-ctgg29gf7t
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-certframe:3.9.0-20201203.1607016443086
        name: sas-certframe
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /certframe-token
          name: certframe-token
        - mountPath: /security
          name: security
        - mountPath: /customer-provided-ca-certificates
          name: customer-provided-ca-certificates
      - args:
        - cp -rf meta /data
        command:
        - /bin/sh
        - -c
        env: []
        envFrom: []
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-preferences:1.57.1-20201204.1607093916383
        imagePullPolicy: IfNotPresent
        name: hydrator
        ports: []
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 75m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add: []
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeDevices: []
        volumeMounts:
        - mountPath: /data
          name: shared-vol
      - args: null
        command: null
        env:
        - name: SSL_CERT_FILE
          value: /security/trustedcerts.pem
        - name: SAS_SERVICE_NAME
          value: sas-preferences
        envFrom:
        - configMapRef:
            name: sas-go-config-7hc79bmf8m
        - configMapRef:
            name: sas-shared-config-49d8hthtb5
        - configMapRef:
            name: sas-java-config-t7t5thbgkd
        - secretRef:
            name: sas-consul-client
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-db-migrator:1.1.0-20201209.1607523698073
        imagePullPolicy: IfNotPresent
        name: sas-db-migrator
        ports: []
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 100m
            memory: 90Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add: []
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeDevices: []
        volumeMounts:
        - mountPath: /security
          name: security
        - mountPath: /data
          name: shared-vol
      readinessGates: []
      securityContext:
        runAsNonRoot: true
        supplementalGroups: []
        sysctls: []
      tolerations:
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateful
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateless
      volumes:
      - name: certframe-token
        secret:
          secretName: sas-certframe-token
      - emptyDir: {}
        name: security
      - configMap:
          name: sas-customer-provided-ca-certificates-29kdmk686c
        name: customer-provided-ca-certificates
      - emptyDir: {}
        name: tmp
      - emptyDir: {}
        name: shared-vol
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sas.com/certificate-file-format: jks
    sas.com/component-name: sas-projects
    sas.com/component-version: 1.23.18-20201209.1607532724047
    sas.com/kustomize-base: spring
    sas.com/pod-uses-liveness-probe: http
    sas.com/pod-uses-readiness-probe: http
    sas.com/pod-uses-startup-probe: http
    sas.com/version: 1.23.18
    sidecar.istio.io/proxyCPU: 15m
    sidecar.istio.io/proxyMemory: 115Mi
  labels:
    app.kubernetes.io/name: sas-projects
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
    sas.com/deployment-base: spring
    workload.sas.com/class: stateless
  name: sas-projects
  namespace: franceavv
spec:
  selector:
    matchExpressions: []
    matchLabels:
      app.kubernetes.io/name: sas-projects
      sas.com/deployment: sas-viya
  template:
    metadata:
      annotations:
        prometheus.io/path: /internal/metrics
        prometheus.io/port: "10445"
        prometheus.io/scheme: https
        prometheus.io/scrape: "true"
        sas.com/certificate-file-format: jks
        sas.com/component-name: sas-projects
        sas.com/component-version: 1.23.18-20201209.1607532724047
        sas.com/kustomize-base: spring
        sas.com/pod-uses-liveness-probe: http
        sas.com/pod-uses-readiness-probe: http
        sas.com/pod-uses-startup-probe: http
        sas.com/tls-enabled-ports: all
        sas.com/version: 1.23.18
        seccomp.security.alpha.kubernetes.io/pod: runtime/default
        sidecar.istio.io/proxyCPU: 15m
        sidecar.istio.io/proxyMemory: 115Mi
      labels:
        app: sas-projects
        app.kubernetes.io/name: sas-projects
        sas.com/deployment: sas-viya
        workload.sas.com/class: stateless
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: In
                values:
                - stateless
              matchFields: []
            weight: 100
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: NotIn
                values:
                - compute
                - cas
                - stateful
                - connect
              matchFields: []
            weight: 50
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.azure.com/mode
                operator: NotIn
                values:
                - system
              matchFields: []
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - sas-projects
              namespaces: []
              topologyKey: kubernetes.io/hostname
            weight: 100
          requiredDuringSchedulingIgnoredDuringExecution: []
      automountServiceAccountToken: false
      containers:
      - args: null
        command: null
        env:
        - name: SAS_K8S_DEPLOYMENT_NAME
          value: sas-projects
        envFrom:
        - configMapRef:
            name: sas-java-config-t7t5thbgkd
        - configMapRef:
            name: sas-shared-config-49d8hthtb5
        - secretRef:
            name: sas-consul-client
        - configMapRef:
            name: sas-spring-management-config-d64bbkhb97
        - configMapRef:
            name: sas-java-tls-config-fch4777298
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-projects:1.23.18-20201209.1607532724047
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - sh
              - -c
              - sleep 5
        livenessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http-internal
            scheme: HTTPS
          periodSeconds: 10
        name: sas-projects
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        - containerPort: 10445
          name: http-internal
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/ready
            port: http-internal
            scheme: HTTPS
          periodSeconds: 10
        resources:
          limits:
            cpu: 2000m
            memory: 1Gi
          requests:
            cpu: 50m
            memory: 650M
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add: []
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        startupProbe:
          failureThreshold: 180
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http-internal
            scheme: HTTPS
          initialDelaySeconds: 20
          periodSeconds: 10
        volumeDevices: []
        volumeMounts:
        - mountPath: /tmp
          name: tmp
        - mountPath: /opt/sas/viya/config/tmp
          name: tmp
        - mountPath: /security
          name: security
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/cacerts
          name: security
          subPath: cacerts
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/private
          name: security
          subPath: private
      hostAliases: []
      imagePullSecrets:
      - name: sas-image-pull-secrets-4m8cc729k8
      initContainers:
      - env:
        - name: KUBE_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: SAS_CERTFRAME_TOKEN_DIR
          value: /certframe-token
        - name: SAS_ADDITIONAL_CA_CERTIFICATES_DIR
          value: /customer-provided-ca-certificates
        envFrom:
        - configMapRef:
            name: sas-certframe-ingress-certificate-config-cmm2t44t88
        - configMapRef:
            name: sas-certframe-user-config-c4ch2c59m7
        - configMapRef:
            name: sas-certframe-java-config-gf4kt94898
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-certframe:3.9.0-20201203.1607016443086
        name: sas-certframe
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /certframe-token
          name: certframe-token
        - mountPath: /security
          name: security
        - mountPath: /customer-provided-ca-certificates
          name: customer-provided-ca-certificates
      readinessGates: []
      securityContext:
        runAsNonRoot: true
        supplementalGroups: []
        sysctls: []
      tolerations:
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateful
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateless
      volumes:
      - name: certframe-token
        secret:
          secretName: sas-certframe-token
      - emptyDir: {}
        name: security
      - configMap:
          name: sas-customer-provided-ca-certificates-29kdmk686c
        name: customer-provided-ca-certificates
      - emptyDir: {}
        name: tmp
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sas.com/certificate-file-format: pem
    sas.com/component-name: sas-readiness
    sas.com/component-version: 1.3.3-20201203.1607020633267
    sas.com/kustomize-base: golang
    sas.com/pod-uses-liveness-probe: http
    sas.com/pod-uses-readiness-probe: http
    sas.com/pod-uses-startup-probe: http
    sas.com/version: 1.3.3
    sidecar.istio.io/proxyCPU: 15m
    sidecar.istio.io/proxyMemory: 115Mi
  labels:
    app.kubernetes.io/name: sas-readiness
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
    sas.com/deployment-base: golang
    workload.sas.com/class: stateless
  name: sas-readiness
  namespace: franceavv
spec:
  selector:
    matchExpressions: []
    matchLabels:
      app.kubernetes.io/name: sas-readiness
      sas.com/deployment: sas-viya
  template:
    metadata:
      annotations:
        prometheus.io/path: /internal/metrics
        prometheus.io/port: "8080"
        prometheus.io/scheme: https
        prometheus.io/scrape: "true"
        sas.com/certificate-file-format: pem
        sas.com/component-name: sas-readiness
        sas.com/component-version: 1.3.3-20201203.1607020633267
        sas.com/kustomize-base: golang
        sas.com/pod-uses-liveness-probe: http
        sas.com/pod-uses-readiness-probe: http
        sas.com/pod-uses-startup-probe: http
        sas.com/tls-enabled-ports: all
        sas.com/version: 1.3.3
        seccomp.security.alpha.kubernetes.io/pod: runtime/default
        sidecar.istio.io/proxyCPU: 15m
        sidecar.istio.io/proxyMemory: 115Mi
      labels:
        app: sas-readiness
        app.kubernetes.io/name: sas-readiness
        sas.com/deployment: sas-viya
        workload.sas.com/class: stateless
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: In
                values:
                - stateless
              matchFields: []
            weight: 100
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: NotIn
                values:
                - compute
                - cas
                - stateful
                - connect
              matchFields: []
            weight: 50
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.azure.com/mode
                operator: NotIn
                values:
                - system
              matchFields: []
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - sas-readiness
              namespaces: []
              topologyKey: kubernetes.io/hostname
            weight: 100
          requiredDuringSchedulingIgnoredDuringExecution: []
      automountServiceAccountToken: true
      containers:
      - args: null
        command: null
        env:
        - name: SAS_K8S_DEPLOYMENT_NAME
          value: sas-readiness
        - name: SAS_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        envFrom:
        - configMapRef:
            name: sas-go-config-7hc79bmf8m
        - configMapRef:
            name: sas-shared-config-49d8hthtb5
        - secretRef:
            name: sas-consul-client
        - configMapRef:
            name: sas-tls-config-99f79t29t5
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-readiness:1.3.3-20201203.1607020633267
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - sh
              - -c
              - sleep 5
        livenessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http
            scheme: HTTPS
          periodSeconds: 10
        name: sas-readiness
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/ready
            port: http
            scheme: HTTPS
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add: []
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        startupProbe:
          failureThreshold: 180
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http
            scheme: HTTPS
          periodSeconds: 10
        volumeDevices: []
        volumeMounts:
        - mountPath: /tmp
          name: tmp
        - mountPath: /security
          name: security
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/cacerts
          name: security
          subPath: cacerts
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/private
          name: security
          subPath: private
      hostAliases: []
      imagePullSecrets:
      - name: sas-image-pull-secrets-4m8cc729k8
      initContainers:
      - env:
        - name: KUBE_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: SAS_CERTFRAME_TOKEN_DIR
          value: /certframe-token
        - name: SAS_ADDITIONAL_CA_CERTIFICATES_DIR
          value: /customer-provided-ca-certificates
        envFrom:
        - configMapRef:
            name: sas-certframe-ingress-certificate-config-cmm2t44t88
        - configMapRef:
            name: sas-certframe-user-config-c4ch2c59m7
        - configMapRef:
            name: sas-certframe-config-ctgg29gf7t
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-certframe:3.9.0-20201203.1607016443086
        name: sas-certframe
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /certframe-token
          name: certframe-token
        - mountPath: /security
          name: security
        - mountPath: /customer-provided-ca-certificates
          name: customer-provided-ca-certificates
      readinessGates: []
      securityContext:
        runAsNonRoot: true
        supplementalGroups: []
        sysctls: []
      serviceAccountName: sas-readiness
      tolerations:
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateful
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateless
      volumes:
      - name: certframe-token
        secret:
          secretName: sas-certframe-token
      - emptyDir: {}
        name: security
      - configMap:
          name: sas-customer-provided-ca-certificates-29kdmk686c
        name: customer-provided-ca-certificates
      - emptyDir: {}
        name: tmp
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sas.com/certificate-file-format: jks
    sas.com/component-name: sas-relationships
    sas.com/component-version: 3.28.11-20201204.1607056749902
    sas.com/kustomize-base: spring
    sas.com/pod-uses-liveness-probe: http
    sas.com/pod-uses-readiness-probe: http
    sas.com/pod-uses-startup-probe: http
    sas.com/version: 3.28.11
    sidecar.istio.io/proxyCPU: 15m
    sidecar.istio.io/proxyMemory: 115Mi
  labels:
    app.kubernetes.io/name: sas-relationships
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
    sas.com/deployment-base: spring
    workload.sas.com/class: stateless
  name: sas-relationships
  namespace: franceavv
spec:
  selector:
    matchExpressions: []
    matchLabels:
      app.kubernetes.io/name: sas-relationships
      sas.com/deployment: sas-viya
  template:
    metadata:
      annotations:
        prometheus.io/path: /internal/metrics
        prometheus.io/port: "10445"
        prometheus.io/scheme: https
        prometheus.io/scrape: "true"
        sas.com/certificate-file-format: jks
        sas.com/component-name: sas-relationships
        sas.com/component-version: 3.28.11-20201204.1607056749902
        sas.com/kustomize-base: spring
        sas.com/pod-uses-liveness-probe: http
        sas.com/pod-uses-readiness-probe: http
        sas.com/pod-uses-startup-probe: http
        sas.com/tls-enabled-ports: all
        sas.com/version: 3.28.11
        seccomp.security.alpha.kubernetes.io/pod: runtime/default
        sidecar.istio.io/proxyCPU: 15m
        sidecar.istio.io/proxyMemory: 115Mi
      labels:
        app: sas-relationships
        app.kubernetes.io/name: sas-relationships
        sas.com/deployment: sas-viya
        workload.sas.com/class: stateless
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: In
                values:
                - stateless
              matchFields: []
            weight: 100
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: NotIn
                values:
                - compute
                - cas
                - stateful
                - connect
              matchFields: []
            weight: 50
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.azure.com/mode
                operator: NotIn
                values:
                - system
              matchFields: []
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - sas-relationships
              namespaces: []
              topologyKey: kubernetes.io/hostname
            weight: 100
          requiredDuringSchedulingIgnoredDuringExecution: []
      automountServiceAccountToken: false
      containers:
      - args: null
        command: null
        env:
        - name: SAS_K8S_DEPLOYMENT_NAME
          value: sas-relationships
        envFrom:
        - configMapRef:
            name: sas-java-config-t7t5thbgkd
        - configMapRef:
            name: sas-shared-config-49d8hthtb5
        - secretRef:
            name: sas-consul-client
        - configMapRef:
            name: sas-spring-management-config-d64bbkhb97
        - configMapRef:
            name: sas-java-tls-config-fch4777298
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-relationships:3.28.11-20201204.1607056749902
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - sh
              - -c
              - sleep 5
        livenessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http-internal
            scheme: HTTPS
          periodSeconds: 10
        name: sas-relationships
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        - containerPort: 10445
          name: http-internal
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/ready
            port: http-internal
            scheme: HTTPS
          periodSeconds: 10
        resources:
          limits:
            cpu: 2000m
            memory: 1Gi
          requests:
            cpu: 50m
            memory: 650M
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add: []
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        startupProbe:
          failureThreshold: 180
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http-internal
            scheme: HTTPS
          initialDelaySeconds: 20
          periodSeconds: 10
        volumeDevices: []
        volumeMounts:
        - mountPath: /tmp
          name: tmp
        - mountPath: /opt/sas/viya/config/tmp
          name: tmp
        - mountPath: /security
          name: security
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/cacerts
          name: security
          subPath: cacerts
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/private
          name: security
          subPath: private
      hostAliases: []
      imagePullSecrets:
      - name: sas-image-pull-secrets-4m8cc729k8
      initContainers:
      - env:
        - name: KUBE_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: SAS_CERTFRAME_TOKEN_DIR
          value: /certframe-token
        - name: SAS_ADDITIONAL_CA_CERTIFICATES_DIR
          value: /customer-provided-ca-certificates
        envFrom:
        - configMapRef:
            name: sas-certframe-ingress-certificate-config-cmm2t44t88
        - configMapRef:
            name: sas-certframe-user-config-c4ch2c59m7
        - configMapRef:
            name: sas-certframe-java-config-gf4kt94898
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-certframe:3.9.0-20201203.1607016443086
        name: sas-certframe
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /certframe-token
          name: certframe-token
        - mountPath: /security
          name: security
        - mountPath: /customer-provided-ca-certificates
          name: customer-provided-ca-certificates
      readinessGates: []
      securityContext:
        runAsNonRoot: true
        supplementalGroups: []
        sysctls: []
      tolerations:
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateful
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateless
      volumes:
      - name: certframe-token
        secret:
          secretName: sas-certframe-token
      - emptyDir: {}
        name: security
      - configMap:
          name: sas-customer-provided-ca-certificates-29kdmk686c
        name: customer-provided-ca-certificates
      - emptyDir: {}
        name: tmp
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sas.com/certificate-file-format: pem
    sas.com/component-name: sas-report-distribution
    sas.com/component-version: 2.52.0-20201106.1604662320003
    sas.com/kustomize-base: golang
    sas.com/pod-uses-db-migrator: "true"
    sas.com/pod-uses-readiness-probe: http
    sas.com/version: 2.52.0
    sidecar.istio.io/proxyCPU: 15m
    sidecar.istio.io/proxyMemory: 115Mi
  labels:
    app.kubernetes.io/name: sas-report-distribution
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
    sas.com/deployment-base: golang
    workload.sas.com/class: stateless
  name: sas-report-distribution
  namespace: franceavv
spec:
  selector:
    matchExpressions: []
    matchLabels:
      app.kubernetes.io/name: sas-report-distribution
      sas.com/deployment: sas-viya
  template:
    metadata:
      annotations:
        prometheus.io/path: /internal/metrics
        prometheus.io/port: "8080"
        prometheus.io/scheme: https
        prometheus.io/scrape: "true"
        sas.com/certificate-file-format: pem
        sas.com/component-name: sas-report-distribution
        sas.com/component-version: 2.52.0-20201106.1604662320003
        sas.com/kustomize-base: golang
        sas.com/pod-uses-readiness-probe: http
        sas.com/tls-enabled-ports: all
        sas.com/version: 2.52.0
        seccomp.security.alpha.kubernetes.io/pod: runtime/default
        sidecar.istio.io/proxyCPU: 15m
        sidecar.istio.io/proxyMemory: 115Mi
      labels:
        app: sas-report-distribution
        app.kubernetes.io/name: sas-report-distribution
        sas.com/deployment: sas-viya
        workload.sas.com/class: stateless
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: In
                values:
                - stateless
              matchFields: []
            weight: 100
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: NotIn
                values:
                - compute
                - cas
                - stateful
                - connect
              matchFields: []
            weight: 50
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.azure.com/mode
                operator: NotIn
                values:
                - system
              matchFields: []
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - sas-report-distribution
              namespaces: []
              topologyKey: kubernetes.io/hostname
            weight: 100
          requiredDuringSchedulingIgnoredDuringExecution: []
      automountServiceAccountToken: true
      containers:
      - args: null
        command: null
        env:
        - name: SAS_K8S_DEPLOYMENT_NAME
          value: sas-report-distribution
        envFrom:
        - configMapRef:
            name: sas-go-config-7hc79bmf8m
        - configMapRef:
            name: sas-shared-config-49d8hthtb5
        - secretRef:
            name: sas-consul-client
        - configMapRef:
            name: sas-tls-config-99f79t29t5
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-report-distribution:2.52.0-20201106.1604662320003
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - sh
              - -c
              - sleep 5
        livenessProbe:
          exec:
            command:
            - /opt/sas/viya/home/bin/sas-liveness-tool
            - -manifest-file
            - /opt/sas/viya/home/share/sas-report-distribution/run-manifest.json
        name: sas-report-distribution
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          httpGet:
            httpHeaders: []
            path: /internal/ready
            port: http
            scheme: HTTPS
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add: []
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeDevices: []
        volumeMounts:
        - mountPath: /tmp
          name: tmp
        - mountPath: /security
          name: security
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/cacerts
          name: security
          subPath: cacerts
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/private
          name: security
          subPath: private
      hostAliases: []
      imagePullSecrets:
      - name: sas-image-pull-secrets-4m8cc729k8
      initContainers:
      - env:
        - name: KUBE_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: SAS_CERTFRAME_TOKEN_DIR
          value: /certframe-token
        - name: SAS_ADDITIONAL_CA_CERTIFICATES_DIR
          value: /customer-provided-ca-certificates
        envFrom:
        - configMapRef:
            name: sas-certframe-ingress-certificate-config-cmm2t44t88
        - configMapRef:
            name: sas-certframe-user-config-c4ch2c59m7
        - configMapRef:
            name: sas-certframe-config-ctgg29gf7t
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-certframe:3.9.0-20201203.1607016443086
        name: sas-certframe
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /certframe-token
          name: certframe-token
        - mountPath: /security
          name: security
        - mountPath: /customer-provided-ca-certificates
          name: customer-provided-ca-certificates
      - args:
        - cp -rf meta /data
        command:
        - /bin/sh
        - -c
        env: []
        envFrom: []
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-report-distribution:2.52.0-20201106.1604662320003
        imagePullPolicy: IfNotPresent
        name: hydrator
        ports: []
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 75m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          privileged: false
          readOnlyRootFilesystem: true
        volumeDevices: []
        volumeMounts:
        - mountPath: /data
          name: shared-vol
      - args: null
        command: null
        env:
        - name: SSL_CERT_FILE
          value: /security/trustedcerts.pem
        - name: SAS_SERVICE_NAME
          value: sas-report-distribution
        envFrom:
        - configMapRef:
            name: sas-go-config-7hc79bmf8m
        - configMapRef:
            name: sas-shared-config-49d8hthtb5
        - configMapRef:
            name: sas-java-config-t7t5thbgkd
        - secretRef:
            name: sas-consul-client
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-db-migrator:1.1.0-20201209.1607523698073
        imagePullPolicy: IfNotPresent
        name: sas-db-migrator
        ports: []
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 100m
            memory: 90Mi
        securityContext:
          allowPrivilegeEscalation: false
          privileged: false
          readOnlyRootFilesystem: true
        volumeDevices: []
        volumeMounts:
        - mountPath: /security
          name: security
        - mountPath: /data
          name: shared-vol
      readinessGates: []
      securityContext:
        runAsNonRoot: true
        supplementalGroups: []
        sysctls: []
      tolerations:
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateful
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateless
      volumes:
      - name: certframe-token
        secret:
          secretName: sas-certframe-token
      - emptyDir: {}
        name: security
      - configMap:
          name: sas-customer-provided-ca-certificates-29kdmk686c
        name: customer-provided-ca-certificates
      - emptyDir: {}
        name: tmp
      - emptyDir: {}
        name: shared-vol
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sas.com/certificate-file-format: jks
    sas.com/component-name: sas-report-execution
    sas.com/component-version: 2.12.3-20201209.1607496369529
    sas.com/kustomize-base: spring
    sas.com/pod-uses-liveness-probe: http
    sas.com/pod-uses-readiness-probe: http
    sas.com/pod-uses-startup-probe: http
    sas.com/version: 2.12.3
    sidecar.istio.io/proxyCPU: 15m
    sidecar.istio.io/proxyMemory: 115Mi
  labels:
    app.kubernetes.io/name: sas-report-execution
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
    sas.com/deployment-base: spring
    workload.sas.com/class: stateless
  name: sas-report-execution
  namespace: franceavv
spec:
  selector:
    matchExpressions: []
    matchLabels:
      app.kubernetes.io/name: sas-report-execution
      sas.com/deployment: sas-viya
  template:
    metadata:
      annotations:
        prometheus.io/path: /internal/metrics
        prometheus.io/port: "10445"
        prometheus.io/scheme: https
        prometheus.io/scrape: "true"
        sas.com/certificate-file-format: jks
        sas.com/component-name: sas-report-execution
        sas.com/component-version: 2.12.3-20201209.1607496369529
        sas.com/kustomize-base: spring
        sas.com/pod-uses-liveness-probe: http
        sas.com/pod-uses-readiness-probe: http
        sas.com/pod-uses-startup-probe: http
        sas.com/tls-enabled-ports: all
        sas.com/version: 2.12.3
        seccomp.security.alpha.kubernetes.io/pod: runtime/default
        sidecar.istio.io/proxyCPU: 15m
        sidecar.istio.io/proxyMemory: 115Mi
      labels:
        app: sas-report-execution
        app.kubernetes.io/name: sas-report-execution
        sas.com/deployment: sas-viya
        workload.sas.com/class: stateless
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: In
                values:
                - stateless
              matchFields: []
            weight: 100
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: NotIn
                values:
                - compute
                - cas
                - stateful
                - connect
              matchFields: []
            weight: 50
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.azure.com/mode
                operator: NotIn
                values:
                - system
              matchFields: []
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - sas-report-execution
              namespaces: []
              topologyKey: kubernetes.io/hostname
            weight: 100
          requiredDuringSchedulingIgnoredDuringExecution: []
      automountServiceAccountToken: false
      containers:
      - args: null
        command: null
        env:
        - name: SAS_K8S_DEPLOYMENT_NAME
          value: sas-report-execution
        - name: JAVA_OPTION_SERVER_PORT
        - name: MANAGEMENT_SERVER_PORT
          value: ${sas.${spring.application.name}.management.server.port:10445}
        - name: SAS_URL_reportData
          value: ${sas.url.service.scheme}://127.0.0.1:8080
        envFrom:
        - configMapRef:
            name: sas-java-config-t7t5thbgkd
        - configMapRef:
            name: sas-shared-config-49d8hthtb5
        - secretRef:
            name: sas-consul-client
        - configMapRef:
            name: sas-spring-management-config-d64bbkhb97
        - configMapRef:
            name: sas-java-tls-config-fch4777298
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-report-execution:2.12.3-20201209.1607496369529
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - sh
              - -c
              - sleep 5
        livenessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http-internal
            scheme: HTTPS
          periodSeconds: 10
        name: sas-report-execution
        ports:
        - containerPort: 10445
          name: http-internal
          protocol: TCP
        - containerPort: 8080
          name: reportdata
          protocol: TCP
        - containerPort: 35001
          name: datacache1
        - containerPort: 35002
          name: datacache2
        - containerPort: 35003
          name: datacache3
        - containerPort: 8081
          name: reportpackages
          protocol: TCP
        - containerPort: 35004
          name: pkgscache1
        - containerPort: 35005
          name: pkgscache2
        - containerPort: 35006
          name: pkgscache3
        readinessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/ready
            port: http-internal
            scheme: HTTPS
          periodSeconds: 10
        resources:
          limits:
            cpu: 2000m
            memory: 3Gi
          requests:
            cpu: 50m
            memory: 2Gi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add: []
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        startupProbe:
          failureThreshold: 180
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http-internal
            scheme: HTTPS
          initialDelaySeconds: 20
          periodSeconds: 10
        volumeDevices: []
        volumeMounts:
        - mountPath: /tmp
          name: tmp
        - mountPath: /opt/sas/viya/config/tmp
          name: tmp
        - mountPath: /security
          name: security
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/cacerts
          name: security
          subPath: cacerts
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/private
          name: security
          subPath: private
      hostAliases: []
      imagePullSecrets:
      - name: sas-image-pull-secrets-4m8cc729k8
      initContainers:
      - env:
        - name: KUBE_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: SAS_CERTFRAME_TOKEN_DIR
          value: /certframe-token
        - name: SAS_ADDITIONAL_CA_CERTIFICATES_DIR
          value: /customer-provided-ca-certificates
        envFrom:
        - configMapRef:
            name: sas-certframe-ingress-certificate-config-cmm2t44t88
        - configMapRef:
            name: sas-certframe-user-config-c4ch2c59m7
        - configMapRef:
            name: sas-certframe-java-config-gf4kt94898
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-certframe:3.9.0-20201203.1607016443086
        name: sas-certframe
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /certframe-token
          name: certframe-token
        - mountPath: /security
          name: security
        - mountPath: /customer-provided-ca-certificates
          name: customer-provided-ca-certificates
      readinessGates: []
      securityContext:
        runAsNonRoot: true
        supplementalGroups: []
        sysctls: []
      tolerations:
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateful
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateless
      volumes:
      - name: certframe-token
        secret:
          secretName: sas-certframe-token
      - emptyDir: {}
        name: security
      - configMap:
          name: sas-customer-provided-ca-certificates-29kdmk686c
        name: customer-provided-ca-certificates
      - emptyDir: {}
        name: tmp
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sas.com/certificate-file-format: pem
    sas.com/component-name: sas-report-renderer
    sas.com/component-version: 1.65.3-20201208.1607482529657
    sas.com/kustomize-base: golang
    sas.com/pod-uses-liveness-probe: http
    sas.com/pod-uses-readiness-probe: http
    sas.com/pod-uses-startup-probe: http
    sas.com/version: 1.65.3
    sidecar.istio.io/proxyCPU: 15m
    sidecar.istio.io/proxyMemory: 115Mi
  labels:
    app.kubernetes.io/name: sas-report-renderer
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
    sas.com/deployment-base: golang
    workload.sas.com/class: stateless
  name: sas-report-renderer
  namespace: franceavv
spec:
  selector:
    matchExpressions: []
    matchLabels:
      app.kubernetes.io/name: sas-report-renderer
      sas.com/deployment: sas-viya
  template:
    metadata:
      annotations:
        prometheus.io/path: /internal/metrics
        prometheus.io/port: "8080"
        prometheus.io/scheme: https
        prometheus.io/scrape: "true"
        sas.com/certificate-file-format: pem
        sas.com/component-name: sas-report-renderer
        sas.com/component-version: 1.65.3-20201208.1607482529657
        sas.com/kustomize-base: golang
        sas.com/pod-uses-liveness-probe: http
        sas.com/pod-uses-readiness-probe: http
        sas.com/pod-uses-startup-probe: http
        sas.com/tls-enabled-ports: all
        sas.com/version: 1.65.3
        seccomp.security.alpha.kubernetes.io/pod: runtime/default
        sidecar.istio.io/proxyCPU: 15m
        sidecar.istio.io/proxyMemory: 115Mi
      labels:
        app: sas-report-renderer
        app.kubernetes.io/name: sas-report-renderer
        sas.com/deployment: sas-viya
        workload.sas.com/class: stateless
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: In
                values:
                - stateless
              matchFields: []
            weight: 100
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: NotIn
                values:
                - compute
                - cas
                - stateful
                - connect
              matchFields: []
            weight: 50
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.azure.com/mode
                operator: NotIn
                values:
                - system
              matchFields: []
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - sas-report-renderer
              namespaces: []
              topologyKey: kubernetes.io/hostname
            weight: 100
          requiredDuringSchedulingIgnoredDuringExecution: []
      automountServiceAccountToken: false
      containers:
      - args: null
        command: null
        env:
        - name: SAS_K8S_DEPLOYMENT_NAME
          value: sas-report-renderer
        envFrom:
        - configMapRef:
            name: sas-go-config-7hc79bmf8m
        - configMapRef:
            name: sas-shared-config-49d8hthtb5
        - secretRef:
            name: sas-consul-client
        - configMapRef:
            name: sas-tls-config-99f79t29t5
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-report-renderer:1.65.3-20201208.1607482529657
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - sh
              - -c
              - sleep 5
        livenessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http
            scheme: HTTPS
          periodSeconds: 10
        name: sas-report-renderer
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/ready
            port: http
            scheme: HTTPS
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 750Mi
          requests:
            cpu: 100m
            memory: 410Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add: []
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        startupProbe:
          failureThreshold: 180
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http
            scheme: HTTPS
          periodSeconds: 10
        volumeDevices: []
        volumeMounts:
        - mountPath: /tmp
          name: tmp
        - mountPath: /security
          name: security
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/cacerts
          name: security
          subPath: cacerts
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/private
          name: security
          subPath: private
      hostAliases: []
      imagePullSecrets:
      - name: sas-image-pull-secrets-4m8cc729k8
      initContainers:
      - env:
        - name: KUBE_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: SAS_CERTFRAME_TOKEN_DIR
          value: /certframe-token
        - name: SAS_ADDITIONAL_CA_CERTIFICATES_DIR
          value: /customer-provided-ca-certificates
        envFrom:
        - configMapRef:
            name: sas-certframe-ingress-certificate-config-cmm2t44t88
        - configMapRef:
            name: sas-certframe-user-config-c4ch2c59m7
        - configMapRef:
            name: sas-certframe-config-ctgg29gf7t
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-certframe:3.9.0-20201203.1607016443086
        name: sas-certframe
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /certframe-token
          name: certframe-token
        - mountPath: /security
          name: security
        - mountPath: /customer-provided-ca-certificates
          name: customer-provided-ca-certificates
      readinessGates: []
      securityContext:
        runAsNonRoot: true
        supplementalGroups: []
        sysctls: []
      tolerations:
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateful
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateless
      volumes:
      - name: certframe-token
        secret:
          secretName: sas-certframe-token
      - emptyDir: {}
        name: security
      - configMap:
          name: sas-customer-provided-ca-certificates-29kdmk686c
        name: customer-provided-ca-certificates
      - emptyDir: {}
        name: tmp
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sas.com/certificate-file-format: jks
    sas.com/component-name: sas-report-services-group
    sas.com/component-version: 4.13.5-20201208.1607409510563
    sas.com/kustomize-base: spring
    sas.com/pod-uses-liveness-probe: http
    sas.com/pod-uses-readiness-probe: http
    sas.com/pod-uses-startup-probe: http
    sas.com/version: 4.13.5
    sidecar.istio.io/proxyCPU: 15m
    sidecar.istio.io/proxyMemory: 115Mi
  labels:
    app.kubernetes.io/name: sas-report-services-group
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
    sas.com/deployment-base: spring
    workload.sas.com/class: stateless
  name: sas-report-services-group
  namespace: franceavv
spec:
  selector:
    matchExpressions: []
    matchLabels:
      app.kubernetes.io/name: sas-report-services-group
      sas.com/deployment: sas-viya
  template:
    metadata:
      annotations:
        prometheus.io/path: /internal/metrics
        prometheus.io/port: "10445"
        prometheus.io/scheme: https
        prometheus.io/scrape: "true"
        sas.com/certificate-file-format: jks
        sas.com/component-name: sas-report-services-group
        sas.com/component-version: 4.13.5-20201208.1607409510563
        sas.com/kustomize-base: spring
        sas.com/pod-uses-liveness-probe: http
        sas.com/pod-uses-readiness-probe: http
        sas.com/pod-uses-startup-probe: http
        sas.com/tls-enabled-ports: all
        sas.com/version: 4.13.5
        seccomp.security.alpha.kubernetes.io/pod: runtime/default
        sidecar.istio.io/proxyCPU: 15m
        sidecar.istio.io/proxyMemory: 115Mi
      labels:
        app: sas-report-services-group
        app.kubernetes.io/name: sas-report-services-group
        sas.com/deployment: sas-viya
        workload.sas.com/class: stateless
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: In
                values:
                - stateless
              matchFields: []
            weight: 100
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: NotIn
                values:
                - compute
                - cas
                - stateful
                - connect
              matchFields: []
            weight: 50
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.azure.com/mode
                operator: NotIn
                values:
                - system
              matchFields: []
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - sas-report-services-group
              namespaces: []
              topologyKey: kubernetes.io/hostname
            weight: 100
          requiredDuringSchedulingIgnoredDuringExecution: []
      automountServiceAccountToken: false
      containers:
      - args: null
        command: null
        env:
        - name: SAS_K8S_DEPLOYMENT_NAME
          value: sas-report-services-group
        - name: JAVA_OPTION_SERVER_PORT
        - name: MANAGEMENT_SERVER_PORT
          value: ${sas.${spring.application.name}.management.server.port:10445}
        envFrom:
        - configMapRef:
            name: sas-java-config-t7t5thbgkd
        - configMapRef:
            name: sas-shared-config-49d8hthtb5
        - secretRef:
            name: sas-consul-client
        - configMapRef:
            name: sas-spring-management-config-d64bbkhb97
        - configMapRef:
            name: sas-java-tls-config-fch4777298
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-report-services-group:4.13.5-20201208.1607409510563
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - sh
              - -c
              - sleep 5
        livenessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http-internal
            scheme: HTTPS
          periodSeconds: 10
        name: sas-report-services-group
        ports:
        - containerPort: 10445
          name: http-internal
          protocol: TCP
        - containerPort: 8080
          name: reports
          protocol: TCP
        - containerPort: 8081
          name: reportalerts
          protocol: TCP
        - containerPort: 8082
          name: reportimages
          protocol: TCP
        - containerPort: 8083
          name: reporttemplates
          protocol: TCP
        - containerPort: 8084
          name: reporttransform
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/ready
            port: http-internal
            scheme: HTTPS
          periodSeconds: 10
        resources:
          limits:
            cpu: 2000m
            memory: 2Gi
          requests:
            cpu: 50m
            memory: 1536M
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add: []
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        startupProbe:
          failureThreshold: 180
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http-internal
            scheme: HTTPS
          initialDelaySeconds: 20
          periodSeconds: 10
        volumeDevices: []
        volumeMounts:
        - mountPath: /tmp
          name: tmp
        - mountPath: /opt/sas/viya/config/tmp
          name: tmp
        - mountPath: /security
          name: security
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/cacerts
          name: security
          subPath: cacerts
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/private
          name: security
          subPath: private
      hostAliases: []
      imagePullSecrets:
      - name: sas-image-pull-secrets-4m8cc729k8
      initContainers:
      - env:
        - name: KUBE_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: SAS_CERTFRAME_TOKEN_DIR
          value: /certframe-token
        - name: SAS_ADDITIONAL_CA_CERTIFICATES_DIR
          value: /customer-provided-ca-certificates
        envFrom:
        - configMapRef:
            name: sas-certframe-ingress-certificate-config-cmm2t44t88
        - configMapRef:
            name: sas-certframe-user-config-c4ch2c59m7
        - configMapRef:
            name: sas-certframe-java-config-gf4kt94898
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-certframe:3.9.0-20201203.1607016443086
        name: sas-certframe
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /certframe-token
          name: certframe-token
        - mountPath: /security
          name: security
        - mountPath: /customer-provided-ca-certificates
          name: customer-provided-ca-certificates
      readinessGates: []
      securityContext:
        runAsNonRoot: true
        supplementalGroups: []
        sysctls: []
      tolerations:
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateful
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateless
      volumes:
      - name: certframe-token
        secret:
          secretName: sas-certframe-token
      - emptyDir: {}
        name: security
      - configMap:
          name: sas-customer-provided-ca-certificates-29kdmk686c
        name: customer-provided-ca-certificates
      - emptyDir: {}
        name: tmp
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sas.com/certificate-file-format: jks
    sas.com/component-name: sas-scheduler
    sas.com/component-version: 3.26.11-20201204.1607057236019
    sas.com/kustomize-base: spring
    sas.com/pod-uses-liveness-probe: http
    sas.com/pod-uses-readiness-probe: http
    sas.com/pod-uses-startup-probe: http
    sas.com/version: 3.26.11
    sidecar.istio.io/proxyCPU: 15m
    sidecar.istio.io/proxyMemory: 115Mi
  labels:
    app.kubernetes.io/name: sas-scheduler
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
    sas.com/deployment-base: spring
    workload.sas.com/class: stateless
  name: sas-scheduler
  namespace: franceavv
spec:
  selector:
    matchExpressions: []
    matchLabels:
      app.kubernetes.io/name: sas-scheduler
      sas.com/deployment: sas-viya
  template:
    metadata:
      annotations:
        prometheus.io/path: /internal/metrics
        prometheus.io/port: "10445"
        prometheus.io/scheme: https
        prometheus.io/scrape: "true"
        sas.com/certificate-file-format: jks
        sas.com/component-name: sas-scheduler
        sas.com/component-version: 3.26.11-20201204.1607057236019
        sas.com/kustomize-base: spring
        sas.com/pod-uses-liveness-probe: http
        sas.com/pod-uses-readiness-probe: http
        sas.com/pod-uses-startup-probe: http
        sas.com/tls-enabled-ports: all
        sas.com/version: 3.26.11
        seccomp.security.alpha.kubernetes.io/pod: runtime/default
        sidecar.istio.io/proxyCPU: 15m
        sidecar.istio.io/proxyMemory: 115Mi
      labels:
        app: sas-scheduler
        app.kubernetes.io/name: sas-scheduler
        sas.com/deployment: sas-viya
        workload.sas.com/class: stateless
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: In
                values:
                - stateless
              matchFields: []
            weight: 100
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: NotIn
                values:
                - compute
                - cas
                - stateful
                - connect
              matchFields: []
            weight: 50
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.azure.com/mode
                operator: NotIn
                values:
                - system
              matchFields: []
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - sas-scheduler
              namespaces: []
              topologyKey: kubernetes.io/hostname
            weight: 100
          requiredDuringSchedulingIgnoredDuringExecution: []
      automountServiceAccountToken: false
      containers:
      - args: null
        command: null
        env:
        - name: SAS_K8S_DEPLOYMENT_NAME
          value: sas-scheduler
        envFrom:
        - configMapRef:
            name: sas-java-config-t7t5thbgkd
        - configMapRef:
            name: sas-shared-config-49d8hthtb5
        - secretRef:
            name: sas-consul-client
        - configMapRef:
            name: sas-spring-management-config-d64bbkhb97
        - configMapRef:
            name: sas-java-tls-config-fch4777298
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-scheduler:3.26.11-20201204.1607057236019
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - sh
              - -c
              - sleep 5
        livenessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http-internal
            scheme: HTTPS
          periodSeconds: 10
        name: sas-scheduler
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        - containerPort: 10445
          name: http-internal
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/ready
            port: http-internal
            scheme: HTTPS
          periodSeconds: 10
        resources:
          limits:
            cpu: 2000m
            memory: 1Gi
          requests:
            cpu: 50m
            memory: 650M
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add: []
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        startupProbe:
          failureThreshold: 180
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http-internal
            scheme: HTTPS
          initialDelaySeconds: 20
          periodSeconds: 10
        volumeDevices: []
        volumeMounts:
        - mountPath: /tmp
          name: tmp
        - mountPath: /opt/sas/viya/config/tmp
          name: tmp
        - mountPath: /security
          name: security
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/cacerts
          name: security
          subPath: cacerts
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/private
          name: security
          subPath: private
      hostAliases: []
      imagePullSecrets:
      - name: sas-image-pull-secrets-4m8cc729k8
      initContainers:
      - env:
        - name: KUBE_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: SAS_CERTFRAME_TOKEN_DIR
          value: /certframe-token
        - name: SAS_ADDITIONAL_CA_CERTIFICATES_DIR
          value: /customer-provided-ca-certificates
        envFrom:
        - configMapRef:
            name: sas-certframe-ingress-certificate-config-cmm2t44t88
        - configMapRef:
            name: sas-certframe-user-config-c4ch2c59m7
        - configMapRef:
            name: sas-certframe-java-config-gf4kt94898
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-certframe:3.9.0-20201203.1607016443086
        name: sas-certframe
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /certframe-token
          name: certframe-token
        - mountPath: /security
          name: security
        - mountPath: /customer-provided-ca-certificates
          name: customer-provided-ca-certificates
      readinessGates: []
      securityContext:
        runAsNonRoot: true
        supplementalGroups: []
        sysctls: []
      tolerations:
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateful
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateless
      volumes:
      - name: certframe-token
        secret:
          secretName: sas-certframe-token
      - emptyDir: {}
        name: security
      - configMap:
          name: sas-customer-provided-ca-certificates-29kdmk686c
        name: customer-provided-ca-certificates
      - emptyDir: {}
        name: tmp
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sas.com/certificate-file-format: pem
    sas.com/component-name: sas-score-definitions
    sas.com/component-version: 2.22.0-20201210.1607645547646
    sas.com/kustomize-base: golang
    sas.com/pod-uses-db-migrator: "true"
    sas.com/pod-uses-liveness-probe: http
    sas.com/pod-uses-readiness-probe: http
    sas.com/pod-uses-startup-probe: http
    sas.com/version: 2.22.0
    sidecar.istio.io/proxyCPU: 15m
    sidecar.istio.io/proxyMemory: 115Mi
  labels:
    app.kubernetes.io/name: sas-score-definitions
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
    sas.com/deployment-base: golang
    workload.sas.com/class: stateless
  name: sas-score-definitions
  namespace: franceavv
spec:
  selector:
    matchExpressions: []
    matchLabels:
      app.kubernetes.io/name: sas-score-definitions
      sas.com/deployment: sas-viya
  template:
    metadata:
      annotations:
        prometheus.io/path: /internal/metrics
        prometheus.io/port: "8080"
        prometheus.io/scheme: https
        prometheus.io/scrape: "true"
        sas.com/certificate-file-format: pem
        sas.com/component-name: sas-score-definitions
        sas.com/component-version: 2.22.0-20201210.1607645547646
        sas.com/kustomize-base: golang
        sas.com/pod-uses-liveness-probe: http
        sas.com/pod-uses-readiness-probe: http
        sas.com/pod-uses-startup-probe: http
        sas.com/tls-enabled-ports: all
        sas.com/version: 2.22.0
        seccomp.security.alpha.kubernetes.io/pod: runtime/default
        sidecar.istio.io/proxyCPU: 15m
        sidecar.istio.io/proxyMemory: 115Mi
      labels:
        app: sas-score-definitions
        app.kubernetes.io/name: sas-score-definitions
        sas.com/deployment: sas-viya
        workload.sas.com/class: stateless
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: In
                values:
                - stateless
              matchFields: []
            weight: 100
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: NotIn
                values:
                - compute
                - cas
                - stateful
                - connect
              matchFields: []
            weight: 50
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.azure.com/mode
                operator: NotIn
                values:
                - system
              matchFields: []
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - sas-score-definitions
              namespaces: []
              topologyKey: kubernetes.io/hostname
            weight: 100
          requiredDuringSchedulingIgnoredDuringExecution: []
      automountServiceAccountToken: false
      containers:
      - args: null
        command: null
        env:
        - name: SAS_K8S_DEPLOYMENT_NAME
          value: sas-score-definitions
        envFrom:
        - configMapRef:
            name: sas-go-config-7hc79bmf8m
        - configMapRef:
            name: sas-shared-config-49d8hthtb5
        - secretRef:
            name: sas-consul-client
        - configMapRef:
            name: sas-tls-config-99f79t29t5
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-score-definitions:2.22.0-20201210.1607645547646
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - sh
              - -c
              - sleep 5
        livenessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http
            scheme: HTTPS
          periodSeconds: 10
        name: sas-score-definitions
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/ready
            port: http
            scheme: HTTPS
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add: []
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        startupProbe:
          failureThreshold: 180
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http
            scheme: HTTPS
          periodSeconds: 10
        volumeDevices: []
        volumeMounts:
        - mountPath: /tmp
          name: tmp
        - mountPath: /security
          name: security
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/cacerts
          name: security
          subPath: cacerts
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/private
          name: security
          subPath: private
      hostAliases: []
      imagePullSecrets:
      - name: sas-image-pull-secrets-4m8cc729k8
      initContainers:
      - env:
        - name: KUBE_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: SAS_CERTFRAME_TOKEN_DIR
          value: /certframe-token
        - name: SAS_ADDITIONAL_CA_CERTIFICATES_DIR
          value: /customer-provided-ca-certificates
        envFrom:
        - configMapRef:
            name: sas-certframe-ingress-certificate-config-cmm2t44t88
        - configMapRef:
            name: sas-certframe-user-config-c4ch2c59m7
        - configMapRef:
            name: sas-certframe-config-ctgg29gf7t
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-certframe:3.9.0-20201203.1607016443086
        name: sas-certframe
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /certframe-token
          name: certframe-token
        - mountPath: /security
          name: security
        - mountPath: /customer-provided-ca-certificates
          name: customer-provided-ca-certificates
      - args:
        - cp -rf meta /data
        command:
        - /bin/sh
        - -c
        env: []
        envFrom: []
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-score-definitions:2.22.0-20201210.1607645547646
        imagePullPolicy: IfNotPresent
        name: hydrator
        ports: []
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 75m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add: []
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeDevices: []
        volumeMounts:
        - mountPath: /data
          name: shared-vol
      - args: null
        command: null
        env:
        - name: SSL_CERT_FILE
          value: /security/trustedcerts.pem
        - name: SAS_SERVICE_NAME
          value: sas-score-definitions
        envFrom:
        - configMapRef:
            name: sas-go-config-7hc79bmf8m
        - configMapRef:
            name: sas-shared-config-49d8hthtb5
        - configMapRef:
            name: sas-java-config-t7t5thbgkd
        - secretRef:
            name: sas-consul-client
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-db-migrator:1.1.0-20201209.1607523698073
        imagePullPolicy: IfNotPresent
        name: sas-db-migrator
        ports: []
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 100m
            memory: 90Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add: []
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeDevices: []
        volumeMounts:
        - mountPath: /security
          name: security
        - mountPath: /data
          name: shared-vol
      readinessGates: []
      securityContext:
        runAsNonRoot: true
        supplementalGroups: []
        sysctls: []
      tolerations:
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateful
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateless
      volumes:
      - name: certframe-token
        secret:
          secretName: sas-certframe-token
      - emptyDir: {}
        name: security
      - configMap:
          name: sas-customer-provided-ca-certificates-29kdmk686c
        name: customer-provided-ca-certificates
      - emptyDir: {}
        name: tmp
      - emptyDir: {}
        name: shared-vol
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sas.com/certificate-file-format: pem
    sas.com/component-name: sas-score-execution
    sas.com/component-version: 2.21.0-20201210.1607646388188
    sas.com/kustomize-base: golang
    sas.com/pod-uses-db-migrator: "true"
    sas.com/pod-uses-liveness-probe: http
    sas.com/pod-uses-readiness-probe: http
    sas.com/pod-uses-startup-probe: http
    sas.com/version: 2.21.0
    sidecar.istio.io/proxyCPU: 15m
    sidecar.istio.io/proxyMemory: 115Mi
  labels:
    app.kubernetes.io/name: sas-score-execution
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
    sas.com/deployment-base: golang
    workload.sas.com/class: stateless
  name: sas-score-execution
  namespace: franceavv
spec:
  selector:
    matchExpressions: []
    matchLabels:
      app.kubernetes.io/name: sas-score-execution
      sas.com/deployment: sas-viya
  template:
    metadata:
      annotations:
        prometheus.io/path: /internal/metrics
        prometheus.io/port: "8080"
        prometheus.io/scheme: https
        prometheus.io/scrape: "true"
        sas.com/certificate-file-format: pem
        sas.com/component-name: sas-score-execution
        sas.com/component-version: 2.21.0-20201210.1607646388188
        sas.com/kustomize-base: golang
        sas.com/pod-uses-liveness-probe: http
        sas.com/pod-uses-readiness-probe: http
        sas.com/pod-uses-startup-probe: http
        sas.com/tls-enabled-ports: all
        sas.com/version: 2.21.0
        seccomp.security.alpha.kubernetes.io/pod: runtime/default
        sidecar.istio.io/proxyCPU: 15m
        sidecar.istio.io/proxyMemory: 115Mi
      labels:
        app: sas-score-execution
        app.kubernetes.io/name: sas-score-execution
        sas.com/deployment: sas-viya
        workload.sas.com/class: stateless
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: In
                values:
                - stateless
              matchFields: []
            weight: 100
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: NotIn
                values:
                - compute
                - cas
                - stateful
                - connect
              matchFields: []
            weight: 50
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.azure.com/mode
                operator: NotIn
                values:
                - system
              matchFields: []
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - sas-score-execution
              namespaces: []
              topologyKey: kubernetes.io/hostname
            weight: 100
          requiredDuringSchedulingIgnoredDuringExecution: []
      automountServiceAccountToken: false
      containers:
      - args: null
        command: null
        env:
        - name: SAS_K8S_DEPLOYMENT_NAME
          value: sas-score-execution
        envFrom:
        - configMapRef:
            name: sas-go-config-7hc79bmf8m
        - configMapRef:
            name: sas-shared-config-49d8hthtb5
        - secretRef:
            name: sas-consul-client
        - configMapRef:
            name: sas-tls-config-99f79t29t5
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-score-execution:2.21.0-20201210.1607646388188
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - sh
              - -c
              - sleep 5
        livenessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http
            scheme: HTTPS
          periodSeconds: 10
        name: sas-score-execution
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/ready
            port: http
            scheme: HTTPS
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add: []
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        startupProbe:
          failureThreshold: 180
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http
            scheme: HTTPS
          periodSeconds: 10
        volumeDevices: []
        volumeMounts:
        - mountPath: /tmp
          name: tmp
        - mountPath: /security
          name: security
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/cacerts
          name: security
          subPath: cacerts
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/private
          name: security
          subPath: private
      hostAliases: []
      imagePullSecrets:
      - name: sas-image-pull-secrets-4m8cc729k8
      initContainers:
      - env:
        - name: KUBE_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: SAS_CERTFRAME_TOKEN_DIR
          value: /certframe-token
        - name: SAS_ADDITIONAL_CA_CERTIFICATES_DIR
          value: /customer-provided-ca-certificates
        envFrom:
        - configMapRef:
            name: sas-certframe-ingress-certificate-config-cmm2t44t88
        - configMapRef:
            name: sas-certframe-user-config-c4ch2c59m7
        - configMapRef:
            name: sas-certframe-config-ctgg29gf7t
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-certframe:3.9.0-20201203.1607016443086
        name: sas-certframe
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /certframe-token
          name: certframe-token
        - mountPath: /security
          name: security
        - mountPath: /customer-provided-ca-certificates
          name: customer-provided-ca-certificates
      - args:
        - cp -rf meta /data
        command:
        - /bin/sh
        - -c
        env: []
        envFrom: []
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-score-execution:2.21.0-20201210.1607646388188
        imagePullPolicy: IfNotPresent
        name: hydrator
        ports: []
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 75m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add: []
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeDevices: []
        volumeMounts:
        - mountPath: /data
          name: shared-vol
      - args: null
        command: null
        env:
        - name: SSL_CERT_FILE
          value: /security/trustedcerts.pem
        - name: SAS_SERVICE_NAME
          value: sas-score-execution
        envFrom:
        - configMapRef:
            name: sas-go-config-7hc79bmf8m
        - configMapRef:
            name: sas-shared-config-49d8hthtb5
        - configMapRef:
            name: sas-java-config-t7t5thbgkd
        - secretRef:
            name: sas-consul-client
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-db-migrator:1.1.0-20201209.1607523698073
        imagePullPolicy: IfNotPresent
        name: sas-db-migrator
        ports: []
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 100m
            memory: 90Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add: []
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeDevices: []
        volumeMounts:
        - mountPath: /security
          name: security
        - mountPath: /data
          name: shared-vol
      readinessGates: []
      securityContext:
        runAsNonRoot: true
        supplementalGroups: []
        sysctls: []
      tolerations:
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateful
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateless
      volumes:
      - name: certframe-token
        secret:
          secretName: sas-certframe-token
      - emptyDir: {}
        name: security
      - configMap:
          name: sas-customer-provided-ca-certificates-29kdmk686c
        name: customer-provided-ca-certificates
      - emptyDir: {}
        name: tmp
      - emptyDir: {}
        name: shared-vol
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sas.com/certificate-file-format: jks
    sas.com/component-name: sas-search
    sas.com/component-version: 2.29.6-20201204.1607057876100
    sas.com/kustomize-base: spring
    sas.com/pod-uses-liveness-probe: http
    sas.com/pod-uses-readiness-probe: http
    sas.com/pod-uses-startup-probe: http
    sas.com/version: 2.29.6
    sidecar.istio.io/proxyCPU: 15m
    sidecar.istio.io/proxyMemory: 115Mi
  labels:
    app.kubernetes.io/name: sas-search
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
    sas.com/deployment-base: spring
    workload.sas.com/class: stateless
  name: sas-search
  namespace: franceavv
spec:
  selector:
    matchExpressions: []
    matchLabels:
      app.kubernetes.io/name: sas-search
      sas.com/deployment: sas-viya
  template:
    metadata:
      annotations:
        prometheus.io/path: /internal/metrics
        prometheus.io/port: "10445"
        prometheus.io/scheme: https
        prometheus.io/scrape: "true"
        sas.com/certificate-file-format: jks
        sas.com/component-name: sas-search
        sas.com/component-version: 2.29.6-20201204.1607057876100
        sas.com/kustomize-base: spring
        sas.com/pod-uses-liveness-probe: http
        sas.com/pod-uses-readiness-probe: http
        sas.com/pod-uses-startup-probe: http
        sas.com/tls-enabled-ports: all
        sas.com/version: 2.29.6
        seccomp.security.alpha.kubernetes.io/pod: runtime/default
        sidecar.istio.io/proxyCPU: 15m
        sidecar.istio.io/proxyMemory: 115Mi
      labels:
        app: sas-search
        app.kubernetes.io/name: sas-search
        sas.com/deployment: sas-viya
        workload.sas.com/class: stateless
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: In
                values:
                - stateless
              matchFields: []
            weight: 100
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: NotIn
                values:
                - compute
                - cas
                - stateful
                - connect
              matchFields: []
            weight: 50
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.azure.com/mode
                operator: NotIn
                values:
                - system
              matchFields: []
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - sas-search
              namespaces: []
              topologyKey: kubernetes.io/hostname
            weight: 100
          requiredDuringSchedulingIgnoredDuringExecution: []
      automountServiceAccountToken: false
      containers:
      - args: null
        command: null
        env:
        - name: SAS_K8S_DEPLOYMENT_NAME
          value: sas-search
        - name: JAVA_OPTION_SERVER_PORT
        - name: MANAGEMENT_SERVER_PORT
          value: ${sas.${spring.application.name}.management.server.port:10445}
        envFrom:
        - configMapRef:
            name: sas-java-config-t7t5thbgkd
        - configMapRef:
            name: sas-shared-config-49d8hthtb5
        - secretRef:
            name: sas-consul-client
        - configMapRef:
            name: sas-spring-management-config-d64bbkhb97
        - configMapRef:
            name: sas-java-tls-config-fch4777298
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-search:2.29.6-20201204.1607057876100
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - sh
              - -c
              - sleep 5
        livenessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http-internal
            scheme: HTTPS
          periodSeconds: 10
        name: sas-search
        ports:
        - containerPort: 10445
          name: http-internal
          protocol: TCP
        - containerPort: 8081
          name: search
          protocol: TCP
        - containerPort: 8082
          name: searchindex
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/ready
            port: http-internal
            scheme: HTTPS
          periodSeconds: 10
        resources:
          limits:
            cpu: 2000m
            memory: 1Gi
          requests:
            cpu: 50m
            memory: 650M
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add: []
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        startupProbe:
          failureThreshold: 180
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http-internal
            scheme: HTTPS
          initialDelaySeconds: 20
          periodSeconds: 10
        volumeDevices: []
        volumeMounts:
        - mountPath: /tmp
          name: tmp
        - mountPath: /opt/sas/viya/config/tmp
          name: tmp
        - mountPath: /security
          name: security
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/cacerts
          name: security
          subPath: cacerts
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/private
          name: security
          subPath: private
      hostAliases: []
      imagePullSecrets:
      - name: sas-image-pull-secrets-4m8cc729k8
      initContainers:
      - env:
        - name: KUBE_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: SAS_CERTFRAME_TOKEN_DIR
          value: /certframe-token
        - name: SAS_ADDITIONAL_CA_CERTIFICATES_DIR
          value: /customer-provided-ca-certificates
        envFrom:
        - configMapRef:
            name: sas-certframe-ingress-certificate-config-cmm2t44t88
        - configMapRef:
            name: sas-certframe-user-config-c4ch2c59m7
        - configMapRef:
            name: sas-certframe-java-config-gf4kt94898
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-certframe:3.9.0-20201203.1607016443086
        name: sas-certframe
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /certframe-token
          name: certframe-token
        - mountPath: /security
          name: security
        - mountPath: /customer-provided-ca-certificates
          name: customer-provided-ca-certificates
      readinessGates: []
      securityContext:
        runAsNonRoot: true
        supplementalGroups: []
        sysctls: []
      tolerations:
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateful
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateless
      volumes:
      - name: certframe-token
        secret:
          secretName: sas-certframe-token
      - emptyDir: {}
        name: security
      - configMap:
          name: sas-customer-provided-ca-certificates-29kdmk686c
        name: customer-provided-ca-certificates
      - emptyDir: {}
        name: tmp
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sas.com/certificate-file-format: pem
    sas.com/component-name: sas-sentiment-execution-provider
    sas.com/component-version: 6.2.0-20201202.1606938881164
    sas.com/kustomize-base: golang
    sas.com/pod-uses-liveness-probe: http
    sas.com/pod-uses-readiness-probe: http
    sas.com/pod-uses-startup-probe: http
    sas.com/version: 6.2.0
    sidecar.istio.io/proxyCPU: 15m
    sidecar.istio.io/proxyMemory: 115Mi
  labels:
    app.kubernetes.io/name: sas-sentiment-execution-provider
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
    sas.com/deployment-base: golang
    workload.sas.com/class: stateless
  name: sas-sentiment-execution-provider
  namespace: franceavv
spec:
  selector:
    matchExpressions: []
    matchLabels:
      app.kubernetes.io/name: sas-sentiment-execution-provider
      sas.com/deployment: sas-viya
  template:
    metadata:
      annotations:
        prometheus.io/path: /internal/metrics
        prometheus.io/port: "8080"
        prometheus.io/scheme: https
        prometheus.io/scrape: "true"
        sas.com/certificate-file-format: pem
        sas.com/component-name: sas-sentiment-execution-provider
        sas.com/component-version: 6.2.0-20201202.1606938881164
        sas.com/kustomize-base: golang
        sas.com/pod-uses-liveness-probe: http
        sas.com/pod-uses-readiness-probe: http
        sas.com/pod-uses-startup-probe: http
        sas.com/tls-enabled-ports: all
        sas.com/version: 6.2.0
        seccomp.security.alpha.kubernetes.io/pod: runtime/default
        sidecar.istio.io/proxyCPU: 15m
        sidecar.istio.io/proxyMemory: 115Mi
      labels:
        app: sas-sentiment-execution-provider
        app.kubernetes.io/name: sas-sentiment-execution-provider
        sas.com/deployment: sas-viya
        workload.sas.com/class: stateless
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: In
                values:
                - stateless
              matchFields: []
            weight: 100
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: NotIn
                values:
                - compute
                - cas
                - stateful
                - connect
              matchFields: []
            weight: 50
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.azure.com/mode
                operator: NotIn
                values:
                - system
              matchFields: []
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - sas-sentiment-execution-provider
              namespaces: []
              topologyKey: kubernetes.io/hostname
            weight: 100
          requiredDuringSchedulingIgnoredDuringExecution: []
      automountServiceAccountToken: false
      containers:
      - args: null
        command: null
        env:
        - name: SAS_K8S_DEPLOYMENT_NAME
          value: sas-sentiment-execution-provider
        envFrom:
        - configMapRef:
            name: sas-go-config-7hc79bmf8m
        - configMapRef:
            name: sas-shared-config-49d8hthtb5
        - secretRef:
            name: sas-consul-client
        - configMapRef:
            name: sas-tls-config-99f79t29t5
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-sentiment-execution-provider:6.2.0-20201202.1606938881164
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - sh
              - -c
              - sleep 5
        livenessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http
            scheme: HTTPS
          periodSeconds: 10
        name: sas-sentiment-execution-provider
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/ready
            port: http
            scheme: HTTPS
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add: []
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        startupProbe:
          failureThreshold: 180
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http
            scheme: HTTPS
          periodSeconds: 10
        volumeDevices: []
        volumeMounts:
        - mountPath: /tmp
          name: tmp
        - mountPath: /security
          name: security
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/cacerts
          name: security
          subPath: cacerts
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/private
          name: security
          subPath: private
      hostAliases: []
      imagePullSecrets:
      - name: sas-image-pull-secrets-4m8cc729k8
      initContainers:
      - env:
        - name: KUBE_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: SAS_CERTFRAME_TOKEN_DIR
          value: /certframe-token
        - name: SAS_ADDITIONAL_CA_CERTIFICATES_DIR
          value: /customer-provided-ca-certificates
        envFrom:
        - configMapRef:
            name: sas-certframe-ingress-certificate-config-cmm2t44t88
        - configMapRef:
            name: sas-certframe-user-config-c4ch2c59m7
        - configMapRef:
            name: sas-certframe-config-ctgg29gf7t
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-certframe:3.9.0-20201203.1607016443086
        name: sas-certframe
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /certframe-token
          name: certframe-token
        - mountPath: /security
          name: security
        - mountPath: /customer-provided-ca-certificates
          name: customer-provided-ca-certificates
      readinessGates: []
      securityContext:
        runAsNonRoot: true
        supplementalGroups: []
        sysctls: []
      tolerations:
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateful
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateless
      volumes:
      - name: certframe-token
        secret:
          secretName: sas-certframe-token
      - emptyDir: {}
        name: security
      - configMap:
          name: sas-customer-provided-ca-certificates-29kdmk686c
        name: customer-provided-ca-certificates
      - emptyDir: {}
        name: tmp
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sas.com/certificate-file-format: jks
    sas.com/component-name: sas-studio-app
    sas.com/component-version: 6.112.11-20201210.1607627608398
    sas.com/kustomize-base: spring
    sas.com/pod-uses-liveness-probe: http
    sas.com/pod-uses-readiness-probe: http
    sas.com/pod-uses-startup-probe: http
    sas.com/version: 6.112.11
    sidecar.istio.io/proxyCPU: 15m
    sidecar.istio.io/proxyMemory: 115Mi
  labels:
    app.kubernetes.io/name: sas-studio-app
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
    sas.com/deployment-base: spring
    workload.sas.com/class: stateless
  name: sas-studio-app
  namespace: franceavv
spec:
  selector:
    matchExpressions: []
    matchLabels:
      app.kubernetes.io/name: sas-studio-app
      sas.com/deployment: sas-viya
  template:
    metadata:
      annotations:
        prometheus.io/path: /internal/metrics
        prometheus.io/port: "10445"
        prometheus.io/scheme: https
        prometheus.io/scrape: "true"
        sas.com/certificate-file-format: jks
        sas.com/component-name: sas-studio-app
        sas.com/component-version: 6.112.11-20201210.1607627608398
        sas.com/kustomize-base: spring
        sas.com/pod-uses-liveness-probe: http
        sas.com/pod-uses-readiness-probe: http
        sas.com/pod-uses-startup-probe: http
        sas.com/tls-enabled-ports: all
        sas.com/version: 6.112.11
        seccomp.security.alpha.kubernetes.io/pod: runtime/default
        sidecar.istio.io/proxyCPU: 15m
        sidecar.istio.io/proxyMemory: 115Mi
      labels:
        app: sas-studio-app
        app.kubernetes.io/name: sas-studio-app
        sas.com/deployment: sas-viya
        workload.sas.com/class: stateless
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: In
                values:
                - stateless
              matchFields: []
            weight: 100
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: NotIn
                values:
                - compute
                - cas
                - stateful
                - connect
              matchFields: []
            weight: 50
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.azure.com/mode
                operator: NotIn
                values:
                - system
              matchFields: []
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - sas-studio-app
              namespaces: []
              topologyKey: kubernetes.io/hostname
            weight: 100
          requiredDuringSchedulingIgnoredDuringExecution: []
      automountServiceAccountToken: false
      containers:
      - args: null
        command: null
        env:
        - name: SAS_K8S_DEPLOYMENT_NAME
          value: sas-studio-app
        - name: SAS_CADENCE_NAME
          valueFrom:
            configMapKeyRef:
              key: SAS_CADENCE_NAME
              name: sas-deployment-metadata-t4927tg597
        - name: SAS_CADENCE_VERSION
          valueFrom:
            configMapKeyRef:
              key: SAS_CADENCE_VERSION
              name: sas-deployment-metadata-t4927tg597
        - name: SAS_CADENCE_RELEASE
          valueFrom:
            configMapKeyRef:
              key: SAS_CADENCE_RELEASE
              name: sas-deployment-metadata-t4927tg597
        - name: JAVA_OPTION_XMX
          value: -Xmx512m
        envFrom:
        - configMapRef:
            name: sas-java-config-t7t5thbgkd
        - configMapRef:
            name: sas-shared-config-49d8hthtb5
        - secretRef:
            name: sas-consul-client
        - configMapRef:
            name: sas-spring-management-config-d64bbkhb97
        - configMapRef:
            name: sas-java-tls-config-fch4777298
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-studio-app:6.112.11-20201210.1607627608398
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - sh
              - -c
              - sleep 5
        livenessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http-internal
            scheme: HTTPS
          periodSeconds: 10
        name: sas-studio-app
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        - containerPort: 10445
          name: http-internal
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/ready
            port: http-internal
            scheme: HTTPS
          periodSeconds: 10
        resources:
          limits:
            cpu: 2000m
            memory: 1Gi
          requests:
            cpu: 50m
            memory: 650M
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add: []
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        startupProbe:
          failureThreshold: 180
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http-internal
            scheme: HTTPS
          initialDelaySeconds: 20
          periodSeconds: 10
        volumeDevices: []
        volumeMounts:
        - mountPath: /tmp
          name: tmp
        - mountPath: /opt/sas/viya/config/tmp
          name: tmp
        - mountPath: /security
          name: security
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/cacerts
          name: security
          subPath: cacerts
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/private
          name: security
          subPath: private
      hostAliases: []
      imagePullSecrets:
      - name: sas-image-pull-secrets-4m8cc729k8
      initContainers:
      - env:
        - name: KUBE_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: SAS_CERTFRAME_TOKEN_DIR
          value: /certframe-token
        - name: SAS_ADDITIONAL_CA_CERTIFICATES_DIR
          value: /customer-provided-ca-certificates
        envFrom:
        - configMapRef:
            name: sas-certframe-ingress-certificate-config-cmm2t44t88
        - configMapRef:
            name: sas-certframe-user-config-c4ch2c59m7
        - configMapRef:
            name: sas-certframe-java-config-gf4kt94898
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-certframe:3.9.0-20201203.1607016443086
        name: sas-certframe
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /certframe-token
          name: certframe-token
        - mountPath: /security
          name: security
        - mountPath: /customer-provided-ca-certificates
          name: customer-provided-ca-certificates
      readinessGates: []
      securityContext:
        runAsNonRoot: true
        supplementalGroups: []
        sysctls: []
      tolerations:
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateful
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateless
      volumes:
      - name: certframe-token
        secret:
          secretName: sas-certframe-token
      - emptyDir: {}
        name: security
      - configMap:
          name: sas-customer-provided-ca-certificates-29kdmk686c
        name: customer-provided-ca-certificates
      - emptyDir: {}
        name: tmp
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sas.com/certificate-file-format: jks
    sas.com/component-name: sas-subject-contacts
    sas.com/component-version: 0.14.14-20201210.1607643779745
    sas.com/kustomize-base: spring
    sas.com/pod-uses-liveness-probe: http
    sas.com/pod-uses-readiness-probe: http
    sas.com/pod-uses-startup-probe: http
    sas.com/version: 0.14.14
    sidecar.istio.io/proxyCPU: 15m
    sidecar.istio.io/proxyMemory: 115Mi
  labels:
    app.kubernetes.io/name: sas-subject-contacts
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
    sas.com/deployment-base: spring
    workload.sas.com/class: stateless
  name: sas-subject-contacts
  namespace: franceavv
spec:
  selector:
    matchExpressions: []
    matchLabels:
      app.kubernetes.io/name: sas-subject-contacts
      sas.com/deployment: sas-viya
  template:
    metadata:
      annotations:
        prometheus.io/path: /internal/metrics
        prometheus.io/port: "10445"
        prometheus.io/scheme: https
        prometheus.io/scrape: "true"
        sas.com/certificate-file-format: jks
        sas.com/component-name: sas-subject-contacts
        sas.com/component-version: 0.14.14-20201210.1607643779745
        sas.com/kustomize-base: spring
        sas.com/pod-uses-liveness-probe: http
        sas.com/pod-uses-readiness-probe: http
        sas.com/pod-uses-startup-probe: http
        sas.com/tls-enabled-ports: all
        sas.com/version: 0.14.14
        seccomp.security.alpha.kubernetes.io/pod: runtime/default
        sidecar.istio.io/proxyCPU: 15m
        sidecar.istio.io/proxyMemory: 115Mi
      labels:
        app: sas-subject-contacts
        app.kubernetes.io/name: sas-subject-contacts
        sas.com/deployment: sas-viya
        workload.sas.com/class: stateless
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: In
                values:
                - stateless
              matchFields: []
            weight: 100
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: NotIn
                values:
                - compute
                - cas
                - stateful
                - connect
              matchFields: []
            weight: 50
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.azure.com/mode
                operator: NotIn
                values:
                - system
              matchFields: []
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - sas-subject-contacts
              namespaces: []
              topologyKey: kubernetes.io/hostname
            weight: 100
          requiredDuringSchedulingIgnoredDuringExecution: []
      automountServiceAccountToken: false
      containers:
      - args: null
        command: null
        env:
        - name: SAS_K8S_DEPLOYMENT_NAME
          value: sas-subject-contacts
        envFrom:
        - configMapRef:
            name: sas-java-config-t7t5thbgkd
        - configMapRef:
            name: sas-shared-config-49d8hthtb5
        - secretRef:
            name: sas-consul-client
        - configMapRef:
            name: sas-spring-management-config-d64bbkhb97
        - configMapRef:
            name: sas-java-tls-config-fch4777298
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-subject-contacts:0.14.14-20201210.1607643779745
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - sh
              - -c
              - sleep 5
        livenessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http-internal
            scheme: HTTPS
          periodSeconds: 10
        name: sas-subject-contacts
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        - containerPort: 10445
          name: http-internal
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/ready
            port: http-internal
            scheme: HTTPS
          periodSeconds: 10
        resources:
          limits:
            cpu: 2000m
            memory: 1Gi
          requests:
            cpu: 50m
            memory: 650M
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add: []
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        startupProbe:
          failureThreshold: 180
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http-internal
            scheme: HTTPS
          initialDelaySeconds: 20
          periodSeconds: 10
        volumeDevices: []
        volumeMounts:
        - mountPath: /tmp
          name: tmp
        - mountPath: /opt/sas/viya/config/tmp
          name: tmp
        - mountPath: /security
          name: security
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/cacerts
          name: security
          subPath: cacerts
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/private
          name: security
          subPath: private
      hostAliases: []
      imagePullSecrets:
      - name: sas-image-pull-secrets-4m8cc729k8
      initContainers:
      - env:
        - name: KUBE_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: SAS_CERTFRAME_TOKEN_DIR
          value: /certframe-token
        - name: SAS_ADDITIONAL_CA_CERTIFICATES_DIR
          value: /customer-provided-ca-certificates
        envFrom:
        - configMapRef:
            name: sas-certframe-ingress-certificate-config-cmm2t44t88
        - configMapRef:
            name: sas-certframe-user-config-c4ch2c59m7
        - configMapRef:
            name: sas-certframe-java-config-gf4kt94898
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-certframe:3.9.0-20201203.1607016443086
        name: sas-certframe
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /certframe-token
          name: certframe-token
        - mountPath: /security
          name: security
        - mountPath: /customer-provided-ca-certificates
          name: customer-provided-ca-certificates
      readinessGates: []
      securityContext:
        runAsNonRoot: true
        supplementalGroups: []
        sysctls: []
      tolerations:
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateful
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateless
      volumes:
      - name: certframe-token
        secret:
          secretName: sas-certframe-token
      - emptyDir: {}
        name: security
      - configMap:
          name: sas-customer-provided-ca-certificates-29kdmk686c
        name: customer-provided-ca-certificates
      - emptyDir: {}
        name: tmp
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sas.com/certificate-file-format: jks
    sas.com/component-name: sas-templates
    sas.com/component-version: 1.24.12-20201204.1607058477854
    sas.com/kustomize-base: spring
    sas.com/pod-uses-liveness-probe: http
    sas.com/pod-uses-readiness-probe: http
    sas.com/pod-uses-startup-probe: http
    sas.com/version: 1.24.12
    sidecar.istio.io/proxyCPU: 15m
    sidecar.istio.io/proxyMemory: 115Mi
  labels:
    app.kubernetes.io/name: sas-templates
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
    sas.com/deployment-base: spring
    workload.sas.com/class: stateless
  name: sas-templates
  namespace: franceavv
spec:
  selector:
    matchExpressions: []
    matchLabels:
      app.kubernetes.io/name: sas-templates
      sas.com/deployment: sas-viya
  template:
    metadata:
      annotations:
        prometheus.io/path: /internal/metrics
        prometheus.io/port: "10445"
        prometheus.io/scheme: https
        prometheus.io/scrape: "true"
        sas.com/certificate-file-format: jks
        sas.com/component-name: sas-templates
        sas.com/component-version: 1.24.12-20201204.1607058477854
        sas.com/kustomize-base: spring
        sas.com/pod-uses-liveness-probe: http
        sas.com/pod-uses-readiness-probe: http
        sas.com/pod-uses-startup-probe: http
        sas.com/tls-enabled-ports: all
        sas.com/version: 1.24.12
        seccomp.security.alpha.kubernetes.io/pod: runtime/default
        sidecar.istio.io/proxyCPU: 15m
        sidecar.istio.io/proxyMemory: 115Mi
      labels:
        app: sas-templates
        app.kubernetes.io/name: sas-templates
        sas.com/deployment: sas-viya
        workload.sas.com/class: stateless
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: In
                values:
                - stateless
              matchFields: []
            weight: 100
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: NotIn
                values:
                - compute
                - cas
                - stateful
                - connect
              matchFields: []
            weight: 50
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.azure.com/mode
                operator: NotIn
                values:
                - system
              matchFields: []
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - sas-templates
              namespaces: []
              topologyKey: kubernetes.io/hostname
            weight: 100
          requiredDuringSchedulingIgnoredDuringExecution: []
      automountServiceAccountToken: false
      containers:
      - args: null
        command: null
        env:
        - name: SAS_K8S_DEPLOYMENT_NAME
          value: sas-templates
        envFrom:
        - configMapRef:
            name: sas-java-config-t7t5thbgkd
        - configMapRef:
            name: sas-shared-config-49d8hthtb5
        - secretRef:
            name: sas-consul-client
        - configMapRef:
            name: sas-spring-management-config-d64bbkhb97
        - configMapRef:
            name: sas-java-tls-config-fch4777298
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-templates:1.24.12-20201204.1607058477854
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - sh
              - -c
              - sleep 5
        livenessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http-internal
            scheme: HTTPS
          periodSeconds: 10
        name: sas-templates
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        - containerPort: 10445
          name: http-internal
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/ready
            port: http-internal
            scheme: HTTPS
          periodSeconds: 10
        resources:
          limits:
            cpu: 2000m
            memory: 1Gi
          requests:
            cpu: 50m
            memory: 650M
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add: []
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        startupProbe:
          failureThreshold: 180
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http-internal
            scheme: HTTPS
          initialDelaySeconds: 20
          periodSeconds: 10
        volumeDevices: []
        volumeMounts:
        - mountPath: /tmp
          name: tmp
        - mountPath: /opt/sas/viya/config/tmp
          name: tmp
        - mountPath: /security
          name: security
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/cacerts
          name: security
          subPath: cacerts
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/private
          name: security
          subPath: private
      hostAliases: []
      imagePullSecrets:
      - name: sas-image-pull-secrets-4m8cc729k8
      initContainers:
      - env:
        - name: KUBE_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: SAS_CERTFRAME_TOKEN_DIR
          value: /certframe-token
        - name: SAS_ADDITIONAL_CA_CERTIFICATES_DIR
          value: /customer-provided-ca-certificates
        envFrom:
        - configMapRef:
            name: sas-certframe-ingress-certificate-config-cmm2t44t88
        - configMapRef:
            name: sas-certframe-user-config-c4ch2c59m7
        - configMapRef:
            name: sas-certframe-java-config-gf4kt94898
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-certframe:3.9.0-20201203.1607016443086
        name: sas-certframe
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /certframe-token
          name: certframe-token
        - mountPath: /security
          name: security
        - mountPath: /customer-provided-ca-certificates
          name: customer-provided-ca-certificates
      readinessGates: []
      securityContext:
        runAsNonRoot: true
        supplementalGroups: []
        sysctls: []
      tolerations:
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateful
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateless
      volumes:
      - name: certframe-token
        secret:
          secretName: sas-certframe-token
      - emptyDir: {}
        name: security
      - configMap:
          name: sas-customer-provided-ca-certificates-29kdmk686c
        name: customer-provided-ca-certificates
      - emptyDir: {}
        name: tmp
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sas.com/certificate-file-format: jks
    sas.com/component-name: sas-text-analytics
    sas.com/component-version: 2.12.1-20201209.1607553801258
    sas.com/kustomize-base: spring
    sas.com/pod-uses-liveness-probe: http
    sas.com/pod-uses-readiness-probe: http
    sas.com/pod-uses-startup-probe: http
    sas.com/version: 2.12.1
    sidecar.istio.io/proxyCPU: 15m
    sidecar.istio.io/proxyMemory: 115Mi
  labels:
    app.kubernetes.io/name: sas-text-analytics
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
    sas.com/deployment-base: spring
    workload.sas.com/class: stateless
  name: sas-text-analytics
  namespace: franceavv
spec:
  selector:
    matchExpressions: []
    matchLabels:
      app.kubernetes.io/name: sas-text-analytics
      sas.com/deployment: sas-viya
  template:
    metadata:
      annotations:
        prometheus.io/path: /internal/metrics
        prometheus.io/port: "10445"
        prometheus.io/scheme: https
        prometheus.io/scrape: "true"
        sas.com/certificate-file-format: jks
        sas.com/component-name: sas-text-analytics
        sas.com/component-version: 2.12.1-20201209.1607553801258
        sas.com/kustomize-base: spring
        sas.com/pod-uses-liveness-probe: http
        sas.com/pod-uses-readiness-probe: http
        sas.com/pod-uses-startup-probe: http
        sas.com/tls-enabled-ports: all
        sas.com/version: 2.12.1
        seccomp.security.alpha.kubernetes.io/pod: runtime/default
        sidecar.istio.io/proxyCPU: 15m
        sidecar.istio.io/proxyMemory: 115Mi
      labels:
        app: sas-text-analytics
        app.kubernetes.io/name: sas-text-analytics
        sas.com/deployment: sas-viya
        workload.sas.com/class: stateless
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: In
                values:
                - stateless
              matchFields: []
            weight: 100
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: NotIn
                values:
                - compute
                - cas
                - stateful
                - connect
              matchFields: []
            weight: 50
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.azure.com/mode
                operator: NotIn
                values:
                - system
              matchFields: []
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - sas-text-analytics
              namespaces: []
              topologyKey: kubernetes.io/hostname
            weight: 100
          requiredDuringSchedulingIgnoredDuringExecution: []
      automountServiceAccountToken: false
      containers:
      - args: null
        command: null
        env:
        - name: SAS_K8S_DEPLOYMENT_NAME
          value: sas-text-analytics
        envFrom:
        - configMapRef:
            name: sas-java-config-t7t5thbgkd
        - configMapRef:
            name: sas-shared-config-49d8hthtb5
        - secretRef:
            name: sas-consul-client
        - configMapRef:
            name: sas-spring-management-config-d64bbkhb97
        - configMapRef:
            name: sas-java-tls-config-fch4777298
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-text-analytics:2.12.1-20201209.1607553801258
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - sh
              - -c
              - sleep 5
        livenessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http-internal
            scheme: HTTPS
          periodSeconds: 10
        name: sas-text-analytics
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        - containerPort: 10445
          name: http-internal
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/ready
            port: http-internal
            scheme: HTTPS
          periodSeconds: 10
        resources:
          limits:
            cpu: 2000m
            memory: 2Gi
          requests:
            cpu: 50m
            memory: 1Gi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add: []
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        startupProbe:
          failureThreshold: 180
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http-internal
            scheme: HTTPS
          initialDelaySeconds: 20
          periodSeconds: 10
        volumeDevices: []
        volumeMounts:
        - mountPath: /tmp
          name: tmp
        - mountPath: /opt/sas/viya/config/tmp
          name: tmp
        - mountPath: /security
          name: security
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/cacerts
          name: security
          subPath: cacerts
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/private
          name: security
          subPath: private
      hostAliases: []
      imagePullSecrets:
      - name: sas-image-pull-secrets-4m8cc729k8
      initContainers:
      - env:
        - name: KUBE_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: SAS_CERTFRAME_TOKEN_DIR
          value: /certframe-token
        - name: SAS_ADDITIONAL_CA_CERTIFICATES_DIR
          value: /customer-provided-ca-certificates
        envFrom:
        - configMapRef:
            name: sas-certframe-ingress-certificate-config-cmm2t44t88
        - configMapRef:
            name: sas-certframe-user-config-c4ch2c59m7
        - configMapRef:
            name: sas-certframe-java-config-gf4kt94898
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-certframe:3.9.0-20201203.1607016443086
        name: sas-certframe
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /certframe-token
          name: certframe-token
        - mountPath: /security
          name: security
        - mountPath: /customer-provided-ca-certificates
          name: customer-provided-ca-certificates
      readinessGates: []
      securityContext:
        runAsNonRoot: true
        supplementalGroups: []
        sysctls: []
      tolerations:
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateful
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateless
      volumes:
      - name: certframe-token
        secret:
          secretName: sas-certframe-token
      - emptyDir: {}
        name: security
      - configMap:
          name: sas-customer-provided-ca-certificates-29kdmk686c
        name: customer-provided-ca-certificates
      - emptyDir: {}
        name: tmp
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sas.com/certificate-file-format: jks
    sas.com/component-name: sas-text-cas-data-management
    sas.com/component-version: 5.7.0-20201203.1607029718479
    sas.com/kustomize-base: spring
    sas.com/pod-uses-liveness-probe: http
    sas.com/pod-uses-readiness-probe: http
    sas.com/pod-uses-startup-probe: http
    sas.com/version: 5.7.0
    sidecar.istio.io/proxyCPU: 15m
    sidecar.istio.io/proxyMemory: 115Mi
  labels:
    app.kubernetes.io/name: sas-text-cas-data-management
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
    sas.com/deployment-base: spring
    workload.sas.com/class: stateless
  name: sas-text-cas-data-management
  namespace: franceavv
spec:
  selector:
    matchExpressions: []
    matchLabels:
      app.kubernetes.io/name: sas-text-cas-data-management
      sas.com/deployment: sas-viya
  template:
    metadata:
      annotations:
        prometheus.io/path: /internal/metrics
        prometheus.io/port: "10445"
        prometheus.io/scheme: https
        prometheus.io/scrape: "true"
        sas.com/certificate-file-format: jks
        sas.com/component-name: sas-text-cas-data-management
        sas.com/component-version: 5.7.0-20201203.1607029718479
        sas.com/kustomize-base: spring
        sas.com/pod-uses-liveness-probe: http
        sas.com/pod-uses-readiness-probe: http
        sas.com/pod-uses-startup-probe: http
        sas.com/tls-enabled-ports: all
        sas.com/version: 5.7.0
        seccomp.security.alpha.kubernetes.io/pod: runtime/default
        sidecar.istio.io/proxyCPU: 15m
        sidecar.istio.io/proxyMemory: 115Mi
      labels:
        app: sas-text-cas-data-management
        app.kubernetes.io/name: sas-text-cas-data-management
        sas.com/deployment: sas-viya
        workload.sas.com/class: stateless
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: In
                values:
                - stateless
              matchFields: []
            weight: 100
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: NotIn
                values:
                - compute
                - cas
                - stateful
                - connect
              matchFields: []
            weight: 50
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.azure.com/mode
                operator: NotIn
                values:
                - system
              matchFields: []
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - sas-text-cas-data-management
              namespaces: []
              topologyKey: kubernetes.io/hostname
            weight: 100
          requiredDuringSchedulingIgnoredDuringExecution: []
      automountServiceAccountToken: false
      containers:
      - args: null
        command: null
        env:
        - name: SAS_K8S_DEPLOYMENT_NAME
          value: sas-text-cas-data-management
        - name: JAVA_OPTION_SERVER_PORT
        - name: MANAGEMENT_SERVER_PORT
          value: ${sas.${spring.application.name}.management.server.port:10445}
        envFrom:
        - configMapRef:
            name: sas-java-config-t7t5thbgkd
        - configMapRef:
            name: sas-shared-config-49d8hthtb5
        - secretRef:
            name: sas-consul-client
        - configMapRef:
            name: sas-spring-management-config-d64bbkhb97
        - configMapRef:
            name: sas-java-tls-config-fch4777298
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-text-cas-data-management:5.7.0-20201203.1607029718479
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - sh
              - -c
              - sleep 5
        livenessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http-internal
            scheme: HTTPS
          periodSeconds: 10
        name: sas-text-cas-data-management
        ports:
        - containerPort: 10445
          name: http-internal
          protocol: TCP
        - containerPort: 8181
          name: documents
          protocol: TCP
        - containerPort: 8180
          name: termsmanage
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/ready
            port: http-internal
            scheme: HTTPS
          periodSeconds: 10
        resources:
          limits:
            cpu: 2000m
            memory: 1Gi
          requests:
            cpu: 50m
            memory: 650M
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add: []
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        startupProbe:
          failureThreshold: 180
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http-internal
            scheme: HTTPS
          initialDelaySeconds: 20
          periodSeconds: 10
        volumeDevices: []
        volumeMounts:
        - mountPath: /tmp
          name: tmp
        - mountPath: /opt/sas/viya/config/tmp
          name: tmp
        - mountPath: /security
          name: security
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/cacerts
          name: security
          subPath: cacerts
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/private
          name: security
          subPath: private
      hostAliases: []
      imagePullSecrets:
      - name: sas-image-pull-secrets-4m8cc729k8
      initContainers:
      - env:
        - name: KUBE_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: SAS_CERTFRAME_TOKEN_DIR
          value: /certframe-token
        - name: SAS_ADDITIONAL_CA_CERTIFICATES_DIR
          value: /customer-provided-ca-certificates
        envFrom:
        - configMapRef:
            name: sas-certframe-ingress-certificate-config-cmm2t44t88
        - configMapRef:
            name: sas-certframe-user-config-c4ch2c59m7
        - configMapRef:
            name: sas-certframe-java-config-gf4kt94898
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-certframe:3.9.0-20201203.1607016443086
        name: sas-certframe
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /certframe-token
          name: certframe-token
        - mountPath: /security
          name: security
        - mountPath: /customer-provided-ca-certificates
          name: customer-provided-ca-certificates
      readinessGates: []
      securityContext:
        runAsNonRoot: true
        supplementalGroups: []
        sysctls: []
      tolerations:
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateful
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateless
      volumes:
      - name: certframe-token
        secret:
          secretName: sas-certframe-token
      - emptyDir: {}
        name: security
      - configMap:
          name: sas-customer-provided-ca-certificates-29kdmk686c
        name: customer-provided-ca-certificates
      - emptyDir: {}
        name: tmp
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sas.com/certificate-file-format: jks
    sas.com/component-name: sas-text-categorization
    sas.com/component-version: 5.9.0-20201203.1607011533238
    sas.com/kustomize-base: spring
    sas.com/pod-uses-liveness-probe: http
    sas.com/pod-uses-readiness-probe: http
    sas.com/pod-uses-startup-probe: http
    sas.com/version: 5.9.0
    sidecar.istio.io/proxyCPU: 15m
    sidecar.istio.io/proxyMemory: 115Mi
  labels:
    app.kubernetes.io/name: sas-text-categorization
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
    sas.com/deployment-base: spring
    workload.sas.com/class: stateless
  name: sas-text-categorization
  namespace: franceavv
spec:
  selector:
    matchExpressions: []
    matchLabels:
      app.kubernetes.io/name: sas-text-categorization
      sas.com/deployment: sas-viya
  template:
    metadata:
      annotations:
        prometheus.io/path: /internal/metrics
        prometheus.io/port: "10445"
        prometheus.io/scheme: https
        prometheus.io/scrape: "true"
        sas.com/certificate-file-format: jks
        sas.com/component-name: sas-text-categorization
        sas.com/component-version: 5.9.0-20201203.1607011533238
        sas.com/kustomize-base: spring
        sas.com/pod-uses-liveness-probe: http
        sas.com/pod-uses-readiness-probe: http
        sas.com/pod-uses-startup-probe: http
        sas.com/tls-enabled-ports: all
        sas.com/version: 5.9.0
        seccomp.security.alpha.kubernetes.io/pod: runtime/default
        sidecar.istio.io/proxyCPU: 15m
        sidecar.istio.io/proxyMemory: 115Mi
      labels:
        app: sas-text-categorization
        app.kubernetes.io/name: sas-text-categorization
        sas.com/deployment: sas-viya
        workload.sas.com/class: stateless
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: In
                values:
                - stateless
              matchFields: []
            weight: 100
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: NotIn
                values:
                - compute
                - cas
                - stateful
                - connect
              matchFields: []
            weight: 50
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.azure.com/mode
                operator: NotIn
                values:
                - system
              matchFields: []
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - sas-text-categorization
              namespaces: []
              topologyKey: kubernetes.io/hostname
            weight: 100
          requiredDuringSchedulingIgnoredDuringExecution: []
      automountServiceAccountToken: false
      containers:
      - args: null
        command: null
        env:
        - name: SAS_K8S_DEPLOYMENT_NAME
          value: sas-text-categorization
        - name: JAVA_OPTION_SERVER_PORT
        - name: MANAGEMENT_SERVER_PORT
          value: ${sas.${spring.application.name}.management.server.port:10445}
        envFrom:
        - configMapRef:
            name: sas-java-config-t7t5thbgkd
        - configMapRef:
            name: sas-shared-config-49d8hthtb5
        - secretRef:
            name: sas-consul-client
        - configMapRef:
            name: sas-spring-management-config-d64bbkhb97
        - configMapRef:
            name: sas-java-tls-config-fch4777298
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-text-categorization:5.9.0-20201203.1607011533238
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - sh
              - -c
              - sleep 5
        livenessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http-internal
            scheme: HTTPS
          periodSeconds: 10
        name: sas-text-categorization
        ports:
        - containerPort: 10445
          name: http-internal
          protocol: TCP
        - containerPort: 8182
          name: categoryexe
          protocol: TCP
        - containerPort: 8181
          name: categorization
          protocol: TCP
        - containerPort: 8180
          name: categorytax
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/ready
            port: http-internal
            scheme: HTTPS
          periodSeconds: 10
        resources:
          limits:
            cpu: 2000m
            memory: 1Gi
          requests:
            cpu: 50m
            memory: 650M
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add: []
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        startupProbe:
          failureThreshold: 180
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http-internal
            scheme: HTTPS
          initialDelaySeconds: 20
          periodSeconds: 10
        volumeDevices: []
        volumeMounts:
        - mountPath: /tmp
          name: tmp
        - mountPath: /opt/sas/viya/config/tmp
          name: tmp
        - mountPath: /security
          name: security
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/cacerts
          name: security
          subPath: cacerts
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/private
          name: security
          subPath: private
      hostAliases: []
      imagePullSecrets:
      - name: sas-image-pull-secrets-4m8cc729k8
      initContainers:
      - env:
        - name: KUBE_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: SAS_CERTFRAME_TOKEN_DIR
          value: /certframe-token
        - name: SAS_ADDITIONAL_CA_CERTIFICATES_DIR
          value: /customer-provided-ca-certificates
        envFrom:
        - configMapRef:
            name: sas-certframe-ingress-certificate-config-cmm2t44t88
        - configMapRef:
            name: sas-certframe-user-config-c4ch2c59m7
        - configMapRef:
            name: sas-certframe-java-config-gf4kt94898
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-certframe:3.9.0-20201203.1607016443086
        name: sas-certframe
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /certframe-token
          name: certframe-token
        - mountPath: /security
          name: security
        - mountPath: /customer-provided-ca-certificates
          name: customer-provided-ca-certificates
      readinessGates: []
      securityContext:
        runAsNonRoot: true
        supplementalGroups: []
        sysctls: []
      tolerations:
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateful
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateless
      volumes:
      - name: certframe-token
        secret:
          secretName: sas-certframe-token
      - emptyDir: {}
        name: security
      - configMap:
          name: sas-customer-provided-ca-certificates-29kdmk686c
        name: customer-provided-ca-certificates
      - emptyDir: {}
        name: tmp
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sas.com/certificate-file-format: jks
    sas.com/component-name: sas-text-concepts
    sas.com/component-version: 5.9.0-20201203.1607019179325
    sas.com/kustomize-base: spring
    sas.com/pod-uses-liveness-probe: http
    sas.com/pod-uses-readiness-probe: http
    sas.com/pod-uses-startup-probe: http
    sas.com/version: 5.9.0
    sidecar.istio.io/proxyCPU: 15m
    sidecar.istio.io/proxyMemory: 115Mi
  labels:
    app.kubernetes.io/name: sas-text-concepts
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
    sas.com/deployment-base: spring
    workload.sas.com/class: stateless
  name: sas-text-concepts
  namespace: franceavv
spec:
  selector:
    matchExpressions: []
    matchLabels:
      app.kubernetes.io/name: sas-text-concepts
      sas.com/deployment: sas-viya
  template:
    metadata:
      annotations:
        prometheus.io/path: /internal/metrics
        prometheus.io/port: "10445"
        prometheus.io/scheme: https
        prometheus.io/scrape: "true"
        sas.com/certificate-file-format: jks
        sas.com/component-name: sas-text-concepts
        sas.com/component-version: 5.9.0-20201203.1607019179325
        sas.com/kustomize-base: spring
        sas.com/pod-uses-liveness-probe: http
        sas.com/pod-uses-readiness-probe: http
        sas.com/pod-uses-startup-probe: http
        sas.com/tls-enabled-ports: all
        sas.com/version: 5.9.0
        seccomp.security.alpha.kubernetes.io/pod: runtime/default
        sidecar.istio.io/proxyCPU: 15m
        sidecar.istio.io/proxyMemory: 115Mi
      labels:
        app: sas-text-concepts
        app.kubernetes.io/name: sas-text-concepts
        sas.com/deployment: sas-viya
        workload.sas.com/class: stateless
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: In
                values:
                - stateless
              matchFields: []
            weight: 100
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: NotIn
                values:
                - compute
                - cas
                - stateful
                - connect
              matchFields: []
            weight: 50
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.azure.com/mode
                operator: NotIn
                values:
                - system
              matchFields: []
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - sas-text-concepts
              namespaces: []
              topologyKey: kubernetes.io/hostname
            weight: 100
          requiredDuringSchedulingIgnoredDuringExecution: []
      automountServiceAccountToken: false
      containers:
      - args: null
        command: null
        env:
        - name: SAS_K8S_DEPLOYMENT_NAME
          value: sas-text-concepts
        - name: JAVA_OPTION_SERVER_PORT
        - name: MANAGEMENT_SERVER_PORT
          value: ${sas.${spring.application.name}.management.server.port:10445}
        envFrom:
        - configMapRef:
            name: sas-java-config-t7t5thbgkd
        - configMapRef:
            name: sas-shared-config-49d8hthtb5
        - secretRef:
            name: sas-consul-client
        - configMapRef:
            name: sas-spring-management-config-d64bbkhb97
        - configMapRef:
            name: sas-java-tls-config-fch4777298
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-text-concepts:5.9.0-20201203.1607019179325
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - sh
              - -c
              - sleep 5
        livenessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http-internal
            scheme: HTTPS
          periodSeconds: 10
        name: sas-text-concepts
        ports:
        - containerPort: 10445
          name: http-internal
          protocol: TCP
        - containerPort: 8182
          name: concepts
          protocol: TCP
        - containerPort: 8181
          name: conceptexe
          protocol: TCP
        - containerPort: 8180
          name: concepttax
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/ready
            port: http-internal
            scheme: HTTPS
          periodSeconds: 10
        resources:
          limits:
            cpu: 2000m
            memory: 1Gi
          requests:
            cpu: 50m
            memory: 650M
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add: []
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        startupProbe:
          failureThreshold: 180
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http-internal
            scheme: HTTPS
          initialDelaySeconds: 20
          periodSeconds: 10
        volumeDevices: []
        volumeMounts:
        - mountPath: /tmp
          name: tmp
        - mountPath: /opt/sas/viya/config/tmp
          name: tmp
        - mountPath: /security
          name: security
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/cacerts
          name: security
          subPath: cacerts
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/private
          name: security
          subPath: private
      hostAliases: []
      imagePullSecrets:
      - name: sas-image-pull-secrets-4m8cc729k8
      initContainers:
      - env:
        - name: KUBE_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: SAS_CERTFRAME_TOKEN_DIR
          value: /certframe-token
        - name: SAS_ADDITIONAL_CA_CERTIFICATES_DIR
          value: /customer-provided-ca-certificates
        envFrom:
        - configMapRef:
            name: sas-certframe-ingress-certificate-config-cmm2t44t88
        - configMapRef:
            name: sas-certframe-user-config-c4ch2c59m7
        - configMapRef:
            name: sas-certframe-java-config-gf4kt94898
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-certframe:3.9.0-20201203.1607016443086
        name: sas-certframe
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /certframe-token
          name: certframe-token
        - mountPath: /security
          name: security
        - mountPath: /customer-provided-ca-certificates
          name: customer-provided-ca-certificates
      readinessGates: []
      securityContext:
        runAsNonRoot: true
        supplementalGroups: []
        sysctls: []
      tolerations:
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateful
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateless
      volumes:
      - name: certframe-token
        secret:
          secretName: sas-certframe-token
      - emptyDir: {}
        name: security
      - configMap:
          name: sas-customer-provided-ca-certificates-29kdmk686c
        name: customer-provided-ca-certificates
      - emptyDir: {}
        name: tmp
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sas.com/certificate-file-format: jks
    sas.com/component-name: sas-text-parsing
    sas.com/component-version: 5.7.0-20201203.1607019166184
    sas.com/kustomize-base: spring
    sas.com/pod-uses-liveness-probe: http
    sas.com/pod-uses-readiness-probe: http
    sas.com/pod-uses-startup-probe: http
    sas.com/version: 5.7.0
    sidecar.istio.io/proxyCPU: 15m
    sidecar.istio.io/proxyMemory: 115Mi
  labels:
    app.kubernetes.io/name: sas-text-parsing
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
    sas.com/deployment-base: spring
    workload.sas.com/class: stateless
  name: sas-text-parsing
  namespace: franceavv
spec:
  selector:
    matchExpressions: []
    matchLabels:
      app.kubernetes.io/name: sas-text-parsing
      sas.com/deployment: sas-viya
  template:
    metadata:
      annotations:
        prometheus.io/path: /internal/metrics
        prometheus.io/port: "10445"
        prometheus.io/scheme: https
        prometheus.io/scrape: "true"
        sas.com/certificate-file-format: jks
        sas.com/component-name: sas-text-parsing
        sas.com/component-version: 5.7.0-20201203.1607019166184
        sas.com/kustomize-base: spring
        sas.com/pod-uses-liveness-probe: http
        sas.com/pod-uses-readiness-probe: http
        sas.com/pod-uses-startup-probe: http
        sas.com/tls-enabled-ports: all
        sas.com/version: 5.7.0
        seccomp.security.alpha.kubernetes.io/pod: runtime/default
        sidecar.istio.io/proxyCPU: 15m
        sidecar.istio.io/proxyMemory: 115Mi
      labels:
        app: sas-text-parsing
        app.kubernetes.io/name: sas-text-parsing
        sas.com/deployment: sas-viya
        workload.sas.com/class: stateless
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: In
                values:
                - stateless
              matchFields: []
            weight: 100
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: NotIn
                values:
                - compute
                - cas
                - stateful
                - connect
              matchFields: []
            weight: 50
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.azure.com/mode
                operator: NotIn
                values:
                - system
              matchFields: []
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - sas-text-parsing
              namespaces: []
              topologyKey: kubernetes.io/hostname
            weight: 100
          requiredDuringSchedulingIgnoredDuringExecution: []
      automountServiceAccountToken: false
      containers:
      - args: null
        command: null
        env:
        - name: SAS_K8S_DEPLOYMENT_NAME
          value: sas-text-parsing
        - name: JAVA_OPTION_SERVER_PORT
        - name: MANAGEMENT_SERVER_PORT
          value: ${sas.${spring.application.name}.management.server.port:10445}
        envFrom:
        - configMapRef:
            name: sas-java-config-t7t5thbgkd
        - configMapRef:
            name: sas-shared-config-49d8hthtb5
        - secretRef:
            name: sas-consul-client
        - configMapRef:
            name: sas-spring-management-config-d64bbkhb97
        - configMapRef:
            name: sas-java-tls-config-fch4777298
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-text-parsing:5.7.0-20201203.1607019166184
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - sh
              - -c
              - sleep 5
        livenessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http-internal
            scheme: HTTPS
          periodSeconds: 10
        name: sas-text-parsing
        ports:
        - containerPort: 10445
          name: http-internal
          protocol: TCP
        - containerPort: 8180
          name: parseexe
          protocol: TCP
        - containerPort: 8183
          name: parsing
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/ready
            port: http-internal
            scheme: HTTPS
          periodSeconds: 10
        resources:
          limits:
            cpu: 2000m
            memory: 1Gi
          requests:
            cpu: 50m
            memory: 650M
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add: []
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        startupProbe:
          failureThreshold: 180
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http-internal
            scheme: HTTPS
          initialDelaySeconds: 20
          periodSeconds: 10
        volumeDevices: []
        volumeMounts:
        - mountPath: /tmp
          name: tmp
        - mountPath: /opt/sas/viya/config/tmp
          name: tmp
        - mountPath: /security
          name: security
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/cacerts
          name: security
          subPath: cacerts
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/private
          name: security
          subPath: private
      hostAliases: []
      imagePullSecrets:
      - name: sas-image-pull-secrets-4m8cc729k8
      initContainers:
      - env:
        - name: KUBE_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: SAS_CERTFRAME_TOKEN_DIR
          value: /certframe-token
        - name: SAS_ADDITIONAL_CA_CERTIFICATES_DIR
          value: /customer-provided-ca-certificates
        envFrom:
        - configMapRef:
            name: sas-certframe-ingress-certificate-config-cmm2t44t88
        - configMapRef:
            name: sas-certframe-user-config-c4ch2c59m7
        - configMapRef:
            name: sas-certframe-java-config-gf4kt94898
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-certframe:3.9.0-20201203.1607016443086
        name: sas-certframe
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /certframe-token
          name: certframe-token
        - mountPath: /security
          name: security
        - mountPath: /customer-provided-ca-certificates
          name: customer-provided-ca-certificates
      readinessGates: []
      securityContext:
        runAsNonRoot: true
        supplementalGroups: []
        sysctls: []
      tolerations:
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateful
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateless
      volumes:
      - name: certframe-token
        secret:
          secretName: sas-certframe-token
      - emptyDir: {}
        name: security
      - configMap:
          name: sas-customer-provided-ca-certificates-29kdmk686c
        name: customer-provided-ca-certificates
      - emptyDir: {}
        name: tmp
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sas.com/certificate-file-format: jks
    sas.com/component-name: sas-text-topics
    sas.com/component-version: 5.8.0-20201203.1607011531723
    sas.com/kustomize-base: spring
    sas.com/pod-uses-liveness-probe: http
    sas.com/pod-uses-readiness-probe: http
    sas.com/pod-uses-startup-probe: http
    sas.com/version: 5.8.0
    sidecar.istio.io/proxyCPU: 15m
    sidecar.istio.io/proxyMemory: 115Mi
  labels:
    app.kubernetes.io/name: sas-text-topics
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
    sas.com/deployment-base: spring
    workload.sas.com/class: stateless
  name: sas-text-topics
  namespace: franceavv
spec:
  selector:
    matchExpressions: []
    matchLabels:
      app.kubernetes.io/name: sas-text-topics
      sas.com/deployment: sas-viya
  template:
    metadata:
      annotations:
        prometheus.io/path: /internal/metrics
        prometheus.io/port: "10445"
        prometheus.io/scheme: https
        prometheus.io/scrape: "true"
        sas.com/certificate-file-format: jks
        sas.com/component-name: sas-text-topics
        sas.com/component-version: 5.8.0-20201203.1607011531723
        sas.com/kustomize-base: spring
        sas.com/pod-uses-liveness-probe: http
        sas.com/pod-uses-readiness-probe: http
        sas.com/pod-uses-startup-probe: http
        sas.com/tls-enabled-ports: all
        sas.com/version: 5.8.0
        seccomp.security.alpha.kubernetes.io/pod: runtime/default
        sidecar.istio.io/proxyCPU: 15m
        sidecar.istio.io/proxyMemory: 115Mi
      labels:
        app: sas-text-topics
        app.kubernetes.io/name: sas-text-topics
        sas.com/deployment: sas-viya
        workload.sas.com/class: stateless
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: In
                values:
                - stateless
              matchFields: []
            weight: 100
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: NotIn
                values:
                - compute
                - cas
                - stateful
                - connect
              matchFields: []
            weight: 50
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.azure.com/mode
                operator: NotIn
                values:
                - system
              matchFields: []
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - sas-text-topics
              namespaces: []
              topologyKey: kubernetes.io/hostname
            weight: 100
          requiredDuringSchedulingIgnoredDuringExecution: []
      automountServiceAccountToken: false
      containers:
      - args: null
        command: null
        env:
        - name: SAS_K8S_DEPLOYMENT_NAME
          value: sas-text-topics
        - name: JAVA_OPTION_SERVER_PORT
        - name: MANAGEMENT_SERVER_PORT
          value: ${sas.${spring.application.name}.management.server.port:10445}
        envFrom:
        - configMapRef:
            name: sas-java-config-t7t5thbgkd
        - configMapRef:
            name: sas-shared-config-49d8hthtb5
        - secretRef:
            name: sas-consul-client
        - configMapRef:
            name: sas-spring-management-config-d64bbkhb97
        - configMapRef:
            name: sas-java-tls-config-fch4777298
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-text-topics:5.8.0-20201203.1607011531723
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - sh
              - -c
              - sleep 5
        livenessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http-internal
            scheme: HTTPS
          periodSeconds: 10
        name: sas-text-topics
        ports:
        - containerPort: 10445
          name: http-internal
          protocol: TCP
        - containerPort: 8180
          name: topicexe
          protocol: TCP
        - containerPort: 8185
          name: topics
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/ready
            port: http-internal
            scheme: HTTPS
          periodSeconds: 10
        resources:
          limits:
            cpu: 2000m
            memory: 1Gi
          requests:
            cpu: 50m
            memory: 650M
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add: []
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        startupProbe:
          failureThreshold: 180
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http-internal
            scheme: HTTPS
          initialDelaySeconds: 20
          periodSeconds: 10
        volumeDevices: []
        volumeMounts:
        - mountPath: /tmp
          name: tmp
        - mountPath: /opt/sas/viya/config/tmp
          name: tmp
        - mountPath: /security
          name: security
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/cacerts
          name: security
          subPath: cacerts
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/private
          name: security
          subPath: private
      hostAliases: []
      imagePullSecrets:
      - name: sas-image-pull-secrets-4m8cc729k8
      initContainers:
      - env:
        - name: KUBE_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: SAS_CERTFRAME_TOKEN_DIR
          value: /certframe-token
        - name: SAS_ADDITIONAL_CA_CERTIFICATES_DIR
          value: /customer-provided-ca-certificates
        envFrom:
        - configMapRef:
            name: sas-certframe-ingress-certificate-config-cmm2t44t88
        - configMapRef:
            name: sas-certframe-user-config-c4ch2c59m7
        - configMapRef:
            name: sas-certframe-java-config-gf4kt94898
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-certframe:3.9.0-20201203.1607016443086
        name: sas-certframe
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /certframe-token
          name: certframe-token
        - mountPath: /security
          name: security
        - mountPath: /customer-provided-ca-certificates
          name: customer-provided-ca-certificates
      readinessGates: []
      securityContext:
        runAsNonRoot: true
        supplementalGroups: []
        sysctls: []
      tolerations:
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateful
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateless
      volumes:
      - name: certframe-token
        secret:
          secretName: sas-certframe-token
      - emptyDir: {}
        name: security
      - configMap:
          name: sas-customer-provided-ca-certificates-29kdmk686c
        name: customer-provided-ca-certificates
      - emptyDir: {}
        name: tmp
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sas.com/certificate-file-format: pem
    sas.com/component-name: sas-theme-content
    sas.com/component-version: 1.23.2-20201202.1606918780434
    sas.com/kustomize-base: golang
    sas.com/pod-uses-db-migrator: "true"
    sas.com/pod-uses-liveness-probe: http
    sas.com/pod-uses-readiness-probe: http
    sas.com/pod-uses-startup-probe: http
    sas.com/version: 1.23.2
    sidecar.istio.io/proxyCPU: 15m
    sidecar.istio.io/proxyMemory: 115Mi
  labels:
    app.kubernetes.io/name: sas-theme-content
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
    sas.com/deployment-base: golang
    workload.sas.com/class: stateless
  name: sas-theme-content
  namespace: franceavv
spec:
  selector:
    matchExpressions: []
    matchLabels:
      app.kubernetes.io/name: sas-theme-content
      sas.com/deployment: sas-viya
  template:
    metadata:
      annotations:
        prometheus.io/path: /internal/metrics
        prometheus.io/port: "8080"
        prometheus.io/scheme: https
        prometheus.io/scrape: "true"
        sas.com/certificate-file-format: pem
        sas.com/component-name: sas-theme-content
        sas.com/component-version: 1.23.2-20201202.1606918780434
        sas.com/kustomize-base: golang
        sas.com/pod-uses-liveness-probe: http
        sas.com/pod-uses-readiness-probe: http
        sas.com/pod-uses-startup-probe: http
        sas.com/tls-enabled-ports: all
        sas.com/version: 1.23.2
        seccomp.security.alpha.kubernetes.io/pod: runtime/default
        sidecar.istio.io/proxyCPU: 15m
        sidecar.istio.io/proxyMemory: 115Mi
      labels:
        app: sas-theme-content
        app.kubernetes.io/name: sas-theme-content
        sas.com/deployment: sas-viya
        workload.sas.com/class: stateless
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: In
                values:
                - stateless
              matchFields: []
            weight: 100
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: NotIn
                values:
                - compute
                - cas
                - stateful
                - connect
              matchFields: []
            weight: 50
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.azure.com/mode
                operator: NotIn
                values:
                - system
              matchFields: []
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - sas-theme-content
              namespaces: []
              topologyKey: kubernetes.io/hostname
            weight: 100
          requiredDuringSchedulingIgnoredDuringExecution: []
      automountServiceAccountToken: false
      containers:
      - args: null
        command: null
        env:
        - name: SAS_K8S_DEPLOYMENT_NAME
          value: sas-theme-content
        envFrom:
        - configMapRef:
            name: sas-go-config-7hc79bmf8m
        - configMapRef:
            name: sas-shared-config-49d8hthtb5
        - secretRef:
            name: sas-consul-client
        - configMapRef:
            name: sas-tls-config-99f79t29t5
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-theme-content:1.23.2-20201202.1606918780434
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - sh
              - -c
              - sleep 5
        livenessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http
            scheme: HTTPS
          periodSeconds: 10
        name: sas-theme-content
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/ready
            port: http
            scheme: HTTPS
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add: []
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        startupProbe:
          failureThreshold: 180
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http
            scheme: HTTPS
          periodSeconds: 10
        volumeDevices: []
        volumeMounts:
        - mountPath: /tmp
          name: tmp
        - mountPath: /security
          name: security
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/cacerts
          name: security
          subPath: cacerts
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/private
          name: security
          subPath: private
      hostAliases: []
      imagePullSecrets:
      - name: sas-image-pull-secrets-4m8cc729k8
      initContainers:
      - env:
        - name: KUBE_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: SAS_CERTFRAME_TOKEN_DIR
          value: /certframe-token
        - name: SAS_ADDITIONAL_CA_CERTIFICATES_DIR
          value: /customer-provided-ca-certificates
        envFrom:
        - configMapRef:
            name: sas-certframe-ingress-certificate-config-cmm2t44t88
        - configMapRef:
            name: sas-certframe-user-config-c4ch2c59m7
        - configMapRef:
            name: sas-certframe-config-ctgg29gf7t
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-certframe:3.9.0-20201203.1607016443086
        name: sas-certframe
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /certframe-token
          name: certframe-token
        - mountPath: /security
          name: security
        - mountPath: /customer-provided-ca-certificates
          name: customer-provided-ca-certificates
      - args:
        - cp -rf meta /data
        command:
        - /bin/sh
        - -c
        env: []
        envFrom: []
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-theme-content:1.23.2-20201202.1606918780434
        imagePullPolicy: IfNotPresent
        name: hydrator
        ports: []
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 75m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add: []
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeDevices: []
        volumeMounts:
        - mountPath: /data
          name: shared-vol
      - args: null
        command: null
        env:
        - name: SSL_CERT_FILE
          value: /security/trustedcerts.pem
        - name: SAS_SERVICE_NAME
          value: sas-theme-content
        envFrom:
        - configMapRef:
            name: sas-go-config-7hc79bmf8m
        - configMapRef:
            name: sas-shared-config-49d8hthtb5
        - configMapRef:
            name: sas-java-config-t7t5thbgkd
        - secretRef:
            name: sas-consul-client
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-db-migrator:1.1.0-20201209.1607523698073
        imagePullPolicy: IfNotPresent
        name: sas-db-migrator
        ports: []
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 100m
            memory: 90Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add: []
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeDevices: []
        volumeMounts:
        - mountPath: /security
          name: security
        - mountPath: /data
          name: shared-vol
      readinessGates: []
      securityContext:
        runAsNonRoot: true
        supplementalGroups: []
        sysctls: []
      tolerations:
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateful
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateless
      volumes:
      - name: certframe-token
        secret:
          secretName: sas-certframe-token
      - emptyDir: {}
        name: security
      - configMap:
          name: sas-customer-provided-ca-certificates-29kdmk686c
        name: customer-provided-ca-certificates
      - emptyDir: {}
        name: tmp
      - emptyDir: {}
        name: shared-vol
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sas.com/certificate-file-format: pem
    sas.com/component-name: sas-theme-designer-app
    sas.com/component-version: 3.25.7-20201204.1607109715258
    sas.com/kustomize-base: golang
    sas.com/pod-uses-liveness-probe: http
    sas.com/pod-uses-readiness-probe: http
    sas.com/pod-uses-startup-probe: http
    sas.com/version: 3.25.7
    sidecar.istio.io/proxyCPU: 15m
    sidecar.istio.io/proxyMemory: 115Mi
  labels:
    app.kubernetes.io/name: sas-theme-designer-app
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
    sas.com/deployment-base: golang
    workload.sas.com/class: stateless
  name: sas-theme-designer-app
  namespace: franceavv
spec:
  selector:
    matchExpressions: []
    matchLabels:
      app.kubernetes.io/name: sas-theme-designer-app
      sas.com/deployment: sas-viya
  template:
    metadata:
      annotations:
        prometheus.io/path: /internal/metrics
        prometheus.io/port: "8080"
        prometheus.io/scheme: https
        prometheus.io/scrape: "true"
        sas.com/certificate-file-format: pem
        sas.com/component-name: sas-theme-designer-app
        sas.com/component-version: 3.25.7-20201204.1607109715258
        sas.com/kustomize-base: golang
        sas.com/pod-uses-liveness-probe: http
        sas.com/pod-uses-readiness-probe: http
        sas.com/pod-uses-startup-probe: http
        sas.com/tls-enabled-ports: all
        sas.com/version: 3.25.7
        seccomp.security.alpha.kubernetes.io/pod: runtime/default
        sidecar.istio.io/proxyCPU: 15m
        sidecar.istio.io/proxyMemory: 115Mi
      labels:
        app: sas-theme-designer-app
        app.kubernetes.io/name: sas-theme-designer-app
        sas.com/deployment: sas-viya
        workload.sas.com/class: stateless
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: In
                values:
                - stateless
              matchFields: []
            weight: 100
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: NotIn
                values:
                - compute
                - cas
                - stateful
                - connect
              matchFields: []
            weight: 50
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.azure.com/mode
                operator: NotIn
                values:
                - system
              matchFields: []
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - sas-theme-designer-app
              namespaces: []
              topologyKey: kubernetes.io/hostname
            weight: 100
          requiredDuringSchedulingIgnoredDuringExecution: []
      automountServiceAccountToken: false
      containers:
      - args: null
        command: null
        env:
        - name: SAS_K8S_DEPLOYMENT_NAME
          value: sas-theme-designer-app
        envFrom:
        - configMapRef:
            name: sas-go-config-7hc79bmf8m
        - configMapRef:
            name: sas-shared-config-49d8hthtb5
        - secretRef:
            name: sas-consul-client
        - configMapRef:
            name: sas-tls-config-99f79t29t5
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-theme-designer-app:3.25.7-20201204.1607109715258
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - sh
              - -c
              - sleep 5
        livenessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http
            scheme: HTTPS
          periodSeconds: 10
        name: sas-theme-designer-app
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/ready
            port: http
            scheme: HTTPS
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add: []
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        startupProbe:
          failureThreshold: 180
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http
            scheme: HTTPS
          periodSeconds: 10
        volumeDevices: []
        volumeMounts:
        - mountPath: /tmp
          name: tmp
        - mountPath: /security
          name: security
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/cacerts
          name: security
          subPath: cacerts
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/private
          name: security
          subPath: private
      hostAliases: []
      imagePullSecrets:
      - name: sas-image-pull-secrets-4m8cc729k8
      initContainers:
      - env:
        - name: KUBE_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: SAS_CERTFRAME_TOKEN_DIR
          value: /certframe-token
        - name: SAS_ADDITIONAL_CA_CERTIFICATES_DIR
          value: /customer-provided-ca-certificates
        envFrom:
        - configMapRef:
            name: sas-certframe-ingress-certificate-config-cmm2t44t88
        - configMapRef:
            name: sas-certframe-user-config-c4ch2c59m7
        - configMapRef:
            name: sas-certframe-config-ctgg29gf7t
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-certframe:3.9.0-20201203.1607016443086
        name: sas-certframe
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /certframe-token
          name: certframe-token
        - mountPath: /security
          name: security
        - mountPath: /customer-provided-ca-certificates
          name: customer-provided-ca-certificates
      readinessGates: []
      securityContext:
        runAsNonRoot: true
        supplementalGroups: []
        sysctls: []
      tolerations:
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateful
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateless
      volumes:
      - name: certframe-token
        secret:
          secretName: sas-certframe-token
      - emptyDir: {}
        name: security
      - configMap:
          name: sas-customer-provided-ca-certificates-29kdmk686c
        name: customer-provided-ca-certificates
      - emptyDir: {}
        name: tmp
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sas.com/certificate-file-format: jks
    sas.com/component-name: sas-themes
    sas.com/component-version: 3.23.4-20201202.1606917995194
    sas.com/kustomize-base: spring
    sas.com/pod-uses-liveness-probe: http
    sas.com/pod-uses-readiness-probe: http
    sas.com/pod-uses-startup-probe: http
    sas.com/version: 3.23.4
    sidecar.istio.io/proxyCPU: 15m
    sidecar.istio.io/proxyMemory: 115Mi
  labels:
    app.kubernetes.io/name: sas-themes
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
    sas.com/deployment-base: spring
    workload.sas.com/class: stateless
  name: sas-themes
  namespace: franceavv
spec:
  selector:
    matchExpressions: []
    matchLabels:
      app.kubernetes.io/name: sas-themes
      sas.com/deployment: sas-viya
  template:
    metadata:
      annotations:
        prometheus.io/path: /internal/metrics
        prometheus.io/port: "10445"
        prometheus.io/scheme: https
        prometheus.io/scrape: "true"
        sas.com/certificate-file-format: jks
        sas.com/component-name: sas-themes
        sas.com/component-version: 3.23.4-20201202.1606917995194
        sas.com/kustomize-base: spring
        sas.com/pod-uses-liveness-probe: http
        sas.com/pod-uses-readiness-probe: http
        sas.com/pod-uses-startup-probe: http
        sas.com/tls-enabled-ports: all
        sas.com/version: 3.23.4
        seccomp.security.alpha.kubernetes.io/pod: runtime/default
        sidecar.istio.io/proxyCPU: 15m
        sidecar.istio.io/proxyMemory: 115Mi
      labels:
        app: sas-themes
        app.kubernetes.io/name: sas-themes
        sas.com/deployment: sas-viya
        workload.sas.com/class: stateless
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: In
                values:
                - stateless
              matchFields: []
            weight: 100
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: NotIn
                values:
                - compute
                - cas
                - stateful
                - connect
              matchFields: []
            weight: 50
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.azure.com/mode
                operator: NotIn
                values:
                - system
              matchFields: []
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - sas-themes
              namespaces: []
              topologyKey: kubernetes.io/hostname
            weight: 100
          requiredDuringSchedulingIgnoredDuringExecution: []
      automountServiceAccountToken: false
      containers:
      - args: null
        command: null
        env:
        - name: SAS_K8S_DEPLOYMENT_NAME
          value: sas-themes
        envFrom:
        - configMapRef:
            name: sas-java-config-t7t5thbgkd
        - configMapRef:
            name: sas-shared-config-49d8hthtb5
        - secretRef:
            name: sas-consul-client
        - configMapRef:
            name: sas-spring-management-config-d64bbkhb97
        - configMapRef:
            name: sas-java-tls-config-fch4777298
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-themes:3.23.4-20201202.1606917995194
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - sh
              - -c
              - sleep 5
        livenessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http-internal
            scheme: HTTPS
          periodSeconds: 10
        name: sas-themes
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        - containerPort: 10445
          name: http-internal
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/ready
            port: http-internal
            scheme: HTTPS
          periodSeconds: 10
        resources:
          limits:
            cpu: 2000m
            memory: 1Gi
          requests:
            cpu: 50m
            memory: 650M
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add: []
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        startupProbe:
          failureThreshold: 180
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http-internal
            scheme: HTTPS
          initialDelaySeconds: 20
          periodSeconds: 10
        volumeDevices: []
        volumeMounts:
        - mountPath: /tmp
          name: tmp
        - mountPath: /opt/sas/viya/config/tmp
          name: tmp
        - mountPath: /security
          name: security
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/cacerts
          name: security
          subPath: cacerts
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/private
          name: security
          subPath: private
      hostAliases: []
      imagePullSecrets:
      - name: sas-image-pull-secrets-4m8cc729k8
      initContainers:
      - env:
        - name: KUBE_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: SAS_CERTFRAME_TOKEN_DIR
          value: /certframe-token
        - name: SAS_ADDITIONAL_CA_CERTIFICATES_DIR
          value: /customer-provided-ca-certificates
        envFrom:
        - configMapRef:
            name: sas-certframe-ingress-certificate-config-cmm2t44t88
        - configMapRef:
            name: sas-certframe-user-config-c4ch2c59m7
        - configMapRef:
            name: sas-certframe-java-config-gf4kt94898
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-certframe:3.9.0-20201203.1607016443086
        name: sas-certframe
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /certframe-token
          name: certframe-token
        - mountPath: /security
          name: security
        - mountPath: /customer-provided-ca-certificates
          name: customer-provided-ca-certificates
      readinessGates: []
      securityContext:
        runAsNonRoot: true
        supplementalGroups: []
        sysctls: []
      tolerations:
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateful
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateless
      volumes:
      - name: certframe-token
        secret:
          secretName: sas-certframe-token
      - emptyDir: {}
        name: security
      - configMap:
          name: sas-customer-provided-ca-certificates-29kdmk686c
        name: customer-provided-ca-certificates
      - emptyDir: {}
        name: tmp
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sas.com/certificate-file-format: pem
    sas.com/component-name: sas-thumbnails
    sas.com/component-version: 1.52.1-20201202.1606940688053
    sas.com/kustomize-base: golang
    sas.com/pod-uses-db-migrator: "true"
    sas.com/pod-uses-liveness-probe: http
    sas.com/pod-uses-readiness-probe: http
    sas.com/pod-uses-startup-probe: http
    sas.com/version: 1.52.1
    sidecar.istio.io/proxyCPU: 15m
    sidecar.istio.io/proxyMemory: 115Mi
  labels:
    app.kubernetes.io/name: sas-thumbnails
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
    sas.com/deployment-base: golang
    workload.sas.com/class: stateless
  name: sas-thumbnails
  namespace: franceavv
spec:
  selector:
    matchExpressions: []
    matchLabels:
      app.kubernetes.io/name: sas-thumbnails
      sas.com/deployment: sas-viya
  template:
    metadata:
      annotations:
        prometheus.io/path: /internal/metrics
        prometheus.io/port: "8080"
        prometheus.io/scheme: https
        prometheus.io/scrape: "true"
        sas.com/certificate-file-format: pem
        sas.com/component-name: sas-thumbnails
        sas.com/component-version: 1.52.1-20201202.1606940688053
        sas.com/kustomize-base: golang
        sas.com/pod-uses-liveness-probe: http
        sas.com/pod-uses-readiness-probe: http
        sas.com/pod-uses-startup-probe: http
        sas.com/tls-enabled-ports: all
        sas.com/version: 1.52.1
        seccomp.security.alpha.kubernetes.io/pod: runtime/default
        sidecar.istio.io/proxyCPU: 15m
        sidecar.istio.io/proxyMemory: 115Mi
      labels:
        app: sas-thumbnails
        app.kubernetes.io/name: sas-thumbnails
        sas.com/deployment: sas-viya
        workload.sas.com/class: stateless
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: In
                values:
                - stateless
              matchFields: []
            weight: 100
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: NotIn
                values:
                - compute
                - cas
                - stateful
                - connect
              matchFields: []
            weight: 50
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.azure.com/mode
                operator: NotIn
                values:
                - system
              matchFields: []
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - sas-thumbnails
              namespaces: []
              topologyKey: kubernetes.io/hostname
            weight: 100
          requiredDuringSchedulingIgnoredDuringExecution: []
      automountServiceAccountToken: false
      containers:
      - args: null
        command: null
        env:
        - name: SAS_K8S_DEPLOYMENT_NAME
          value: sas-thumbnails
        envFrom:
        - configMapRef:
            name: sas-go-config-7hc79bmf8m
        - configMapRef:
            name: sas-shared-config-49d8hthtb5
        - secretRef:
            name: sas-consul-client
        - configMapRef:
            name: sas-tls-config-99f79t29t5
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-thumbnails:1.52.1-20201202.1606940688053
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - sh
              - -c
              - sleep 5
        livenessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http
            scheme: HTTPS
          periodSeconds: 10
        name: sas-thumbnails
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/ready
            port: http
            scheme: HTTPS
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add: []
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        startupProbe:
          failureThreshold: 180
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http
            scheme: HTTPS
          periodSeconds: 10
        volumeDevices: []
        volumeMounts:
        - mountPath: /tmp
          name: tmp
        - mountPath: /security
          name: security
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/cacerts
          name: security
          subPath: cacerts
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/private
          name: security
          subPath: private
      hostAliases: []
      imagePullSecrets:
      - name: sas-image-pull-secrets-4m8cc729k8
      initContainers:
      - env:
        - name: KUBE_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: SAS_CERTFRAME_TOKEN_DIR
          value: /certframe-token
        - name: SAS_ADDITIONAL_CA_CERTIFICATES_DIR
          value: /customer-provided-ca-certificates
        envFrom:
        - configMapRef:
            name: sas-certframe-ingress-certificate-config-cmm2t44t88
        - configMapRef:
            name: sas-certframe-user-config-c4ch2c59m7
        - configMapRef:
            name: sas-certframe-config-ctgg29gf7t
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-certframe:3.9.0-20201203.1607016443086
        name: sas-certframe
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /certframe-token
          name: certframe-token
        - mountPath: /security
          name: security
        - mountPath: /customer-provided-ca-certificates
          name: customer-provided-ca-certificates
      - args:
        - cp -rf meta /data
        command:
        - /bin/sh
        - -c
        env: []
        envFrom: []
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-thumbnails:1.52.1-20201202.1606940688053
        imagePullPolicy: IfNotPresent
        name: hydrator
        ports: []
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 75m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add: []
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeDevices: []
        volumeMounts:
        - mountPath: /data
          name: shared-vol
      - args: null
        command: null
        env:
        - name: SSL_CERT_FILE
          value: /security/trustedcerts.pem
        - name: SAS_SERVICE_NAME
          value: sas-thumbnails
        envFrom:
        - configMapRef:
            name: sas-go-config-7hc79bmf8m
        - configMapRef:
            name: sas-shared-config-49d8hthtb5
        - configMapRef:
            name: sas-java-config-t7t5thbgkd
        - secretRef:
            name: sas-consul-client
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-db-migrator:1.1.0-20201209.1607523698073
        imagePullPolicy: IfNotPresent
        name: sas-db-migrator
        ports: []
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 100m
            memory: 90Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add: []
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeDevices: []
        volumeMounts:
        - mountPath: /security
          name: security
        - mountPath: /data
          name: shared-vol
      readinessGates: []
      securityContext:
        runAsNonRoot: true
        supplementalGroups: []
        sysctls: []
      terminationGracePeriodSeconds: 60
      tolerations:
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateful
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateless
      volumes:
      - name: certframe-token
        secret:
          secretName: sas-certframe-token
      - emptyDir: {}
        name: security
      - configMap:
          name: sas-customer-provided-ca-certificates-29kdmk686c
        name: customer-provided-ca-certificates
      - emptyDir: {}
        name: tmp
      - emptyDir: {}
        name: shared-vol
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sas.com/certificate-file-format: pem
    sas.com/component-name: sas-topic-management
    sas.com/component-version: 6.8.0-20201202.1606937875615
    sas.com/kustomize-base: golang
    sas.com/pod-uses-liveness-probe: http
    sas.com/pod-uses-readiness-probe: http
    sas.com/pod-uses-startup-probe: http
    sas.com/version: 6.8.0
    sidecar.istio.io/proxyCPU: 15m
    sidecar.istio.io/proxyMemory: 115Mi
  labels:
    app.kubernetes.io/name: sas-topic-management
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
    sas.com/deployment-base: golang
    workload.sas.com/class: stateless
  name: sas-topic-management
  namespace: franceavv
spec:
  selector:
    matchExpressions: []
    matchLabels:
      app.kubernetes.io/name: sas-topic-management
      sas.com/deployment: sas-viya
  template:
    metadata:
      annotations:
        prometheus.io/path: /internal/metrics
        prometheus.io/port: "8080"
        prometheus.io/scheme: https
        prometheus.io/scrape: "true"
        sas.com/certificate-file-format: pem
        sas.com/component-name: sas-topic-management
        sas.com/component-version: 6.8.0-20201202.1606937875615
        sas.com/kustomize-base: golang
        sas.com/pod-uses-liveness-probe: http
        sas.com/pod-uses-readiness-probe: http
        sas.com/pod-uses-startup-probe: http
        sas.com/tls-enabled-ports: all
        sas.com/version: 6.8.0
        seccomp.security.alpha.kubernetes.io/pod: runtime/default
        sidecar.istio.io/proxyCPU: 15m
        sidecar.istio.io/proxyMemory: 115Mi
      labels:
        app: sas-topic-management
        app.kubernetes.io/name: sas-topic-management
        sas.com/deployment: sas-viya
        workload.sas.com/class: stateless
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: In
                values:
                - stateless
              matchFields: []
            weight: 100
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: NotIn
                values:
                - compute
                - cas
                - stateful
                - connect
              matchFields: []
            weight: 50
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.azure.com/mode
                operator: NotIn
                values:
                - system
              matchFields: []
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - sas-topic-management
              namespaces: []
              topologyKey: kubernetes.io/hostname
            weight: 100
          requiredDuringSchedulingIgnoredDuringExecution: []
      automountServiceAccountToken: false
      containers:
      - args: null
        command: null
        env:
        - name: SAS_K8S_DEPLOYMENT_NAME
          value: sas-topic-management
        envFrom:
        - configMapRef:
            name: sas-go-config-7hc79bmf8m
        - configMapRef:
            name: sas-shared-config-49d8hthtb5
        - secretRef:
            name: sas-consul-client
        - configMapRef:
            name: sas-tls-config-99f79t29t5
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-topic-management:6.8.0-20201202.1606937875615
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - sh
              - -c
              - sleep 5
        livenessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http
            scheme: HTTPS
          periodSeconds: 10
        name: sas-topic-management
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/ready
            port: http
            scheme: HTTPS
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add: []
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        startupProbe:
          failureThreshold: 180
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http
            scheme: HTTPS
          periodSeconds: 10
        volumeDevices: []
        volumeMounts:
        - mountPath: /tmp
          name: tmp
        - mountPath: /security
          name: security
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/cacerts
          name: security
          subPath: cacerts
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/private
          name: security
          subPath: private
      hostAliases: []
      imagePullSecrets:
      - name: sas-image-pull-secrets-4m8cc729k8
      initContainers:
      - env:
        - name: KUBE_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: SAS_CERTFRAME_TOKEN_DIR
          value: /certframe-token
        - name: SAS_ADDITIONAL_CA_CERTIFICATES_DIR
          value: /customer-provided-ca-certificates
        envFrom:
        - configMapRef:
            name: sas-certframe-ingress-certificate-config-cmm2t44t88
        - configMapRef:
            name: sas-certframe-user-config-c4ch2c59m7
        - configMapRef:
            name: sas-certframe-config-ctgg29gf7t
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-certframe:3.9.0-20201203.1607016443086
        name: sas-certframe
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /certframe-token
          name: certframe-token
        - mountPath: /security
          name: security
        - mountPath: /customer-provided-ca-certificates
          name: customer-provided-ca-certificates
      readinessGates: []
      securityContext:
        runAsNonRoot: true
        supplementalGroups: []
        sysctls: []
      tolerations:
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateful
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateless
      volumes:
      - name: certframe-token
        secret:
          secretName: sas-certframe-token
      - emptyDir: {}
        name: security
      - configMap:
          name: sas-customer-provided-ca-certificates-29kdmk686c
        name: customer-provided-ca-certificates
      - emptyDir: {}
        name: tmp
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sas.com/certificate-file-format: jks
    sas.com/component-name: sas-transfer
    sas.com/component-version: 2.29.17-20201204.1607058995910
    sas.com/kustomize-base: spring
    sas.com/pod-uses-liveness-probe: http
    sas.com/pod-uses-readiness-probe: http
    sas.com/pod-uses-startup-probe: http
    sas.com/version: 2.29.17
    sidecar.istio.io/proxyCPU: 15m
    sidecar.istio.io/proxyMemory: 115Mi
  labels:
    app.kubernetes.io/name: sas-transfer
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
    sas.com/deployment-base: spring
    workload.sas.com/class: stateless
  name: sas-transfer
  namespace: franceavv
spec:
  selector:
    matchExpressions: []
    matchLabels:
      app.kubernetes.io/name: sas-transfer
      sas.com/deployment: sas-viya
  template:
    metadata:
      annotations:
        prometheus.io/path: /internal/metrics
        prometheus.io/port: "10445"
        prometheus.io/scheme: https
        prometheus.io/scrape: "true"
        sas.com/certificate-file-format: jks
        sas.com/component-name: sas-transfer
        sas.com/component-version: 2.29.17-20201204.1607058995910
        sas.com/kustomize-base: spring
        sas.com/pod-uses-liveness-probe: http
        sas.com/pod-uses-readiness-probe: http
        sas.com/pod-uses-startup-probe: http
        sas.com/tls-enabled-ports: all
        sas.com/version: 2.29.17
        seccomp.security.alpha.kubernetes.io/pod: runtime/default
        sidecar.istio.io/proxyCPU: 15m
        sidecar.istio.io/proxyMemory: 115Mi
      labels:
        app: sas-transfer
        app.kubernetes.io/name: sas-transfer
        sas.com/deployment: sas-viya
        workload.sas.com/class: stateless
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: In
                values:
                - stateless
              matchFields: []
            weight: 100
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: NotIn
                values:
                - compute
                - cas
                - stateful
                - connect
              matchFields: []
            weight: 50
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.azure.com/mode
                operator: NotIn
                values:
                - system
              matchFields: []
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - sas-transfer
              namespaces: []
              topologyKey: kubernetes.io/hostname
            weight: 100
          requiredDuringSchedulingIgnoredDuringExecution: []
      automountServiceAccountToken: false
      containers:
      - args: null
        command: null
        env:
        - name: SAS_K8S_DEPLOYMENT_NAME
          value: sas-transfer
        envFrom:
        - configMapRef:
            name: sas-java-config-t7t5thbgkd
        - configMapRef:
            name: sas-shared-config-49d8hthtb5
        - secretRef:
            name: sas-consul-client
        - configMapRef:
            name: sas-spring-management-config-d64bbkhb97
        - configMapRef:
            name: sas-java-tls-config-fch4777298
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-transfer:2.29.17-20201204.1607058995910
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - sh
              - -c
              - sleep 5
        livenessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http-internal
            scheme: HTTPS
          periodSeconds: 10
        name: sas-transfer
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        - containerPort: 10445
          name: http-internal
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/ready
            port: http-internal
            scheme: HTTPS
          periodSeconds: 10
        resources:
          limits:
            cpu: 2000m
            memory: 1Gi
          requests:
            cpu: 50m
            memory: 650M
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add: []
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        startupProbe:
          failureThreshold: 180
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http-internal
            scheme: HTTPS
          initialDelaySeconds: 20
          periodSeconds: 10
        volumeDevices: []
        volumeMounts:
        - mountPath: /tmp
          name: tmp
        - mountPath: /opt/sas/viya/config/tmp
          name: tmp
        - mountPath: /security
          name: security
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/cacerts
          name: security
          subPath: cacerts
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/private
          name: security
          subPath: private
      hostAliases: []
      imagePullSecrets:
      - name: sas-image-pull-secrets-4m8cc729k8
      initContainers:
      - env:
        - name: KUBE_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: SAS_CERTFRAME_TOKEN_DIR
          value: /certframe-token
        - name: SAS_ADDITIONAL_CA_CERTIFICATES_DIR
          value: /customer-provided-ca-certificates
        envFrom:
        - configMapRef:
            name: sas-certframe-ingress-certificate-config-cmm2t44t88
        - configMapRef:
            name: sas-certframe-user-config-c4ch2c59m7
        - configMapRef:
            name: sas-certframe-java-config-gf4kt94898
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-certframe:3.9.0-20201203.1607016443086
        name: sas-certframe
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /certframe-token
          name: certframe-token
        - mountPath: /security
          name: security
        - mountPath: /customer-provided-ca-certificates
          name: customer-provided-ca-certificates
      readinessGates: []
      securityContext:
        runAsNonRoot: true
        supplementalGroups: []
        sysctls: []
      tolerations:
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateful
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateless
      volumes:
      - name: certframe-token
        secret:
          secretName: sas-certframe-token
      - emptyDir: {}
        name: security
      - configMap:
          name: sas-customer-provided-ca-certificates-29kdmk686c
        name: customer-provided-ca-certificates
      - emptyDir: {}
        name: tmp
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sas.com/certificate-file-format: jks
    sas.com/component-name: sas-transformations
    sas.com/component-version: 2.24.9-20201209.1607544521387
    sas.com/kustomize-base: spring
    sas.com/pod-uses-liveness-probe: http
    sas.com/pod-uses-readiness-probe: http
    sas.com/pod-uses-startup-probe: http
    sas.com/version: 2.24.9
    sidecar.istio.io/proxyCPU: 15m
    sidecar.istio.io/proxyMemory: 115Mi
  labels:
    app.kubernetes.io/name: sas-transformations
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
    sas.com/deployment-base: spring
    workload.sas.com/class: stateless
  name: sas-transformations
  namespace: franceavv
spec:
  selector:
    matchExpressions: []
    matchLabels:
      app.kubernetes.io/name: sas-transformations
      sas.com/deployment: sas-viya
  template:
    metadata:
      annotations:
        prometheus.io/path: /internal/metrics
        prometheus.io/port: "10445"
        prometheus.io/scheme: https
        prometheus.io/scrape: "true"
        sas.com/certificate-file-format: jks
        sas.com/component-name: sas-transformations
        sas.com/component-version: 2.24.9-20201209.1607544521387
        sas.com/kustomize-base: spring
        sas.com/pod-uses-liveness-probe: http
        sas.com/pod-uses-readiness-probe: http
        sas.com/pod-uses-startup-probe: http
        sas.com/tls-enabled-ports: all
        sas.com/version: 2.24.9
        seccomp.security.alpha.kubernetes.io/pod: runtime/default
        sidecar.istio.io/proxyCPU: 15m
        sidecar.istio.io/proxyMemory: 115Mi
      labels:
        app: sas-transformations
        app.kubernetes.io/name: sas-transformations
        sas.com/deployment: sas-viya
        workload.sas.com/class: stateless
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: In
                values:
                - stateless
              matchFields: []
            weight: 100
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: NotIn
                values:
                - compute
                - cas
                - stateful
                - connect
              matchFields: []
            weight: 50
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.azure.com/mode
                operator: NotIn
                values:
                - system
              matchFields: []
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - sas-transformations
              namespaces: []
              topologyKey: kubernetes.io/hostname
            weight: 100
          requiredDuringSchedulingIgnoredDuringExecution: []
      automountServiceAccountToken: false
      containers:
      - args: null
        command: null
        env:
        - name: SAS_K8S_DEPLOYMENT_NAME
          value: sas-transformations
        - name: JAVA_OPTION_SERVER_PORT
        - name: MANAGEMENT_SERVER_PORT
          value: ${sas.${spring.application.name}.management.server.port:10445}
        envFrom:
        - configMapRef:
            name: sas-java-config-t7t5thbgkd
        - configMapRef:
            name: sas-shared-config-49d8hthtb5
        - secretRef:
            name: sas-consul-client
        - configMapRef:
            name: sas-spring-management-config-d64bbkhb97
        - configMapRef:
            name: sas-java-tls-config-fch4777298
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-transformations:2.24.9-20201209.1607544521387
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - sh
              - -c
              - sleep 5
        livenessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http-internal
            scheme: HTTPS
          periodSeconds: 10
        name: sas-transformations
        ports:
        - containerPort: 10445
          name: http-internal
          protocol: TCP
        - containerPort: 8080
          name: transformations
          protocol: TCP
        - containerPort: 8081
          name: datadiscovery
          protocol: TCP
        - containerPort: 8082
          name: dscvrytblprvdr
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/ready
            port: http-internal
            scheme: HTTPS
          periodSeconds: 10
        resources:
          limits:
            cpu: 2000m
            memory: 1Gi
          requests:
            cpu: 50m
            memory: 792Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add: []
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        startupProbe:
          failureThreshold: 180
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http-internal
            scheme: HTTPS
          initialDelaySeconds: 20
          periodSeconds: 10
        volumeDevices: []
        volumeMounts:
        - mountPath: /tmp
          name: tmp
        - mountPath: /opt/sas/viya/config/tmp
          name: tmp
        - mountPath: /security
          name: security
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/cacerts
          name: security
          subPath: cacerts
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/private
          name: security
          subPath: private
      hostAliases: []
      imagePullSecrets:
      - name: sas-image-pull-secrets-4m8cc729k8
      initContainers:
      - env:
        - name: KUBE_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: SAS_CERTFRAME_TOKEN_DIR
          value: /certframe-token
        - name: SAS_ADDITIONAL_CA_CERTIFICATES_DIR
          value: /customer-provided-ca-certificates
        envFrom:
        - configMapRef:
            name: sas-certframe-ingress-certificate-config-cmm2t44t88
        - configMapRef:
            name: sas-certframe-user-config-c4ch2c59m7
        - configMapRef:
            name: sas-certframe-java-config-gf4kt94898
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-certframe:3.9.0-20201203.1607016443086
        name: sas-certframe
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /certframe-token
          name: certframe-token
        - mountPath: /security
          name: security
        - mountPath: /customer-provided-ca-certificates
          name: customer-provided-ca-certificates
      readinessGates: []
      securityContext:
        runAsNonRoot: true
        supplementalGroups: []
        sysctls: []
      tolerations:
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateful
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateless
      volumes:
      - name: certframe-token
        secret:
          secretName: sas-certframe-token
      - emptyDir: {}
        name: security
      - configMap:
          name: sas-customer-provided-ca-certificates-29kdmk686c
        name: customer-provided-ca-certificates
      - emptyDir: {}
        name: tmp
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sas.com/certificate-file-format: pem
    sas.com/component-name: sas-types
    sas.com/component-version: 3.16.1-20201130.1606757966415
    sas.com/kustomize-base: golang
    sas.com/pod-uses-db-migrator: "true"
    sas.com/pod-uses-liveness-probe: http
    sas.com/pod-uses-readiness-probe: http
    sas.com/pod-uses-startup-probe: http
    sas.com/version: 3.16.1
    sidecar.istio.io/proxyCPU: 15m
    sidecar.istio.io/proxyMemory: 115Mi
  labels:
    app.kubernetes.io/name: sas-types
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
    sas.com/deployment-base: golang
    workload.sas.com/class: stateless
  name: sas-types
  namespace: franceavv
spec:
  selector:
    matchExpressions: []
    matchLabels:
      app.kubernetes.io/name: sas-types
      sas.com/deployment: sas-viya
  template:
    metadata:
      annotations:
        prometheus.io/path: /internal/metrics
        prometheus.io/port: "8080"
        prometheus.io/scheme: https
        prometheus.io/scrape: "true"
        sas.com/certificate-file-format: pem
        sas.com/component-name: sas-types
        sas.com/component-version: 3.16.1-20201130.1606757966415
        sas.com/kustomize-base: golang
        sas.com/pod-uses-liveness-probe: http
        sas.com/pod-uses-readiness-probe: http
        sas.com/pod-uses-startup-probe: http
        sas.com/tls-enabled-ports: all
        sas.com/version: 3.16.1
        seccomp.security.alpha.kubernetes.io/pod: runtime/default
        sidecar.istio.io/proxyCPU: 15m
        sidecar.istio.io/proxyMemory: 115Mi
      labels:
        app: sas-types
        app.kubernetes.io/name: sas-types
        sas.com/deployment: sas-viya
        workload.sas.com/class: stateless
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: In
                values:
                - stateless
              matchFields: []
            weight: 100
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: NotIn
                values:
                - compute
                - cas
                - stateful
                - connect
              matchFields: []
            weight: 50
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.azure.com/mode
                operator: NotIn
                values:
                - system
              matchFields: []
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - sas-types
              namespaces: []
              topologyKey: kubernetes.io/hostname
            weight: 100
          requiredDuringSchedulingIgnoredDuringExecution: []
      automountServiceAccountToken: false
      containers:
      - args: null
        command: null
        env:
        - name: SAS_K8S_DEPLOYMENT_NAME
          value: sas-types
        envFrom:
        - configMapRef:
            name: sas-go-config-7hc79bmf8m
        - configMapRef:
            name: sas-shared-config-49d8hthtb5
        - secretRef:
            name: sas-consul-client
        - configMapRef:
            name: sas-tls-config-99f79t29t5
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-types:3.16.1-20201130.1606757966415
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - sh
              - -c
              - sleep 5
        livenessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http
            scheme: HTTPS
          periodSeconds: 10
        name: sas-types
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/ready
            port: http
            scheme: HTTPS
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add: []
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        startupProbe:
          failureThreshold: 180
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http
            scheme: HTTPS
          periodSeconds: 10
        volumeDevices: []
        volumeMounts:
        - mountPath: /tmp
          name: tmp
        - mountPath: /security
          name: security
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/cacerts
          name: security
          subPath: cacerts
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/private
          name: security
          subPath: private
      hostAliases: []
      imagePullSecrets:
      - name: sas-image-pull-secrets-4m8cc729k8
      initContainers:
      - env:
        - name: KUBE_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: SAS_CERTFRAME_TOKEN_DIR
          value: /certframe-token
        - name: SAS_ADDITIONAL_CA_CERTIFICATES_DIR
          value: /customer-provided-ca-certificates
        envFrom:
        - configMapRef:
            name: sas-certframe-ingress-certificate-config-cmm2t44t88
        - configMapRef:
            name: sas-certframe-user-config-c4ch2c59m7
        - configMapRef:
            name: sas-certframe-config-ctgg29gf7t
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-certframe:3.9.0-20201203.1607016443086
        name: sas-certframe
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /certframe-token
          name: certframe-token
        - mountPath: /security
          name: security
        - mountPath: /customer-provided-ca-certificates
          name: customer-provided-ca-certificates
      - args:
        - cp -rf meta /data
        command:
        - /bin/sh
        - -c
        env: []
        envFrom: []
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-types:3.16.1-20201130.1606757966415
        imagePullPolicy: IfNotPresent
        name: hydrator
        ports: []
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 75m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add: []
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeDevices: []
        volumeMounts:
        - mountPath: /data
          name: shared-vol
      - args: null
        command: null
        env:
        - name: SSL_CERT_FILE
          value: /security/trustedcerts.pem
        - name: SAS_SERVICE_NAME
          value: sas-types
        envFrom:
        - configMapRef:
            name: sas-go-config-7hc79bmf8m
        - configMapRef:
            name: sas-shared-config-49d8hthtb5
        - configMapRef:
            name: sas-java-config-t7t5thbgkd
        - secretRef:
            name: sas-consul-client
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-db-migrator:1.1.0-20201209.1607523698073
        imagePullPolicy: IfNotPresent
        name: sas-db-migrator
        ports: []
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 100m
            memory: 90Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add: []
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeDevices: []
        volumeMounts:
        - mountPath: /security
          name: security
        - mountPath: /data
          name: shared-vol
      readinessGates: []
      securityContext:
        runAsNonRoot: true
        supplementalGroups: []
        sysctls: []
      tolerations:
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateful
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateless
      volumes:
      - name: certframe-token
        secret:
          secretName: sas-certframe-token
      - emptyDir: {}
        name: security
      - configMap:
          name: sas-customer-provided-ca-certificates-29kdmk686c
        name: customer-provided-ca-certificates
      - emptyDir: {}
        name: tmp
      - emptyDir: {}
        name: shared-vol
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sas.com/certificate-file-format: pem
    sas.com/component-name: sas-visual-analytics-administration
    sas.com/component-version: 1.53.1-20201202.1606941457830
    sas.com/kustomize-base: golang
    sas.com/pod-uses-db-migrator: "true"
    sas.com/pod-uses-liveness-probe: http
    sas.com/pod-uses-readiness-probe: http
    sas.com/pod-uses-startup-probe: http
    sas.com/version: 1.53.1
    sidecar.istio.io/proxyCPU: 15m
    sidecar.istio.io/proxyMemory: 115Mi
  labels:
    app.kubernetes.io/name: sas-visual-analytics-administration
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
    sas.com/deployment-base: golang
    workload.sas.com/class: stateless
  name: sas-visual-analytics-administration
  namespace: franceavv
spec:
  selector:
    matchExpressions: []
    matchLabels:
      app.kubernetes.io/name: sas-visual-analytics-administration
      sas.com/deployment: sas-viya
  template:
    metadata:
      annotations:
        prometheus.io/path: /internal/metrics
        prometheus.io/port: "8080"
        prometheus.io/scheme: https
        prometheus.io/scrape: "true"
        sas.com/certificate-file-format: pem
        sas.com/component-name: sas-visual-analytics-administration
        sas.com/component-version: 1.53.1-20201202.1606941457830
        sas.com/kustomize-base: golang
        sas.com/pod-uses-liveness-probe: http
        sas.com/pod-uses-readiness-probe: http
        sas.com/pod-uses-startup-probe: http
        sas.com/tls-enabled-ports: all
        sas.com/version: 1.53.1
        seccomp.security.alpha.kubernetes.io/pod: runtime/default
        sidecar.istio.io/proxyCPU: 15m
        sidecar.istio.io/proxyMemory: 115Mi
      labels:
        app: sas-visual-analytics-administration
        app.kubernetes.io/name: sas-visual-analytics-administration
        sas.com/deployment: sas-viya
        workload.sas.com/class: stateless
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: In
                values:
                - stateless
              matchFields: []
            weight: 100
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: NotIn
                values:
                - compute
                - cas
                - stateful
                - connect
              matchFields: []
            weight: 50
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.azure.com/mode
                operator: NotIn
                values:
                - system
              matchFields: []
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - sas-visual-analytics-administration
              namespaces: []
              topologyKey: kubernetes.io/hostname
            weight: 100
          requiredDuringSchedulingIgnoredDuringExecution: []
      automountServiceAccountToken: false
      containers:
      - args: null
        command: null
        env:
        - name: SAS_K8S_DEPLOYMENT_NAME
          value: sas-visual-analytics-administration
        envFrom:
        - configMapRef:
            name: sas-go-config-7hc79bmf8m
        - configMapRef:
            name: sas-shared-config-49d8hthtb5
        - secretRef:
            name: sas-consul-client
        - configMapRef:
            name: sas-tls-config-99f79t29t5
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-visual-analytics-administration:1.53.1-20201202.1606941457830
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - sh
              - -c
              - sleep 5
        livenessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http
            scheme: HTTPS
          periodSeconds: 10
        name: sas-visual-analytics-administration
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/ready
            port: http
            scheme: HTTPS
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add: []
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        startupProbe:
          failureThreshold: 180
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http
            scheme: HTTPS
          periodSeconds: 10
        volumeDevices: []
        volumeMounts:
        - mountPath: /tmp
          name: tmp
        - mountPath: /security
          name: security
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/cacerts
          name: security
          subPath: cacerts
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/private
          name: security
          subPath: private
      hostAliases: []
      imagePullSecrets:
      - name: sas-image-pull-secrets-4m8cc729k8
      initContainers:
      - env:
        - name: KUBE_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: SAS_CERTFRAME_TOKEN_DIR
          value: /certframe-token
        - name: SAS_ADDITIONAL_CA_CERTIFICATES_DIR
          value: /customer-provided-ca-certificates
        envFrom:
        - configMapRef:
            name: sas-certframe-ingress-certificate-config-cmm2t44t88
        - configMapRef:
            name: sas-certframe-user-config-c4ch2c59m7
        - configMapRef:
            name: sas-certframe-config-ctgg29gf7t
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-certframe:3.9.0-20201203.1607016443086
        name: sas-certframe
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /certframe-token
          name: certframe-token
        - mountPath: /security
          name: security
        - mountPath: /customer-provided-ca-certificates
          name: customer-provided-ca-certificates
      - args:
        - cp -rf meta /data
        command:
        - /bin/sh
        - -c
        env: []
        envFrom: []
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-visual-analytics-administration:1.53.1-20201202.1606941457830
        imagePullPolicy: IfNotPresent
        name: hydrator
        ports: []
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 75m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add: []
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeDevices: []
        volumeMounts:
        - mountPath: /data
          name: shared-vol
      - args: null
        command: null
        env:
        - name: SSL_CERT_FILE
          value: /security/trustedcerts.pem
        - name: SAS_SERVICE_NAME
          value: sas-visual-analytics-administration
        envFrom:
        - configMapRef:
            name: sas-go-config-7hc79bmf8m
        - configMapRef:
            name: sas-shared-config-49d8hthtb5
        - configMapRef:
            name: sas-java-config-t7t5thbgkd
        - secretRef:
            name: sas-consul-client
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-db-migrator:1.1.0-20201209.1607523698073
        imagePullPolicy: IfNotPresent
        name: sas-db-migrator
        ports: []
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 100m
            memory: 90Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add: []
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeDevices: []
        volumeMounts:
        - mountPath: /security
          name: security
        - mountPath: /data
          name: shared-vol
      readinessGates: []
      securityContext:
        runAsNonRoot: true
        supplementalGroups: []
        sysctls: []
      tolerations:
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateful
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateless
      volumes:
      - name: certframe-token
        secret:
          secretName: sas-certframe-token
      - emptyDir: {}
        name: security
      - configMap:
          name: sas-customer-provided-ca-certificates-29kdmk686c
        name: customer-provided-ca-certificates
      - emptyDir: {}
        name: tmp
      - emptyDir: {}
        name: shared-vol
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sas.com/certificate-file-format: pem
    sas.com/component-name: sas-visual-analytics-app
    sas.com/component-version: 2.54.0-20201209.1607498056870
    sas.com/kustomize-base: golang
    sas.com/pod-uses-liveness-probe: http
    sas.com/pod-uses-readiness-probe: http
    sas.com/pod-uses-startup-probe: http
    sas.com/version: 2.54.0
    sidecar.istio.io/proxyCPU: 15m
    sidecar.istio.io/proxyMemory: 115Mi
  labels:
    app.kubernetes.io/name: sas-visual-analytics-app
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
    sas.com/deployment-base: golang
    workload.sas.com/class: stateless
  name: sas-visual-analytics-app
  namespace: franceavv
spec:
  selector:
    matchExpressions: []
    matchLabels:
      app.kubernetes.io/name: sas-visual-analytics-app
      sas.com/deployment: sas-viya
  template:
    metadata:
      annotations:
        prometheus.io/path: /internal/metrics
        prometheus.io/port: "8080"
        prometheus.io/scheme: https
        prometheus.io/scrape: "true"
        sas.com/certificate-file-format: pem
        sas.com/component-name: sas-visual-analytics-app
        sas.com/component-version: 2.54.0-20201209.1607498056870
        sas.com/kustomize-base: golang
        sas.com/pod-uses-liveness-probe: http
        sas.com/pod-uses-readiness-probe: http
        sas.com/pod-uses-startup-probe: http
        sas.com/tls-enabled-ports: all
        sas.com/version: 2.54.0
        seccomp.security.alpha.kubernetes.io/pod: runtime/default
        sidecar.istio.io/proxyCPU: 15m
        sidecar.istio.io/proxyMemory: 115Mi
      labels:
        app: sas-visual-analytics-app
        app.kubernetes.io/name: sas-visual-analytics-app
        sas.com/deployment: sas-viya
        workload.sas.com/class: stateless
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: In
                values:
                - stateless
              matchFields: []
            weight: 100
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: NotIn
                values:
                - compute
                - cas
                - stateful
                - connect
              matchFields: []
            weight: 50
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.azure.com/mode
                operator: NotIn
                values:
                - system
              matchFields: []
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - sas-visual-analytics-app
              namespaces: []
              topologyKey: kubernetes.io/hostname
            weight: 100
          requiredDuringSchedulingIgnoredDuringExecution: []
      automountServiceAccountToken: false
      containers:
      - args: null
        command: null
        env:
        - name: SAS_K8S_DEPLOYMENT_NAME
          value: sas-visual-analytics-app
        envFrom:
        - configMapRef:
            name: sas-go-config-7hc79bmf8m
        - configMapRef:
            name: sas-shared-config-49d8hthtb5
        - secretRef:
            name: sas-consul-client
        - configMapRef:
            name: sas-tls-config-99f79t29t5
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-visual-analytics-app:2.54.0-20201209.1607498056870
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - sh
              - -c
              - sleep 5
        livenessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http
            scheme: HTTPS
          periodSeconds: 10
        name: sas-visual-analytics-app
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/ready
            port: http
            scheme: HTTPS
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add: []
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        startupProbe:
          failureThreshold: 180
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http
            scheme: HTTPS
          periodSeconds: 10
        volumeDevices: []
        volumeMounts:
        - mountPath: /tmp
          name: tmp
        - mountPath: /security
          name: security
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/cacerts
          name: security
          subPath: cacerts
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/private
          name: security
          subPath: private
      hostAliases: []
      imagePullSecrets:
      - name: sas-image-pull-secrets-4m8cc729k8
      initContainers:
      - env:
        - name: KUBE_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: SAS_CERTFRAME_TOKEN_DIR
          value: /certframe-token
        - name: SAS_ADDITIONAL_CA_CERTIFICATES_DIR
          value: /customer-provided-ca-certificates
        envFrom:
        - configMapRef:
            name: sas-certframe-ingress-certificate-config-cmm2t44t88
        - configMapRef:
            name: sas-certframe-user-config-c4ch2c59m7
        - configMapRef:
            name: sas-certframe-config-ctgg29gf7t
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-certframe:3.9.0-20201203.1607016443086
        name: sas-certframe
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /certframe-token
          name: certframe-token
        - mountPath: /security
          name: security
        - mountPath: /customer-provided-ca-certificates
          name: customer-provided-ca-certificates
      readinessGates: []
      securityContext:
        runAsNonRoot: true
        supplementalGroups: []
        sysctls: []
      tolerations:
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateful
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateless
      volumes:
      - name: certframe-token
        secret:
          secretName: sas-certframe-token
      - emptyDir: {}
        name: security
      - configMap:
          name: sas-customer-provided-ca-certificates-29kdmk686c
        name: customer-provided-ca-certificates
      - emptyDir: {}
        name: tmp
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sas.com/certificate-file-format: jks
    sas.com/component-name: sas-web-data-access
    sas.com/component-version: 1.20.0-20201209.1607532765066
    sas.com/kustomize-base: spring
    sas.com/pod-uses-liveness-probe: http
    sas.com/pod-uses-readiness-probe: http
    sas.com/pod-uses-startup-probe: http
    sas.com/version: 1.20.0
    sidecar.istio.io/proxyCPU: 15m
    sidecar.istio.io/proxyMemory: 115Mi
  labels:
    app.kubernetes.io/name: sas-web-data-access
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
    sas.com/deployment-base: spring
    workload.sas.com/class: stateless
  name: sas-web-data-access
  namespace: franceavv
spec:
  selector:
    matchExpressions: []
    matchLabels:
      app.kubernetes.io/name: sas-web-data-access
      sas.com/deployment: sas-viya
  template:
    metadata:
      annotations:
        prometheus.io/path: /internal/metrics
        prometheus.io/port: "10445"
        prometheus.io/scheme: https
        prometheus.io/scrape: "true"
        sas.com/certificate-file-format: jks
        sas.com/component-name: sas-web-data-access
        sas.com/component-version: 1.20.0-20201209.1607532765066
        sas.com/kustomize-base: spring
        sas.com/pod-uses-liveness-probe: http
        sas.com/pod-uses-readiness-probe: http
        sas.com/pod-uses-startup-probe: http
        sas.com/tls-enabled-ports: all
        sas.com/version: 1.20.0
        seccomp.security.alpha.kubernetes.io/pod: runtime/default
        sidecar.istio.io/proxyCPU: 15m
        sidecar.istio.io/proxyMemory: 115Mi
      labels:
        app: sas-web-data-access
        app.kubernetes.io/name: sas-web-data-access
        sas.com/deployment: sas-viya
        workload.sas.com/class: stateless
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: In
                values:
                - stateless
              matchFields: []
            weight: 100
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: NotIn
                values:
                - compute
                - cas
                - stateful
                - connect
              matchFields: []
            weight: 50
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.azure.com/mode
                operator: NotIn
                values:
                - system
              matchFields: []
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - sas-web-data-access
              namespaces: []
              topologyKey: kubernetes.io/hostname
            weight: 100
          requiredDuringSchedulingIgnoredDuringExecution: []
      automountServiceAccountToken: false
      containers:
      - args: null
        command: null
        env:
        - name: SAS_K8S_DEPLOYMENT_NAME
          value: sas-web-data-access
        envFrom:
        - configMapRef:
            name: sas-java-config-t7t5thbgkd
        - configMapRef:
            name: sas-shared-config-49d8hthtb5
        - secretRef:
            name: sas-consul-client
        - configMapRef:
            name: sas-spring-management-config-d64bbkhb97
        - configMapRef:
            name: sas-java-tls-config-fch4777298
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-web-data-access:1.20.0-20201209.1607532765066
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - sh
              - -c
              - sleep 5
        livenessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http-internal
            scheme: HTTPS
          periodSeconds: 10
        name: sas-web-data-access
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        - containerPort: 10445
          name: http-internal
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/ready
            port: http-internal
            scheme: HTTPS
          periodSeconds: 10
        resources:
          limits:
            cpu: 2000m
            memory: 1Gi
          requests:
            cpu: 50m
            memory: 650M
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add: []
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        startupProbe:
          failureThreshold: 180
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http-internal
            scheme: HTTPS
          initialDelaySeconds: 20
          periodSeconds: 10
        volumeDevices: []
        volumeMounts:
        - mountPath: /tmp
          name: tmp
        - mountPath: /opt/sas/viya/config/tmp
          name: tmp
        - mountPath: /security
          name: security
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/cacerts
          name: security
          subPath: cacerts
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/private
          name: security
          subPath: private
      hostAliases: []
      imagePullSecrets:
      - name: sas-image-pull-secrets-4m8cc729k8
      initContainers:
      - env:
        - name: KUBE_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: SAS_CERTFRAME_TOKEN_DIR
          value: /certframe-token
        - name: SAS_ADDITIONAL_CA_CERTIFICATES_DIR
          value: /customer-provided-ca-certificates
        envFrom:
        - configMapRef:
            name: sas-certframe-ingress-certificate-config-cmm2t44t88
        - configMapRef:
            name: sas-certframe-user-config-c4ch2c59m7
        - configMapRef:
            name: sas-certframe-java-config-gf4kt94898
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-certframe:3.9.0-20201203.1607016443086
        name: sas-certframe
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /certframe-token
          name: certframe-token
        - mountPath: /security
          name: security
        - mountPath: /customer-provided-ca-certificates
          name: customer-provided-ca-certificates
      readinessGates: []
      securityContext:
        runAsNonRoot: true
        supplementalGroups: []
        sysctls: []
      tolerations:
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateful
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateless
      volumes:
      - name: certframe-token
        secret:
          secretName: sas-certframe-token
      - emptyDir: {}
        name: security
      - configMap:
          name: sas-customer-provided-ca-certificates-29kdmk686c
        name: customer-provided-ca-certificates
      - emptyDir: {}
        name: tmp
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sas.com/certificate-file-format: jks
    sas.com/component-name: sas-workflow
    sas.com/component-version: 3.16.4-20201204.1607059513666
    sas.com/kustomize-base: spring
    sas.com/pod-uses-liveness-probe: http
    sas.com/pod-uses-readiness-probe: http
    sas.com/pod-uses-startup-probe: http
    sas.com/version: 3.16.4
    sidecar.istio.io/proxyCPU: 15m
    sidecar.istio.io/proxyMemory: 115Mi
  labels:
    app.kubernetes.io/name: sas-workflow
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
    sas.com/deployment-base: spring
    workload.sas.com/class: stateless
  name: sas-workflow
  namespace: franceavv
spec:
  selector:
    matchExpressions: []
    matchLabels:
      app.kubernetes.io/name: sas-workflow
      sas.com/deployment: sas-viya
  template:
    metadata:
      annotations:
        prometheus.io/path: /internal/metrics
        prometheus.io/port: "10445"
        prometheus.io/scheme: https
        prometheus.io/scrape: "true"
        sas.com/certificate-file-format: jks
        sas.com/component-name: sas-workflow
        sas.com/component-version: 3.16.4-20201204.1607059513666
        sas.com/kustomize-base: spring
        sas.com/pod-uses-liveness-probe: http
        sas.com/pod-uses-readiness-probe: http
        sas.com/pod-uses-startup-probe: http
        sas.com/tls-enabled-ports: all
        sas.com/version: 3.16.4
        seccomp.security.alpha.kubernetes.io/pod: runtime/default
        sidecar.istio.io/proxyCPU: 15m
        sidecar.istio.io/proxyMemory: 115Mi
      labels:
        app: sas-workflow
        app.kubernetes.io/name: sas-workflow
        sas.com/deployment: sas-viya
        workload.sas.com/class: stateless
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: In
                values:
                - stateless
              matchFields: []
            weight: 100
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: NotIn
                values:
                - compute
                - cas
                - stateful
                - connect
              matchFields: []
            weight: 50
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.azure.com/mode
                operator: NotIn
                values:
                - system
              matchFields: []
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - sas-workflow
              namespaces: []
              topologyKey: kubernetes.io/hostname
            weight: 100
          requiredDuringSchedulingIgnoredDuringExecution: []
      automountServiceAccountToken: false
      containers:
      - args: null
        command: null
        env:
        - name: SAS_K8S_DEPLOYMENT_NAME
          value: sas-workflow
        envFrom:
        - configMapRef:
            name: sas-java-config-t7t5thbgkd
        - configMapRef:
            name: sas-shared-config-49d8hthtb5
        - secretRef:
            name: sas-consul-client
        - configMapRef:
            name: sas-spring-management-config-d64bbkhb97
        - configMapRef:
            name: sas-java-tls-config-fch4777298
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-workflow:3.16.4-20201204.1607059513666
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - sh
              - -c
              - sleep 5
        livenessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http-internal
            scheme: HTTPS
          periodSeconds: 10
        name: sas-workflow
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        - containerPort: 10445
          name: http-internal
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/ready
            port: http-internal
            scheme: HTTPS
          periodSeconds: 10
        resources:
          limits:
            cpu: 2000m
            memory: 1Gi
          requests:
            cpu: 50m
            memory: 650M
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add: []
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        startupProbe:
          failureThreshold: 180
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http-internal
            scheme: HTTPS
          initialDelaySeconds: 20
          periodSeconds: 10
        volumeDevices: []
        volumeMounts:
        - mountPath: /tmp
          name: tmp
        - mountPath: /opt/sas/viya/config/tmp
          name: tmp
        - mountPath: /security
          name: security
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/cacerts
          name: security
          subPath: cacerts
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/private
          name: security
          subPath: private
      hostAliases: []
      imagePullSecrets:
      - name: sas-image-pull-secrets-4m8cc729k8
      initContainers:
      - env:
        - name: KUBE_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: SAS_CERTFRAME_TOKEN_DIR
          value: /certframe-token
        - name: SAS_ADDITIONAL_CA_CERTIFICATES_DIR
          value: /customer-provided-ca-certificates
        envFrom:
        - configMapRef:
            name: sas-certframe-ingress-certificate-config-cmm2t44t88
        - configMapRef:
            name: sas-certframe-user-config-c4ch2c59m7
        - configMapRef:
            name: sas-certframe-java-config-gf4kt94898
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-certframe:3.9.0-20201203.1607016443086
        name: sas-certframe
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /certframe-token
          name: certframe-token
        - mountPath: /security
          name: security
        - mountPath: /customer-provided-ca-certificates
          name: customer-provided-ca-certificates
      readinessGates: []
      securityContext:
        runAsNonRoot: true
        supplementalGroups: []
        sysctls: []
      tolerations:
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateful
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateless
      volumes:
      - name: certframe-token
        secret:
          secretName: sas-certframe-token
      - emptyDir: {}
        name: security
      - configMap:
          name: sas-customer-provided-ca-certificates-29kdmk686c
        name: customer-provided-ca-certificates
      - emptyDir: {}
        name: tmp
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sas.com/certificate-file-format: jks
    sas.com/component-name: sas-workflow-definition-history
    sas.com/component-version: 2.7.8-20201212.1607769254594
    sas.com/kustomize-base: spring
    sas.com/pod-uses-liveness-probe: http
    sas.com/pod-uses-readiness-probe: http
    sas.com/pod-uses-startup-probe: http
    sas.com/version: 2.7.8
    sidecar.istio.io/proxyCPU: 15m
    sidecar.istio.io/proxyMemory: 115Mi
  labels:
    app.kubernetes.io/name: sas-workflow-definition-history
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
    sas.com/deployment-base: spring
    workload.sas.com/class: stateless
  name: sas-workflow-definition-history
  namespace: franceavv
spec:
  selector:
    matchExpressions: []
    matchLabels:
      app.kubernetes.io/name: sas-workflow-definition-history
      sas.com/deployment: sas-viya
  template:
    metadata:
      annotations:
        prometheus.io/path: /internal/metrics
        prometheus.io/port: "10445"
        prometheus.io/scheme: https
        prometheus.io/scrape: "true"
        sas.com/certificate-file-format: jks
        sas.com/component-name: sas-workflow-definition-history
        sas.com/component-version: 2.7.8-20201212.1607769254594
        sas.com/kustomize-base: spring
        sas.com/pod-uses-liveness-probe: http
        sas.com/pod-uses-readiness-probe: http
        sas.com/pod-uses-startup-probe: http
        sas.com/tls-enabled-ports: all
        sas.com/version: 2.7.8
        seccomp.security.alpha.kubernetes.io/pod: runtime/default
        sidecar.istio.io/proxyCPU: 15m
        sidecar.istio.io/proxyMemory: 115Mi
      labels:
        app: sas-workflow-definition-history
        app.kubernetes.io/name: sas-workflow-definition-history
        sas.com/deployment: sas-viya
        workload.sas.com/class: stateless
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: In
                values:
                - stateless
              matchFields: []
            weight: 100
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: NotIn
                values:
                - compute
                - cas
                - stateful
                - connect
              matchFields: []
            weight: 50
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.azure.com/mode
                operator: NotIn
                values:
                - system
              matchFields: []
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - sas-workflow-definition-history
              namespaces: []
              topologyKey: kubernetes.io/hostname
            weight: 100
          requiredDuringSchedulingIgnoredDuringExecution: []
      automountServiceAccountToken: false
      containers:
      - args: null
        command: null
        env:
        - name: SAS_K8S_DEPLOYMENT_NAME
          value: sas-workflow-definition-history
        - name: JAVA_OPTION_SERVER_PORT
        - name: MANAGEMENT_SERVER_PORT
          value: ${sas.${spring.application.name}.management.server.port:10445}
        envFrom:
        - configMapRef:
            name: sas-java-config-t7t5thbgkd
        - configMapRef:
            name: sas-shared-config-49d8hthtb5
        - secretRef:
            name: sas-consul-client
        - configMapRef:
            name: sas-spring-management-config-d64bbkhb97
        - configMapRef:
            name: sas-java-tls-config-fch4777298
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-workflow-definition-history:2.7.8-20201212.1607769254594
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - sh
              - -c
              - sleep 5
        livenessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http-internal
            scheme: HTTPS
          periodSeconds: 10
        name: sas-workflow-definition-history
        ports:
        - containerPort: 10445
          name: http-internal
          protocol: TCP
        - containerPort: 8081
          name: workflowdefn
          protocol: TCP
        - containerPort: 8082
          name: workflowhistory
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/ready
            port: http-internal
            scheme: HTTPS
          periodSeconds: 10
        resources:
          limits:
            cpu: 2000m
            memory: 1Gi
          requests:
            cpu: 50m
            memory: 650M
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add: []
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        startupProbe:
          failureThreshold: 180
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http-internal
            scheme: HTTPS
          initialDelaySeconds: 20
          periodSeconds: 10
        volumeDevices: []
        volumeMounts:
        - mountPath: /tmp
          name: tmp
        - mountPath: /opt/sas/viya/config/tmp
          name: tmp
        - mountPath: /security
          name: security
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/cacerts
          name: security
          subPath: cacerts
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/private
          name: security
          subPath: private
      hostAliases: []
      imagePullSecrets:
      - name: sas-image-pull-secrets-4m8cc729k8
      initContainers:
      - env:
        - name: KUBE_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: SAS_CERTFRAME_TOKEN_DIR
          value: /certframe-token
        - name: SAS_ADDITIONAL_CA_CERTIFICATES_DIR
          value: /customer-provided-ca-certificates
        envFrom:
        - configMapRef:
            name: sas-certframe-ingress-certificate-config-cmm2t44t88
        - configMapRef:
            name: sas-certframe-user-config-c4ch2c59m7
        - configMapRef:
            name: sas-certframe-java-config-gf4kt94898
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-certframe:3.9.0-20201203.1607016443086
        name: sas-certframe
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /certframe-token
          name: certframe-token
        - mountPath: /security
          name: security
        - mountPath: /customer-provided-ca-certificates
          name: customer-provided-ca-certificates
      readinessGates: []
      securityContext:
        runAsNonRoot: true
        supplementalGroups: []
        sysctls: []
      tolerations:
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateful
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateless
      volumes:
      - name: certframe-token
        secret:
          secretName: sas-certframe-token
      - emptyDir: {}
        name: security
      - configMap:
          name: sas-customer-provided-ca-certificates-29kdmk686c
        name: customer-provided-ca-certificates
      - emptyDir: {}
        name: tmp
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sas.com/certificate-file-format: pem
    sas.com/component-name: sas-workflow-manager-app
    sas.com/component-version: 2.11.0-20201210.1607647072535
    sas.com/kustomize-base: golang
    sas.com/pod-uses-liveness-probe: http
    sas.com/pod-uses-readiness-probe: http
    sas.com/pod-uses-startup-probe: http
    sas.com/version: 2.11.0
    sidecar.istio.io/proxyCPU: 15m
    sidecar.istio.io/proxyMemory: 115Mi
  labels:
    app.kubernetes.io/name: sas-workflow-manager-app
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
    sas.com/deployment-base: golang
    workload.sas.com/class: stateless
  name: sas-workflow-manager-app
  namespace: franceavv
spec:
  selector:
    matchExpressions: []
    matchLabels:
      app.kubernetes.io/name: sas-workflow-manager-app
      sas.com/deployment: sas-viya
  template:
    metadata:
      annotations:
        prometheus.io/path: /internal/metrics
        prometheus.io/port: "8080"
        prometheus.io/scheme: https
        prometheus.io/scrape: "true"
        sas.com/certificate-file-format: pem
        sas.com/component-name: sas-workflow-manager-app
        sas.com/component-version: 2.11.0-20201210.1607647072535
        sas.com/kustomize-base: golang
        sas.com/pod-uses-liveness-probe: http
        sas.com/pod-uses-readiness-probe: http
        sas.com/pod-uses-startup-probe: http
        sas.com/tls-enabled-ports: all
        sas.com/version: 2.11.0
        seccomp.security.alpha.kubernetes.io/pod: runtime/default
        sidecar.istio.io/proxyCPU: 15m
        sidecar.istio.io/proxyMemory: 115Mi
      labels:
        app: sas-workflow-manager-app
        app.kubernetes.io/name: sas-workflow-manager-app
        sas.com/deployment: sas-viya
        workload.sas.com/class: stateless
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: In
                values:
                - stateless
              matchFields: []
            weight: 100
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: NotIn
                values:
                - compute
                - cas
                - stateful
                - connect
              matchFields: []
            weight: 50
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.azure.com/mode
                operator: NotIn
                values:
                - system
              matchFields: []
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - sas-workflow-manager-app
              namespaces: []
              topologyKey: kubernetes.io/hostname
            weight: 100
          requiredDuringSchedulingIgnoredDuringExecution: []
      automountServiceAccountToken: false
      containers:
      - args: null
        command: null
        env:
        - name: SAS_K8S_DEPLOYMENT_NAME
          value: sas-workflow-manager-app
        envFrom:
        - configMapRef:
            name: sas-go-config-7hc79bmf8m
        - configMapRef:
            name: sas-shared-config-49d8hthtb5
        - secretRef:
            name: sas-consul-client
        - configMapRef:
            name: sas-tls-config-99f79t29t5
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-workflow-manager-app:2.11.0-20201210.1607647072535
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - sh
              - -c
              - sleep 5
        livenessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http
            scheme: HTTPS
          periodSeconds: 10
        name: sas-workflow-manager-app
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/ready
            port: http
            scheme: HTTPS
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add: []
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        startupProbe:
          failureThreshold: 180
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http
            scheme: HTTPS
          periodSeconds: 10
        volumeDevices: []
        volumeMounts:
        - mountPath: /tmp
          name: tmp
        - mountPath: /security
          name: security
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/cacerts
          name: security
          subPath: cacerts
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/private
          name: security
          subPath: private
      hostAliases: []
      imagePullSecrets:
      - name: sas-image-pull-secrets-4m8cc729k8
      initContainers:
      - env:
        - name: KUBE_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: SAS_CERTFRAME_TOKEN_DIR
          value: /certframe-token
        - name: SAS_ADDITIONAL_CA_CERTIFICATES_DIR
          value: /customer-provided-ca-certificates
        envFrom:
        - configMapRef:
            name: sas-certframe-ingress-certificate-config-cmm2t44t88
        - configMapRef:
            name: sas-certframe-user-config-c4ch2c59m7
        - configMapRef:
            name: sas-certframe-config-ctgg29gf7t
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-certframe:3.9.0-20201203.1607016443086
        name: sas-certframe
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /certframe-token
          name: certframe-token
        - mountPath: /security
          name: security
        - mountPath: /customer-provided-ca-certificates
          name: customer-provided-ca-certificates
      readinessGates: []
      securityContext:
        runAsNonRoot: true
        supplementalGroups: []
        sysctls: []
      tolerations:
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateful
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateless
      volumes:
      - name: certframe-token
        secret:
          secretName: sas-certframe-token
      - emptyDir: {}
        name: security
      - configMap:
          name: sas-customer-provided-ca-certificates-29kdmk686c
        name: customer-provided-ca-certificates
      - emptyDir: {}
        name: tmp
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  annotations:
    sas.com/certificate-file-format: jks
    sas.com/component-name: sas-cachelocator
    sas.com/component-version: 1.23.11-20201204.1607051152259
    sas.com/kustomize-base: spring
    sas.com/pod-uses-liveness-probe: http
    sas.com/pod-uses-readiness-probe: http
    sas.com/pod-uses-startup-probe: http
    sas.com/registry-tags: proxy, rest-commons, http
    sas.com/version: 1.23.11
    sidecar.istio.io/proxyCPU: 15m
    sidecar.istio.io/proxyMemory: 115Mi
  labels:
    app.kubernetes.io/name: sas-cachelocator
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
    sas.com/statefulset-base: spring
    workload.sas.com/class: stateful
  name: sas-cachelocator
  namespace: franceavv
spec:
  replicas: 2
  selector:
    matchExpressions: []
    matchLabels:
      app.kubernetes.io/name: sas-cachelocator
      sas.com/deployment: sas-viya
  serviceName: sas-cachelocator
  template:
    metadata:
      annotations:
        prometheus.io/path: /internal/metrics
        prometheus.io/port: "10445"
        prometheus.io/scheme: https
        prometheus.io/scrape: "true"
        sas.com/certificate-file-format: jks
        sas.com/component-name: sas-cachelocator
        sas.com/component-version: 1.23.11-20201204.1607051152259
        sas.com/kustomize-base: spring
        sas.com/pod-uses-liveness-probe: http
        sas.com/pod-uses-readiness-probe: http
        sas.com/pod-uses-startup-probe: http
        sas.com/tls-enabled-ports: all
        sas.com/version: 1.23.11
        seccomp.security.alpha.kubernetes.io/pod: runtime/default
        sidecar.istio.io/proxyCPU: 15m
        sidecar.istio.io/proxyMemory: 115Mi
      labels:
        app: sas-cachelocator
        app.kubernetes.io/name: sas-cachelocator
        sas.com/deployment: sas-viya
        workload.sas.com/class: stateful
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: In
                values:
                - stateful
              matchFields: []
            weight: 100
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: NotIn
                values:
                - compute
                - cas
                - stateless
                - connect
              matchFields: []
            weight: 50
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.azure.com/mode
                operator: NotIn
                values:
                - system
              matchFields: []
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - sas-cachelocator
              namespaces: []
              topologyKey: kubernetes.io/hostname
            weight: 100
          requiredDuringSchedulingIgnoredDuringExecution: []
      automountServiceAccountToken: false
      containers:
      - args: null
        command: null
        env:
        - name: JAVA_OPTION_TMPDIR
          value: -Djava.io.tmpdir=/opt/sas/viya/config/tmp/sas-cachelocator-tmp
        - name: SAS_CACHE_LOCATOR_AGENTREGISTRATIONENABLED
          value: "true"
        - name: SAS_CACHE_LOCATOR_HOSTNAMEFORCLIENTS
          value: sas-cachelocator
        - name: SAS_CACHE_LOCATOR_PORT
          value: "10334"
        - name: SAS_CACHE_LOCATOR_WORKINGDIRECTORY
          value: /opt/sas/viya/config/tmp/sas-cachelocator-tmp
        - name: SAS_MANAGEMENT_INDICATOR_BOOTSTRAP_ENABLED
          value: "false"
        - name: SPRING_CLOUD_CONSUL_DISCOVERY_REGISTER
          value: "false"
        - name: SAS_CACHE_LOCATOR_PODNAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        envFrom:
        - configMapRef:
            name: sas-java-config-t7t5thbgkd
        - configMapRef:
            name: sas-shared-config-49d8hthtb5
        - secretRef:
            name: sas-consul-client
        - configMapRef:
            name: sas-spring-management-config-d64bbkhb97
        - configMapRef:
            name: sas-java-tls-config-fch4777298
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-cachelocator:1.23.11-20201204.1607051152259
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - sh
              - -c
              - sleep 5
        livenessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http-internal
            scheme: HTTPS
          periodSeconds: 10
        name: sas-cachelocator
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        - containerPort: 10445
          name: http-internal
          protocol: TCP
        - containerPort: 10334
          name: cachelocator
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/ready
            port: http-internal
            scheme: HTTPS
          periodSeconds: 10
        resources:
          limits:
            cpu: 2000m
            memory: 1Gi
          requests:
            cpu: 50m
            memory: 750M
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add: []
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        startupProbe:
          failureThreshold: 180
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http-internal
            scheme: HTTPS
          periodSeconds: 10
        volumeDevices: []
        volumeMounts:
        - mountPath: /opt/sas/viya/config/tmp
          name: tmp
        - mountPath: /tmp
          name: tmp
        - mountPath: /opt/sas/viya/config/tmp/sas-cachelocator
          name: cachelocator
        - mountPath: /opt/sas/viya/config/tmp/sas-cachelocator-tmp
          name: tmp
        - mountPath: /security
          name: security
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/cacerts
          name: security
          subPath: cacerts
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/private
          name: security
          subPath: private
      hostAliases: []
      imagePullSecrets:
      - name: sas-image-pull-secrets-4m8cc729k8
      initContainers:
      - env:
        - name: KUBE_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: SAS_CERTFRAME_TOKEN_DIR
          value: /certframe-token
        - name: SAS_ADDITIONAL_CA_CERTIFICATES_DIR
          value: /customer-provided-ca-certificates
        envFrom:
        - configMapRef:
            name: sas-certframe-ingress-certificate-config-cmm2t44t88
        - configMapRef:
            name: sas-certframe-user-config-c4ch2c59m7
        - configMapRef:
            name: sas-certframe-java-config-gf4kt94898
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-certframe:3.9.0-20201203.1607016443086
        name: sas-certframe
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /certframe-token
          name: certframe-token
        - mountPath: /security
          name: security
        - mountPath: /customer-provided-ca-certificates
          name: customer-provided-ca-certificates
      readinessGates: []
      securityContext:
        fsGroup: 1001
        runAsNonRoot: true
        supplementalGroups: []
        sysctls: []
      tolerations:
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateful
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateless
      volumes:
      - name: certframe-token
        secret:
          secretName: sas-certframe-token
      - emptyDir: {}
        name: security
      - configMap:
          name: sas-customer-provided-ca-certificates-29kdmk686c
        name: customer-provided-ca-certificates
      - emptyDir: {}
        name: tmp
  volumeClaimTemplates:
  - metadata:
      labels:
        sas.com/deployment: sas-viya
      name: cachelocator
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 1Gi
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  annotations:
    sas.com/certificate-file-format: jks
    sas.com/component-name: sas-cacheserver
    sas.com/component-version: 1.23.11-20201204.1607051747986
    sas.com/kustomize-base: spring
    sas.com/pod-uses-liveness-probe: http
    sas.com/pod-uses-readiness-probe: http
    sas.com/pod-uses-startup-probe: http
    sas.com/registry-tags: proxy, rest-commons, http
    sas.com/version: 1.23.11
    sidecar.istio.io/proxyCPU: 15m
    sidecar.istio.io/proxyMemory: 115Mi
  labels:
    app.kubernetes.io/name: sas-cacheserver
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
    sas.com/statefulset-base: spring
    workload.sas.com/class: stateful
  name: sas-cacheserver
  namespace: franceavv
spec:
  podManagementPolicy: Parallel
  replicas: 2
  selector:
    matchExpressions: []
    matchLabels:
      app.kubernetes.io/name: sas-cacheserver
      sas.com/deployment: sas-viya
  serviceName: sas-cacheserver
  template:
    metadata:
      annotations:
        prometheus.io/path: /internal/metrics
        prometheus.io/port: "10445"
        prometheus.io/scheme: https
        prometheus.io/scrape: "true"
        sas.com/certificate-file-format: jks
        sas.com/component-name: sas-cacheserver
        sas.com/component-version: 1.23.11-20201204.1607051747986
        sas.com/kustomize-base: spring
        sas.com/pod-uses-liveness-probe: http
        sas.com/pod-uses-readiness-probe: http
        sas.com/pod-uses-startup-probe: http
        sas.com/tls-enabled-ports: all
        sas.com/version: 1.23.11
        seccomp.security.alpha.kubernetes.io/pod: runtime/default
        sidecar.istio.io/proxyCPU: 15m
        sidecar.istio.io/proxyMemory: 115Mi
      labels:
        app: sas-cacheserver
        app.kubernetes.io/name: sas-cacheserver
        sas.com/deployment: sas-viya
        workload.sas.com/class: stateful
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: In
                values:
                - stateful
              matchFields: []
            weight: 100
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: NotIn
                values:
                - compute
                - cas
                - stateless
                - connect
              matchFields: []
            weight: 50
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.azure.com/mode
                operator: NotIn
                values:
                - system
              matchFields: []
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - sas-cacheserver
              namespaces: []
              topologyKey: kubernetes.io/hostname
            weight: 100
          requiredDuringSchedulingIgnoredDuringExecution: []
      automountServiceAccountToken: false
      containers:
      - args: null
        command: null
        env:
        - name: JAVA_OPTION_SAS_CACHE_CONFIG_DISKSTOREDIR
          value: -Dsas.cache.config.diskStoreDir=/opt/sas/viya/config/data/cacheserver
        - name: JAVA_OPTION_SAS_CACHE_SERVER_PORT
          value: -Dsas.cache.server.port=14443
        - name: SAS_CACHE_SERVER_HOSTNAMEFORCLIENTS
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: SAS_CACHE_CONFIG_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: SAS_MANAGEMENT_INDICATOR_BOOTSTRAP_ENABLED
          value: "false"
        - name: SPRING_CLOUD_CONSUL_DISCOVERY_REGISTER
          value: "true"
        - name: SAS_LOCATOR_LOADER_CONSUL_ENABLED
          value: "false"
        envFrom:
        - configMapRef:
            name: sas-java-config-t7t5thbgkd
        - configMapRef:
            name: sas-shared-config-49d8hthtb5
        - secretRef:
            name: sas-consul-client
        - configMapRef:
            name: sas-spring-management-config-d64bbkhb97
        - configMapRef:
            name: sas-java-tls-config-fch4777298
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-cacheserver:1.23.11-20201204.1607051747986
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - sh
              - -c
              - sleep 5
        livenessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http-internal
            scheme: HTTPS
          periodSeconds: 10
        name: sas-cacheserver
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        - containerPort: 10445
          name: http-internal
          protocol: TCP
        - containerPort: 14443
          name: cacheserver
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders: []
            path: /internal/ready
            port: http-internal
            scheme: HTTPS
          periodSeconds: 10
        resources:
          limits:
            cpu: 2000m
            memory: 1Gi
          requests:
            cpu: 50m
            memory: 860M
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add: []
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        startupProbe:
          failureThreshold: 180
          httpGet:
            httpHeaders: []
            path: /internal/live
            port: http-internal
            scheme: HTTPS
          periodSeconds: 10
        volumeDevices: []
        volumeMounts:
        - mountPath: /opt/sas/viya/config/tmp
          name: tmp
        - mountPath: /tmp
          name: tmp
        - mountPath: /opt/sas/viya/config/data/cacheserver
          name: cacheserver
        - mountPath: /security
          name: security
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/cacerts
          name: security
          subPath: cacerts
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/private
          name: security
          subPath: private
      hostAliases: []
      imagePullSecrets:
      - name: sas-image-pull-secrets-4m8cc729k8
      initContainers:
      - env:
        - name: KUBE_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: SAS_CERTFRAME_TOKEN_DIR
          value: /certframe-token
        - name: SAS_ADDITIONAL_CA_CERTIFICATES_DIR
          value: /customer-provided-ca-certificates
        envFrom:
        - configMapRef:
            name: sas-certframe-ingress-certificate-config-cmm2t44t88
        - configMapRef:
            name: sas-certframe-user-config-c4ch2c59m7
        - configMapRef:
            name: sas-certframe-java-config-gf4kt94898
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-certframe:3.9.0-20201203.1607016443086
        name: sas-certframe
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /certframe-token
          name: certframe-token
        - mountPath: /security
          name: security
        - mountPath: /customer-provided-ca-certificates
          name: customer-provided-ca-certificates
      readinessGates: []
      securityContext:
        fsGroup: 1001
        runAsNonRoot: true
        supplementalGroups: []
        sysctls: []
      tolerations:
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateful
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateless
      volumes:
      - name: certframe-token
        secret:
          secretName: sas-certframe-token
      - emptyDir: {}
        name: security
      - configMap:
          name: sas-customer-provided-ca-certificates-29kdmk686c
        name: customer-provided-ca-certificates
      - emptyDir: {}
        name: tmp
  volumeClaimTemplates:
  - metadata:
      labels:
        sas.com/deployment: sas-viya
      name: cacheserver
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 2Gi
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  annotations:
    sas.com/certificate-file-format: pem
    sas.com/component-name: sas-consul-server
    sas.com/component-version: 1.310003.3-20201211.1607715119836
    sas.com/kustomize-base: base
    sas.com/version: 1.310003.3
    sidecar.istio.io/proxyCPU: 15m
    sidecar.istio.io/proxyMemory: 115Mi
  labels:
    app.kubernetes.io/name: sas-consul-server
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
    workload.sas.com/class: stateful
  name: sas-consul-server
  namespace: franceavv
spec:
  podManagementPolicy: Parallel
  replicas: 3
  selector:
    matchExpressions: []
    matchLabels:
      app.kubernetes.io/name: sas-consul-server
      sas.com/deployment: sas-viya
  serviceName: sas-consul-server-internal
  template:
    metadata:
      annotations:
        prometheus.io/scheme: https
        sas.com/certificate-file-format: pem
        sas.com/component-name: sas-consul-server
        sas.com/component-version: 1.310003.3-20201211.1607715119836
        sas.com/kustomize-base: base
        sas.com/tls-enabled-ports: all
        sas.com/version: 1.310003.3
        seccomp.security.alpha.kubernetes.io/pod: runtime/default
        sidecar.istio.io/proxyCPU: 15m
        sidecar.istio.io/proxyMemory: 115Mi
        traffic.sidecar.istio.io/excludeInboundPorts: "8301"
      labels:
        app: sas-consul-server
        app.kubernetes.io/name: sas-consul-server
        sas.com/deployment: sas-viya
        workload.sas.com/class: stateful
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: In
                values:
                - stateful
              matchFields: []
            weight: 100
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: NotIn
                values:
                - compute
                - cas
                - stateless
                - connect
              matchFields: []
            weight: 50
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.azure.com/mode
                operator: NotIn
                values:
                - system
              matchFields: []
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - sas-consul-server
              namespaces: []
              topologyKey: kubernetes.io/hostname
            weight: 100
          requiredDuringSchedulingIgnoredDuringExecution: []
      automountServiceAccountToken: false
      containers:
      - args: null
        command: null
        env:
        - name: CONSUL_BOOTSTRAP_EXPECT
          value: "3"
        - name: CONSUL_CLIENT_ADDRESS
          value: 0.0.0.0
        - name: CONSUL_DATACENTER_NAME
          value: viya
        envFrom:
        - configMapRef:
            name: sas-shared-config-49d8hthtb5
        - secretRef:
            name: sas-consul-client
        - secretRef:
            name: sas-consul-management
        - configMapRef:
            name: sas-tls-config-99f79t29t5
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-consul-server:1.310003.3-20201211.1607715119836
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - /bin/sh
              - -c
              - /opt/sas/viya/home/bin/consul leave
        name: sas-consul-server
        ports:
        - containerPort: 8300
          name: server
          protocol: TCP
        - containerPort: 8301
          name: serflan-tcp
          protocol: TCP
        - containerPort: 8301
          name: serflan-udp
          protocol: UDP
        - containerPort: 8500
          name: http
          protocol: TCP
        readinessProbe:
          exec:
            command:
            - sh
            - -c
            - if [ -z ${SAS_CERTIFICATE_FILE} ]; then reply=$(curl -s -L -o /dev/null -w %{http_code} http://localhost:${SAS_CONSUL_SERVER_SERVICE_PORT_HTTP}/); else reply=$(curl -s -L -o /dev/null -w %{http_code} --cacert ${SAS_TRUSTED_CA_CERTIFICATES_PEM_FILE} https://localhost:${SAS_CONSUL_SERVER_SERVICE_PORT_HTTP}/); fi; if [ $reply -ne 200 ]; then exit 1; fi; test -f /tmp/healthy;
          initialDelaySeconds: 45
          periodSeconds: 30
        resources:
          limits:
            cpu: 1000m
            memory: 1Gi
          requests:
            cpu: 250m
            memory: 150Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add: []
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeDevices: []
        volumeMounts:
        - mountPath: /opt/sas/viya/config/etc/consul.d
          name: tmp-volume
          subPath: consul.d
        - mountPath: /opt/sas/viya/config/etc/consul.d/default
          name: sitedefault-vol
        - mountPath: /consul/data
          name: sas-viya-consul-data-volume
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/tokens/consul/default
          name: tmp-volume
          subPath: consul-tokens
        - mountPath: /opt/sas/viya/config/tmp/sas-consul
          name: tmp-volume
          subPath: sas-consul
        - mountPath: /tmp
          name: tmp-volume
          subPath: tmp
        - mountPath: /security
          name: security
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/cacerts
          name: security
          subPath: cacerts
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/private
          name: security
          subPath: private
      hostAliases: []
      imagePullSecrets:
      - name: sas-image-pull-secrets-4m8cc729k8
      initContainers:
      - env:
        - name: KUBE_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: SAS_CERTFRAME_TOKEN_DIR
          value: /certframe-token
        - name: SAS_ADDITIONAL_CA_CERTIFICATES_DIR
          value: /customer-provided-ca-certificates
        envFrom:
        - configMapRef:
            name: sas-certframe-ingress-certificate-config-cmm2t44t88
        - configMapRef:
            name: sas-certframe-user-config-c4ch2c59m7
        - configMapRef:
            name: sas-certframe-config-ctgg29gf7t
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-certframe:3.9.0-20201203.1607016443086
        name: sas-certframe
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /certframe-token
          name: certframe-token
        - mountPath: /security
          name: security
        - mountPath: /customer-provided-ca-certificates
          name: customer-provided-ca-certificates
      - args: null
        command: null
        env:
        - name: SAS_KEYS_SECRET_NAME
          value: sas-consul-client
        - name: SAS_KEYS_KEY_NAMES
          value: CONSUL_HTTP_TOKEN
        - name: SAS_SECURITY_ARTIFACTS_DIR
          value: /security
        - name: SAS_CERTFRAME_TOKEN_DIR
          value: /certframe-token
        envFrom: []
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-certframe:3.9.0-20201203.1607016443086
        name: sas-certframe-client-token-generator
        ports: []
        volumeDevices: []
        volumeMounts:
        - mountPath: /security
          name: security
        - mountPath: /certframe-token
          name: certframe-token
      - args: null
        command: null
        env:
        - name: SAS_KEYS_SECRET_NAME
          value: sas-consul-management
        - name: SAS_KEYS_KEY_NAMES
          value: CONSUL_MANAGEMENT_TOKEN CONSUL_TOKENS_ENCRYPTION
        - name: SAS_KEYS_KEY_TYPES
          value: uuid base64
        - name: SAS_SECURITY_ARTIFACTS_DIR
          value: /security
        - name: SAS_CERTFRAME_TOKEN_DIR
          value: /certframe-token
        envFrom: []
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-certframe:3.9.0-20201203.1607016443086
        name: sas-certframe-management-token-generator
        ports: []
        volumeDevices: []
        volumeMounts:
        - mountPath: /security
          name: security
        - mountPath: /certframe-token
          name: certframe-token
      readinessGates: []
      securityContext:
        fsGroup: 1001
        runAsNonRoot: true
        supplementalGroups: []
        sysctls: []
      terminationGracePeriodSeconds: 600
      tolerations:
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateful
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateless
      volumes:
      - configMap:
          items:
          - key: SITEDEFAULT_CONF
            mode: 438
            path: sitedefault.yml
          name: sas-consul-config-t6tgfb7274
        name: sitedefault-vol
      - emptyDir: {}
        name: tmp-volume
      - name: certframe-token
        secret:
          items: []
          secretName: sas-certframe-token
      - emptyDir: {}
        name: security
      - configMap:
          name: sas-customer-provided-ca-certificates-29kdmk686c
        name: customer-provided-ca-certificates
  volumeClaimTemplates:
  - metadata:
      labels:
        sas.com/deployment: sas-viya
      name: sas-viya-consul-data-volume
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 1Gi
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  annotations:
    sas.com/certificate-file-format: pem
    sas.com/component-name: sas-rabbitmq-server
    sas.com/component-version: 3.82003.2-20201013.1602597853237
    sas.com/kustomize-base: base
    sas.com/version: 3.82003.2
    sidecar.istio.io/proxyCPU: 15m
    sidecar.istio.io/proxyMemory: 115Mi
  labels:
    app.kubernetes.io/name: sas-rabbitmq-server
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
    workload.sas.com/class: stateful
  name: sas-rabbitmq-server
  namespace: franceavv
spec:
  podManagementPolicy: Parallel
  replicas: 3
  revisionHistoryLimit: 10
  selector:
    matchExpressions: []
    matchLabels:
      app.kubernetes.io/name: sas-rabbitmq-server
      sas.com/deployment: sas-viya
  serviceName: sas-rabbitmq-server
  template:
    metadata:
      annotations:
        prometheus.io/path: /metrics
        prometheus.io/port: "15692"
        prometheus.io/scheme: https
        prometheus.io/scrape: "true"
        sas.com/certificate-file-format: pem
        sas.com/component-name: sas-rabbitmq-server
        sas.com/component-version: 3.82003.2-20201013.1602597853237
        sas.com/kustomize-base: base
        sas.com/tls-enabled-ports: all
        sas.com/version: 3.82003.2
        sidecar.istio.io/proxyCPU: 15m
        sidecar.istio.io/proxyMemory: 115Mi
      labels:
        app: sas-rabbitmq-server
        app.kubernetes.io/name: sas-rabbitmq-server
        sas.com/deployment: sas-viya
        workload.sas.com/class: stateful
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: In
                values:
                - stateful
              matchFields: []
            weight: 100
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: NotIn
                values:
                - compute
                - cas
                - stateless
                - connect
              matchFields: []
            weight: 50
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.azure.com/mode
                operator: NotIn
                values:
                - system
              matchFields: []
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - sas-rabbitmq-server
              namespaces: []
              topologyKey: kubernetes.io/hostname
            weight: 100
          requiredDuringSchedulingIgnoredDuringExecution: []
      automountServiceAccountToken: true
      containers:
      - args: null
        command: null
        env:
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: HOSTNAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: RABBITMQ_USE_LONGNAME
          value: "true"
        envFrom:
        - configMapRef:
            name: sas-shared-config-49d8hthtb5
        - secretRef:
            name: sas-consul-client
        - configMapRef:
            name: sas-java-config-t7t5thbgkd
        - secretRef:
            name: sas-rabbitmq-server-secret
        - configMapRef:
            name: sas-tls-config-99f79t29t5
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-rabbitmq-server:3.82003.2-20201013.1602597853237
        imagePullPolicy: IfNotPresent
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - |
              source ${HOME}/.bashrc; timeout 120 ${SASHOME}/sbin/liveness.sh
          failureThreshold: 5
          periodSeconds: 30
          timeoutSeconds: 120
        name: sas-rabbitmq-server
        ports:
        - containerPort: 5672
          name: amqp
          protocol: TCP
        - containerPort: 15672
          name: management
          protocol: TCP
        - containerPort: 25672
          name: erlang
          protocol: TCP
        - containerPort: 4369
          name: epmd
          protocol: TCP
        - containerPort: 15692
          name: metrics
          protocol: TCP
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - |
              source ${HOME}/.bashrc; timeout 120 ${SASHOME}/sbin/readiness.sh
          failureThreshold: 5
          periodSeconds: 10
          timeoutSeconds: 120
        resources:
          limits:
            cpu: 4000m
            memory: 2Gi
          requests:
            cpu: 1000m
            memory: 1Gi
        securityContext:
          allowPrivilegeEscalation: false
          privileged: false
          readOnlyRootFilesystem: true
        volumeDevices: []
        volumeMounts:
        - mountPath: /rabbitmq/data
          name: sas-viya-rabbitmq-data-volume
        - mountPath: /security
          name: security
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/cacerts
          name: security
          subPath: cacerts
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/private
          name: security
          subPath: private
      hostAliases: []
      imagePullSecrets:
      - name: sas-image-pull-secrets-4m8cc729k8
      initContainers:
      - env:
        - name: KUBE_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: SAS_CERTFRAME_TOKEN_DIR
          value: /certframe-token
        - name: SAS_ADDITIONAL_CA_CERTIFICATES_DIR
          value: /customer-provided-ca-certificates
        envFrom:
        - configMapRef:
            name: sas-certframe-ingress-certificate-config-cmm2t44t88
        - configMapRef:
            name: sas-certframe-user-config-c4ch2c59m7
        - configMapRef:
            name: sas-certframe-config-ctgg29gf7t
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-certframe:3.9.0-20201203.1607016443086
        name: sas-certframe
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /certframe-token
          name: certframe-token
        - mountPath: /security
          name: security
        - mountPath: /customer-provided-ca-certificates
          name: customer-provided-ca-certificates
      - args: null
        command: null
        env:
        - name: SAS_KEYS_SECRET_NAME
          value: sas-rabbitmq-server-secret
        - name: SAS_KEYS_KEY_NAMES
          value: RABBITMQ_ERLANG_COOKIE RABBITMQ_DEFAULT_PASS
        - name: SAS_SECURITY_ARTIFACTS_DIR
          value: /security
        envFrom: []
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-certframe:3.9.0-20201203.1607016443086
        name: sas-certframe-token-generator
        ports: []
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          privileged: false
          readOnlyRootFilesystem: true
        volumeDevices: []
        volumeMounts:
        - mountPath: /security
          name: security
      readinessGates: []
      securityContext:
        fsGroup: 1001
        runAsNonRoot: true
        supplementalGroups: []
        sysctls: []
      serviceAccountName: sas-rabbitmq-server
      terminationGracePeriodSeconds: 60
      tolerations:
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateful
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateless
      volumes:
      - name: certframe-token
        secret:
          secretName: sas-certframe-token
      - emptyDir: {}
        name: security
      - configMap:
          name: sas-customer-provided-ca-certificates-29kdmk686c
        name: customer-provided-ca-certificates
  volumeClaimTemplates:
  - metadata:
      labels:
        sas.com/deployment: sas-viya
      name: sas-viya-rabbitmq-data-volume
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 2Gi
---
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  annotations:
    sas.com/certificate-file-format: pem
    sas.com/component-name: sas-backup-job
    sas.com/component-version: 1.9.0-20201209.1607495417341
    sas.com/version: 1.9.0
  labels:
    app.kubernetes.io/name: sas-backup-purge-job
    sas.com/admin: namespace
    sas.com/backup-job-type: purge-backup
    sas.com/deployment: sas-viya
    workload.sas.com/class: stateless
  name: sas-backup-purge-job
  namespace: franceavv
spec:
  failedJobsHistoryLimit: 7
  jobTemplate:
    metadata:
      annotations:
        sas.com/component-name: sas-backup-job
        sas.com/component-version: 1.9.0-20201209.1607495417341
        sas.com/version: 1.9.0
      labels:
        app.kubernetes.io/name: sas-backup-purge-job
        sas.com/admin: namespace
        sas.com/backup-job-type: purge-backup
        sas.com/deployment: sas-viya
        workload.sas.com/class: stateless
    spec:
      template:
        metadata:
          annotations:
            sas.com/certificate-file-format: pem
            sas.com/component-name: sas-backup-job
            sas.com/component-version: 1.9.0-20201209.1607495417341
            sas.com/tls-enabled-ports: all
            sas.com/version: 1.9.0
            seccomp.security.alpha.kubernetes.io/pod: runtime/default
          labels:
            sas.com/deployment: sas-viya
            workload.sas.com/class: stateless
        spec:
          affinity:
            nodeAffinity:
              preferredDuringSchedulingIgnoredDuringExecution:
              - preference:
                  matchExpressions:
                  - key: workload.sas.com/class
                    operator: In
                    values:
                    - stateless
                  matchFields: []
                weight: 100
              - preference:
                  matchExpressions:
                  - key: workload.sas.com/class
                    operator: NotIn
                    values:
                    - compute
                    - cas
                    - stateful
                  matchFields: []
                weight: 50
              requiredDuringSchedulingIgnoredDuringExecution:
                nodeSelectorTerms:
                - matchExpressions:
                  - key: kubernetes.azure.com/mode
                    operator: NotIn
                    values:
                    - system
                  matchFields: []
          containers:
          - args: null
            command: null
            env:
            - name: BACKUP_MOUNT_LOCATION
              value: /sasviyabackup
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: JOB_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['job-name']
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: JOB_TYPE
              value: purge
            envFrom:
            - configMapRef:
                name: sas-go-config-7hc79bmf8m
            - configMapRef:
                name: sas-shared-config-49d8hthtb5
            - configMapRef:
                name: sas-java-config-t7t5thbgkd
            - configMapRef:
                name: sas-backup-job-parameters-gb2b7ckggt
            - secretRef:
                name: sas-consul-client
            - configMapRef:
                name: sas-tls-config-99f79t29t5
            image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-backup-job:1.9.0-20201209.1607495417341
            imagePullPolicy: IfNotPresent
            name: sas-backup-purge-job
            ports: []
            securityContext:
              allowPrivilegeEscalation: false
              capabilities:
                add: []
                drop:
                - ALL
              privileged: false
              readOnlyRootFilesystem: true
            volumeDevices: []
            volumeMounts:
            - mountPath: /sasviyabackup
              name: backup
            - mountPath: /security
              name: security
            - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/cacerts
              name: security
              subPath: cacerts
            - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/private
              name: security
              subPath: private
          - args: null
            command: null
            env:
            - name: BACKUP_AGENT_TYPE
              value: REMOTE
            - name: BACKUP_MOUNT_LOCATION
              value: /sasviyabackup
            - name: NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['job-name']
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            envFrom:
            - configMapRef:
                name: sas-go-config-7hc79bmf8m
            - configMapRef:
                name: sas-shared-config-49d8hthtb5
            - configMapRef:
                name: sas-java-config-t7t5thbgkd
            - configMapRef:
                name: sas-backup-agent-parameters-hkfmm67f7d
            - secretRef:
                name: sas-consul-client
            - configMapRef:
                name: sas-tls-config-99f79t29t5
            image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-backup-agent:2.16.0-20201209.1607495194463
            imagePullPolicy: IfNotPresent
            name: sas-backup-agent
            ports: []
            securityContext:
              allowPrivilegeEscalation: false
              capabilities:
                add: []
                drop:
                - ALL
              privileged: false
              readOnlyRootFilesystem: true
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            volumeDevices: []
            volumeMounts:
            - mountPath: /sasviyabackup
              name: backup
            - mountPath: /security
              name: security
            - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/cacerts
              name: security
              subPath: cacerts
            - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/private
              name: security
              subPath: private
          hostAliases: []
          imagePullSecrets:
          - name: sas-image-pull-secrets-4m8cc729k8
          initContainers:
          - env:
            - name: KUBE_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: SAS_CERTFRAME_TOKEN_DIR
              value: /certframe-token
            - name: SAS_ADDITIONAL_CA_CERTIFICATES_DIR
              value: /customer-provided-ca-certificates
            envFrom:
            - configMapRef:
                name: sas-certframe-ingress-certificate-config-cmm2t44t88
            - configMapRef:
                name: sas-certframe-user-config-c4ch2c59m7
            - configMapRef:
                name: sas-certframe-config-ctgg29gf7t
            image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-certframe:3.9.0-20201203.1607016443086
            name: sas-certframe
            resources:
              limits:
                cpu: 500m
                memory: 500Mi
              requests:
                cpu: 50m
                memory: 50Mi
            securityContext:
              allowPrivilegeEscalation: false
              capabilities:
                drop:
                - ALL
              privileged: false
              readOnlyRootFilesystem: true
            volumeMounts:
            - mountPath: /certframe-token
              name: certframe-token
            - mountPath: /security
              name: security
            - mountPath: /customer-provided-ca-certificates
              name: customer-provided-ca-certificates
          readinessGates: []
          restartPolicy: Never
          securityContext:
            runAsNonRoot: true
            supplementalGroups: []
            sysctls: []
          serviceAccountName: sas-viya-backuprunner
          tolerations:
          - effect: NoSchedule
            key: workload.sas.com/class
            operator: Equal
            value: stateful
          - effect: NoSchedule
            key: workload.sas.com/class
            operator: Equal
            value: stateless
          volumes:
          - name: certframe-token
            secret:
              secretName: sas-certframe-token
          - emptyDir: {}
            name: security
          - configMap:
              name: sas-customer-provided-ca-certificates-29kdmk686c
            name: customer-provided-ca-certificates
          - name: backup
            persistentVolumeClaim:
              claimName: sas-common-backup-data
  schedule: 15 0 1/1 * ?
  successfulJobsHistoryLimit: 7
  suspend: false
---
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  annotations:
    sas.com/certificate-file-format: pem
    sas.com/component-name: sas-backup-job
    sas.com/component-version: 1.9.0-20201209.1607495417341
    sas.com/version: 1.9.0
  labels:
    app.kubernetes.io/name: sas-scheduled-backup-job
    sas.com/admin: namespace
    sas.com/backup-job-type: scheduled-backup
    sas.com/deployment: sas-viya
    workload.sas.com/class: stateless
  name: sas-scheduled-backup-job
  namespace: franceavv
spec:
  failedJobsHistoryLimit: 100
  jobTemplate:
    metadata:
      annotations:
        sas.com/component-name: sas-backup-job
        sas.com/component-version: 1.9.0-20201209.1607495417341
        sas.com/version: 1.9.0
      labels:
        app.kubernetes.io/name: sas-scheduled-backup-job
        sas.com/admin: namespace
        sas.com/backup-job-type: scheduled-backup
        sas.com/deployment: sas-viya
        workload.sas.com/class: stateless
    spec:
      template:
        metadata:
          annotations:
            sas.com/certificate-file-format: pem
            sas.com/component-name: sas-backup-job
            sas.com/component-version: 1.9.0-20201209.1607495417341
            sas.com/tls-enabled-ports: all
            sas.com/version: 1.9.0
            seccomp.security.alpha.kubernetes.io/pod: runtime/default
          labels:
            sas.com/deployment: sas-viya
            workload.sas.com/class: stateless
        spec:
          affinity:
            nodeAffinity:
              preferredDuringSchedulingIgnoredDuringExecution:
              - preference:
                  matchExpressions:
                  - key: workload.sas.com/class
                    operator: In
                    values:
                    - stateless
                  matchFields: []
                weight: 100
              - preference:
                  matchExpressions:
                  - key: workload.sas.com/class
                    operator: NotIn
                    values:
                    - compute
                    - cas
                    - stateful
                  matchFields: []
                weight: 50
              requiredDuringSchedulingIgnoredDuringExecution:
                nodeSelectorTerms:
                - matchExpressions:
                  - key: kubernetes.azure.com/mode
                    operator: NotIn
                    values:
                    - system
                  matchFields: []
          containers:
          - args: null
            command: null
            env:
            - name: BACKUP_MOUNT_LOCATION
              value: /sasviyabackup
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: JOB_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['job-name']
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            envFrom:
            - configMapRef:
                name: sas-go-config-7hc79bmf8m
            - configMapRef:
                name: sas-shared-config-49d8hthtb5
            - configMapRef:
                name: sas-java-config-t7t5thbgkd
            - configMapRef:
                name: sas-backup-job-parameters-gb2b7ckggt
            - secretRef:
                name: sas-consul-client
            - configMapRef:
                name: sas-tls-config-99f79t29t5
            image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-backup-job:1.9.0-20201209.1607495417341
            imagePullPolicy: IfNotPresent
            name: sas-backup-job
            ports: []
            securityContext:
              allowPrivilegeEscalation: false
              capabilities:
                add: []
                drop:
                - ALL
              privileged: false
              readOnlyRootFilesystem: true
            volumeDevices: []
            volumeMounts:
            - mountPath: /sasviyabackup
              name: backup
            - mountPath: /security
              name: security
            - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/cacerts
              name: security
              subPath: cacerts
            - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/private
              name: security
              subPath: private
          - args: null
            command: null
            env:
            - name: BACKUP_AGENT_TYPE
              value: REMOTE
            - name: BACKUP_MOUNT_LOCATION
              value: /sasviyabackup
            - name: NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['job-name']
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            envFrom:
            - configMapRef:
                name: sas-go-config-7hc79bmf8m
            - configMapRef:
                name: sas-shared-config-49d8hthtb5
            - configMapRef:
                name: sas-java-config-t7t5thbgkd
            - configMapRef:
                name: sas-backup-agent-parameters-hkfmm67f7d
            - secretRef:
                name: sas-consul-client
            - configMapRef:
                name: sas-tls-config-99f79t29t5
            image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-backup-agent:2.16.0-20201209.1607495194463
            imagePullPolicy: IfNotPresent
            name: sas-backup-agent
            ports: []
            securityContext:
              allowPrivilegeEscalation: false
              capabilities:
                add: []
                drop:
                - ALL
              privileged: false
              readOnlyRootFilesystem: true
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            volumeDevices: []
            volumeMounts:
            - mountPath: /sasviyabackup
              name: backup
            - mountPath: /security
              name: security
            - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/cacerts
              name: security
              subPath: cacerts
            - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/private
              name: security
              subPath: private
          hostAliases: []
          imagePullSecrets:
          - name: sas-image-pull-secrets-4m8cc729k8
          initContainers:
          - env:
            - name: KUBE_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: SAS_CERTFRAME_TOKEN_DIR
              value: /certframe-token
            - name: SAS_ADDITIONAL_CA_CERTIFICATES_DIR
              value: /customer-provided-ca-certificates
            envFrom:
            - configMapRef:
                name: sas-certframe-ingress-certificate-config-cmm2t44t88
            - configMapRef:
                name: sas-certframe-user-config-c4ch2c59m7
            - configMapRef:
                name: sas-certframe-config-ctgg29gf7t
            image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-certframe:3.9.0-20201203.1607016443086
            name: sas-certframe
            resources:
              limits:
                cpu: 500m
                memory: 500Mi
              requests:
                cpu: 50m
                memory: 50Mi
            securityContext:
              allowPrivilegeEscalation: false
              capabilities:
                drop:
                - ALL
              privileged: false
              readOnlyRootFilesystem: true
            volumeMounts:
            - mountPath: /certframe-token
              name: certframe-token
            - mountPath: /security
              name: security
            - mountPath: /customer-provided-ca-certificates
              name: customer-provided-ca-certificates
          readinessGates: []
          restartPolicy: Never
          securityContext:
            runAsNonRoot: true
            supplementalGroups: []
            sysctls: []
          serviceAccountName: sas-viya-backuprunner
          tolerations:
          - effect: NoSchedule
            key: workload.sas.com/class
            operator: Equal
            value: stateful
          - effect: NoSchedule
            key: workload.sas.com/class
            operator: Equal
            value: stateless
          volumes:
          - name: certframe-token
            secret:
              secretName: sas-certframe-token
          - emptyDir: {}
            name: security
          - configMap:
              name: sas-customer-provided-ca-certificates-29kdmk686c
            name: customer-provided-ca-certificates
          - name: backup
            persistentVolumeClaim:
              claimName: sas-common-backup-data
  schedule: 0 1 * * 0
  successfulJobsHistoryLimit: 100
  suspend: false
---
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  annotations:
    sidecar.istio.io/inject: "false"
  labels:
    app.kubernetes.io/name: sas-orchestration
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
    workload.sas.com/class: stateless
  name: sas-update-checker
  namespace: franceavv
spec:
  jobTemplate:
    metadata:
      annotations:
        sidecar.istio.io/inject: "false"
      labels:
        app.kubernetes.io/name: sas-orchestration
        sas.com/deployment: sas-viya
        workload.sas.com/class: stateless
    spec:
      template:
        metadata:
          annotations:
            sidecar.istio.io/inject: "false"
          labels:
            app.kubernetes.io/name: sas-orchestration
            sas.com/deployment: sas-viya
            workload.sas.com/class: stateless
        spec:
          affinity:
            nodeAffinity:
              preferredDuringSchedulingIgnoredDuringExecution:
              - preference:
                  matchExpressions:
                  - key: workload.sas.com/class
                    operator: In
                    values:
                    - stateless
                weight: 100
              - preference:
                  matchExpressions:
                  - key: workload.sas.com/class
                    operator: NotIn
                    values:
                    - compute
                    - cas
                    - stateful
                weight: 50
              requiredDuringSchedulingIgnoredDuringExecution:
                nodeSelectorTerms:
                - matchExpressions:
                  - key: kubernetes.azure.com/mode
                    operator: NotIn
                    values:
                    - system
          containers:
          - args:
            - report
            env:
            - name: SAS_BUILD_TYPE
              valueFrom:
                configMapKeyRef:
                  key: SAS_BUILD_TYPE
                  name: sas-deployment-metadata-t4927tg597
            - name: SAS_CADENCE_NAME
              valueFrom:
                configMapKeyRef:
                  key: SAS_CADENCE_NAME
                  name: sas-deployment-metadata-t4927tg597
            - name: SAS_CADENCE_RELEASE
              valueFrom:
                configMapKeyRef:
                  key: SAS_CADENCE_RELEASE
                  name: sas-deployment-metadata-t4927tg597
            - name: SAS_CADENCE_VERSION
              valueFrom:
                configMapKeyRef:
                  key: SAS_CADENCE_VERSION
                  name: sas-deployment-metadata-t4927tg597
            - name: SAS_CA_CERTIFICATE
              valueFrom:
                secretKeyRef:
                  key: CACertificate
                  name: sas-repositorywarehouse-certificates-h545gcgc7t
            - name: SAS_DEPLOYMENT_TYPE
              valueFrom:
                configMapKeyRef:
                  key: SAS_DEPLOYMENT_TYPE
                  name: sas-deployment-metadata-t4927tg597
            - name: SAS_CLIENT_CERTIFICATE
              valueFrom:
                secretKeyRef:
                  key: ClientCertificate
                  name: sas-repositorywarehouse-certificates-h545gcgc7t
            - name: SAS_REPOSITORY_WAREHOUSE_URL
              valueFrom:
                configMapKeyRef:
                  key: SAS_REPOSITORY_WAREHOUSE_URL
                  name: sas-deployment-metadata-t4927tg597
            envFrom:
            - configMapRef:
                name: sas-components-hg82cft8k9
            image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-orchestration:1.26.0-20201214.1607963475562
            name: report
          imagePullSecrets:
          - name: sas-image-pull-secrets-4m8cc729k8
          restartPolicy: Never
          tolerations:
          - effect: NoSchedule
            key: workload.sas.com/class
            operator: Equal
            value: stateful
          - effect: NoSchedule
            key: workload.sas.com/class
            operator: Equal
            value: stateless
  schedule: 0 0 * * 0
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  annotations:
    sas.com/component-name: sas-analytics-components
    sas.com/component-version: 20.17.7-20201209.1607538004353
    sas.com/ha-class: centralized
    sas.com/kustomize-base: base
    sas.com/version: 20.17.7
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-analytics-components
  namespace: franceavv
spec:
  minAvailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: sas-analytics-components
      sas.com/deployment: sas-viya
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  annotations:
    sas.com/component-name: sas-analytics-events
    sas.com/component-version: 1.4.4-20201204.1607119383686
    sas.com/ha-class: centralized
    sas.com/kustomize-base: base
    sas.com/version: 1.4.4
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-analytics-events
  namespace: franceavv
spec:
  minAvailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: sas-analytics-events
      sas.com/deployment: sas-viya
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  annotations:
    sas.com/component-name: sas-analytics-services
    sas.com/component-version: 1.10.0-20201204.1607097302572
    sas.com/ha-class: centralized
    sas.com/kustomize-base: base
    sas.com/version: 1.10.0
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-analytics-services
  namespace: franceavv
spec:
  minAvailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: sas-analytics-services
      sas.com/deployment: sas-viya
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  annotations:
    sas.com/component-name: sas-annotations
    sas.com/component-version: 2.9.0-20201208.1607439456307
    sas.com/ha-class: centralized
    sas.com/kustomize-base: base
    sas.com/version: 2.9.0
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-annotations
  namespace: franceavv
spec:
  minAvailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: sas-annotations
      sas.com/deployment: sas-viya
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  annotations:
    sas.com/component-name: sas-app-registry
    sas.com/component-version: 1.50.0-20201202.1606937218076
    sas.com/ha-class: centralized
    sas.com/kustomize-base: base
    sas.com/version: 1.50.0
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-app-registry
  namespace: franceavv
spec:
  minAvailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: sas-app-registry
      sas.com/deployment: sas-viya
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  annotations:
    sas.com/component-name: sas-arke
    sas.com/component-version: 1.4.0-20201211.1607698571564
    sas.com/ha-class: centralized
    sas.com/kustomize-base: base
    sas.com/version: 1.4.0
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-arke
  namespace: franceavv
spec:
  minAvailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: sas-arke
      sas.com/deployment: sas-viya
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  annotations:
    sas.com/component-name: sas-audit
    sas.com/component-version: 1.58.1-20201207.1607355915596
    sas.com/ha-class: centralized
    sas.com/kustomize-base: base
    sas.com/version: 1.58.1
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-audit
  namespace: franceavv
spec:
  minAvailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: sas-audit
      sas.com/deployment: sas-viya
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  annotations:
    sas.com/component-name: sas-authorization
    sas.com/component-version: 3.32.14-20201204.1607098698544
    sas.com/ha-class: centralized
    sas.com/kustomize-base: base
    sas.com/version: 3.32.14
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-authorization
  namespace: franceavv
spec:
  minAvailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: sas-authorization
      sas.com/deployment: sas-viya
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  annotations:
    sas.com/component-name: sas-batch
    sas.com/component-version: 1.4.0-20201214.1607958362320
    sas.com/ha-class: centralized
    sas.com/kustomize-base: base
    sas.com/version: 1.4.0
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-batch
  namespace: franceavv
spec:
  minAvailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: sas-batch
      sas.com/deployment: sas-viya
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  annotations:
    sas.com/component-name: sas-business-rules-services
    sas.com/component-version: 3.9.15-20201210.1607644432623
    sas.com/ha-class: centralized
    sas.com/kustomize-base: base
    sas.com/version: 3.9.15
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-business-rules-services
  namespace: franceavv
spec:
  minAvailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: sas-business-rules-services
      sas.com/deployment: sas-viya
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  annotations:
    sas.com/component-name: sas-cachelocator
    sas.com/component-version: 1.23.11-20201204.1607051152259
    sas.com/ha-class: decentralized
    sas.com/kustomize-base: decentralized
    sas.com/version: 1.23.11
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-cachelocator
  namespace: franceavv
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: sas-cachelocator
      sas.com/deployment: sas-viya
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  annotations:
    sas.com/component-name: sas-cacheserver
    sas.com/component-version: 1.23.11-20201204.1607051747986
    sas.com/ha-class: decentralized
    sas.com/kustomize-base: decentralized
    sas.com/version: 1.23.11
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-cacheserver
  namespace: franceavv
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: sas-cacheserver
      sas.com/deployment: sas-viya
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  annotations:
    sas.com/component-name: sas-cas-control
    sas.com/component-version: 2.3.6-20201210.1607621490977
    sas.com/ha-class: centralized
    sas.com/kustomize-base: base
    sas.com/version: 2.3.6
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-cas-control
  namespace: franceavv
spec:
  minAvailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: sas-cas-control
      sas.com/deployment: sas-viya
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  annotations:
    sas.com/component-name: sas-code-debugger-app
    sas.com/component-version: 2.2.5-20201211.1607719641413
    sas.com/ha-class: centralized
    sas.com/kustomize-base: base
    sas.com/version: 2.2.5
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-code-debugger-app
  namespace: franceavv
spec:
  minAvailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: sas-code-debugger-app
      sas.com/deployment: sas-viya
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  annotations:
    sas.com/component-name: sas-comments
    sas.com/component-version: 2.56.0-20201207.1607337374651
    sas.com/ha-class: centralized
    sas.com/kustomize-base: base
    sas.com/version: 2.56.0
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-comments
  namespace: franceavv
spec:
  minAvailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: sas-comments
      sas.com/deployment: sas-viya
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  annotations:
    sas.com/component-name: sas-compute
    sas.com/component-version: 1.9.21-20201214.1607967809598
    sas.com/ha-class: centralized
    sas.com/kustomize-base: base
    sas.com/version: 1.9.21
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-compute
  namespace: franceavv
spec:
  minAvailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: sas-compute
      sas.com/deployment: sas-viya
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  annotations:
    sas.com/component-name: sas-configuration
    sas.com/component-version: 1.59.3-20201204.1607052795259
    sas.com/ha-class: centralized
    sas.com/kustomize-base: base
    sas.com/version: 1.59.3
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-configuration
  namespace: franceavv
spec:
  minAvailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: sas-configuration
      sas.com/deployment: sas-viya
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  annotations:
    sas.com/component-name: sas-connect
    sas.com/component-version: 4.15.2-20201211.1607717177992
    sas.com/ha-class: centralized
    sas.com/kustomize-base: base
    sas.com/version: 4.15.2
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-connect
  namespace: franceavv
spec:
  minAvailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: sas-connect
      sas.com/deployment: sas-viya
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  annotations:
    sas.com/component-name: sas-connect-spawner
    sas.com/component-version: 0.15.3-20201214.1607947188551
    sas.com/ha-class: centralized
    sas.com/kustomize-base: base
    sas.com/version: 0.15.3
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-connect-spawner
  namespace: franceavv
spec:
  minAvailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: sas-connect-spawner
      sas.com/deployment: sas-viya
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  annotations:
    sas.com/component-name: sas-consul-server
    sas.com/component-version: 1.310003.3-20201211.1607715119836
    sas.com/ha-class: decentralized
    sas.com/kustomize-base: decentralized
    sas.com/version: 1.310003.3
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-consul-server
  namespace: franceavv
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: sas-consul-server
      sas.com/deployment: sas-viya
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  annotations:
    sas.com/component-name: sas-conversation-designer-app
    sas.com/component-version: 1.3.0-20201203.1607012667858
    sas.com/ha-class: centralized
    sas.com/kustomize-base: base
    sas.com/version: 1.3.0
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-conversation-designer-app
  namespace: franceavv
spec:
  minAvailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: sas-conversation-designer-app
      sas.com/deployment: sas-viya
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  annotations:
    sas.com/component-name: sas-credentials
    sas.com/component-version: 1.27.12-20201208.1607464004925
    sas.com/ha-class: centralized
    sas.com/kustomize-base: base
    sas.com/version: 1.27.12
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-credentials
  namespace: franceavv
spec:
  minAvailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: sas-credentials
      sas.com/deployment: sas-viya
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  annotations:
    sas.com/component-name: sas-crossdomainproxy
    sas.com/component-version: 1.12.0-20201211.1607701073883
    sas.com/ha-class: centralized
    sas.com/kustomize-base: base
    sas.com/version: 1.12.0
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-crossdomainproxy
  namespace: franceavv
spec:
  minAvailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: sas-crossdomainproxy
      sas.com/deployment: sas-viya
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  annotations:
    sas.com/component-name: sas-data-explorer-app
    sas.com/component-version: 1.23.6-20201203.1607009499801
    sas.com/ha-class: centralized
    sas.com/kustomize-base: base
    sas.com/version: 1.23.6
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-data-explorer-app
  namespace: franceavv
spec:
  minAvailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: sas-data-explorer-app
      sas.com/deployment: sas-viya
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  annotations:
    sas.com/component-name: sas-data-flows
    sas.com/component-version: 1.6.0-20201209.1607548143778
    sas.com/ha-class: centralized
    sas.com/kustomize-base: base
    sas.com/version: 1.6.0
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-data-flows
  namespace: franceavv
spec:
  minAvailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: sas-data-flows
      sas.com/deployment: sas-viya
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  annotations:
    sas.com/component-name: sas-data-mining-models
    sas.com/component-version: 39.11.2-20201203.1607025419402
    sas.com/ha-class: centralized
    sas.com/kustomize-base: base
    sas.com/version: 39.11.2
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-data-mining-models
  namespace: franceavv
spec:
  minAvailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: sas-data-mining-models
      sas.com/deployment: sas-viya
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  annotations:
    sas.com/component-name: sas-data-mining-project-settings
    sas.com/component-version: 39.10.1-20201203.1607025448043
    sas.com/ha-class: centralized
    sas.com/kustomize-base: base
    sas.com/version: 39.10.1
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-data-mining-project-settings
  namespace: franceavv
spec:
  minAvailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: sas-data-mining-project-settings
      sas.com/deployment: sas-viya
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  annotations:
    sas.com/component-name: sas-data-mining-results
    sas.com/component-version: 22.23.7-20201203.1607025661511
    sas.com/ha-class: centralized
    sas.com/kustomize-base: base
    sas.com/version: 22.23.7
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-data-mining-results
  namespace: franceavv
spec:
  minAvailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: sas-data-mining-results
      sas.com/deployment: sas-viya
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  annotations:
    sas.com/component-name: sas-data-mining-services
    sas.com/component-version: 39.20.78-20201203.1607026321951
    sas.com/ha-class: centralized
    sas.com/kustomize-base: base
    sas.com/version: 39.20.78
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-data-mining-services
  namespace: franceavv
spec:
  minAvailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: sas-data-mining-services
      sas.com/deployment: sas-viya
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  annotations:
    sas.com/component-name: sas-data-plans
    sas.com/component-version: 1.22.14-20201209.1607474940409
    sas.com/ha-class: centralized
    sas.com/kustomize-base: base
    sas.com/version: 1.22.14
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-data-plans
  namespace: franceavv
spec:
  minAvailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: sas-data-plans
      sas.com/deployment: sas-viya
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  annotations:
    sas.com/component-name: sas-data-profiles
    sas.com/component-version: 4.32.1-20201203.1607011072196
    sas.com/ha-class: centralized
    sas.com/kustomize-base: base
    sas.com/version: 4.32.1
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-data-profiles
  namespace: franceavv
spec:
  minAvailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: sas-data-profiles
      sas.com/deployment: sas-viya
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  annotations:
    sas.com/component-name: sas-data-quality-services
    sas.com/component-version: 3.8.1-20201202.1606939069890
    sas.com/ha-class: centralized
    sas.com/kustomize-base: base
    sas.com/version: 3.8.1
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-data-quality-services
  namespace: franceavv
spec:
  minAvailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: sas-data-quality-services
      sas.com/deployment: sas-viya
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  annotations:
    sas.com/component-name: sas-data-sources
    sas.com/component-version: 3.33.1-20201202.1606937911915
    sas.com/ha-class: centralized
    sas.com/kustomize-base: base
    sas.com/version: 3.33.1
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-data-sources
  namespace: franceavv
spec:
  minAvailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: sas-data-sources
      sas.com/deployment: sas-viya
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  annotations:
    sas.com/component-name: sas-data-studio-app
    sas.com/component-version: 1.22.25-20201209.1607475335725
    sas.com/ha-class: centralized
    sas.com/kustomize-base: base
    sas.com/version: 1.22.25
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-data-studio-app
  namespace: franceavv
spec:
  minAvailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: sas-data-studio-app
      sas.com/deployment: sas-viya
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  annotations:
    sas.com/component-name: sas-decision-manager-app
    sas.com/component-version: 5.19.0-20201210.1607632727866
    sas.com/ha-class: centralized
    sas.com/kustomize-base: base
    sas.com/version: 5.19.0
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-decision-manager-app
  namespace: franceavv
spec:
  minAvailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: sas-decision-manager-app
      sas.com/deployment: sas-viya
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  annotations:
    sas.com/component-name: sas-decisions-definitions
    sas.com/component-version: 3.10.15-20201210.1607644445003
    sas.com/ha-class: centralized
    sas.com/kustomize-base: base
    sas.com/version: 3.10.15
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-decisions-definitions
  namespace: franceavv
spec:
  minAvailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: sas-decisions-definitions
      sas.com/deployment: sas-viya
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  annotations:
    sas.com/component-name: sas-deployment-data
    sas.com/component-version: 1.2.0-20201209.1607530266025
    sas.com/ha-class: centralized
    sas.com/kustomize-base: base
    sas.com/version: 1.2.0
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-deployment-data
  namespace: franceavv
spec:
  minAvailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: sas-deployment-data
      sas.com/deployment: sas-viya
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  annotations:
    sas.com/component-name: sas-device-management
    sas.com/component-version: 2.21.0-20201203.1606974091293
    sas.com/ha-class: centralized
    sas.com/kustomize-base: base
    sas.com/version: 2.21.0
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-device-management
  namespace: franceavv
spec:
  minAvailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: sas-device-management
      sas.com/deployment: sas-viya
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  annotations:
    sas.com/component-name: sas-drive-app
    sas.com/component-version: 3.9.2-20201208.1607415324393
    sas.com/ha-class: centralized
    sas.com/kustomize-base: base
    sas.com/version: 3.9.2
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-drive-app
  namespace: franceavv
spec:
  minAvailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: sas-drive-app
      sas.com/deployment: sas-viya
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  annotations:
    sas.com/component-name: sas-environment-manager-app
    sas.com/component-version: 4.7.18-20201210.1607608415476
    sas.com/ha-class: centralized
    sas.com/kustomize-base: base
    sas.com/version: 4.7.18
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-environment-manager-app
  namespace: franceavv
spec:
  minAvailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: sas-environment-manager-app
      sas.com/deployment: sas-viya
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  annotations:
    sas.com/component-name: sas-event-stream-manager-app
    sas.com/component-version: 7.8.24-20201211.1607650331718
    sas.com/ha-class: centralized
    sas.com/kustomize-base: base
    sas.com/version: 7.8.24
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-event-stream-manager-app
  namespace: franceavv
spec:
  minAvailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: sas-event-stream-manager-app
      sas.com/deployment: sas-viya
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  annotations:
    sas.com/component-name: sas-event-stream-processing-streamviewer-app
    sas.com/component-version: 7.8.27-20201211.1607648686559
    sas.com/ha-class: centralized
    sas.com/kustomize-base: base
    sas.com/version: 7.8.27
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-event-stream-processing-streamviewer-app
  namespace: franceavv
spec:
  minAvailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: sas-event-stream-processing-streamviewer-app
      sas.com/deployment: sas-viya
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  annotations:
    sas.com/component-name: sas-event-stream-processing-studio-app
    sas.com/component-version: 7.8.24-20201211.1607651463964
    sas.com/ha-class: centralized
    sas.com/kustomize-base: base
    sas.com/version: 7.8.24
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-event-stream-processing-studio-app
  namespace: franceavv
spec:
  minAvailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: sas-event-stream-processing-studio-app
      sas.com/deployment: sas-viya
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  annotations:
    sas.com/component-name: sas-files
    sas.com/component-version: 2.36.7-20201204.1607053741549
    sas.com/ha-class: centralized
    sas.com/kustomize-base: base
    sas.com/version: 2.36.7
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-files
  namespace: franceavv
spec:
  minAvailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: sas-files
      sas.com/deployment: sas-viya
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  annotations:
    sas.com/component-name: sas-folders
    sas.com/component-version: 2.57.3-20201204.1607080745145
    sas.com/ha-class: centralized
    sas.com/kustomize-base: base
    sas.com/version: 2.57.3
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-folders
  namespace: franceavv
spec:
  minAvailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: sas-folders
      sas.com/deployment: sas-viya
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  annotations:
    sas.com/component-name: sas-fonts
    sas.com/component-version: 1.76.2-20201202.1606968212309
    sas.com/ha-class: centralized
    sas.com/kustomize-base: base
    sas.com/version: 1.76.2
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-fonts
  namespace: franceavv
spec:
  minAvailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: sas-fonts
      sas.com/deployment: sas-viya
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  annotations:
    sas.com/component-name: sas-forecasting-comparison
    sas.com/component-version: 15.11.0-20201203.1607012315095
    sas.com/ha-class: centralized
    sas.com/kustomize-base: base
    sas.com/version: 15.11.0
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-forecasting-comparison
  namespace: franceavv
spec:
  minAvailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: sas-forecasting-comparison
      sas.com/deployment: sas-viya
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  annotations:
    sas.com/component-name: sas-forecasting-events
    sas.com/component-version: 15.11.0-20201203.1607012406763
    sas.com/ha-class: centralized
    sas.com/kustomize-base: base
    sas.com/version: 15.11.0
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-forecasting-events
  namespace: franceavv
spec:
  minAvailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: sas-forecasting-events
      sas.com/deployment: sas-viya
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  annotations:
    sas.com/component-name: sas-forecasting-exploration
    sas.com/component-version: 15.12.0-20201203.1607024186781
    sas.com/ha-class: centralized
    sas.com/kustomize-base: base
    sas.com/version: 15.12.0
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-forecasting-exploration
  namespace: franceavv
spec:
  minAvailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: sas-forecasting-exploration
      sas.com/deployment: sas-viya
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  annotations:
    sas.com/component-name: sas-forecasting-filters
    sas.com/component-version: 15.12.0-20201203.1607026228979
    sas.com/ha-class: centralized
    sas.com/kustomize-base: base
    sas.com/version: 15.12.0
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-forecasting-filters
  namespace: franceavv
spec:
  minAvailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: sas-forecasting-filters
      sas.com/deployment: sas-viya
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  annotations:
    sas.com/component-name: sas-forecasting-pipelines
    sas.com/component-version: 15.15.5-20201209.1607532908435
    sas.com/ha-class: centralized
    sas.com/kustomize-base: base
    sas.com/version: 15.15.5
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-forecasting-pipelines
  namespace: franceavv
spec:
  minAvailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: sas-forecasting-pipelines
      sas.com/deployment: sas-viya
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  annotations:
    sas.com/component-name: sas-forecasting-services
    sas.com/component-version: 15.20.4-20201209.1607555830814
    sas.com/ha-class: centralized
    sas.com/kustomize-base: base
    sas.com/version: 15.20.4
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-forecasting-services
  namespace: franceavv
spec:
  minAvailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: sas-forecasting-services
      sas.com/deployment: sas-viya
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  annotations:
    sas.com/component-name: sas-graph-builder-app
    sas.com/component-version: 1.65.0-20201203.1607022262435
    sas.com/ha-class: centralized
    sas.com/kustomize-base: base
    sas.com/version: 1.65.0
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-graph-builder-app
  namespace: franceavv
spec:
  minAvailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: sas-graph-builder-app
      sas.com/deployment: sas-viya
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  annotations:
    sas.com/component-name: sas-graph-templates
    sas.com/component-version: 1.71.0-20201203.1607004187481
    sas.com/ha-class: centralized
    sas.com/kustomize-base: base
    sas.com/version: 1.71.0
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-graph-templates
  namespace: franceavv
spec:
  minAvailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: sas-graph-templates
      sas.com/deployment: sas-viya
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  annotations:
    sas.com/component-name: sas-identities
    sas.com/component-version: 2.40.14-20201204.1607054361393
    sas.com/ha-class: centralized
    sas.com/kustomize-base: base
    sas.com/version: 2.40.14
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-identities
  namespace: franceavv
spec:
  minAvailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: sas-identities
      sas.com/deployment: sas-viya
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  annotations:
    sas.com/component-name: sas-job-execution
    sas.com/component-version: 2.28.12-20201204.1607054870985
    sas.com/ha-class: centralized
    sas.com/kustomize-base: base
    sas.com/version: 2.28.12
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-job-execution
  namespace: franceavv
spec:
  minAvailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: sas-job-execution
      sas.com/deployment: sas-viya
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  annotations:
    sas.com/component-name: sas-job-execution-app
    sas.com/component-version: 2.18.3-20201209.1607521207111
    sas.com/ha-class: centralized
    sas.com/kustomize-base: base
    sas.com/version: 2.18.3
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-job-execution-app
  namespace: franceavv
spec:
  minAvailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: sas-job-execution-app
      sas.com/deployment: sas-viya
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  annotations:
    sas.com/component-name: sas-job-flow-scheduling
    sas.com/component-version: 2.2.7-20201002.1601644744469
    sas.com/ha-class: centralized
    sas.com/kustomize-base: base
    sas.com/version: 2.2.7
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-job-flow-scheduling
  namespace: franceavv
spec:
  minAvailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: sas-job-flow-scheduling
      sas.com/deployment: sas-viya
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  annotations:
    sas.com/component-name: sas-launcher
    sas.com/component-version: 1.18.8-20201208.1607443790845
    sas.com/ha-class: centralized
    sas.com/kustomize-base: base
    sas.com/version: 1.18.8
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-launcher
  namespace: franceavv
spec:
  minAvailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: sas-launcher
      sas.com/deployment: sas-viya
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  annotations:
    sas.com/component-name: sas-lineage-app
    sas.com/component-version: 2.8.1-20201202.1606960621719
    sas.com/ha-class: centralized
    sas.com/kustomize-base: base
    sas.com/version: 2.8.1
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-lineage-app
  namespace: franceavv
spec:
  minAvailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: sas-lineage-app
      sas.com/deployment: sas-viya
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  annotations:
    sas.com/component-name: sas-links
    sas.com/component-version: 1.73.0-20201204.1607077133902
    sas.com/ha-class: centralized
    sas.com/kustomize-base: base
    sas.com/version: 1.73.0
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-links
  namespace: franceavv
spec:
  minAvailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: sas-links
      sas.com/deployment: sas-viya
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  annotations:
    sas.com/component-name: sas-localization
    sas.com/component-version: 1.9.3-20201217.1608245885998
    sas.com/ha-class: centralized
    sas.com/kustomize-base: base
    sas.com/version: 1.9.3
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-localization
  namespace: franceavv
spec:
  minAvailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: sas-localization
      sas.com/deployment: sas-viya
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  annotations:
    sas.com/component-name: sas-logon-app
    sas.com/component-version: 2.40.17-20201208.1607458236727
    sas.com/ha-class: centralized
    sas.com/kustomize-base: base
    sas.com/version: 2.40.17
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-logon-app
  namespace: franceavv
spec:
  minAvailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: sas-logon-app
      sas.com/deployment: sas-viya
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  annotations:
    sas.com/component-name: sas-mail
    sas.com/component-version: 1.56.1-20201203.1607023389621
    sas.com/ha-class: centralized
    sas.com/kustomize-base: base
    sas.com/version: 1.56.1
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-mail
  namespace: franceavv
spec:
  minAvailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: sas-mail
      sas.com/deployment: sas-viya
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  annotations:
    sas.com/component-name: sas-maps
    sas.com/component-version: 1.76.0-20201209.1607538010156
    sas.com/ha-class: centralized
    sas.com/kustomize-base: base
    sas.com/version: 1.76.0
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-maps
  namespace: franceavv
spec:
  minAvailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: sas-maps
      sas.com/deployment: sas-viya
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  annotations:
    sas.com/component-name: sas-microanalytic-score
    sas.com/component-version: 2.34.6-20201214.1607955335324
    sas.com/ha-class: centralized
    sas.com/kustomize-base: base
    sas.com/version: 2.34.6
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-microanalytic-score
  namespace: franceavv
spec:
  minAvailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: sas-microanalytic-score
      sas.com/deployment: sas-viya
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  annotations:
    sas.com/component-name: sas-model-management
    sas.com/component-version: 1.16.58-20201214.1607964538030
    sas.com/ha-class: centralized
    sas.com/kustomize-base: base
    sas.com/version: 1.16.58
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-model-management
  namespace: franceavv
spec:
  minAvailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: sas-model-management
      sas.com/deployment: sas-viya
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  annotations:
    sas.com/component-name: sas-model-manager-app
    sas.com/component-version: 1.19.0-20201214.1607962203037
    sas.com/ha-class: centralized
    sas.com/kustomize-base: base
    sas.com/version: 1.19.0
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-model-manager-app
  namespace: franceavv
spec:
  minAvailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: sas-model-manager-app
      sas.com/deployment: sas-viya
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  annotations:
    sas.com/component-name: sas-model-publish
    sas.com/component-version: 2.27.0-20201209.1607555293093
    sas.com/ha-class: centralized
    sas.com/kustomize-base: base
    sas.com/version: 2.27.0
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-model-publish
  namespace: franceavv
spec:
  minAvailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: sas-model-publish
      sas.com/deployment: sas-viya
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  annotations:
    sas.com/component-name: sas-model-repository
    sas.com/component-version: 3.14.56-20201214.1607964567719
    sas.com/ha-class: centralized
    sas.com/kustomize-base: base
    sas.com/version: 3.14.56
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-model-repository
  namespace: franceavv
spec:
  minAvailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: sas-model-repository
      sas.com/deployment: sas-viya
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  annotations:
    sas.com/component-name: sas-model-studio-app
    sas.com/component-version: 1.51.2-20201209.1607544692059
    sas.com/ha-class: centralized
    sas.com/kustomize-base: base
    sas.com/version: 1.51.2
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-model-studio-app
  namespace: franceavv
spec:
  minAvailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: sas-model-studio-app
      sas.com/deployment: sas-viya
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  annotations:
    sas.com/component-name: sas-natural-language-conversations
    sas.com/component-version: 1.3.1-20201204.1607111974163
    sas.com/ha-class: centralized
    sas.com/kustomize-base: base
    sas.com/version: 1.3.1
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-natural-language-conversations
  namespace: franceavv
spec:
  minAvailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: sas-natural-language-conversations
      sas.com/deployment: sas-viya
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  annotations:
    sas.com/component-name: sas-natural-language-generation
    sas.com/component-version: 1.6.0-20201203.1607013425049
    sas.com/ha-class: centralized
    sas.com/kustomize-base: base
    sas.com/version: 1.6.0
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-natural-language-generation
  namespace: franceavv
spec:
  minAvailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: sas-natural-language-generation
      sas.com/deployment: sas-viya
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  annotations:
    sas.com/component-name: sas-natural-language-understanding
    sas.com/component-version: 3.4.0-20201203.1607014016368
    sas.com/ha-class: centralized
    sas.com/kustomize-base: base
    sas.com/version: 3.4.0
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-natural-language-understanding
  namespace: franceavv
spec:
  minAvailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: sas-natural-language-understanding
      sas.com/deployment: sas-viya
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  annotations:
    sas.com/component-name: sas-notifications
    sas.com/component-version: 1.55.1-20201207.1607355364455
    sas.com/ha-class: centralized
    sas.com/kustomize-base: base
    sas.com/version: 1.55.1
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-notifications
  namespace: franceavv
spec:
  minAvailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: sas-notifications
      sas.com/deployment: sas-viya
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  annotations:
    sas.com/component-name: sas-preferences
    sas.com/component-version: 1.57.1-20201204.1607093916383
    sas.com/ha-class: centralized
    sas.com/kustomize-base: base
    sas.com/version: 1.57.1
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-preferences
  namespace: franceavv
spec:
  minAvailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: sas-preferences
      sas.com/deployment: sas-viya
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  annotations:
    sas.com/component-name: sas-rabbitmq-server
    sas.com/component-version: 3.82003.2-20201013.1602597853237
    sas.com/ha-class: decentralized
    sas.com/kustomize-base: decentralized
    sas.com/version: 3.82003.2
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-rabbitmq-server
  namespace: franceavv
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: sas-rabbitmq-server
      sas.com/deployment: sas-viya
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  annotations:
    sas.com/component-name: sas-relationships
    sas.com/component-version: 3.28.11-20201204.1607056749902
    sas.com/ha-class: centralized
    sas.com/kustomize-base: base
    sas.com/version: 3.28.11
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-relationships
  namespace: franceavv
spec:
  minAvailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: sas-relationships
      sas.com/deployment: sas-viya
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  annotations:
    sas.com/component-name: sas-report-distribution
    sas.com/component-version: 2.52.0-20201106.1604662320003
    sas.com/ha-class: centralized
    sas.com/kustomize-base: base
    sas.com/version: 2.52.0
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-report-distribution
  namespace: franceavv
spec:
  minAvailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: sas-report-distribution
      sas.com/deployment: sas-viya
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  annotations:
    sas.com/component-name: sas-report-execution
    sas.com/component-version: 2.12.3-20201209.1607496369529
    sas.com/ha-class: centralized
    sas.com/kustomize-base: base
    sas.com/version: 2.12.3
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-report-execution
  namespace: franceavv
spec:
  minAvailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: sas-report-execution
      sas.com/deployment: sas-viya
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  annotations:
    sas.com/component-name: sas-report-renderer
    sas.com/component-version: 1.65.3-20201208.1607482529657
    sas.com/ha-class: centralized
    sas.com/kustomize-base: base
    sas.com/version: 1.65.3
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-report-renderer
  namespace: franceavv
spec:
  minAvailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: sas-report-renderer
      sas.com/deployment: sas-viya
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  annotations:
    sas.com/component-name: sas-report-services-group
    sas.com/component-version: 4.13.5-20201208.1607409510563
    sas.com/ha-class: centralized
    sas.com/kustomize-base: base
    sas.com/version: 4.13.5
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-report-services-group
  namespace: franceavv
spec:
  minAvailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: sas-report-services-group
      sas.com/deployment: sas-viya
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  annotations:
    sas.com/component-name: sas-scheduler
    sas.com/component-version: 3.26.11-20201204.1607057236019
    sas.com/ha-class: centralized
    sas.com/kustomize-base: base
    sas.com/version: 3.26.11
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-scheduler
  namespace: franceavv
spec:
  minAvailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: sas-scheduler
      sas.com/deployment: sas-viya
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  annotations:
    sas.com/component-name: sas-score-definitions
    sas.com/component-version: 2.22.0-20201210.1607645547646
    sas.com/ha-class: centralized
    sas.com/kustomize-base: base
    sas.com/version: 2.22.0
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-score-definitions
  namespace: franceavv
spec:
  minAvailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: sas-score-definitions
      sas.com/deployment: sas-viya
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  annotations:
    sas.com/component-name: sas-score-execution
    sas.com/component-version: 2.21.0-20201210.1607646388188
    sas.com/ha-class: centralized
    sas.com/kustomize-base: base
    sas.com/version: 2.21.0
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-score-execution
  namespace: franceavv
spec:
  minAvailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: sas-score-execution
      sas.com/deployment: sas-viya
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  annotations:
    sas.com/component-name: sas-search
    sas.com/component-version: 2.29.6-20201204.1607057876100
    sas.com/ha-class: centralized
    sas.com/kustomize-base: base
    sas.com/version: 2.29.6
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-search
  namespace: franceavv
spec:
  minAvailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: sas-search
      sas.com/deployment: sas-viya
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  annotations:
    sas.com/component-name: sas-sentiment-execution-provider
    sas.com/component-version: 6.2.0-20201202.1606938881164
    sas.com/ha-class: centralized
    sas.com/kustomize-base: base
    sas.com/version: 6.2.0
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-sentiment-execution-provider
  namespace: franceavv
spec:
  minAvailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: sas-sentiment-execution-provider
      sas.com/deployment: sas-viya
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  annotations:
    sas.com/component-name: sas-subject-contacts
    sas.com/component-version: 0.14.14-20201210.1607643779745
    sas.com/ha-class: centralized
    sas.com/kustomize-base: base
    sas.com/version: 0.14.14
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-subject-contacts
  namespace: franceavv
spec:
  minAvailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: sas-subject-contacts
      sas.com/deployment: sas-viya
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  annotations:
    sas.com/component-name: sas-templates
    sas.com/component-version: 1.24.12-20201204.1607058477854
    sas.com/ha-class: centralized
    sas.com/kustomize-base: base
    sas.com/version: 1.24.12
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-templates
  namespace: franceavv
spec:
  minAvailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: sas-templates
      sas.com/deployment: sas-viya
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  annotations:
    sas.com/component-name: sas-text-analytics
    sas.com/component-version: 2.12.1-20201209.1607553801258
    sas.com/ha-class: centralized
    sas.com/kustomize-base: base
    sas.com/version: 2.12.1
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-text-analytics
  namespace: franceavv
spec:
  minAvailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: sas-text-analytics
      sas.com/deployment: sas-viya
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  annotations:
    sas.com/component-name: sas-text-cas-data-management
    sas.com/component-version: 5.7.0-20201203.1607029718479
    sas.com/ha-class: centralized
    sas.com/kustomize-base: base
    sas.com/version: 5.7.0
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-text-cas-data-management
  namespace: franceavv
spec:
  minAvailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: sas-text-cas-data-management
      sas.com/deployment: sas-viya
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  annotations:
    sas.com/component-name: sas-text-categorization
    sas.com/component-version: 5.9.0-20201203.1607011533238
    sas.com/ha-class: centralized
    sas.com/kustomize-base: base
    sas.com/version: 5.9.0
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-text-categorization
  namespace: franceavv
spec:
  minAvailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: sas-text-categorization
      sas.com/deployment: sas-viya
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  annotations:
    sas.com/component-name: sas-text-concepts
    sas.com/component-version: 5.9.0-20201203.1607019179325
    sas.com/ha-class: centralized
    sas.com/kustomize-base: base
    sas.com/version: 5.9.0
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-text-concepts
  namespace: franceavv
spec:
  minAvailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: sas-text-concepts
      sas.com/deployment: sas-viya
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  annotations:
    sas.com/component-name: sas-text-parsing
    sas.com/component-version: 5.7.0-20201203.1607019166184
    sas.com/ha-class: centralized
    sas.com/kustomize-base: base
    sas.com/version: 5.7.0
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-text-parsing
  namespace: franceavv
spec:
  minAvailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: sas-text-parsing
      sas.com/deployment: sas-viya
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  annotations:
    sas.com/component-name: sas-text-topics
    sas.com/component-version: 5.8.0-20201203.1607011531723
    sas.com/ha-class: centralized
    sas.com/kustomize-base: base
    sas.com/version: 5.8.0
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-text-topics
  namespace: franceavv
spec:
  minAvailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: sas-text-topics
      sas.com/deployment: sas-viya
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  annotations:
    sas.com/component-name: sas-theme-content
    sas.com/component-version: 1.23.2-20201202.1606918780434
    sas.com/ha-class: centralized
    sas.com/kustomize-base: base
    sas.com/version: 1.23.2
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-theme-content
  namespace: franceavv
spec:
  minAvailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: sas-theme-content
      sas.com/deployment: sas-viya
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  annotations:
    sas.com/component-name: sas-theme-designer-app
    sas.com/component-version: 3.25.7-20201204.1607109715258
    sas.com/ha-class: centralized
    sas.com/kustomize-base: base
    sas.com/version: 3.25.7
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-theme-designer-app
  namespace: franceavv
spec:
  minAvailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: sas-theme-designer-app
      sas.com/deployment: sas-viya
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  annotations:
    sas.com/component-name: sas-themes
    sas.com/component-version: 3.23.4-20201202.1606917995194
    sas.com/ha-class: centralized
    sas.com/kustomize-base: base
    sas.com/version: 3.23.4
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-themes
  namespace: franceavv
spec:
  minAvailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: sas-themes
      sas.com/deployment: sas-viya
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  annotations:
    sas.com/component-name: sas-thumbnails
    sas.com/component-version: 1.52.1-20201202.1606940688053
    sas.com/ha-class: centralized
    sas.com/kustomize-base: base
    sas.com/version: 1.52.1
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-thumbnails
  namespace: franceavv
spec:
  minAvailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: sas-thumbnails
      sas.com/deployment: sas-viya
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  annotations:
    sas.com/component-name: sas-topic-management
    sas.com/component-version: 6.8.0-20201202.1606937875615
    sas.com/ha-class: centralized
    sas.com/kustomize-base: base
    sas.com/version: 6.8.0
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-topic-management
  namespace: franceavv
spec:
  minAvailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: sas-topic-management
      sas.com/deployment: sas-viya
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  annotations:
    sas.com/component-name: sas-transfer
    sas.com/component-version: 2.29.17-20201204.1607058995910
    sas.com/ha-class: centralized
    sas.com/kustomize-base: base
    sas.com/version: 2.29.17
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-transfer
  namespace: franceavv
spec:
  minAvailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: sas-transfer
      sas.com/deployment: sas-viya
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  annotations:
    sas.com/component-name: sas-transformations
    sas.com/component-version: 2.24.9-20201209.1607544521387
    sas.com/ha-class: centralized
    sas.com/kustomize-base: base
    sas.com/version: 2.24.9
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-transformations
  namespace: franceavv
spec:
  minAvailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: sas-transformations
      sas.com/deployment: sas-viya
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  annotations:
    sas.com/component-name: sas-types
    sas.com/component-version: 3.16.1-20201130.1606757966415
    sas.com/ha-class: centralized
    sas.com/kustomize-base: base
    sas.com/version: 3.16.1
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-types
  namespace: franceavv
spec:
  minAvailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: sas-types
      sas.com/deployment: sas-viya
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  annotations:
    sas.com/component-name: sas-visual-analytics-administration
    sas.com/component-version: 1.53.1-20201202.1606941457830
    sas.com/ha-class: centralized
    sas.com/kustomize-base: base
    sas.com/version: 1.53.1
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-visual-analytics-administration
  namespace: franceavv
spec:
  minAvailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: sas-visual-analytics-administration
      sas.com/deployment: sas-viya
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  annotations:
    sas.com/component-name: sas-visual-analytics-app
    sas.com/component-version: 2.54.0-20201209.1607498056870
    sas.com/ha-class: centralized
    sas.com/kustomize-base: base
    sas.com/version: 2.54.0
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-visual-analytics-app
  namespace: franceavv
spec:
  minAvailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: sas-visual-analytics-app
      sas.com/deployment: sas-viya
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  annotations:
    sas.com/component-name: sas-workflow
    sas.com/component-version: 3.16.4-20201204.1607059513666
    sas.com/ha-class: centralized
    sas.com/kustomize-base: base
    sas.com/version: 3.16.4
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-workflow
  namespace: franceavv
spec:
  minAvailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: sas-workflow
      sas.com/deployment: sas-viya
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  annotations:
    sas.com/component-name: sas-workflow-definition-history
    sas.com/component-version: 2.7.8-20201212.1607769254594
    sas.com/ha-class: centralized
    sas.com/kustomize-base: base
    sas.com/version: 2.7.8
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-workflow-definition-history
  namespace: franceavv
spec:
  minAvailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: sas-workflow-definition-history
      sas.com/deployment: sas-viya
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  annotations:
    sas.com/component-name: sas-workflow-manager-app
    sas.com/component-version: 2.11.0-20201210.1607647072535
    sas.com/ha-class: centralized
    sas.com/kustomize-base: base
    sas.com/version: 2.11.0
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-workflow-manager-app
  namespace: franceavv
spec:
  minAvailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: sas-workflow-manager-app
      sas.com/deployment: sas-viya
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  annotations:
    sas.com/component-name: sas-prepull
    sas.com/component-version: 1.3.2-20201102.1604347909321
    sas.com/version: 1.3.2
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-prepull
  namespace: franceavv
spec:
  selector:
    matchExpressions: []
    matchLabels:
      name: sas-prepull
      sas.com/deployment: sas-viya
  template:
    metadata:
      annotations:
        sas.com/component-name: sas-prepull
        sas.com/component-version: 1.3.2-20201102.1604347909321
        sas.com/version: 1.3.2
        sidecar.istio.io/inject: "false"
      labels:
        name: sas-prepull
        sas.com/deployment: sas-viya
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution: []
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: workload.sas.com/class
                operator: In
                values:
                - compute
              matchFields: []
      containers:
      - args: null
        command:
        - /app/prepull
        - -op
        - daemon
        env:
        - name: SAS_PREPULL_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: SAS_SPEC_NODENAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        envFrom: []
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-prepull:1.3.2-20201102.1604347909321
        lifecycle:
          preStop:
            exec:
              command:
              - /app/prepull
              - -op
              - remove
        name: sas-prepull
        ports: []
        volumeDevices: []
        volumeMounts: []
      hostAliases: []
      imagePullSecrets:
      - name: sas-image-pull-secrets-4m8cc729k8
      initContainers:
      - args: null
        command:
        - sh
        - -c
        - |
          /bin/bash <<'EOF'
          TS=`date +%Y-%m-%dT%H:%M:%S.%6N%:z`
          SAS_PREPULL_MESSAGE="{\"level\": \"info\", \"message\": \"SPE Image Pre-Pulled to $SAS_SPEC_NODENAME\",\"version\": 1, \
          \"timeStamp\": \"$TS\",\"source\": \"prepull\",\"properties\": {\"hostname\": \"$SAS_SPEC_NODENAME\"}}"
          echo $SAS_PREPULL_MESSAGE

          EOF
        env:
        - name: SAS_SPEC_NODENAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        envFrom: []
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-programming-environment:1.11.15-20201217.1608211744448
        imagePullPolicy: IfNotPresent
        name: sas-programming-environment-prepull
        ports: []
        volumeDevices: []
        volumeMounts: []
      - args: null
        command:
        - sh
        - -c
        - |
          /bin/bash <<'EOF'
          TS=`date +%Y-%m-%dT%H:%M:%S.%6N%:z`
          SAS_PREPULL_MESSAGE="{\"level\": \"info\", \"message\": \"SAS Cert Frame Image Pre-Pulled to $SAS_SPEC_NODENAME\",\"version\": 1, \
          \"timeStamp\": \"$TS\",\"source\": \"prepull\",\"properties\": {\"hostname\": \"$SAS_SPEC_NODENAME\"}}"
          echo $SAS_PREPULL_MESSAGE

          EOF
        env:
        - name: SAS_SPEC_NODENAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        envFrom: []
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-certframe:3.9.0-20201203.1607016443086
        imagePullPolicy: IfNotPresent
        name: sas-certframe-prepull
        ports: []
        volumeDevices: []
        volumeMounts: []
      - args: null
        command:
        - sh
        - -c
        - |
          /bin/bash <<'EOF'
          TS=`date +%Y-%m-%dT%H:%M:%S.%6N%:z`
          SAS_PREPULL_MESSAGE="{\"level\": \"info\", \"message\": \"SAS Config Init Image Pre-Pulled to $SAS_SPEC_NODENAME\",\"version\": 1, \
          \"timeStamp\": \"$TS\",\"source\": \"prepull\",\"properties\": {\"hostname\": \"$SAS_SPEC_NODENAME\"}}"
          echo $SAS_PREPULL_MESSAGE

          EOF
        env:
        - name: SAS_SPEC_NODENAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        envFrom: []
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-config-init:1.2.6-20200928.1601307316387
        imagePullPolicy: IfNotPresent
        name: sas-config-init-prepull
        ports: []
        volumeDevices: []
        volumeMounts: []
      - args: null
        command:
        - /app/prepull
        - -op
        - add
        env:
        - name: SAS_PREPULL_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: SAS_SPEC_NODENAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        envFrom: []
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-prepull:1.3.2-20201102.1604347909321
        imagePullPolicy: IfNotPresent
        name: sas-prepull-api
        ports: []
        volumeDevices: []
        volumeMounts: []
      readinessGates: []
      serviceAccountName: sas-prepull
      tolerations:
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: compute
      volumes: []
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 100%
    type: RollingUpdate
---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  annotations:
    sas.com/component-name: sas-analytics-components
    sas.com/component-version: 20.17.7-20201209.1607538004353
    sas.com/ha-class: centralized
    sas.com/kustomize-base: golang
    sas.com/version: 20.17.7
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-analytics-components
  namespace: franceavv
spec:
  maxReplicas: 1
  metrics:
  - resource:
      name: cpu
      target:
        averageUtilization: 80
        type: Utilization
    type: Resource
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: sas-analytics-components
---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  annotations:
    sas.com/component-name: sas-analytics-events
    sas.com/component-version: 1.4.4-20201204.1607119383686
    sas.com/ha-class: centralized
    sas.com/kustomize-base: golang
    sas.com/version: 1.4.4
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-analytics-events
  namespace: franceavv
spec:
  maxReplicas: 1
  metrics:
  - resource:
      name: cpu
      target:
        averageUtilization: 80
        type: Utilization
    type: Resource
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: sas-analytics-events
---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  annotations:
    sas.com/component-name: sas-analytics-services
    sas.com/component-version: 1.10.0-20201204.1607097302572
    sas.com/ha-class: centralized
    sas.com/kustomize-base: spring
    sas.com/version: 1.10.0
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-analytics-services
  namespace: franceavv
spec:
  maxReplicas: 1
  metrics:
  - resource:
      name: cpu
      target:
        averageUtilization: 80
        type: Utilization
    type: Resource
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: sas-analytics-services
---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  annotations:
    sas.com/component-name: sas-annotations
    sas.com/component-version: 2.9.0-20201208.1607439456307
    sas.com/ha-class: centralized
    sas.com/kustomize-base: golang
    sas.com/version: 2.9.0
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-annotations
  namespace: franceavv
spec:
  maxReplicas: 1
  metrics:
  - resource:
      name: cpu
      target:
        averageUtilization: 80
        type: Utilization
    type: Resource
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: sas-annotations
---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  annotations:
    sas.com/component-name: sas-app-registry
    sas.com/component-version: 1.50.0-20201202.1606937218076
    sas.com/ha-class: centralized
    sas.com/kustomize-base: golang
    sas.com/version: 1.50.0
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-app-registry
  namespace: franceavv
spec:
  maxReplicas: 1
  metrics:
  - resource:
      name: cpu
      target:
        averageUtilization: 80
        type: Utilization
    type: Resource
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: sas-app-registry
---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  annotations:
    sas.com/component-name: sas-arke
    sas.com/component-version: 1.4.0-20201211.1607698571564
    sas.com/ha-class: centralized
    sas.com/kustomize-base: golang
    sas.com/version: 1.4.0
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-arke
  namespace: franceavv
spec:
  maxReplicas: 1
  metrics:
  - resource:
      name: cpu
      target:
        averageUtilization: 80
        type: Utilization
    type: Resource
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: sas-arke
---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  annotations:
    sas.com/component-name: sas-audit
    sas.com/component-version: 1.58.1-20201207.1607355915596
    sas.com/ha-class: centralized
    sas.com/kustomize-base: golang
    sas.com/version: 1.58.1
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-audit
  namespace: franceavv
spec:
  maxReplicas: 1
  metrics:
  - resource:
      name: cpu
      target:
        averageUtilization: 80
        type: Utilization
    type: Resource
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: sas-audit
---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  annotations:
    sas.com/component-name: sas-authorization
    sas.com/component-version: 3.32.14-20201204.1607098698544
    sas.com/ha-class: centralized
    sas.com/kustomize-base: spring
    sas.com/version: 3.32.14
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-authorization
  namespace: franceavv
spec:
  maxReplicas: 1
  metrics:
  - resource:
      name: cpu
      target:
        averageUtilization: 80
        type: Utilization
    type: Resource
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: sas-authorization
---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  annotations:
    sas.com/component-name: sas-batch
    sas.com/component-version: 1.4.0-20201214.1607958362320
    sas.com/ha-class: centralized
    sas.com/kustomize-base: golang
    sas.com/version: 1.4.0
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-batch
  namespace: franceavv
spec:
  maxReplicas: 1
  metrics:
  - resource:
      name: cpu
      target:
        averageUtilization: 80
        type: Utilization
    type: Resource
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: sas-batch
---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  annotations:
    sas.com/component-name: sas-business-rules-services
    sas.com/component-version: 3.9.15-20201210.1607644432623
    sas.com/ha-class: centralized
    sas.com/kustomize-base: spring
    sas.com/version: 3.9.15
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-business-rules-services
  namespace: franceavv
spec:
  maxReplicas: 1
  metrics:
  - resource:
      name: cpu
      target:
        averageUtilization: 80
        type: Utilization
    type: Resource
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: sas-business-rules-services
---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  annotations:
    sas.com/component-name: sas-cas-administration
    sas.com/component-version: 1.28.1-20201209.1607532545693
    sas.com/ha-class: centralized
    sas.com/kustomize-base: spring
    sas.com/version: 1.28.1
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-cas-administration
  namespace: franceavv
spec:
  maxReplicas: 1
  metrics:
  - resource:
      name: cpu
      target:
        averageUtilization: 80
        type: Utilization
    type: Resource
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: sas-cas-administration
---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  annotations:
    sas.com/component-name: sas-cas-control
    sas.com/component-version: 2.3.6-20201210.1607621490977
    sas.com/ha-class: centralized
    sas.com/kustomize-base: golang
    sas.com/version: 2.3.6
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-cas-control
  namespace: franceavv
spec:
  maxReplicas: 1
  metrics:
  - resource:
      name: cpu
      target:
        averageUtilization: 80
        type: Utilization
    type: Resource
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: sas-cas-control
---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  annotations:
    sas.com/component-name: sas-code-debugger
    sas.com/component-version: 2.1.5-20201202.1606941614459
    sas.com/ha-class: centralized
    sas.com/kustomize-base: golang
    sas.com/version: 2.1.5
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-code-debugger
  namespace: franceavv
spec:
  maxReplicas: 1
  metrics:
  - resource:
      name: cpu
      target:
        averageUtilization: 80
        type: Utilization
    type: Resource
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: sas-code-debugger
---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  annotations:
    sas.com/component-name: sas-code-debugger-app
    sas.com/component-version: 2.2.5-20201211.1607719641413
    sas.com/ha-class: centralized
    sas.com/kustomize-base: golang
    sas.com/version: 2.2.5
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-code-debugger-app
  namespace: franceavv
spec:
  maxReplicas: 1
  metrics:
  - resource:
      name: cpu
      target:
        averageUtilization: 80
        type: Utilization
    type: Resource
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: sas-code-debugger-app
---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  annotations:
    sas.com/component-name: sas-comments
    sas.com/component-version: 2.56.0-20201207.1607337374651
    sas.com/ha-class: centralized
    sas.com/kustomize-base: golang
    sas.com/version: 2.56.0
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-comments
  namespace: franceavv
spec:
  maxReplicas: 1
  metrics:
  - resource:
      name: cpu
      target:
        averageUtilization: 80
        type: Utilization
    type: Resource
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: sas-comments
---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  annotations:
    sas.com/component-name: sas-compute
    sas.com/component-version: 1.9.21-20201214.1607967809598
    sas.com/ha-class: centralized
    sas.com/kustomize-base: spring
    sas.com/version: 1.9.21
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-compute
  namespace: franceavv
spec:
  maxReplicas: 1
  metrics:
  - resource:
      name: cpu
      target:
        averageUtilization: 80
        type: Utilization
    type: Resource
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: sas-compute
---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  annotations:
    sas.com/component-name: sas-configuration
    sas.com/component-version: 1.59.3-20201204.1607052795259
    sas.com/ha-class: centralized
    sas.com/kustomize-base: spring
    sas.com/version: 1.59.3
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-configuration
  namespace: franceavv
spec:
  maxReplicas: 1
  metrics:
  - resource:
      name: cpu
      target:
        averageUtilization: 80
        type: Utilization
    type: Resource
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: sas-configuration
---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  annotations:
    sas.com/component-name: sas-connect
    sas.com/component-version: 4.15.2-20201211.1607717177992
    sas.com/ha-class: centralized
    sas.com/kustomize-base: golang
    sas.com/version: 4.15.2
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-connect
  namespace: franceavv
spec:
  maxReplicas: 1
  metrics:
  - resource:
      name: cpu
      target:
        averageUtilization: 80
        type: Utilization
    type: Resource
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: sas-connect
---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  annotations:
    sas.com/component-name: sas-conversation-designer-app
    sas.com/component-version: 1.3.0-20201203.1607012667858
    sas.com/ha-class: centralized
    sas.com/kustomize-base: spring
    sas.com/version: 1.3.0
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-conversation-designer-app
  namespace: franceavv
spec:
  maxReplicas: 1
  metrics:
  - resource:
      name: cpu
      target:
        averageUtilization: 80
        type: Utilization
    type: Resource
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: sas-conversation-designer-app
---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  annotations:
    sas.com/component-name: sas-credentials
    sas.com/component-version: 1.27.12-20201208.1607464004925
    sas.com/ha-class: centralized
    sas.com/kustomize-base: spring
    sas.com/version: 1.27.12
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-credentials
  namespace: franceavv
spec:
  maxReplicas: 1
  metrics:
  - resource:
      name: cpu
      target:
        averageUtilization: 80
        type: Utilization
    type: Resource
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: sas-credentials
---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  annotations:
    sas.com/component-name: sas-crossdomainproxy
    sas.com/component-version: 1.12.0-20201211.1607701073883
    sas.com/ha-class: centralized
    sas.com/kustomize-base: golang
    sas.com/version: 1.12.0
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-crossdomainproxy
  namespace: franceavv
spec:
  maxReplicas: 1
  metrics:
  - resource:
      name: cpu
      target:
        averageUtilization: 80
        type: Utilization
    type: Resource
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: sas-crossdomainproxy
---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  annotations:
    sas.com/component-name: sas-data-explorer-app
    sas.com/component-version: 1.23.6-20201203.1607009499801
    sas.com/ha-class: centralized
    sas.com/kustomize-base: spring
    sas.com/version: 1.23.6
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-data-explorer-app
  namespace: franceavv
spec:
  maxReplicas: 1
  metrics:
  - resource:
      name: cpu
      target:
        averageUtilization: 80
        type: Utilization
    type: Resource
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: sas-data-explorer-app
---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  annotations:
    sas.com/component-name: sas-data-flows
    sas.com/component-version: 1.6.0-20201209.1607548143778
    sas.com/ha-class: centralized
    sas.com/kustomize-base: golang
    sas.com/version: 1.6.0
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-data-flows
  namespace: franceavv
spec:
  maxReplicas: 1
  metrics:
  - resource:
      name: cpu
      target:
        averageUtilization: 80
        type: Utilization
    type: Resource
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: sas-data-flows
---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  annotations:
    sas.com/component-name: sas-data-mining-models
    sas.com/component-version: 39.11.2-20201203.1607025419402
    sas.com/ha-class: centralized
    sas.com/kustomize-base: golang
    sas.com/version: 39.11.2
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-data-mining-models
  namespace: franceavv
spec:
  maxReplicas: 1
  metrics:
  - resource:
      name: cpu
      target:
        averageUtilization: 80
        type: Utilization
    type: Resource
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: sas-data-mining-models
---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  annotations:
    sas.com/component-name: sas-data-mining-project-settings
    sas.com/component-version: 39.10.1-20201203.1607025448043
    sas.com/ha-class: centralized
    sas.com/kustomize-base: golang
    sas.com/version: 39.10.1
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-data-mining-project-settings
  namespace: franceavv
spec:
  maxReplicas: 1
  metrics:
  - resource:
      name: cpu
      target:
        averageUtilization: 80
        type: Utilization
    type: Resource
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: sas-data-mining-project-settings
---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  annotations:
    sas.com/component-name: sas-data-mining-results
    sas.com/component-version: 22.23.7-20201203.1607025661511
    sas.com/ha-class: centralized
    sas.com/kustomize-base: golang
    sas.com/version: 22.23.7
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-data-mining-results
  namespace: franceavv
spec:
  maxReplicas: 1
  metrics:
  - resource:
      name: cpu
      target:
        averageUtilization: 80
        type: Utilization
    type: Resource
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: sas-data-mining-results
---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  annotations:
    sas.com/component-name: sas-data-mining-services
    sas.com/component-version: 39.20.78-20201203.1607026321951
    sas.com/ha-class: centralized
    sas.com/kustomize-base: golang
    sas.com/version: 39.20.78
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-data-mining-services
  namespace: franceavv
spec:
  maxReplicas: 1
  metrics:
  - resource:
      name: cpu
      target:
        averageUtilization: 80
        type: Utilization
    type: Resource
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: sas-data-mining-services
---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  annotations:
    sas.com/component-name: sas-data-plans
    sas.com/component-version: 1.22.14-20201209.1607474940409
    sas.com/ha-class: centralized
    sas.com/kustomize-base: spring
    sas.com/version: 1.22.14
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-data-plans
  namespace: franceavv
spec:
  maxReplicas: 1
  metrics:
  - resource:
      name: cpu
      target:
        averageUtilization: 80
        type: Utilization
    type: Resource
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: sas-data-plans
---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  annotations:
    sas.com/component-name: sas-data-profiles
    sas.com/component-version: 4.32.1-20201203.1607011072196
    sas.com/ha-class: centralized
    sas.com/kustomize-base: golang
    sas.com/version: 4.32.1
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-data-profiles
  namespace: franceavv
spec:
  maxReplicas: 1
  metrics:
  - resource:
      name: cpu
      target:
        averageUtilization: 80
        type: Utilization
    type: Resource
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: sas-data-profiles
---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  annotations:
    sas.com/component-name: sas-data-quality-services
    sas.com/component-version: 3.8.1-20201202.1606939069890
    sas.com/ha-class: centralized
    sas.com/kustomize-base: golang
    sas.com/version: 3.8.1
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-data-quality-services
  namespace: franceavv
spec:
  maxReplicas: 1
  metrics:
  - resource:
      name: cpu
      target:
        averageUtilization: 80
        type: Utilization
    type: Resource
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: sas-data-quality-services
---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  annotations:
    sas.com/component-name: sas-data-sources
    sas.com/component-version: 3.33.1-20201202.1606937911915
    sas.com/ha-class: centralized
    sas.com/kustomize-base: golang
    sas.com/version: 3.33.1
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-data-sources
  namespace: franceavv
spec:
  maxReplicas: 1
  metrics:
  - resource:
      name: cpu
      target:
        averageUtilization: 80
        type: Utilization
    type: Resource
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: sas-data-sources
---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  annotations:
    sas.com/component-name: sas-data-studio-app
    sas.com/component-version: 1.22.25-20201209.1607475335725
    sas.com/ha-class: centralized
    sas.com/kustomize-base: spring
    sas.com/version: 1.22.25
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-data-studio-app
  namespace: franceavv
spec:
  maxReplicas: 1
  metrics:
  - resource:
      name: cpu
      target:
        averageUtilization: 80
        type: Utilization
    type: Resource
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: sas-data-studio-app
---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  annotations:
    sas.com/component-name: sas-decision-manager-app
    sas.com/component-version: 5.19.0-20201210.1607632727866
    sas.com/ha-class: centralized
    sas.com/kustomize-base: golang
    sas.com/version: 5.19.0
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-decision-manager-app
  namespace: franceavv
spec:
  maxReplicas: 1
  metrics:
  - resource:
      name: cpu
      target:
        averageUtilization: 80
        type: Utilization
    type: Resource
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: sas-decision-manager-app
---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  annotations:
    sas.com/component-name: sas-decisions-definitions
    sas.com/component-version: 3.10.15-20201210.1607644445003
    sas.com/ha-class: centralized
    sas.com/kustomize-base: spring
    sas.com/version: 3.10.15
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-decisions-definitions
  namespace: franceavv
spec:
  maxReplicas: 1
  metrics:
  - resource:
      name: cpu
      target:
        averageUtilization: 80
        type: Utilization
    type: Resource
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: sas-decisions-definitions
---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  annotations:
    sas.com/component-name: sas-deployment-data
    sas.com/component-version: 1.2.0-20201209.1607530266025
    sas.com/ha-class: centralized
    sas.com/kustomize-base: golang
    sas.com/version: 1.2.0
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-deployment-data
  namespace: franceavv
spec:
  maxReplicas: 1
  metrics:
  - resource:
      name: cpu
      target:
        averageUtilization: 80
        type: Utilization
    type: Resource
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: sas-deployment-data
---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  annotations:
    sas.com/component-name: sas-device-management
    sas.com/component-version: 2.21.0-20201203.1606974091293
    sas.com/ha-class: centralized
    sas.com/kustomize-base: golang
    sas.com/version: 2.21.0
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-device-management
  namespace: franceavv
spec:
  maxReplicas: 1
  metrics:
  - resource:
      name: cpu
      target:
        averageUtilization: 80
        type: Utilization
    type: Resource
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: sas-device-management
---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  annotations:
    sas.com/component-name: sas-drive-app
    sas.com/component-version: 3.9.2-20201208.1607415324393
    sas.com/ha-class: centralized
    sas.com/kustomize-base: golang
    sas.com/version: 3.9.2
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-drive-app
  namespace: franceavv
spec:
  maxReplicas: 1
  metrics:
  - resource:
      name: cpu
      target:
        averageUtilization: 80
        type: Utilization
    type: Resource
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: sas-drive-app
---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  annotations:
    sas.com/component-name: sas-environment-manager-app
    sas.com/component-version: 4.7.18-20201210.1607608415476
    sas.com/ha-class: centralized
    sas.com/kustomize-base: golang
    sas.com/version: 4.7.18
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-environment-manager-app
  namespace: franceavv
spec:
  maxReplicas: 1
  metrics:
  - resource:
      name: cpu
      target:
        averageUtilization: 80
        type: Utilization
    type: Resource
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: sas-environment-manager-app
---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  annotations:
    sas.com/component-name: sas-event-stream-manager-app
    sas.com/component-version: 7.8.24-20201211.1607650331718
    sas.com/ha-class: centralized
    sas.com/kustomize-base: spring
    sas.com/version: 7.8.24
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-event-stream-manager-app
  namespace: franceavv
spec:
  maxReplicas: 1
  metrics:
  - resource:
      name: cpu
      target:
        averageUtilization: 80
        type: Utilization
    type: Resource
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: sas-event-stream-manager-app
---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  annotations:
    sas.com/component-name: sas-event-stream-processing-streamviewer-app
    sas.com/component-version: 7.8.27-20201211.1607648686559
    sas.com/ha-class: centralized
    sas.com/kustomize-base: spring
    sas.com/version: 7.8.27
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-event-stream-processing-streamviewer-app
  namespace: franceavv
spec:
  maxReplicas: 1
  metrics:
  - resource:
      name: cpu
      target:
        averageUtilization: 80
        type: Utilization
    type: Resource
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: sas-event-stream-processing-streamviewer-app
---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  annotations:
    sas.com/component-name: sas-event-stream-processing-studio-app
    sas.com/component-version: 7.8.24-20201211.1607651463964
    sas.com/ha-class: centralized
    sas.com/kustomize-base: spring
    sas.com/version: 7.8.24
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-event-stream-processing-studio-app
  namespace: franceavv
spec:
  maxReplicas: 1
  metrics:
  - resource:
      name: cpu
      target:
        averageUtilization: 80
        type: Utilization
    type: Resource
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: sas-event-stream-processing-studio-app
---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  annotations:
    sas.com/component-name: sas-files
    sas.com/component-version: 2.36.7-20201204.1607053741549
    sas.com/ha-class: centralized
    sas.com/kustomize-base: spring
    sas.com/version: 2.36.7
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-files
  namespace: franceavv
spec:
  maxReplicas: 1
  metrics:
  - resource:
      name: cpu
      target:
        averageUtilization: 80
        type: Utilization
    type: Resource
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: sas-files
---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  annotations:
    sas.com/component-name: sas-folders
    sas.com/component-version: 2.57.3-20201204.1607080745145
    sas.com/ha-class: centralized
    sas.com/kustomize-base: golang
    sas.com/version: 2.57.3
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-folders
  namespace: franceavv
spec:
  maxReplicas: 1
  metrics:
  - resource:
      name: cpu
      target:
        averageUtilization: 80
        type: Utilization
    type: Resource
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: sas-folders
---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  annotations:
    sas.com/component-name: sas-fonts
    sas.com/component-version: 1.76.2-20201202.1606968212309
    sas.com/ha-class: centralized
    sas.com/kustomize-base: golang
    sas.com/version: 1.76.2
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-fonts
  namespace: franceavv
spec:
  maxReplicas: 1
  metrics:
  - resource:
      name: cpu
      target:
        averageUtilization: 80
        type: Utilization
    type: Resource
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: sas-fonts
---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  annotations:
    sas.com/component-name: sas-forecasting-comparison
    sas.com/component-version: 15.11.0-20201203.1607012315095
    sas.com/ha-class: centralized
    sas.com/kustomize-base: golang
    sas.com/version: 15.11.0
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-forecasting-comparison
  namespace: franceavv
spec:
  maxReplicas: 1
  metrics:
  - resource:
      name: cpu
      target:
        averageUtilization: 80
        type: Utilization
    type: Resource
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: sas-forecasting-comparison
---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  annotations:
    sas.com/component-name: sas-forecasting-events
    sas.com/component-version: 15.11.0-20201203.1607012406763
    sas.com/ha-class: centralized
    sas.com/kustomize-base: golang
    sas.com/version: 15.11.0
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-forecasting-events
  namespace: franceavv
spec:
  maxReplicas: 1
  metrics:
  - resource:
      name: cpu
      target:
        averageUtilization: 80
        type: Utilization
    type: Resource
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: sas-forecasting-events
---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  annotations:
    sas.com/component-name: sas-forecasting-exploration
    sas.com/component-version: 15.12.0-20201203.1607024186781
    sas.com/ha-class: centralized
    sas.com/kustomize-base: golang
    sas.com/version: 15.12.0
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-forecasting-exploration
  namespace: franceavv
spec:
  maxReplicas: 1
  metrics:
  - resource:
      name: cpu
      target:
        averageUtilization: 80
        type: Utilization
    type: Resource
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: sas-forecasting-exploration
---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  annotations:
    sas.com/component-name: sas-forecasting-filters
    sas.com/component-version: 15.12.0-20201203.1607026228979
    sas.com/ha-class: centralized
    sas.com/kustomize-base: golang
    sas.com/version: 15.12.0
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-forecasting-filters
  namespace: franceavv
spec:
  maxReplicas: 1
  metrics:
  - resource:
      name: cpu
      target:
        averageUtilization: 80
        type: Utilization
    type: Resource
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: sas-forecasting-filters
---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  annotations:
    sas.com/component-name: sas-forecasting-pipelines
    sas.com/component-version: 15.15.5-20201209.1607532908435
    sas.com/ha-class: centralized
    sas.com/kustomize-base: golang
    sas.com/version: 15.15.5
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-forecasting-pipelines
  namespace: franceavv
spec:
  maxReplicas: 1
  metrics:
  - resource:
      name: cpu
      target:
        averageUtilization: 80
        type: Utilization
    type: Resource
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: sas-forecasting-pipelines
---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  annotations:
    sas.com/component-name: sas-forecasting-services
    sas.com/component-version: 15.20.4-20201209.1607555830814
    sas.com/ha-class: centralized
    sas.com/kustomize-base: spring
    sas.com/version: 15.20.4
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-forecasting-services
  namespace: franceavv
spec:
  maxReplicas: 1
  metrics:
  - resource:
      name: cpu
      target:
        averageUtilization: 80
        type: Utilization
    type: Resource
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: sas-forecasting-services
---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  annotations:
    sas.com/component-name: sas-geo-enrichment
    sas.com/component-version: 1.20.0-20201209.1607532669891
    sas.com/ha-class: centralized
    sas.com/kustomize-base: spring
    sas.com/version: 1.20.0
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-geo-enrichment
  namespace: franceavv
spec:
  maxReplicas: 1
  metrics:
  - resource:
      name: cpu
      target:
        averageUtilization: 80
        type: Utilization
    type: Resource
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: sas-geo-enrichment
---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  annotations:
    sas.com/component-name: sas-graph-builder-app
    sas.com/component-version: 1.65.0-20201203.1607022262435
    sas.com/ha-class: centralized
    sas.com/kustomize-base: golang
    sas.com/version: 1.65.0
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-graph-builder-app
  namespace: franceavv
spec:
  maxReplicas: 1
  metrics:
  - resource:
      name: cpu
      target:
        averageUtilization: 80
        type: Utilization
    type: Resource
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: sas-graph-builder-app
---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  annotations:
    sas.com/component-name: sas-graph-templates
    sas.com/component-version: 1.71.0-20201203.1607004187481
    sas.com/ha-class: centralized
    sas.com/kustomize-base: golang
    sas.com/version: 1.71.0
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-graph-templates
  namespace: franceavv
spec:
  maxReplicas: 1
  metrics:
  - resource:
      name: cpu
      target:
        averageUtilization: 80
        type: Utilization
    type: Resource
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: sas-graph-templates
---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  annotations:
    sas.com/component-name: sas-identities
    sas.com/component-version: 2.40.14-20201204.1607054361393
    sas.com/ha-class: centralized
    sas.com/kustomize-base: spring
    sas.com/version: 2.40.14
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-identities
  namespace: franceavv
spec:
  maxReplicas: 1
  metrics:
  - resource:
      name: cpu
      target:
        averageUtilization: 80
        type: Utilization
    type: Resource
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: sas-identities
---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  annotations:
    sas.com/component-name: sas-import-9
    sas.com/component-version: 1.9.9-20201211.1607711349452
    sas.com/ha-class: centralized
    sas.com/kustomize-base: spring
    sas.com/version: 1.9.9
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-import-9
  namespace: franceavv
spec:
  maxReplicas: 1
  metrics:
  - resource:
      name: cpu
      target:
        averageUtilization: 80
        type: Utilization
    type: Resource
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: sas-import-9
---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  annotations:
    sas.com/component-name: sas-job-execution
    sas.com/component-version: 2.28.12-20201204.1607054870985
    sas.com/ha-class: centralized
    sas.com/kustomize-base: spring
    sas.com/version: 2.28.12
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-job-execution
  namespace: franceavv
spec:
  maxReplicas: 1
  metrics:
  - resource:
      name: cpu
      target:
        averageUtilization: 80
        type: Utilization
    type: Resource
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: sas-job-execution
---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  annotations:
    sas.com/component-name: sas-job-execution-app
    sas.com/component-version: 2.18.3-20201209.1607521207111
    sas.com/ha-class: centralized
    sas.com/kustomize-base: golang
    sas.com/version: 2.18.3
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-job-execution-app
  namespace: franceavv
spec:
  maxReplicas: 1
  metrics:
  - resource:
      name: cpu
      target:
        averageUtilization: 80
        type: Utilization
    type: Resource
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: sas-job-execution-app
---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  annotations:
    sas.com/component-name: sas-job-flow-scheduling
    sas.com/component-version: 2.2.7-20201002.1601644744469
    sas.com/ha-class: centralized
    sas.com/kustomize-base: spring
    sas.com/version: 2.2.7
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-job-flow-scheduling
  namespace: franceavv
spec:
  maxReplicas: 1
  metrics:
  - resource:
      name: cpu
      target:
        averageUtilization: 80
        type: Utilization
    type: Resource
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: sas-job-flow-scheduling
---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  annotations:
    sas.com/component-name: sas-launcher
    sas.com/component-version: 1.18.8-20201208.1607443790845
    sas.com/ha-class: centralized
    sas.com/kustomize-base: spring
    sas.com/version: 1.18.8
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-launcher
  namespace: franceavv
spec:
  maxReplicas: 1
  metrics:
  - resource:
      name: cpu
      target:
        averageUtilization: 80
        type: Utilization
    type: Resource
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: sas-launcher
---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  annotations:
    sas.com/component-name: sas-lineage-app
    sas.com/component-version: 2.8.1-20201202.1606960621719
    sas.com/ha-class: centralized
    sas.com/kustomize-base: golang
    sas.com/version: 2.8.1
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-lineage-app
  namespace: franceavv
spec:
  maxReplicas: 1
  metrics:
  - resource:
      name: cpu
      target:
        averageUtilization: 80
        type: Utilization
    type: Resource
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: sas-lineage-app
---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  annotations:
    sas.com/component-name: sas-links
    sas.com/component-version: 1.73.0-20201204.1607077133902
    sas.com/ha-class: centralized
    sas.com/kustomize-base: golang
    sas.com/version: 1.73.0
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-links
  namespace: franceavv
spec:
  maxReplicas: 1
  metrics:
  - resource:
      name: cpu
      target:
        averageUtilization: 80
        type: Utilization
    type: Resource
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: sas-links
---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  annotations:
    sas.com/component-name: sas-localization
    sas.com/component-version: 1.9.3-20201217.1608245885998
    sas.com/ha-class: centralized
    sas.com/kustomize-base: golang
    sas.com/version: 1.9.3
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-localization
  namespace: franceavv
spec:
  maxReplicas: 1
  metrics:
  - resource:
      name: cpu
      target:
        averageUtilization: 80
        type: Utilization
    type: Resource
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: sas-localization
---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  annotations:
    sas.com/component-name: sas-logon-app
    sas.com/component-version: 2.40.17-20201208.1607458236727
    sas.com/ha-class: centralized
    sas.com/kustomize-base: spring
    sas.com/version: 2.40.17
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-logon-app
  namespace: franceavv
spec:
  maxReplicas: 1
  metrics:
  - resource:
      name: cpu
      target:
        averageUtilization: 80
        type: Utilization
    type: Resource
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: sas-logon-app
---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  annotations:
    sas.com/component-name: sas-mail
    sas.com/component-version: 1.56.1-20201203.1607023389621
    sas.com/ha-class: centralized
    sas.com/kustomize-base: golang
    sas.com/version: 1.56.1
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-mail
  namespace: franceavv
spec:
  maxReplicas: 1
  metrics:
  - resource:
      name: cpu
      target:
        averageUtilization: 80
        type: Utilization
    type: Resource
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: sas-mail
---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  annotations:
    sas.com/component-name: sas-maps
    sas.com/component-version: 1.76.0-20201209.1607538010156
    sas.com/ha-class: centralized
    sas.com/kustomize-base: golang
    sas.com/version: 1.76.0
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-maps
  namespace: franceavv
spec:
  maxReplicas: 1
  metrics:
  - resource:
      name: cpu
      target:
        averageUtilization: 80
        type: Utilization
    type: Resource
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: sas-maps
---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  annotations:
    sas.com/component-name: sas-microanalytic-score
    sas.com/component-version: 2.34.6-20201214.1607955335324
    sas.com/ha-class: centralized
    sas.com/kustomize-base: spring
    sas.com/version: 2.34.6
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-microanalytic-score
  namespace: franceavv
spec:
  maxReplicas: 1
  metrics:
  - resource:
      name: cpu
      target:
        averageUtilization: 80
        type: Utilization
    type: Resource
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: sas-microanalytic-score
---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  annotations:
    sas.com/component-name: sas-model-management
    sas.com/component-version: 1.16.58-20201214.1607964538030
    sas.com/ha-class: centralized
    sas.com/kustomize-base: spring
    sas.com/version: 1.16.58
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-model-management
  namespace: franceavv
spec:
  maxReplicas: 1
  metrics:
  - resource:
      name: cpu
      target:
        averageUtilization: 80
        type: Utilization
    type: Resource
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: sas-model-management
---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  annotations:
    sas.com/component-name: sas-model-manager-app
    sas.com/component-version: 1.19.0-20201214.1607962203037
    sas.com/ha-class: centralized
    sas.com/kustomize-base: golang
    sas.com/version: 1.19.0
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-model-manager-app
  namespace: franceavv
spec:
  maxReplicas: 1
  metrics:
  - resource:
      name: cpu
      target:
        averageUtilization: 80
        type: Utilization
    type: Resource
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: sas-model-manager-app
---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  annotations:
    sas.com/component-name: sas-model-publish
    sas.com/component-version: 2.27.0-20201209.1607555293093
    sas.com/ha-class: centralized
    sas.com/kustomize-base: golang
    sas.com/version: 2.27.0
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-model-publish
  namespace: franceavv
spec:
  maxReplicas: 1
  metrics:
  - resource:
      name: cpu
      target:
        averageUtilization: 80
        type: Utilization
    type: Resource
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: sas-model-publish
---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  annotations:
    sas.com/component-name: sas-model-repository
    sas.com/component-version: 3.14.56-20201214.1607964567719
    sas.com/ha-class: centralized
    sas.com/kustomize-base: spring
    sas.com/version: 3.14.56
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-model-repository
  namespace: franceavv
spec:
  maxReplicas: 1
  metrics:
  - resource:
      name: cpu
      target:
        averageUtilization: 80
        type: Utilization
    type: Resource
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: sas-model-repository
---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  annotations:
    sas.com/component-name: sas-model-studio-app
    sas.com/component-version: 1.51.2-20201209.1607544692059
    sas.com/ha-class: centralized
    sas.com/kustomize-base: golang
    sas.com/version: 1.51.2
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-model-studio-app
  namespace: franceavv
spec:
  maxReplicas: 1
  metrics:
  - resource:
      name: cpu
      target:
        averageUtilization: 80
        type: Utilization
    type: Resource
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: sas-model-studio-app
---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  annotations:
    sas.com/component-name: sas-natural-language-conversations
    sas.com/component-version: 1.3.1-20201204.1607111974163
    sas.com/ha-class: centralized
    sas.com/kustomize-base: spring
    sas.com/version: 1.3.1
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-natural-language-conversations
  namespace: franceavv
spec:
  maxReplicas: 1
  metrics:
  - resource:
      name: cpu
      target:
        averageUtilization: 80
        type: Utilization
    type: Resource
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: sas-natural-language-conversations
---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  annotations:
    sas.com/component-name: sas-natural-language-generation
    sas.com/component-version: 1.6.0-20201203.1607013425049
    sas.com/ha-class: centralized
    sas.com/kustomize-base: spring
    sas.com/version: 1.6.0
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-natural-language-generation
  namespace: franceavv
spec:
  maxReplicas: 1
  metrics:
  - resource:
      name: cpu
      target:
        averageUtilization: 80
        type: Utilization
    type: Resource
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: sas-natural-language-generation
---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  annotations:
    sas.com/component-name: sas-natural-language-understanding
    sas.com/component-version: 3.4.0-20201203.1607014016368
    sas.com/ha-class: centralized
    sas.com/kustomize-base: spring
    sas.com/version: 3.4.0
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-natural-language-understanding
  namespace: franceavv
spec:
  maxReplicas: 1
  metrics:
  - resource:
      name: cpu
      target:
        averageUtilization: 80
        type: Utilization
    type: Resource
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: sas-natural-language-understanding
---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  annotations:
    sas.com/component-name: sas-notifications
    sas.com/component-version: 1.55.1-20201207.1607355364455
    sas.com/ha-class: centralized
    sas.com/kustomize-base: golang
    sas.com/version: 1.55.1
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-notifications
  namespace: franceavv
spec:
  maxReplicas: 1
  metrics:
  - resource:
      name: cpu
      target:
        averageUtilization: 80
        type: Utilization
    type: Resource
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: sas-notifications
---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  annotations:
    sas.com/component-name: sas-preferences
    sas.com/component-version: 1.57.1-20201204.1607093916383
    sas.com/ha-class: centralized
    sas.com/kustomize-base: golang
    sas.com/version: 1.57.1
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-preferences
  namespace: franceavv
spec:
  maxReplicas: 1
  metrics:
  - resource:
      name: cpu
      target:
        averageUtilization: 80
        type: Utilization
    type: Resource
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: sas-preferences
---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  annotations:
    sas.com/component-name: sas-projects
    sas.com/component-version: 1.23.18-20201209.1607532724047
    sas.com/ha-class: centralized
    sas.com/kustomize-base: spring
    sas.com/version: 1.23.18
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-projects
  namespace: franceavv
spec:
  maxReplicas: 1
  metrics:
  - resource:
      name: cpu
      target:
        averageUtilization: 80
        type: Utilization
    type: Resource
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: sas-projects
---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  annotations:
    sas.com/component-name: sas-relationships
    sas.com/component-version: 3.28.11-20201204.1607056749902
    sas.com/ha-class: centralized
    sas.com/kustomize-base: spring
    sas.com/version: 3.28.11
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-relationships
  namespace: franceavv
spec:
  maxReplicas: 1
  metrics:
  - resource:
      name: cpu
      target:
        averageUtilization: 80
        type: Utilization
    type: Resource
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: sas-relationships
---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  annotations:
    sas.com/component-name: sas-report-distribution
    sas.com/component-version: 2.52.0-20201106.1604662320003
    sas.com/ha-class: centralized
    sas.com/kustomize-base: golang
    sas.com/version: 2.52.0
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-report-distribution
  namespace: franceavv
spec:
  maxReplicas: 1
  metrics:
  - resource:
      name: cpu
      target:
        averageUtilization: 80
        type: Utilization
    type: Resource
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: sas-report-distribution
---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  annotations:
    sas.com/component-name: sas-report-execution
    sas.com/component-version: 2.12.3-20201209.1607496369529
    sas.com/ha-class: centralized
    sas.com/kustomize-base: spring
    sas.com/version: 2.12.3
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-report-execution
  namespace: franceavv
spec:
  maxReplicas: 1
  metrics:
  - resource:
      name: cpu
      target:
        averageUtilization: 200
        type: Utilization
    type: Resource
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: sas-report-execution
---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  annotations:
    sas.com/component-name: sas-report-renderer
    sas.com/component-version: 1.65.3-20201208.1607482529657
    sas.com/ha-class: centralized
    sas.com/kustomize-base: golang
    sas.com/version: 1.65.3
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-report-renderer
  namespace: franceavv
spec:
  maxReplicas: 1
  metrics:
  - resource:
      name: cpu
      target:
        averageUtilization: 80
        type: Utilization
    type: Resource
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: sas-report-renderer
---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  annotations:
    sas.com/component-name: sas-report-services-group
    sas.com/component-version: 4.13.5-20201208.1607409510563
    sas.com/ha-class: centralized
    sas.com/kustomize-base: spring
    sas.com/version: 4.13.5
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-report-services-group
  namespace: franceavv
spec:
  maxReplicas: 1
  metrics:
  - resource:
      name: cpu
      target:
        averageUtilization: 80
        type: Utilization
    type: Resource
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: sas-report-services-group
---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  annotations:
    sas.com/component-name: sas-scheduler
    sas.com/component-version: 3.26.11-20201204.1607057236019
    sas.com/ha-class: centralized
    sas.com/kustomize-base: spring
    sas.com/version: 3.26.11
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-scheduler
  namespace: franceavv
spec:
  maxReplicas: 1
  metrics:
  - resource:
      name: cpu
      target:
        averageUtilization: 80
        type: Utilization
    type: Resource
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: sas-scheduler
---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  annotations:
    sas.com/component-name: sas-score-definitions
    sas.com/component-version: 2.22.0-20201210.1607645547646
    sas.com/ha-class: centralized
    sas.com/kustomize-base: golang
    sas.com/version: 2.22.0
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-score-definitions
  namespace: franceavv
spec:
  maxReplicas: 1
  metrics:
  - resource:
      name: cpu
      target:
        averageUtilization: 80
        type: Utilization
    type: Resource
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: sas-score-definitions
---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  annotations:
    sas.com/component-name: sas-score-execution
    sas.com/component-version: 2.21.0-20201210.1607646388188
    sas.com/ha-class: centralized
    sas.com/kustomize-base: golang
    sas.com/version: 2.21.0
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-score-execution
  namespace: franceavv
spec:
  maxReplicas: 1
  metrics:
  - resource:
      name: cpu
      target:
        averageUtilization: 80
        type: Utilization
    type: Resource
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: sas-score-execution
---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  annotations:
    sas.com/component-name: sas-search
    sas.com/component-version: 2.29.6-20201204.1607057876100
    sas.com/ha-class: centralized
    sas.com/kustomize-base: spring
    sas.com/version: 2.29.6
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-search
  namespace: franceavv
spec:
  maxReplicas: 1
  metrics:
  - resource:
      name: cpu
      target:
        averageUtilization: 80
        type: Utilization
    type: Resource
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: sas-search
---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  annotations:
    sas.com/component-name: sas-sentiment-execution-provider
    sas.com/component-version: 6.2.0-20201202.1606938881164
    sas.com/ha-class: centralized
    sas.com/kustomize-base: golang
    sas.com/version: 6.2.0
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-sentiment-execution-provider
  namespace: franceavv
spec:
  maxReplicas: 1
  metrics:
  - resource:
      name: cpu
      target:
        averageUtilization: 80
        type: Utilization
    type: Resource
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: sas-sentiment-execution-provider
---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  annotations:
    sas.com/component-name: sas-studio-app
    sas.com/component-version: 6.112.11-20201210.1607627608398
    sas.com/ha-class: centralized
    sas.com/kustomize-base: spring
    sas.com/version: 6.112.11
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-studio-app
  namespace: franceavv
spec:
  maxReplicas: 1
  metrics:
  - resource:
      name: cpu
      target:
        averageUtilization: 80
        type: Utilization
    type: Resource
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: sas-studio-app
---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  annotations:
    sas.com/component-name: sas-subject-contacts
    sas.com/component-version: 0.14.14-20201210.1607643779745
    sas.com/ha-class: centralized
    sas.com/kustomize-base: spring
    sas.com/version: 0.14.14
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-subject-contacts
  namespace: franceavv
spec:
  maxReplicas: 1
  metrics:
  - resource:
      name: cpu
      target:
        averageUtilization: 80
        type: Utilization
    type: Resource
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: sas-subject-contacts
---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  annotations:
    sas.com/component-name: sas-templates
    sas.com/component-version: 1.24.12-20201204.1607058477854
    sas.com/ha-class: centralized
    sas.com/kustomize-base: spring
    sas.com/version: 1.24.12
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-templates
  namespace: franceavv
spec:
  maxReplicas: 1
  metrics:
  - resource:
      name: cpu
      target:
        averageUtilization: 80
        type: Utilization
    type: Resource
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: sas-templates
---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  annotations:
    sas.com/component-name: sas-text-analytics
    sas.com/component-version: 2.12.1-20201209.1607553801258
    sas.com/ha-class: centralized
    sas.com/kustomize-base: spring
    sas.com/version: 2.12.1
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-text-analytics
  namespace: franceavv
spec:
  maxReplicas: 1
  metrics:
  - resource:
      name: cpu
      target:
        averageUtilization: 80
        type: Utilization
    type: Resource
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: sas-text-analytics
---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  annotations:
    sas.com/component-name: sas-text-cas-data-management
    sas.com/component-version: 5.7.0-20201203.1607029718479
    sas.com/ha-class: centralized
    sas.com/kustomize-base: spring
    sas.com/version: 5.7.0
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-text-cas-data-management
  namespace: franceavv
spec:
  maxReplicas: 1
  metrics:
  - resource:
      name: cpu
      target:
        averageUtilization: 80
        type: Utilization
    type: Resource
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: sas-text-cas-data-management
---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  annotations:
    sas.com/component-name: sas-text-categorization
    sas.com/component-version: 5.9.0-20201203.1607011533238
    sas.com/ha-class: centralized
    sas.com/kustomize-base: spring
    sas.com/version: 5.9.0
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-text-categorization
  namespace: franceavv
spec:
  maxReplicas: 1
  metrics:
  - resource:
      name: cpu
      target:
        averageUtilization: 80
        type: Utilization
    type: Resource
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: sas-text-categorization
---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  annotations:
    sas.com/component-name: sas-text-concepts
    sas.com/component-version: 5.9.0-20201203.1607019179325
    sas.com/ha-class: centralized
    sas.com/kustomize-base: spring
    sas.com/version: 5.9.0
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-text-concepts
  namespace: franceavv
spec:
  maxReplicas: 1
  metrics:
  - resource:
      name: cpu
      target:
        averageUtilization: 80
        type: Utilization
    type: Resource
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: sas-text-concepts
---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  annotations:
    sas.com/component-name: sas-text-parsing
    sas.com/component-version: 5.7.0-20201203.1607019166184
    sas.com/ha-class: centralized
    sas.com/kustomize-base: spring
    sas.com/version: 5.7.0
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-text-parsing
  namespace: franceavv
spec:
  maxReplicas: 1
  metrics:
  - resource:
      name: cpu
      target:
        averageUtilization: 80
        type: Utilization
    type: Resource
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: sas-text-parsing
---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  annotations:
    sas.com/component-name: sas-text-topics
    sas.com/component-version: 5.8.0-20201203.1607011531723
    sas.com/ha-class: centralized
    sas.com/kustomize-base: spring
    sas.com/version: 5.8.0
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-text-topics
  namespace: franceavv
spec:
  maxReplicas: 1
  metrics:
  - resource:
      name: cpu
      target:
        averageUtilization: 80
        type: Utilization
    type: Resource
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: sas-text-topics
---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  annotations:
    sas.com/component-name: sas-theme-content
    sas.com/component-version: 1.23.2-20201202.1606918780434
    sas.com/ha-class: centralized
    sas.com/kustomize-base: golang
    sas.com/version: 1.23.2
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-theme-content
  namespace: franceavv
spec:
  maxReplicas: 1
  metrics:
  - resource:
      name: cpu
      target:
        averageUtilization: 80
        type: Utilization
    type: Resource
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: sas-theme-content
---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  annotations:
    sas.com/component-name: sas-theme-designer-app
    sas.com/component-version: 3.25.7-20201204.1607109715258
    sas.com/ha-class: centralized
    sas.com/kustomize-base: golang
    sas.com/version: 3.25.7
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-theme-designer-app
  namespace: franceavv
spec:
  maxReplicas: 1
  metrics:
  - resource:
      name: cpu
      target:
        averageUtilization: 80
        type: Utilization
    type: Resource
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: sas-theme-designer-app
---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  annotations:
    sas.com/component-name: sas-themes
    sas.com/component-version: 3.23.4-20201202.1606917995194
    sas.com/ha-class: centralized
    sas.com/kustomize-base: spring
    sas.com/version: 3.23.4
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-themes
  namespace: franceavv
spec:
  maxReplicas: 1
  metrics:
  - resource:
      name: cpu
      target:
        averageUtilization: 80
        type: Utilization
    type: Resource
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: sas-themes
---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  annotations:
    sas.com/component-name: sas-thumbnails
    sas.com/component-version: 1.52.1-20201202.1606940688053
    sas.com/ha-class: centralized
    sas.com/kustomize-base: golang
    sas.com/version: 1.52.1
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-thumbnails
  namespace: franceavv
spec:
  maxReplicas: 1
  metrics:
  - resource:
      name: cpu
      target:
        averageUtilization: 80
        type: Utilization
    type: Resource
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: sas-thumbnails
---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  annotations:
    sas.com/component-name: sas-topic-management
    sas.com/component-version: 6.8.0-20201202.1606937875615
    sas.com/ha-class: centralized
    sas.com/kustomize-base: golang
    sas.com/version: 6.8.0
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-topic-management
  namespace: franceavv
spec:
  maxReplicas: 1
  metrics:
  - resource:
      name: cpu
      target:
        averageUtilization: 80
        type: Utilization
    type: Resource
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: sas-topic-management
---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  annotations:
    sas.com/component-name: sas-transfer
    sas.com/component-version: 2.29.17-20201204.1607058995910
    sas.com/ha-class: centralized
    sas.com/kustomize-base: spring
    sas.com/version: 2.29.17
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-transfer
  namespace: franceavv
spec:
  maxReplicas: 1
  metrics:
  - resource:
      name: cpu
      target:
        averageUtilization: 80
        type: Utilization
    type: Resource
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: sas-transfer
---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  annotations:
    sas.com/component-name: sas-transformations
    sas.com/component-version: 2.24.9-20201209.1607544521387
    sas.com/ha-class: centralized
    sas.com/kustomize-base: spring
    sas.com/version: 2.24.9
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-transformations
  namespace: franceavv
spec:
  maxReplicas: 1
  metrics:
  - resource:
      name: cpu
      target:
        averageUtilization: 80
        type: Utilization
    type: Resource
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: sas-transformations
---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  annotations:
    sas.com/component-name: sas-types
    sas.com/component-version: 3.16.1-20201130.1606757966415
    sas.com/ha-class: centralized
    sas.com/kustomize-base: golang
    sas.com/version: 3.16.1
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-types
  namespace: franceavv
spec:
  maxReplicas: 1
  metrics:
  - resource:
      name: cpu
      target:
        averageUtilization: 80
        type: Utilization
    type: Resource
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: sas-types
---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  annotations:
    sas.com/component-name: sas-visual-analytics-administration
    sas.com/component-version: 1.53.1-20201202.1606941457830
    sas.com/ha-class: centralized
    sas.com/kustomize-base: golang
    sas.com/version: 1.53.1
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-visual-analytics-administration
  namespace: franceavv
spec:
  maxReplicas: 1
  metrics:
  - resource:
      name: cpu
      target:
        averageUtilization: 80
        type: Utilization
    type: Resource
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: sas-visual-analytics-administration
---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  annotations:
    sas.com/component-name: sas-visual-analytics-app
    sas.com/component-version: 2.54.0-20201209.1607498056870
    sas.com/ha-class: centralized
    sas.com/kustomize-base: golang
    sas.com/version: 2.54.0
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-visual-analytics-app
  namespace: franceavv
spec:
  maxReplicas: 1
  metrics:
  - resource:
      name: cpu
      target:
        averageUtilization: 80
        type: Utilization
    type: Resource
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: sas-visual-analytics-app
---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  annotations:
    sas.com/component-name: sas-web-data-access
    sas.com/component-version: 1.20.0-20201209.1607532765066
    sas.com/ha-class: centralized
    sas.com/kustomize-base: spring
    sas.com/version: 1.20.0
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-web-data-access
  namespace: franceavv
spec:
  maxReplicas: 1
  metrics:
  - resource:
      name: cpu
      target:
        averageUtilization: 80
        type: Utilization
    type: Resource
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: sas-web-data-access
---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  annotations:
    sas.com/component-name: sas-workflow
    sas.com/component-version: 3.16.4-20201204.1607059513666
    sas.com/ha-class: centralized
    sas.com/kustomize-base: spring
    sas.com/version: 3.16.4
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-workflow
  namespace: franceavv
spec:
  maxReplicas: 1
  metrics:
  - resource:
      name: cpu
      target:
        averageUtilization: 80
        type: Utilization
    type: Resource
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: sas-workflow
---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  annotations:
    sas.com/component-name: sas-workflow-definition-history
    sas.com/component-version: 2.7.8-20201212.1607769254594
    sas.com/ha-class: centralized
    sas.com/kustomize-base: spring
    sas.com/version: 2.7.8
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-workflow-definition-history
  namespace: franceavv
spec:
  maxReplicas: 1
  metrics:
  - resource:
      name: cpu
      target:
        averageUtilization: 80
        type: Utilization
    type: Resource
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: sas-workflow-definition-history
---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  annotations:
    sas.com/component-name: sas-workflow-manager-app
    sas.com/component-version: 2.11.0-20201210.1607647072535
    sas.com/ha-class: centralized
    sas.com/kustomize-base: golang
    sas.com/version: 2.11.0
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-workflow-manager-app
  namespace: franceavv
spec:
  maxReplicas: 1
  metrics:
  - resource:
      name: cpu
      target:
        averageUtilization: 80
        type: Utilization
    type: Resource
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: sas-workflow-manager-app
---
apiVersion: cert-manager.io/v1alpha2
kind: Certificate
metadata:
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-viya-ca-certificate
  namespace: franceavv
spec:
  commonName: sas-viya-root-ca-certificate
  duration: 43800h
  isCA: true
  issuerRef:
    kind: Issuer
    name: sas-viya-selfsigning-issuer
  renewBefore: 1h
  secretName: sas-viya-ca-certificate-secret
---
apiVersion: cert-manager.io/v1alpha2
kind: Issuer
metadata:
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-viya-issuer
  namespace: franceavv
spec:
  ca:
    secretName: sas-viya-ca-certificate-secret
---
apiVersion: cert-manager.io/v1alpha2
kind: Issuer
metadata:
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-viya-selfsigning-issuer
  namespace: franceavv
spec:
  selfSigned: {}
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/issuer: sas-viya-issuer
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/proxy-body-size: 2048m
    nginx.ingress.kubernetes.io/rewrite-target: /$2
    nginx.ingress.kubernetes.io/use-regex: "true"
    sas.com/component-name: sas-event-stream-processing-metering-app
    sas.com/component-version: 10.78.0-20201214.1607929237374
    sas.com/kustomize-base: base
    sas.com/version: 10.78.0
  labels:
    app.kubernetes.io/name: sas-event-stream-processing-metering-app
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-event-stream-processing-metering-app
  namespace: franceavv
spec:
  rules:
  - host: franceavv.eastus2.cloudapp.azure.com
    http:
      paths:
      - backend:
          serviceName: sas-event-stream-processing-metering-app
          servicePort: 443
        path: /SASEventStreamProcessingMetering(/|$)(.*)
  tls:
  - hosts:
    - franceavv.eastus2.cloudapp.azure.com
    secretName: sas-ingress-certificate
---
apiVersion: iot.sas.com/v1alpha1
kind: ESPConfig
metadata:
  annotations:
    sas.com/certificate-file-format: pem
    sas.com/component-name: sas-esp-operator
    sas.com/component-version: 10.77.2-20201210.1607615447889
    sas.com/version: 10.77.2
  labels:
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-esp-operator
  namespace: franceavv
spec:
  espProperties:
    env.security.server.server_cert_file: SAS_CERTIFICATE_FILE
    env.security.server.server_key_file: SAS_CERTIFICATE_PRIVATE_KEY_FILE
    env.server.license: ESP_LICENSE
    meta.meteringhost: https://sas-event-stream-processing-metering-app
    meta.meteringport: "443"
    security.http_ssl_enabled: "true"
    security.pubsub_ssl_enabled: "true"
    security.server.internal_paths: metrics
  limits:
    maxCpu: "2"
    maxMemory: 4Gi
    maxReplicas: "5"
  loadBalancerTemplate:
    deployment:
      metadata:
        annotations:
          sas.com/certificate-file-format: pem
          sas.com/component-name: ((PROJECT_LB_SERVICE_NAME))
        labels:
          app.kubernetes.io/name: ((PROJECT_LB_SERVICE_NAME))
          workload.sas.com/class: stateless
        name: ((PROJECT_LB_SERVICE_NAME))
      spec:
        affinity:
          nodeAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - preference:
                matchExpressions:
                - key: workload.sas.com/class
                  operator: In
                  values:
                  - stateless
                matchFields: []
              weight: 100
            - preference:
                matchExpressions:
                - key: workload.sas.com/class
                  operator: NotIn
                  values:
                  - compute
                  - cas
                  - stateful
                matchFields: []
              weight: 50
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.azure.com/mode
                  operator: NotIn
                  values:
                  - system
        replicas: 1
        selector:
          matchLabels:
            app: ((PROJECT_LB_SERVICE_NAME))
        template:
          metadata:
            annotations:
              prometheus.io/path: /SASESP/metrics
              prometheus.io/port: "31415"
              prometheus.io/scheme: http
              prometheus.io/scrape: "true"
              sas.com/certificate-file-format: pem
              sas.com/component-name: ((PROJECT_LB_SERVICE_NAME))
            labels:
              app: ((PROJECT_LB_SERVICE_NAME))
              app.kubernetes.io/name: ((PROJECT_LB_SERVICE_NAME))
          spec:
            containers:
            - env:
              - name: ESPENV_security_oauth2_client_id
                valueFrom:
                  secretKeyRef:
                    key: ESPENV_security_oauth2_client_id
                    name: esp-saslogon
              - name: ESPENV_security_oauth2_client_secret
                valueFrom:
                  secretKeyRef:
                    key: ESPENV_security_oauth2_client_secret
                    name: esp-saslogon
              - name: ESP_LICENSE
                valueFrom:
                  secretKeyRef:
                    key: SAS_LICENSE
                    name: sas-license
              image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-event-stream-processing-server-app:10.78.3-20201214.1607945148215
              imagePullPolicy: IfNotPresent
              imagePullSecrets:
              - name: sas-image-pull-secrets
              name: ((PROJECT_SERVICE_NAME))
              readinessProbe:
                failureThreshold: 3
                httpGet:
                  path: /internal/ready
                  port: 31415
                  scheme: HTTP
              resources:
                limits:
                  cpu: "2"
                  memory: 2Gi
                requests:
                  cpu: "1"
                  memory: 1Gi
            - env:
              - name: ESPLB_HTTP
                value: "31415"
              - name: ESPLB_PUBSUB
                value: "31416"
              - name: WATCH_NAMESPACE
                value: ((PROJECT_NAMESPACE))
              - name: ESPLB_PROJECT
                value: ((PROJECT_SERVICE_NAME))
              - name: POD_NAME
                valueFrom:
                  fieldRef:
                    fieldPath: metadata.name
              image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-esp-load-balancer:7.6.0-20201001.1601570347918
              imagePullPolicy: IfNotPresent
              imagePullSecrets:
              - name: sas-image-pull-secrets
              name: ((PROJECT_LB_SERVICE_NAME))
              resources:
                limits:
                  cpu: "2"
                  memory: 2Gi
                requests:
                  cpu: "1"
                  memory: 1Gi
            serviceAccountName: sas-esp-operator
        tolerations:
        - effect: NoSchedule
          key: workload.sas.com/class
          operator: Equal
          value: stateful
        - effect: NoSchedule
          key: workload.sas.com/class
          operator: Equal
          value: stateless
  operatorProperties:
    server.enableViyaOauth2: "true"
  projectTemplate:
    autoscale:
      maxReplicas: 10
      metrics:
      - resource:
          name: cpu
          target:
            averageUtilization: 50
            type: Utilization
        type: Resource
      minReplicas: 1
    deployment:
      metadata:
        annotations:
          sas.com/certificate-file-format: pem
          sas.com/component-name: ((PROJECT_SERVICE_NAME))
        labels:
          app.kubernetes.io/name: ((PROJECT_SERVICE_NAME))
          workload.sas.com/class: compute
        name: ((PROJECT_SERVICE_NAME))
        namespace: ((PROJECT_NAMESPACE))
      spec:
        replicas: 1
        selector:
          matchLabels:
            app: ((PROJECT_SERVICE_NAME))
            type: esp
        template:
          metadata:
            annotations:
              prometheus.io/path: /SASESP/metrics
              prometheus.io/port: "31415"
              prometheus.io/scheme: https
              prometheus.io/scrape: "true"
              sas.com/certificate-file-format: pem
              sas.com/component-name: ((PROJECT_SERVICE_NAME))
              sas.com/tls-enabled-ports: all
            labels:
              app: ((PROJECT_SERVICE_NAME))
              app.kubernetes.io/name: ((PROJECT_SERVICE_NAME))
              type: esp
              workload.sas.com/class: compute
          spec:
            affinity:
              nodeAffinity:
                preferredDuringSchedulingIgnoredDuringExecution:
                - preference:
                    matchExpressions:
                    - key: workload.sas.com/class
                      operator: In
                      values:
                      - compute
                    matchFields: []
                  weight: 100
                - preference:
                    matchExpressions:
                    - key: workload.sas.com/class
                      operator: NotIn
                      values:
                      - cas
                      - stateful
                      - stateless
                    matchFields: []
                  weight: 50
                requiredDuringSchedulingIgnoredDuringExecution:
                  nodeSelectorTerms:
                  - matchExpressions:
                    - key: kubernetes.azure.com/mode
                      operator: NotIn
                      values:
                      - system
            containers:
            - env:
              - name: ESPENV_security_oauth2_client_id
                valueFrom:
                  secretKeyRef:
                    key: ESPENV_security_oauth2_client_id
                    name: esp-saslogon
              - name: ESPENV_security_oauth2_client_secret
                valueFrom:
                  secretKeyRef:
                    key: ESPENV_security_oauth2_client_secret
                    name: esp-saslogon
              - name: ESP_LICENSE
                valueFrom:
                  secretKeyRef:
                    key: SAS_LICENSE
                    name: sas-license-mg9k2t69t7
              - name: MAS_M2PATH
                value: /opt/sas/viya/home/SASFoundation/misc/embscoreeng/mas2py.py
              - name: TKTXTANIO_BINDAT_DIR
                value: /opt/sas/viya/home/SASFoundation/misc/tktg
              envFrom:
              - configMapRef:
                  name: sas-tls-config-99f79t29t5
              image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-event-stream-processing-server-app:10.78.3-20201214.1607945148215
              imagePullPolicy: IfNotPresent
              name: ((PROJECT_SERVICE_NAME))
              ports:
              - containerPort: 31415
                name: http
              - containerPort: 31416
                name: pubsub
              readinessProbe:
                failureThreshold: 3
                httpGet:
                  path: /internal/ready
                  port: 31415
                  scheme: HTTPS
              resources:
                limits:
                  cpu: "2"
                  memory: 2Gi
                requests:
                  cpu: "1"
                  memory: 1Gi
              volumeMounts:
              - mountPath: /security
                name: security
              - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/cacerts
                name: security
                subPath: cacerts
              - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/private
                name: security
                subPath: private
            imagePullSecrets:
            - name: sas-image-pull-secrets-4m8cc729k8
            initContainers:
            - env:
              - name: KUBE_POD_NAME
                valueFrom:
                  fieldRef:
                    fieldPath: metadata.name
              - name: SAS_CERTFRAME_TOKEN_DIR
                value: /certframe-token
              - name: SAS_ADDITIONAL_CA_CERTIFICATES_DIR
                value: /customer-provided-ca-certificates
              envFrom:
              - configMapRef:
                  name: sas-certframe-ingress-certificate-config-cmm2t44t88
              - configMapRef:
                  name: sas-certframe-user-config-c4ch2c59m7
              - configMapRef:
                  name: sas-certframe-config-ctgg29gf7t
              image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-certframe:3.9.0-20201203.1607016443086
              name: sas-certframe
              resources:
                limits:
                  cpu: 500m
                  memory: 500Mi
                requests:
                  cpu: 50m
                  memory: 50Mi
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                  - ALL
                privileged: false
                readOnlyRootFilesystem: true
              volumeMounts:
              - mountPath: /certframe-token
                name: certframe-token
              - mountPath: /security
                name: security
              - mountPath: /customer-provided-ca-certificates
                name: customer-provided-ca-certificates
            podAntiAffinity:
              preferredDuringSchedulingIgnoredDuringExecution:
              - podAffinityTerm:
                  labelSelector:
                    matchExpressions:
                    - key: app.kubernetes.io/name
                      operator: In
                      values:
                      - sas-event-stream-processing-server-app
                  topologyKey: kubernetes.io/hostname
                weight: 100
            serviceAccountName: sas-esp-project
            tolerations:
            - effect: NoSchedule
              key: workload.sas.com/class
              operator: Equal
              value: compute
            volumes:
            - name: certframe-token
              secret:
                secretName: sas-certframe-token
            - emptyDir: {}
              name: security
            - configMap:
                name: sas-customer-provided-ca-certificates-29kdmk686c
              name: customer-provided-ca-certificates
    httpService:
      metadata:
        annotations:
          prometheus.io/path: /SASESP/metrics
          prometheus.io/port: "443"
          prometheus.io/scheme: https
          prometheus.io/scrape: "true"
          sas.com/readiness-check: disabled
        labels:
          app: ((PROJECT_SERVICE_NAME))
          app.kubernetes.io/name: ((PROJECT_SERVICE_NAME))
          esp-component: project
          project: ((PROJECT_HASHED_NAME))
          type: http
        name: ((PROJECT_SERVICE_NAME))
        namespace: ((PROJECT_NAMESPACE))
      spec:
        ports:
        - name: http
          port: 443
          protocol: TCP
          targetPort: http
        selector:
          app: ((PROJECT_SERVICE_NAME))
    ingress:
      metadata:
        annotations:
          kubernetes.io/ingress.class: nginx
          nginx.ingress.kubernetes.io/backend-protocol: HTTPS
          nginx.ingress.kubernetes.io/rewrite-target: /$2
          nginx.ingress.kubernetes.io/use-regex: "true"
        labels:
          app: ((PROJECT_SERVICE_NAME))
          type: esp
        name: ((PROJECT_SERVICE_NAME))
        namespace: ((PROJECT_NAMESPACE))
      spec:
        rules:
        - host: ((PUBLIC_HOST_NAME))
          http:
            paths:
            - backend:
                serviceName: ((PROJECT_SERVICE_NAME))
                servicePort: 443
              path: /SASEventStreamProcessingServer/((PROJECT_SERVICE_NAME))(/|$)(.*)
        tls:
        - hosts:
          - ((PUBLIC_HOST_NAME))
          secretName: sas-ingress-certificate
    pubsubService:
      metadata:
        annotations: null
        labels:
          app: ((PROJECT_SERVICE_NAME))
          project: ((PROJECT_HASHED_NAME))
          sas.com/readiness-check: disabled
          type: pubsub
        name: ((PROJECT_PUBSUB_SERVICE_NAME))
        namespace: ((PROJECT_NAMESPACE))
      spec:
        clusterIP: None
        ports:
        - name: pubsub
          port: 31416
          protocol: TCP
          targetPort: pubsub
        selector:
          app: ((PROJECT_SERVICE_NAME))
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/issuer: sas-viya-issuer
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/affinity-mode: persistent
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/proxy-body-size: 2048m
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/session-cookie-name: sas-ingress-nginx
    nginx.ingress.kubernetes.io/session-cookie-path: /analyticsComponents/
    sas.com/component-name: sas-analytics-components
    sas.com/component-version: 20.17.7-20201209.1607538004353
    sas.com/kustomize-base: base
    sas.com/version: 20.17.7
  labels:
    app.kubernetes.io/name: sas-analytics-components
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-analytics-components
  namespace: franceavv
spec:
  rules:
  - host: franceavv.eastus2.cloudapp.azure.com
    http:
      paths:
      - backend:
          serviceName: sas-analytics-components
          servicePort: 443
        path: /analyticsComponents
  tls:
  - hosts:
    - franceavv.eastus2.cloudapp.azure.com
    secretName: sas-ingress-certificate
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/issuer: sas-viya-issuer
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/affinity-mode: persistent
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/proxy-body-size: 2048m
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/session-cookie-name: sas-ingress-nginx
    nginx.ingress.kubernetes.io/session-cookie-path: /analyticsDataSegmentation/
    sas.com/component-name: sas-analytics-services
    sas.com/component-version: 1.10.0-20201204.1607097302572
    sas.com/kustomize-base: base
    sas.com/version: 1.10.0
  labels:
    app.kubernetes.io/name: sas-analytics-data-segmentation
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-analytics-data-segmentation
  namespace: franceavv
spec:
  rules:
  - host: franceavv.eastus2.cloudapp.azure.com
    http:
      paths:
      - backend:
          serviceName: sas-analytics-data-segmentation
          servicePort: 443
        path: /analyticsDataSegmentation
  tls:
  - hosts:
    - franceavv.eastus2.cloudapp.azure.com
    secretName: sas-ingress-certificate
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/issuer: sas-viya-issuer
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/affinity-mode: persistent
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/proxy-body-size: 2048m
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/session-cookie-name: sas-ingress-nginx
    nginx.ingress.kubernetes.io/session-cookie-path: /analyticsEvents/
    sas.com/component-name: sas-analytics-events
    sas.com/component-version: 1.4.4-20201204.1607119383686
    sas.com/kustomize-base: base
    sas.com/version: 1.4.4
  labels:
    app.kubernetes.io/name: sas-analytics-events
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-analytics-events
  namespace: franceavv
spec:
  rules:
  - host: franceavv.eastus2.cloudapp.azure.com
    http:
      paths:
      - backend:
          serviceName: sas-analytics-events
          servicePort: 443
        path: /analyticsEvents
  tls:
  - hosts:
    - franceavv.eastus2.cloudapp.azure.com
    secretName: sas-ingress-certificate
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/issuer: sas-viya-issuer
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/affinity-mode: persistent
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/proxy-body-size: 2048m
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/session-cookie-name: sas-ingress-nginx
    nginx.ingress.kubernetes.io/session-cookie-path: /analyticsFlows/
    sas.com/component-name: sas-analytics-services
    sas.com/component-version: 1.10.0-20201204.1607097302572
    sas.com/kustomize-base: base
    sas.com/version: 1.10.0
  labels:
    app.kubernetes.io/name: sas-analytics-flows
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-analytics-flows
  namespace: franceavv
spec:
  rules:
  - host: franceavv.eastus2.cloudapp.azure.com
    http:
      paths:
      - backend:
          serviceName: sas-analytics-flows
          servicePort: 443
        path: /analyticsFlows
  tls:
  - hosts:
    - franceavv.eastus2.cloudapp.azure.com
    secretName: sas-ingress-certificate
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/issuer: sas-viya-issuer
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/affinity-mode: persistent
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/proxy-body-size: 2048m
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/session-cookie-name: sas-ingress-nginx
    nginx.ingress.kubernetes.io/session-cookie-path: /analyticsGateway/
    sas.com/component-name: sas-analytics-services
    sas.com/component-version: 1.10.0-20201204.1607097302572
    sas.com/kustomize-base: base
    sas.com/version: 1.10.0
  labels:
    app.kubernetes.io/name: sas-analytics-gateway
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-analytics-gateway
  namespace: franceavv
spec:
  rules:
  - host: franceavv.eastus2.cloudapp.azure.com
    http:
      paths:
      - backend:
          serviceName: sas-analytics-gateway
          servicePort: 443
        path: /analyticsGateway
  tls:
  - hosts:
    - franceavv.eastus2.cloudapp.azure.com
    secretName: sas-ingress-certificate
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/issuer: sas-viya-issuer
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/affinity-mode: persistent
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/proxy-body-size: 2048m
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/session-cookie-name: sas-ingress-nginx
    nginx.ingress.kubernetes.io/session-cookie-path: /analyticsLocalization/
    sas.com/component-name: sas-analytics-services
    sas.com/component-version: 1.10.0-20201204.1607097302572
    sas.com/kustomize-base: base
    sas.com/version: 1.10.0
  labels:
    app.kubernetes.io/name: sas-analytics-localization
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-analytics-localization
  namespace: franceavv
spec:
  rules:
  - host: franceavv.eastus2.cloudapp.azure.com
    http:
      paths:
      - backend:
          serviceName: sas-analytics-localization
          servicePort: 443
        path: /analyticsLocalization
  tls:
  - hosts:
    - franceavv.eastus2.cloudapp.azure.com
    secretName: sas-ingress-certificate
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/issuer: sas-viya-issuer
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/affinity-mode: persistent
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/proxy-body-size: 2048m
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/session-cookie-name: sas-ingress-nginx
    nginx.ingress.kubernetes.io/session-cookie-path: /analyticsPipelines/
    sas.com/component-name: sas-analytics-services
    sas.com/component-version: 1.10.0-20201204.1607097302572
    sas.com/kustomize-base: base
    sas.com/version: 1.10.0
  labels:
    app.kubernetes.io/name: sas-analytics-pipelines
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-analytics-pipelines
  namespace: franceavv
spec:
  rules:
  - host: franceavv.eastus2.cloudapp.azure.com
    http:
      paths:
      - backend:
          serviceName: sas-analytics-pipelines
          servicePort: 443
        path: /analyticsPipelines
  tls:
  - hosts:
    - franceavv.eastus2.cloudapp.azure.com
    secretName: sas-ingress-certificate
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/issuer: sas-viya-issuer
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/affinity-mode: persistent
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/proxy-body-size: 2048m
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/session-cookie-name: sas-ingress-nginx
    nginx.ingress.kubernetes.io/session-cookie-path: /analyticsValidation/
    sas.com/component-name: sas-analytics-services
    sas.com/component-version: 1.10.0-20201204.1607097302572
    sas.com/kustomize-base: base
    sas.com/version: 1.10.0
  labels:
    app.kubernetes.io/name: sas-analytics-validation
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-analytics-validation
  namespace: franceavv
spec:
  rules:
  - host: franceavv.eastus2.cloudapp.azure.com
    http:
      paths:
      - backend:
          serviceName: sas-analytics-validation
          servicePort: 443
        path: /analyticsValidation
  tls:
  - hosts:
    - franceavv.eastus2.cloudapp.azure.com
    secretName: sas-ingress-certificate
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/issuer: sas-viya-issuer
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/affinity-mode: persistent
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/proxy-body-size: 2048m
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/session-cookie-name: sas-ingress-nginx
    nginx.ingress.kubernetes.io/session-cookie-path: /annotations/
    sas.com/component-name: sas-annotations
    sas.com/component-version: 2.9.0-20201208.1607439456307
    sas.com/kustomize-base: base
    sas.com/version: 2.9.0
  labels:
    app.kubernetes.io/name: sas-annotations
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-annotations
  namespace: franceavv
spec:
  rules:
  - host: franceavv.eastus2.cloudapp.azure.com
    http:
      paths:
      - backend:
          serviceName: sas-annotations
          servicePort: 443
        path: /annotations
  tls:
  - hosts:
    - franceavv.eastus2.cloudapp.azure.com
    secretName: sas-ingress-certificate
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/issuer: sas-viya-issuer
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/affinity-mode: persistent
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/proxy-body-size: 2048m
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/session-cookie-name: sas-ingress-nginx
    nginx.ingress.kubernetes.io/session-cookie-path: /appRegistry/
    sas.com/component-name: sas-app-registry
    sas.com/component-version: 1.50.0-20201202.1606937218076
    sas.com/kustomize-base: base
    sas.com/version: 1.50.0
  labels:
    app.kubernetes.io/name: sas-app-registry
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-app-registry
  namespace: franceavv
spec:
  rules:
  - host: franceavv.eastus2.cloudapp.azure.com
    http:
      paths:
      - backend:
          serviceName: sas-app-registry
          servicePort: 443
        path: /appRegistry
  tls:
  - hosts:
    - franceavv.eastus2.cloudapp.azure.com
    secretName: sas-ingress-certificate
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/issuer: sas-viya-issuer
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/affinity-mode: persistent
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/proxy-body-size: 2048m
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/session-cookie-name: sas-ingress-nginx
    nginx.ingress.kubernetes.io/session-cookie-path: /audit/
    sas.com/component-name: sas-audit
    sas.com/component-version: 1.58.1-20201207.1607355915596
    sas.com/kustomize-base: base
    sas.com/version: 1.58.1
  labels:
    app.kubernetes.io/name: sas-audit
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-audit
  namespace: franceavv
spec:
  rules:
  - host: franceavv.eastus2.cloudapp.azure.com
    http:
      paths:
      - backend:
          serviceName: sas-audit
          servicePort: 443
        path: /audit
  tls:
  - hosts:
    - franceavv.eastus2.cloudapp.azure.com
    secretName: sas-ingress-certificate
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/issuer: sas-viya-issuer
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/affinity-mode: persistent
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/proxy-body-size: 2048m
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/session-cookie-name: sas-ingress-nginx
    nginx.ingress.kubernetes.io/session-cookie-path: /authorization/
    sas.com/component-name: sas-authorization
    sas.com/component-version: 3.32.14-20201204.1607098698544
    sas.com/kustomize-base: base
    sas.com/version: 3.32.14
  labels:
    app.kubernetes.io/name: sas-authorization
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-authorization
  namespace: franceavv
spec:
  rules:
  - host: franceavv.eastus2.cloudapp.azure.com
    http:
      paths:
      - backend:
          serviceName: sas-authorization
          servicePort: 443
        path: /authorization
  tls:
  - hosts:
    - franceavv.eastus2.cloudapp.azure.com
    secretName: sas-ingress-certificate
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/issuer: sas-viya-issuer
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/affinity-mode: persistent
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/proxy-body-size: 2048m
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/session-cookie-name: sas-ingress-nginx
    nginx.ingress.kubernetes.io/session-cookie-path: /batch/
    sas.com/component-name: sas-batch
    sas.com/component-version: 1.4.0-20201214.1607958362320
    sas.com/kustomize-base: base
    sas.com/version: 1.4.0
  labels:
    app.kubernetes.io/name: sas-batch
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-batch
  namespace: franceavv
spec:
  rules:
  - host: franceavv.eastus2.cloudapp.azure.com
    http:
      paths:
      - backend:
          serviceName: sas-batch
          servicePort: 443
        path: /batch
  tls:
  - hosts:
    - franceavv.eastus2.cloudapp.azure.com
    secretName: sas-ingress-certificate
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/issuer: sas-viya-issuer
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/affinity-mode: persistent
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/proxy-body-size: 2048m
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/session-cookie-name: sas-ingress-nginx
    nginx.ingress.kubernetes.io/session-cookie-path: /businessRules/
    sas.com/component-name: sas-business-rules-services
    sas.com/component-version: 3.9.15-20201210.1607644432623
    sas.com/kustomize-base: base
    sas.com/version: 3.9.15
  labels:
    app.kubernetes.io/name: sas-business-rules
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-business-rules
  namespace: franceavv
spec:
  rules:
  - host: franceavv.eastus2.cloudapp.azure.com
    http:
      paths:
      - backend:
          serviceName: sas-business-rules
          servicePort: 443
        path: /businessRules
  tls:
  - hosts:
    - franceavv.eastus2.cloudapp.azure.com
    secretName: sas-ingress-certificate
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/issuer: sas-viya-issuer
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/affinity-mode: persistent
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/proxy-body-size: 2048m
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/session-cookie-name: sas-ingress-nginx
    nginx.ingress.kubernetes.io/session-cookie-path: /casAccessManagement/
    sas.com/component-name: sas-cas-control
    sas.com/component-version: 2.3.6-20201210.1607621490977
    sas.com/kustomize-base: base
    sas.com/version: 2.3.6
  labels:
    app.kubernetes.io/name: sas-cas-access-management
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-cas-access-management
  namespace: franceavv
spec:
  rules:
  - host: franceavv.eastus2.cloudapp.azure.com
    http:
      paths:
      - backend:
          serviceName: sas-cas-access-management
          servicePort: 443
        path: /casAccessManagement
  tls:
  - hosts:
    - franceavv.eastus2.cloudapp.azure.com
    secretName: sas-ingress-certificate
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/issuer: sas-viya-issuer
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/affinity-mode: persistent
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/proxy-body-size: 2048m
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/session-cookie-name: sas-ingress-nginx
    nginx.ingress.kubernetes.io/session-cookie-path: /casFormats/
    sas.com/component-name: sas-cas-control
    sas.com/component-version: 2.3.6-20201210.1607621490977
    sas.com/kustomize-base: base
    sas.com/version: 2.3.6
  labels:
    app.kubernetes.io/name: sas-cas-formats
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-cas-formats
  namespace: franceavv
spec:
  rules:
  - host: franceavv.eastus2.cloudapp.azure.com
    http:
      paths:
      - backend:
          serviceName: sas-cas-formats
          servicePort: 443
        path: /casFormats
  tls:
  - hosts:
    - franceavv.eastus2.cloudapp.azure.com
    secretName: sas-ingress-certificate
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/issuer: sas-viya-issuer
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/affinity-mode: persistent
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/proxy-body-size: 2048m
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/session-cookie-name: sas-ingress-nginx
    nginx.ingress.kubernetes.io/session-cookie-path: /casManagement/
    sas.com/component-name: sas-cas-administration
    sas.com/component-version: 1.28.1-20201209.1607532545693
    sas.com/kustomize-base: base
    sas.com/version: 1.28.1
  labels:
    app.kubernetes.io/name: sas-cas-management
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-cas-management
  namespace: franceavv
spec:
  rules:
  - host: franceavv.eastus2.cloudapp.azure.com
    http:
      paths:
      - backend:
          serviceName: sas-cas-management
          servicePort: 443
        path: /casManagement
  tls:
  - hosts:
    - franceavv.eastus2.cloudapp.azure.com
    secretName: sas-ingress-certificate
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/issuer: sas-viya-issuer
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/affinity-mode: persistent
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/proxy-body-size: 2048m
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/session-cookie-name: sas-ingress-nginx
    nginx.ingress.kubernetes.io/session-cookie-path: /casProxy/
    sas.com/component-name: sas-cas-administration
    sas.com/component-version: 1.28.1-20201209.1607532545693
    sas.com/kustomize-base: base
    sas.com/version: 1.28.1
  labels:
    app.kubernetes.io/name: sas-cas-proxy
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-cas-proxy
  namespace: franceavv
spec:
  rules:
  - host: franceavv.eastus2.cloudapp.azure.com
    http:
      paths:
      - backend:
          serviceName: sas-cas-proxy
          servicePort: 443
        path: /casProxy
  tls:
  - hosts:
    - franceavv.eastus2.cloudapp.azure.com
    secretName: sas-ingress-certificate
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/issuer: sas-viya-issuer
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/affinity-mode: persistent
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/proxy-body-size: 2048m
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/session-cookie-name: sas-ingress-nginx
    nginx.ingress.kubernetes.io/session-cookie-path: /casRowSets/
    sas.com/component-name: sas-cas-control
    sas.com/component-version: 2.3.6-20201210.1607621490977
    sas.com/kustomize-base: base
    sas.com/version: 2.3.6
  labels:
    app.kubernetes.io/name: sas-cas-row-sets
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-cas-row-sets
  namespace: franceavv
spec:
  rules:
  - host: franceavv.eastus2.cloudapp.azure.com
    http:
      paths:
      - backend:
          serviceName: sas-cas-row-sets
          servicePort: 443
        path: /casRowSets
  tls:
  - hosts:
    - franceavv.eastus2.cloudapp.azure.com
    secretName: sas-ingress-certificate
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/issuer: sas-viya-issuer
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/affinity-mode: persistent
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/proxy-body-size: 2048m
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/session-cookie-name: sas-ingress-nginx
    nginx.ingress.kubernetes.io/session-cookie-path: /categorization/
    sas.com/component-name: sas-text-categorization
    sas.com/component-version: 5.9.0-20201203.1607011533238
    sas.com/kustomize-base: base
    sas.com/version: 5.9.0
  labels:
    app.kubernetes.io/name: sas-categorization
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-categorization
  namespace: franceavv
spec:
  rules:
  - host: franceavv.eastus2.cloudapp.azure.com
    http:
      paths:
      - backend:
          serviceName: sas-categorization
          servicePort: 443
        path: /categorization
  tls:
  - hosts:
    - franceavv.eastus2.cloudapp.azure.com
    secretName: sas-ingress-certificate
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/issuer: sas-viya-issuer
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/affinity-mode: persistent
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/proxy-body-size: 2048m
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/session-cookie-name: sas-ingress-nginx
    nginx.ingress.kubernetes.io/session-cookie-path: /categoryExecutionProvider/
    sas.com/component-name: sas-text-categorization
    sas.com/component-version: 5.9.0-20201203.1607011533238
    sas.com/kustomize-base: base
    sas.com/version: 5.9.0
  labels:
    app.kubernetes.io/name: sas-category-execution-provider
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-category-execution-provider
  namespace: franceavv
spec:
  rules:
  - host: franceavv.eastus2.cloudapp.azure.com
    http:
      paths:
      - backend:
          serviceName: sas-category-execution-provider
          servicePort: 443
        path: /categoryExecutionProvider
  tls:
  - hosts:
    - franceavv.eastus2.cloudapp.azure.com
    secretName: sas-ingress-certificate
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/issuer: sas-viya-issuer
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/affinity-mode: persistent
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/proxy-body-size: 2048m
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/session-cookie-name: sas-ingress-nginx
    nginx.ingress.kubernetes.io/session-cookie-path: /categoryTaxonomy/
    sas.com/component-name: sas-text-categorization
    sas.com/component-version: 5.9.0-20201203.1607011533238
    sas.com/kustomize-base: base
    sas.com/version: 5.9.0
  labels:
    app.kubernetes.io/name: sas-category-taxonomy
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-category-taxonomy
  namespace: franceavv
spec:
  rules:
  - host: franceavv.eastus2.cloudapp.azure.com
    http:
      paths:
      - backend:
          serviceName: sas-category-taxonomy
          servicePort: 443
        path: /categoryTaxonomy
  tls:
  - hosts:
    - franceavv.eastus2.cloudapp.azure.com
    secretName: sas-ingress-certificate
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/issuer: sas-viya-issuer
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/affinity-mode: persistent
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/proxy-body-size: 2048m
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/session-cookie-name: sas-ingress-nginx
    nginx.ingress.kubernetes.io/session-cookie-path: /codeDebugger/
    sas.com/component-name: sas-code-debugger
    sas.com/component-version: 2.1.5-20201202.1606941614459
    sas.com/kustomize-base: base
    sas.com/version: 2.1.5
  labels:
    app.kubernetes.io/name: sas-code-debugger
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-code-debugger
  namespace: franceavv
spec:
  rules:
  - host: franceavv.eastus2.cloudapp.azure.com
    http:
      paths:
      - backend:
          serviceName: sas-code-debugger
          servicePort: 443
        path: /codeDebugger
  tls:
  - hosts:
    - franceavv.eastus2.cloudapp.azure.com
    secretName: sas-ingress-certificate
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/issuer: sas-viya-issuer
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/affinity-mode: persistent
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/proxy-body-size: 2048m
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/session-cookie-name: sas-ingress-nginx
    nginx.ingress.kubernetes.io/session-cookie-path: /SASCodeDebugger/
    sas.com/component-name: sas-code-debugger-app
    sas.com/component-version: 2.2.5-20201211.1607719641413
    sas.com/kustomize-base: base
    sas.com/version: 2.2.5
  labels:
    app.kubernetes.io/name: sas-code-debugger-app
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-code-debugger-app
  namespace: franceavv
spec:
  rules:
  - host: franceavv.eastus2.cloudapp.azure.com
    http:
      paths:
      - backend:
          serviceName: sas-code-debugger-app
          servicePort: 443
        path: /SASCodeDebugger
  tls:
  - hosts:
    - franceavv.eastus2.cloudapp.azure.com
    secretName: sas-ingress-certificate
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/issuer: sas-viya-issuer
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/affinity-mode: persistent
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/proxy-body-size: 2048m
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/session-cookie-name: sas-ingress-nginx
    nginx.ingress.kubernetes.io/session-cookie-path: /comments/
    sas.com/component-name: sas-comments
    sas.com/component-version: 2.56.0-20201207.1607337374651
    sas.com/kustomize-base: base
    sas.com/version: 2.56.0
  labels:
    app.kubernetes.io/name: sas-comments
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-comments
  namespace: franceavv
spec:
  rules:
  - host: franceavv.eastus2.cloudapp.azure.com
    http:
      paths:
      - backend:
          serviceName: sas-comments
          servicePort: 443
        path: /comments
  tls:
  - hosts:
    - franceavv.eastus2.cloudapp.azure.com
    secretName: sas-ingress-certificate
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/issuer: sas-viya-issuer
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/affinity-mode: persistent
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/proxy-body-size: 2048m
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/session-cookie-name: sas-ingress-nginx
    nginx.ingress.kubernetes.io/session-cookie-path: /compute/
    sas.com/component-name: sas-compute
    sas.com/component-version: 1.9.21-20201214.1607967809598
    sas.com/kustomize-base: base
    sas.com/version: 1.9.21
  labels:
    app.kubernetes.io/name: sas-compute
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-compute
  namespace: franceavv
spec:
  rules:
  - host: franceavv.eastus2.cloudapp.azure.com
    http:
      paths:
      - backend:
          serviceName: sas-compute
          servicePort: 443
        path: /compute
  tls:
  - hosts:
    - franceavv.eastus2.cloudapp.azure.com
    secretName: sas-ingress-certificate
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/issuer: sas-viya-issuer
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/affinity-mode: persistent
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/proxy-body-size: 2048m
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/session-cookie-name: sas-ingress-nginx
    nginx.ingress.kubernetes.io/session-cookie-path: /conceptExecutionProvider/
    sas.com/component-name: sas-text-concepts
    sas.com/component-version: 5.9.0-20201203.1607019179325
    sas.com/kustomize-base: base
    sas.com/version: 5.9.0
  labels:
    app.kubernetes.io/name: sas-concept-execution-provider
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-concept-execution-provider
  namespace: franceavv
spec:
  rules:
  - host: franceavv.eastus2.cloudapp.azure.com
    http:
      paths:
      - backend:
          serviceName: sas-concept-execution-provider
          servicePort: 443
        path: /conceptExecutionProvider
  tls:
  - hosts:
    - franceavv.eastus2.cloudapp.azure.com
    secretName: sas-ingress-certificate
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/issuer: sas-viya-issuer
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/affinity-mode: persistent
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/proxy-body-size: 2048m
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/session-cookie-name: sas-ingress-nginx
    nginx.ingress.kubernetes.io/session-cookie-path: /conceptTaxonomy/
    sas.com/component-name: sas-text-concepts
    sas.com/component-version: 5.9.0-20201203.1607019179325
    sas.com/kustomize-base: base
    sas.com/version: 5.9.0
  labels:
    app.kubernetes.io/name: sas-concept-taxonomy
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-concept-taxonomy
  namespace: franceavv
spec:
  rules:
  - host: franceavv.eastus2.cloudapp.azure.com
    http:
      paths:
      - backend:
          serviceName: sas-concept-taxonomy
          servicePort: 443
        path: /conceptTaxonomy
  tls:
  - hosts:
    - franceavv.eastus2.cloudapp.azure.com
    secretName: sas-ingress-certificate
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/issuer: sas-viya-issuer
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/affinity-mode: persistent
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/proxy-body-size: 2048m
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/session-cookie-name: sas-ingress-nginx
    nginx.ingress.kubernetes.io/session-cookie-path: /concepts/
    sas.com/component-name: sas-text-concepts
    sas.com/component-version: 5.9.0-20201203.1607019179325
    sas.com/kustomize-base: base
    sas.com/version: 5.9.0
  labels:
    app.kubernetes.io/name: sas-concepts
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-concepts
  namespace: franceavv
spec:
  rules:
  - host: franceavv.eastus2.cloudapp.azure.com
    http:
      paths:
      - backend:
          serviceName: sas-concepts
          servicePort: 443
        path: /concepts
  tls:
  - hosts:
    - franceavv.eastus2.cloudapp.azure.com
    secretName: sas-ingress-certificate
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/issuer: sas-viya-issuer
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/affinity-mode: persistent
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/proxy-body-size: 2048m
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/session-cookie-name: sas-ingress-nginx
    nginx.ingress.kubernetes.io/session-cookie-path: /configReconciler/
    sas.com/component-name: sas-config-reconciler
    sas.com/component-version: 1.3.0-20201203.1607001188766
    sas.com/kustomize-base: base
    sas.com/version: 1.3.0
  labels:
    app.kubernetes.io/name: sas-config-reconciler
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-config-reconciler
  namespace: franceavv
spec:
  rules:
  - host: franceavv.eastus2.cloudapp.azure.com
    http:
      paths:
      - backend:
          serviceName: sas-config-reconciler
          servicePort: 443
        path: /configReconciler
  tls:
  - hosts:
    - franceavv.eastus2.cloudapp.azure.com
    secretName: sas-ingress-certificate
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/issuer: sas-viya-issuer
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/proxy-body-size: 2048m
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    sas.com/component-name: sas-config-reconciler
    sas.com/component-version: 1.3.0-20201203.1607001188766
    sas.com/kustomize-base: base
    sas.com/version: 1.3.0
  labels:
    app.kubernetes.io/name: sas-config-reconciler-compat
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-config-reconciler-compat
  namespace: franceavv
spec:
  rules:
  - host: franceavv.eastus2.cloudapp.azure.com
    http:
      paths:
      - backend:
          serviceName: sas-config-reconciler
          servicePort: 443
        path: /config-reconciler
  tls:
  - hosts:
    - franceavv.eastus2.cloudapp.azure.com
    secretName: sas-ingress-certificate
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/issuer: sas-viya-issuer
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/affinity-mode: persistent
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/proxy-body-size: 2048m
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/session-cookie-name: sas-ingress-nginx
    nginx.ingress.kubernetes.io/session-cookie-path: /configuration/
    sas.com/component-name: sas-configuration
    sas.com/component-version: 1.59.3-20201204.1607052795259
    sas.com/kustomize-base: base
    sas.com/version: 1.59.3
  labels:
    app.kubernetes.io/name: sas-configuration
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-configuration
  namespace: franceavv
spec:
  rules:
  - host: franceavv.eastus2.cloudapp.azure.com
    http:
      paths:
      - backend:
          serviceName: sas-configuration
          servicePort: 443
        path: /configuration
  tls:
  - hosts:
    - franceavv.eastus2.cloudapp.azure.com
    secretName: sas-ingress-certificate
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/issuer: sas-viya-issuer
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/affinity-mode: persistent
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/proxy-body-size: 2048m
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/session-cookie-name: sas-ingress-nginx
    nginx.ingress.kubernetes.io/session-cookie-path: /connect/
    sas.com/component-name: sas-connect
    sas.com/component-version: 4.15.2-20201211.1607717177992
    sas.com/kustomize-base: base
    sas.com/version: 4.15.2
  labels:
    app.kubernetes.io/name: sas-connect
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-connect
  namespace: franceavv
spec:
  rules:
  - host: franceavv.eastus2.cloudapp.azure.com
    http:
      paths:
      - backend:
          serviceName: sas-connect
          servicePort: 443
        path: /connect
  tls:
  - hosts:
    - franceavv.eastus2.cloudapp.azure.com
    secretName: sas-ingress-certificate
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/issuer: sas-viya-issuer
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/affinity-mode: persistent
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/proxy-body-size: 2048m
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/session-cookie-name: sas-ingress-nginx
    nginx.ingress.kubernetes.io/session-cookie-path: /SASConversationDesigner/
    sas.com/component-name: sas-conversation-designer-app
    sas.com/component-version: 1.3.0-20201203.1607012667858
    sas.com/kustomize-base: base
    sas.com/version: 1.3.0
  labels:
    app.kubernetes.io/name: sas-conversation-designer-app
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-conversation-designer-app
  namespace: franceavv
spec:
  rules:
  - host: franceavv.eastus2.cloudapp.azure.com
    http:
      paths:
      - backend:
          serviceName: sas-conversation-designer-app
          servicePort: 443
        path: /SASConversationDesigner
  tls:
  - hosts:
    - franceavv.eastus2.cloudapp.azure.com
    secretName: sas-ingress-certificate
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/issuer: sas-viya-issuer
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/affinity-mode: persistent
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/proxy-body-size: 2048m
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/session-cookie-name: sas-ingress-nginx
    nginx.ingress.kubernetes.io/session-cookie-path: /credentials/
    sas.com/component-name: sas-credentials
    sas.com/component-version: 1.27.12-20201208.1607464004925
    sas.com/kustomize-base: base
    sas.com/version: 1.27.12
  labels:
    app.kubernetes.io/name: sas-credentials
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-credentials
  namespace: franceavv
spec:
  rules:
  - host: franceavv.eastus2.cloudapp.azure.com
    http:
      paths:
      - backend:
          serviceName: sas-credentials
          servicePort: 443
        path: /credentials
  tls:
  - hosts:
    - franceavv.eastus2.cloudapp.azure.com
    secretName: sas-ingress-certificate
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/issuer: sas-viya-issuer
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/affinity-mode: persistent
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/proxy-body-size: 2048m
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/session-cookie-name: sas-ingress-nginx
    nginx.ingress.kubernetes.io/session-cookie-path: /crossdomainproxy/
    sas.com/component-name: sas-crossdomainproxy
    sas.com/component-version: 1.12.0-20201211.1607701073883
    sas.com/kustomize-base: base
    sas.com/version: 1.12.0
  labels:
    app.kubernetes.io/name: sas-crossdomainproxy
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-crossdomainproxy
  namespace: franceavv
spec:
  rules:
  - host: franceavv.eastus2.cloudapp.azure.com
    http:
      paths:
      - backend:
          serviceName: sas-crossdomainproxy
          servicePort: 443
        path: /crossdomainproxy
  tls:
  - hosts:
    - franceavv.eastus2.cloudapp.azure.com
    secretName: sas-ingress-certificate
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/issuer: sas-viya-issuer
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/affinity-mode: persistent
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/proxy-body-size: 2048m
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/session-cookie-name: sas-ingress-nginx
    nginx.ingress.kubernetes.io/session-cookie-path: /dataDiscovery/
    sas.com/component-name: sas-transformations
    sas.com/component-version: 2.24.9-20201209.1607544521387
    sas.com/kustomize-base: base
    sas.com/version: 2.24.9
  labels:
    app.kubernetes.io/name: sas-data-discovery
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-data-discovery
  namespace: franceavv
spec:
  rules:
  - host: franceavv.eastus2.cloudapp.azure.com
    http:
      paths:
      - backend:
          serviceName: sas-data-discovery
          servicePort: 443
        path: /dataDiscovery
  tls:
  - hosts:
    - franceavv.eastus2.cloudapp.azure.com
    secretName: sas-ingress-certificate
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/issuer: sas-viya-issuer
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/affinity-mode: persistent
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/proxy-body-size: 2048m
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/session-cookie-name: sas-ingress-nginx
    nginx.ingress.kubernetes.io/session-cookie-path: /SASDataExplorer/
    sas.com/component-name: sas-data-explorer-app
    sas.com/component-version: 1.23.6-20201203.1607009499801
    sas.com/kustomize-base: base
    sas.com/version: 1.23.6
  labels:
    app.kubernetes.io/name: sas-data-explorer-app
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-data-explorer-app
  namespace: franceavv
spec:
  rules:
  - host: franceavv.eastus2.cloudapp.azure.com
    http:
      paths:
      - backend:
          serviceName: sas-data-explorer-app
          servicePort: 443
        path: /SASDataExplorer
  tls:
  - hosts:
    - franceavv.eastus2.cloudapp.azure.com
    secretName: sas-ingress-certificate
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/issuer: sas-viya-issuer
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/affinity-mode: persistent
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/proxy-body-size: 2048m
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/session-cookie-name: sas-ingress-nginx
    nginx.ingress.kubernetes.io/session-cookie-path: /dataFlows/
    sas.com/component-name: sas-data-flows
    sas.com/component-version: 1.6.0-20201209.1607548143778
    sas.com/kustomize-base: base
    sas.com/version: 1.6.0
  labels:
    app.kubernetes.io/name: sas-data-flows
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-data-flows
  namespace: franceavv
spec:
  rules:
  - host: franceavv.eastus2.cloudapp.azure.com
    http:
      paths:
      - backend:
          serviceName: sas-data-flows
          servicePort: 443
        path: /dataFlows
  tls:
  - hosts:
    - franceavv.eastus2.cloudapp.azure.com
    secretName: sas-ingress-certificate
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/issuer: sas-viya-issuer
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/affinity-mode: persistent
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/proxy-body-size: 2048m
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/session-cookie-name: sas-ingress-nginx
    nginx.ingress.kubernetes.io/session-cookie-path: /dataMining/
    sas.com/component-name: sas-data-mining-services
    sas.com/component-version: 39.20.78-20201203.1607026321951
    sas.com/kustomize-base: base
    sas.com/version: 39.20.78
  labels:
    app.kubernetes.io/name: sas-data-mining
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-data-mining
  namespace: franceavv
spec:
  rules:
  - host: franceavv.eastus2.cloudapp.azure.com
    http:
      paths:
      - backend:
          serviceName: sas-data-mining
          servicePort: 443
        path: /dataMining
  tls:
  - hosts:
    - franceavv.eastus2.cloudapp.azure.com
    secretName: sas-ingress-certificate
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/issuer: sas-viya-issuer
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/affinity-mode: persistent
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/proxy-body-size: 2048m
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/session-cookie-name: sas-ingress-nginx
    nginx.ingress.kubernetes.io/session-cookie-path: /dataMiningModels/
    sas.com/component-name: sas-data-mining-models
    sas.com/component-version: 39.11.2-20201203.1607025419402
    sas.com/kustomize-base: base
    sas.com/version: 39.11.2
  labels:
    app.kubernetes.io/name: sas-data-mining-models
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-data-mining-models
  namespace: franceavv
spec:
  rules:
  - host: franceavv.eastus2.cloudapp.azure.com
    http:
      paths:
      - backend:
          serviceName: sas-data-mining-models
          servicePort: 443
        path: /dataMiningModels
  tls:
  - hosts:
    - franceavv.eastus2.cloudapp.azure.com
    secretName: sas-ingress-certificate
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/issuer: sas-viya-issuer
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/affinity-mode: persistent
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/proxy-body-size: 2048m
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/session-cookie-name: sas-ingress-nginx
    nginx.ingress.kubernetes.io/session-cookie-path: /dataMiningProjectSettings/
    sas.com/component-name: sas-data-mining-project-settings
    sas.com/component-version: 39.10.1-20201203.1607025448043
    sas.com/kustomize-base: base
    sas.com/version: 39.10.1
  labels:
    app.kubernetes.io/name: sas-data-mining-project-settings
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-data-mining-project-settings
  namespace: franceavv
spec:
  rules:
  - host: franceavv.eastus2.cloudapp.azure.com
    http:
      paths:
      - backend:
          serviceName: sas-data-mining-project-settings
          servicePort: 443
        path: /dataMiningProjectSettings
  tls:
  - hosts:
    - franceavv.eastus2.cloudapp.azure.com
    secretName: sas-ingress-certificate
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/issuer: sas-viya-issuer
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/affinity-mode: persistent
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/proxy-body-size: 2048m
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/session-cookie-name: sas-ingress-nginx
    nginx.ingress.kubernetes.io/session-cookie-path: /dataMiningResults/
    sas.com/component-name: sas-data-mining-results
    sas.com/component-version: 22.23.7-20201203.1607025661511
    sas.com/kustomize-base: base
    sas.com/version: 22.23.7
  labels:
    app.kubernetes.io/name: sas-data-mining-results
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-data-mining-results
  namespace: franceavv
spec:
  rules:
  - host: franceavv.eastus2.cloudapp.azure.com
    http:
      paths:
      - backend:
          serviceName: sas-data-mining-results
          servicePort: 443
        path: /dataMiningResults
  tls:
  - hosts:
    - franceavv.eastus2.cloudapp.azure.com
    secretName: sas-ingress-certificate
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/issuer: sas-viya-issuer
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/affinity-mode: persistent
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/proxy-body-size: 2048m
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/session-cookie-name: sas-ingress-nginx
    nginx.ingress.kubernetes.io/session-cookie-path: /dataMiningWarehouse/
    sas.com/component-name: sas-data-mining-services
    sas.com/component-version: 39.20.78-20201203.1607026321951
    sas.com/kustomize-base: base
    sas.com/version: 39.20.78
  labels:
    app.kubernetes.io/name: sas-data-mining-warehouse
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-data-mining-warehouse
  namespace: franceavv
spec:
  rules:
  - host: franceavv.eastus2.cloudapp.azure.com
    http:
      paths:
      - backend:
          serviceName: sas-data-mining-warehouse
          servicePort: 443
        path: /dataMiningWarehouse
  tls:
  - hosts:
    - franceavv.eastus2.cloudapp.azure.com
    secretName: sas-ingress-certificate
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/issuer: sas-viya-issuer
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/affinity-mode: persistent
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/proxy-body-size: 2048m
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/session-cookie-name: sas-ingress-nginx
    nginx.ingress.kubernetes.io/session-cookie-path: /dataPlans/
    sas.com/component-name: sas-data-plans
    sas.com/component-version: 1.22.14-20201209.1607474940409
    sas.com/kustomize-base: base
    sas.com/version: 1.22.14
  labels:
    app.kubernetes.io/name: sas-data-plans
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-data-plans
  namespace: franceavv
spec:
  rules:
  - host: franceavv.eastus2.cloudapp.azure.com
    http:
      paths:
      - backend:
          serviceName: sas-data-plans
          servicePort: 443
        path: /dataPlans
  tls:
  - hosts:
    - franceavv.eastus2.cloudapp.azure.com
    secretName: sas-ingress-certificate
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/issuer: sas-viya-issuer
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/affinity-mode: persistent
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/proxy-body-size: 2048m
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/session-cookie-name: sas-ingress-nginx
    nginx.ingress.kubernetes.io/session-cookie-path: /dataProfiles/
    sas.com/component-name: sas-data-profiles
    sas.com/component-version: 4.32.1-20201203.1607011072196
    sas.com/kustomize-base: base
    sas.com/version: 4.32.1
  labels:
    app.kubernetes.io/name: sas-data-profiles
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-data-profiles
  namespace: franceavv
spec:
  rules:
  - host: franceavv.eastus2.cloudapp.azure.com
    http:
      paths:
      - backend:
          serviceName: sas-data-profiles
          servicePort: 443
        path: /dataProfiles
  tls:
  - hosts:
    - franceavv.eastus2.cloudapp.azure.com
    secretName: sas-ingress-certificate
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/issuer: sas-viya-issuer
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/affinity-mode: persistent
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/proxy-body-size: 2048m
    nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
    nginx.ingress.kubernetes.io/session-cookie-name: sas-ingress-nginx
    nginx.ingress.kubernetes.io/session-cookie-path: /dataQuality/
    sas.com/component-name: sas-data-quality-services
    sas.com/component-version: 3.8.1-20201202.1606939069890
    sas.com/kustomize-base: base
    sas.com/version: 3.8.1
  labels:
    app.kubernetes.io/name: sas-data-quality
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-data-quality
  namespace: franceavv
spec:
  rules:
  - host: franceavv.eastus2.cloudapp.azure.com
    http:
      paths:
      - backend:
          serviceName: sas-data-quality
          servicePort: 443
        path: /dataQuality
  tls:
  - hosts:
    - franceavv.eastus2.cloudapp.azure.com
    secretName: sas-ingress-certificate
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/issuer: sas-viya-issuer
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/affinity-mode: persistent
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/configuration-snippet: |
      proxy_set_header X-Sas-Ingress-Request "true";
    nginx.ingress.kubernetes.io/proxy-body-size: 2048m
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/session-cookie-name: sas-ingress-nginx
    nginx.ingress.kubernetes.io/session-cookie-path: /dataSources/
    sas.com/component-name: sas-data-sources
    sas.com/component-version: 3.33.1-20201202.1606937911915
    sas.com/kustomize-base: base
    sas.com/version: 3.33.1
  labels:
    app.kubernetes.io/name: sas-data-sources
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-data-sources
  namespace: franceavv
spec:
  rules:
  - host: franceavv.eastus2.cloudapp.azure.com
    http:
      paths:
      - backend:
          serviceName: sas-data-sources
          servicePort: 443
        path: /dataSources
  tls:
  - hosts:
    - franceavv.eastus2.cloudapp.azure.com
    secretName: sas-ingress-certificate
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/issuer: sas-viya-issuer
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/affinity-mode: persistent
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/proxy-body-size: 2048m
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/session-cookie-name: sas-ingress-nginx
    nginx.ingress.kubernetes.io/session-cookie-path: /SASDataStudio/
    sas.com/component-name: sas-data-studio-app
    sas.com/component-version: 1.22.25-20201209.1607475335725
    sas.com/kustomize-base: base
    sas.com/version: 1.22.25
  labels:
    app.kubernetes.io/name: sas-data-studio-app
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-data-studio-app
  namespace: franceavv
spec:
  rules:
  - host: franceavv.eastus2.cloudapp.azure.com
    http:
      paths:
      - backend:
          serviceName: sas-data-studio-app
          servicePort: 443
        path: /SASDataStudio
  tls:
  - hosts:
    - franceavv.eastus2.cloudapp.azure.com
    secretName: sas-ingress-certificate
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/issuer: sas-viya-issuer
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/affinity-mode: persistent
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/configuration-snippet: |
      proxy_set_header X-Sas-Ingress-Request "true";
    nginx.ingress.kubernetes.io/proxy-body-size: 2048m
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/session-cookie-name: sas-ingress-nginx
    nginx.ingress.kubernetes.io/session-cookie-path: /dataTables/
    sas.com/component-name: sas-data-sources
    sas.com/component-version: 3.33.1-20201202.1606937911915
    sas.com/kustomize-base: base
    sas.com/version: 3.33.1
  labels:
    app.kubernetes.io/name: sas-data-tables
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-data-tables
  namespace: franceavv
spec:
  rules:
  - host: franceavv.eastus2.cloudapp.azure.com
    http:
      paths:
      - backend:
          serviceName: sas-data-tables
          servicePort: 443
        path: /dataTables
  tls:
  - hosts:
    - franceavv.eastus2.cloudapp.azure.com
    secretName: sas-ingress-certificate
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/issuer: sas-viya-issuer
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/affinity-mode: persistent
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/proxy-body-size: 2048m
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/session-cookie-name: sas-ingress-nginx
    nginx.ingress.kubernetes.io/session-cookie-path: /SASDecisionManager/
    sas.com/component-name: sas-decision-manager-app
    sas.com/component-version: 5.19.0-20201210.1607632727866
    sas.com/kustomize-base: base
    sas.com/version: 5.19.0
  labels:
    app.kubernetes.io/name: sas-decision-manager-app
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-decision-manager-app
  namespace: franceavv
spec:
  rules:
  - host: franceavv.eastus2.cloudapp.azure.com
    http:
      paths:
      - backend:
          serviceName: sas-decision-manager-app
          servicePort: 443
        path: /SASDecisionManager
  tls:
  - hosts:
    - franceavv.eastus2.cloudapp.azure.com
    secretName: sas-ingress-certificate
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/issuer: sas-viya-issuer
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/affinity-mode: persistent
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/proxy-body-size: 2048m
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/session-cookie-name: sas-ingress-nginx
    nginx.ingress.kubernetes.io/session-cookie-path: /decisions/
    sas.com/component-name: sas-decisions-definitions
    sas.com/component-version: 3.10.15-20201210.1607644445003
    sas.com/kustomize-base: base
    sas.com/version: 3.10.15
  labels:
    app.kubernetes.io/name: sas-decisions
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-decisions
  namespace: franceavv
spec:
  rules:
  - host: franceavv.eastus2.cloudapp.azure.com
    http:
      paths:
      - backend:
          serviceName: sas-decisions
          servicePort: 443
        path: /decisions
  tls:
  - hosts:
    - franceavv.eastus2.cloudapp.azure.com
    secretName: sas-ingress-certificate
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/issuer: sas-viya-issuer
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/affinity-mode: persistent
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/proxy-body-size: 2048m
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/session-cookie-name: sas-ingress-nginx
    nginx.ingress.kubernetes.io/session-cookie-path: /deploymentData/
    sas.com/component-name: sas-deployment-data
    sas.com/component-version: 1.2.0-20201209.1607530266025
    sas.com/kustomize-base: base
    sas.com/version: 1.2.0
  labels:
    app.kubernetes.io/name: sas-deployment-data
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-deployment-data
  namespace: franceavv
spec:
  rules:
  - host: franceavv.eastus2.cloudapp.azure.com
    http:
      paths:
      - backend:
          serviceName: sas-deployment-data
          servicePort: 443
        path: /deploymentData
  tls:
  - hosts:
    - franceavv.eastus2.cloudapp.azure.com
    secretName: sas-ingress-certificate
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/issuer: sas-viya-issuer
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/affinity-mode: persistent
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/proxy-body-size: 2048m
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/session-cookie-name: sas-ingress-nginx
    nginx.ingress.kubernetes.io/session-cookie-path: /deviceManagement/
    sas.com/component-name: sas-device-management
    sas.com/component-version: 2.21.0-20201203.1606974091293
    sas.com/kustomize-base: base
    sas.com/version: 2.21.0
  labels:
    app.kubernetes.io/name: sas-device-management
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-device-management
  namespace: franceavv
spec:
  rules:
  - host: franceavv.eastus2.cloudapp.azure.com
    http:
      paths:
      - backend:
          serviceName: sas-device-management
          servicePort: 443
        path: /deviceManagement
  tls:
  - hosts:
    - franceavv.eastus2.cloudapp.azure.com
    secretName: sas-ingress-certificate
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/issuer: sas-viya-issuer
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/affinity-mode: persistent
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/proxy-body-size: 2048m
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/session-cookie-name: sas-ingress-nginx
    nginx.ingress.kubernetes.io/session-cookie-path: /discoveryTableProvider/
    sas.com/component-name: sas-transformations
    sas.com/component-version: 2.24.9-20201209.1607544521387
    sas.com/kustomize-base: base
    sas.com/version: 2.24.9
  labels:
    app.kubernetes.io/name: sas-discovery-table-provider
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-discovery-table-provider
  namespace: franceavv
spec:
  rules:
  - host: franceavv.eastus2.cloudapp.azure.com
    http:
      paths:
      - backend:
          serviceName: sas-discovery-table-provider
          servicePort: 443
        path: /discoveryTableProvider
  tls:
  - hosts:
    - franceavv.eastus2.cloudapp.azure.com
    secretName: sas-ingress-certificate
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/issuer: sas-viya-issuer
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/affinity-mode: persistent
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/proxy-body-size: 2048m
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/session-cookie-name: sas-ingress-nginx
    nginx.ingress.kubernetes.io/session-cookie-path: /documents/
    sas.com/component-name: sas-text-cas-data-management
    sas.com/component-version: 5.7.0-20201203.1607029718479
    sas.com/kustomize-base: base
    sas.com/version: 5.7.0
  labels:
    app.kubernetes.io/name: sas-documents
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-documents
  namespace: franceavv
spec:
  rules:
  - host: franceavv.eastus2.cloudapp.azure.com
    http:
      paths:
      - backend:
          serviceName: sas-documents
          servicePort: 443
        path: /documents
  tls:
  - hosts:
    - franceavv.eastus2.cloudapp.azure.com
    secretName: sas-ingress-certificate
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/issuer: sas-viya-issuer
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/affinity-mode: persistent
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/proxy-body-size: 2048m
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/rewrite-target: /SASDrive/$2
    nginx.ingress.kubernetes.io/session-cookie-name: sas-ingress-nginx
    nginx.ingress.kubernetes.io/session-cookie-path: /SASDrive/
    sas.com/component-name: sas-drive-app
    sas.com/component-version: 3.9.2-20201208.1607415324393
    sas.com/kustomize-base: base
    sas.com/version: 3.9.2
  labels:
    app.kubernetes.io/name: sas-drive-app
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-drive-app
  namespace: franceavv
spec:
  rules:
  - host: franceavv.eastus2.cloudapp.azure.com
    http:
      paths:
      - backend:
          serviceName: sas-drive-app
          servicePort: 443
        path: /SASDrive(/|$)(.*)
      - backend:
          serviceName: sas-drive-app
          servicePort: 443
        path: /($)
  tls:
  - hosts:
    - franceavv.eastus2.cloudapp.azure.com
    secretName: sas-ingress-certificate
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/issuer: sas-viya-issuer
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/affinity-mode: persistent
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/proxy-body-size: 2048m
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/session-cookie-name: sas-ingress-nginx
    nginx.ingress.kubernetes.io/session-cookie-path: /SASEnvironmentManager/
    sas.com/component-name: sas-environment-manager-app
    sas.com/component-version: 4.7.18-20201210.1607608415476
    sas.com/kustomize-base: base
    sas.com/version: 4.7.18
  labels:
    app.kubernetes.io/name: sas-environment-manager-app
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-environment-manager-app
  namespace: franceavv
spec:
  rules:
  - host: franceavv.eastus2.cloudapp.azure.com
    http:
      paths:
      - backend:
          serviceName: sas-environment-manager-app
          servicePort: 443
        path: /SASEnvironmentManager
  tls:
  - hosts:
    - franceavv.eastus2.cloudapp.azure.com
    secretName: sas-ingress-certificate
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/issuer: sas-viya-issuer
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/affinity-mode: persistent
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/proxy-body-size: 2048m
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/session-cookie-name: sas-ingress-nginx
    nginx.ingress.kubernetes.io/session-cookie-path: /SASEventStreamManager/
    sas.com/component-name: sas-event-stream-manager-app
    sas.com/component-version: 7.8.24-20201211.1607650331718
    sas.com/kustomize-base: base
    sas.com/version: 7.8.24
  labels:
    app.kubernetes.io/name: sas-event-stream-manager-app
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-event-stream-manager-app
  namespace: franceavv
spec:
  rules:
  - host: franceavv.eastus2.cloudapp.azure.com
    http:
      paths:
      - backend:
          serviceName: sas-event-stream-manager-app
          servicePort: 443
        path: /SASEventStreamManager
  tls:
  - hosts:
    - franceavv.eastus2.cloudapp.azure.com
    secretName: sas-ingress-certificate
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/issuer: sas-viya-issuer
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/affinity-mode: persistent
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/proxy-body-size: 2048m
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/session-cookie-name: sas-ingress-nginx
    nginx.ingress.kubernetes.io/session-cookie-path: /SASEventStreamProcessingStreamviewer/
    sas.com/component-name: sas-event-stream-processing-streamviewer-app
    sas.com/component-version: 7.8.27-20201211.1607648686559
    sas.com/kustomize-base: base
    sas.com/version: 7.8.27
  labels:
    app.kubernetes.io/name: sas-event-stream-processing-streamviewer-app
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-event-stream-processing-streamviewer-app
  namespace: franceavv
spec:
  rules:
  - host: franceavv.eastus2.cloudapp.azure.com
    http:
      paths:
      - backend:
          serviceName: sas-event-stream-processing-streamviewer-app
          servicePort: 443
        path: /SASEventStreamProcessingStreamviewer
  tls:
  - hosts:
    - franceavv.eastus2.cloudapp.azure.com
    secretName: sas-ingress-certificate
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/issuer: sas-viya-issuer
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/affinity-mode: persistent
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/proxy-body-size: 2048m
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/session-cookie-name: sas-ingress-nginx
    nginx.ingress.kubernetes.io/session-cookie-path: /SASEventStreamProcessingStudio/
    sas.com/component-name: sas-event-stream-processing-studio-app
    sas.com/component-version: 7.8.24-20201211.1607651463964
    sas.com/kustomize-base: base
    sas.com/version: 7.8.24
  labels:
    app.kubernetes.io/name: sas-event-stream-processing-studio-app
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-event-stream-processing-studio-app
  namespace: franceavv
spec:
  rules:
  - host: franceavv.eastus2.cloudapp.azure.com
    http:
      paths:
      - backend:
          serviceName: sas-event-stream-processing-studio-app
          servicePort: 443
        path: /SASEventStreamProcessingStudio
  tls:
  - hosts:
    - franceavv.eastus2.cloudapp.azure.com
    secretName: sas-ingress-certificate
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/issuer: sas-viya-issuer
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/affinity-mode: persistent
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/proxy-body-size: 2048m
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/session-cookie-name: sas-ingress-nginx
    nginx.ingress.kubernetes.io/session-cookie-path: /files/
    sas.com/component-name: sas-files
    sas.com/component-version: 2.36.7-20201204.1607053741549
    sas.com/kustomize-base: base
    sas.com/version: 2.36.7
  labels:
    app.kubernetes.io/name: sas-files
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-files
  namespace: franceavv
spec:
  rules:
  - host: franceavv.eastus2.cloudapp.azure.com
    http:
      paths:
      - backend:
          serviceName: sas-files
          servicePort: 443
        path: /files
  tls:
  - hosts:
    - franceavv.eastus2.cloudapp.azure.com
    secretName: sas-ingress-certificate
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/issuer: sas-viya-issuer
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/affinity-mode: persistent
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/proxy-body-size: 2048m
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/session-cookie-name: sas-ingress-nginx
    nginx.ingress.kubernetes.io/session-cookie-path: /folders/
    sas.com/component-name: sas-folders
    sas.com/component-version: 2.57.3-20201204.1607080745145
    sas.com/kustomize-base: base
    sas.com/version: 2.57.3
  labels:
    app.kubernetes.io/name: sas-folders
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-folders
  namespace: franceavv
spec:
  rules:
  - host: franceavv.eastus2.cloudapp.azure.com
    http:
      paths:
      - backend:
          serviceName: sas-folders
          servicePort: 443
        path: /folders
  tls:
  - hosts:
    - franceavv.eastus2.cloudapp.azure.com
    secretName: sas-ingress-certificate
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/issuer: sas-viya-issuer
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/affinity-mode: persistent
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/proxy-body-size: 2048m
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/session-cookie-name: sas-ingress-nginx
    nginx.ingress.kubernetes.io/session-cookie-path: /fonts/
    sas.com/component-name: sas-fonts
    sas.com/component-version: 1.76.2-20201202.1606968212309
    sas.com/kustomize-base: base
    sas.com/version: 1.76.2
  labels:
    app.kubernetes.io/name: sas-fonts
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-fonts
  namespace: franceavv
spec:
  rules:
  - host: franceavv.eastus2.cloudapp.azure.com
    http:
      paths:
      - backend:
          serviceName: sas-fonts
          servicePort: 443
        path: /fonts
  tls:
  - hosts:
    - franceavv.eastus2.cloudapp.azure.com
    secretName: sas-ingress-certificate
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/issuer: sas-viya-issuer
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/affinity-mode: persistent
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/proxy-body-size: 2048m
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/session-cookie-name: sas-ingress-nginx
    nginx.ingress.kubernetes.io/session-cookie-path: /forecastingComparison/
    sas.com/component-name: sas-forecasting-comparison
    sas.com/component-version: 15.11.0-20201203.1607012315095
    sas.com/kustomize-base: base
    sas.com/version: 15.11.0
  labels:
    app.kubernetes.io/name: sas-forecasting-comparison
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-forecasting-comparison
  namespace: franceavv
spec:
  rules:
  - host: franceavv.eastus2.cloudapp.azure.com
    http:
      paths:
      - backend:
          serviceName: sas-forecasting-comparison
          servicePort: 443
        path: /forecastingComparison
  tls:
  - hosts:
    - franceavv.eastus2.cloudapp.azure.com
    secretName: sas-ingress-certificate
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/issuer: sas-viya-issuer
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/affinity-mode: persistent
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/proxy-body-size: 2048m
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/session-cookie-name: sas-ingress-nginx
    nginx.ingress.kubernetes.io/session-cookie-path: /forecastingDataDefinition/
    sas.com/component-name: sas-forecasting-services
    sas.com/component-version: 15.20.4-20201209.1607555830814
    sas.com/kustomize-base: base
    sas.com/version: 15.20.4
  labels:
    app.kubernetes.io/name: sas-forecasting-data-definition
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-forecasting-data-definition
  namespace: franceavv
spec:
  rules:
  - host: franceavv.eastus2.cloudapp.azure.com
    http:
      paths:
      - backend:
          serviceName: sas-forecasting-data-definition
          servicePort: 443
        path: /forecastingDataDefinition
  tls:
  - hosts:
    - franceavv.eastus2.cloudapp.azure.com
    secretName: sas-ingress-certificate
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/issuer: sas-viya-issuer
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/affinity-mode: persistent
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/proxy-body-size: 2048m
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/session-cookie-name: sas-ingress-nginx
    nginx.ingress.kubernetes.io/session-cookie-path: /forecastingEvents/
    sas.com/component-name: sas-forecasting-events
    sas.com/component-version: 15.11.0-20201203.1607012406763
    sas.com/kustomize-base: base
    sas.com/version: 15.11.0
  labels:
    app.kubernetes.io/name: sas-forecasting-events
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-forecasting-events
  namespace: franceavv
spec:
  rules:
  - host: franceavv.eastus2.cloudapp.azure.com
    http:
      paths:
      - backend:
          serviceName: sas-forecasting-events
          servicePort: 443
        path: /forecastingEvents
  tls:
  - hosts:
    - franceavv.eastus2.cloudapp.azure.com
    secretName: sas-ingress-certificate
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/issuer: sas-viya-issuer
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/affinity-mode: persistent
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/proxy-body-size: 2048m
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/session-cookie-name: sas-ingress-nginx
    nginx.ingress.kubernetes.io/session-cookie-path: /forecastingExploration/
    sas.com/component-name: sas-forecasting-exploration
    sas.com/component-version: 15.12.0-20201203.1607024186781
    sas.com/kustomize-base: base
    sas.com/version: 15.12.0
  labels:
    app.kubernetes.io/name: sas-forecasting-exploration
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-forecasting-exploration
  namespace: franceavv
spec:
  rules:
  - host: franceavv.eastus2.cloudapp.azure.com
    http:
      paths:
      - backend:
          serviceName: sas-forecasting-exploration
          servicePort: 443
        path: /forecastingExploration
  tls:
  - hosts:
    - franceavv.eastus2.cloudapp.azure.com
    secretName: sas-ingress-certificate
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/issuer: sas-viya-issuer
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/affinity-mode: persistent
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/proxy-body-size: 2048m
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/session-cookie-name: sas-ingress-nginx
    nginx.ingress.kubernetes.io/session-cookie-path: /forecastingFilters/
    sas.com/component-name: sas-forecasting-filters
    sas.com/component-version: 15.12.0-20201203.1607026228979
    sas.com/kustomize-base: base
    sas.com/version: 15.12.0
  labels:
    app.kubernetes.io/name: sas-forecasting-filters
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-forecasting-filters
  namespace: franceavv
spec:
  rules:
  - host: franceavv.eastus2.cloudapp.azure.com
    http:
      paths:
      - backend:
          serviceName: sas-forecasting-filters
          servicePort: 443
        path: /forecastingFilters
  tls:
  - hosts:
    - franceavv.eastus2.cloudapp.azure.com
    secretName: sas-ingress-certificate
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/issuer: sas-viya-issuer
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/affinity-mode: persistent
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/proxy-body-size: 2048m
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/session-cookie-name: sas-ingress-nginx
    nginx.ingress.kubernetes.io/session-cookie-path: /forecastingGateway/
    sas.com/component-name: sas-forecasting-services
    sas.com/component-version: 15.20.4-20201209.1607555830814
    sas.com/kustomize-base: base
    sas.com/version: 15.20.4
  labels:
    app.kubernetes.io/name: sas-forecasting-gateway
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-forecasting-gateway
  namespace: franceavv
spec:
  rules:
  - host: franceavv.eastus2.cloudapp.azure.com
    http:
      paths:
      - backend:
          serviceName: sas-forecasting-gateway
          servicePort: 443
        path: /forecastingGateway
  tls:
  - hosts:
    - franceavv.eastus2.cloudapp.azure.com
    secretName: sas-ingress-certificate
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/issuer: sas-viya-issuer
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/affinity-mode: persistent
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/proxy-body-size: 2048m
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/session-cookie-name: sas-ingress-nginx
    nginx.ingress.kubernetes.io/session-cookie-path: /forecastingOverrides/
    sas.com/component-name: sas-forecasting-services
    sas.com/component-version: 15.20.4-20201209.1607555830814
    sas.com/kustomize-base: base
    sas.com/version: 15.20.4
  labels:
    app.kubernetes.io/name: sas-forecasting-overrides
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-forecasting-overrides
  namespace: franceavv
spec:
  rules:
  - host: franceavv.eastus2.cloudapp.azure.com
    http:
      paths:
      - backend:
          serviceName: sas-forecasting-overrides
          servicePort: 443
        path: /forecastingOverrides
  tls:
  - hosts:
    - franceavv.eastus2.cloudapp.azure.com
    secretName: sas-ingress-certificate
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/issuer: sas-viya-issuer
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/affinity-mode: persistent
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/proxy-body-size: 2048m
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/session-cookie-name: sas-ingress-nginx
    nginx.ingress.kubernetes.io/session-cookie-path: /forecastingPipelines/
    sas.com/component-name: sas-forecasting-pipelines
    sas.com/component-version: 15.15.5-20201209.1607532908435
    sas.com/kustomize-base: base
    sas.com/version: 15.15.5
  labels:
    app.kubernetes.io/name: sas-forecasting-pipelines
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-forecasting-pipelines
  namespace: franceavv
spec:
  rules:
  - host: franceavv.eastus2.cloudapp.azure.com
    http:
      paths:
      - backend:
          serviceName: sas-forecasting-pipelines
          servicePort: 443
        path: /forecastingPipelines
  tls:
  - hosts:
    - franceavv.eastus2.cloudapp.azure.com
    secretName: sas-ingress-certificate
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/issuer: sas-viya-issuer
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/affinity-mode: persistent
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/proxy-body-size: 2048m
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/session-cookie-name: sas-ingress-nginx
    nginx.ingress.kubernetes.io/session-cookie-path: /forecastingStrategies/
    sas.com/component-name: sas-forecasting-services
    sas.com/component-version: 15.20.4-20201209.1607555830814
    sas.com/kustomize-base: base
    sas.com/version: 15.20.4
  labels:
    app.kubernetes.io/name: sas-forecasting-strategies
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-forecasting-strategies
  namespace: franceavv
spec:
  rules:
  - host: franceavv.eastus2.cloudapp.azure.com
    http:
      paths:
      - backend:
          serviceName: sas-forecasting-strategies
          servicePort: 443
        path: /forecastingStrategies
  tls:
  - hosts:
    - franceavv.eastus2.cloudapp.azure.com
    secretName: sas-ingress-certificate
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/issuer: sas-viya-issuer
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/affinity-mode: persistent
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/proxy-body-size: 2048m
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/session-cookie-name: sas-ingress-nginx
    nginx.ingress.kubernetes.io/session-cookie-path: /geoEnrichment/
    sas.com/component-name: sas-geo-enrichment
    sas.com/component-version: 1.20.0-20201209.1607532669891
    sas.com/kustomize-base: base
    sas.com/version: 1.20.0
  labels:
    app.kubernetes.io/name: sas-geo-enrichment
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-geo-enrichment
  namespace: franceavv
spec:
  rules:
  - host: franceavv.eastus2.cloudapp.azure.com
    http:
      paths:
      - backend:
          serviceName: sas-geo-enrichment
          servicePort: 443
        path: /geoEnrichment
  tls:
  - hosts:
    - franceavv.eastus2.cloudapp.azure.com
    secretName: sas-ingress-certificate
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/issuer: sas-viya-issuer
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/affinity-mode: persistent
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/proxy-body-size: 2048m
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/session-cookie-name: sas-ingress-nginx
    nginx.ingress.kubernetes.io/session-cookie-path: /SASGraphBuilder/
    sas.com/component-name: sas-graph-builder-app
    sas.com/component-version: 1.65.0-20201203.1607022262435
    sas.com/kustomize-base: base
    sas.com/version: 1.65.0
  labels:
    app.kubernetes.io/name: sas-graph-builder-app
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-graph-builder-app
  namespace: franceavv
spec:
  rules:
  - host: franceavv.eastus2.cloudapp.azure.com
    http:
      paths:
      - backend:
          serviceName: sas-graph-builder-app
          servicePort: 443
        path: /SASGraphBuilder
  tls:
  - hosts:
    - franceavv.eastus2.cloudapp.azure.com
    secretName: sas-ingress-certificate
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/issuer: sas-viya-issuer
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/affinity-mode: persistent
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/proxy-body-size: 2048m
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/session-cookie-name: sas-ingress-nginx
    nginx.ingress.kubernetes.io/session-cookie-path: /graphTemplates/
    sas.com/component-name: sas-graph-templates
    sas.com/component-version: 1.71.0-20201203.1607004187481
    sas.com/kustomize-base: base
    sas.com/version: 1.71.0
  labels:
    app.kubernetes.io/name: sas-graph-templates
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-graph-templates
  namespace: franceavv
spec:
  rules:
  - host: franceavv.eastus2.cloudapp.azure.com
    http:
      paths:
      - backend:
          serviceName: sas-graph-templates
          servicePort: 443
        path: /graphTemplates
  tls:
  - hosts:
    - franceavv.eastus2.cloudapp.azure.com
    secretName: sas-ingress-certificate
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/issuer: sas-viya-issuer
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/affinity-mode: persistent
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/proxy-body-size: 2048m
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/session-cookie-name: sas-ingress-nginx
    nginx.ingress.kubernetes.io/session-cookie-path: /identities/
    sas.com/component-name: sas-identities
    sas.com/component-version: 2.40.14-20201204.1607054361393
    sas.com/kustomize-base: base
    sas.com/version: 2.40.14
  labels:
    app.kubernetes.io/name: sas-identities
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-identities
  namespace: franceavv
spec:
  rules:
  - host: franceavv.eastus2.cloudapp.azure.com
    http:
      paths:
      - backend:
          serviceName: sas-identities
          servicePort: 443
        path: /identities
  tls:
  - hosts:
    - franceavv.eastus2.cloudapp.azure.com
    secretName: sas-ingress-certificate
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/issuer: sas-viya-issuer
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/affinity-mode: persistent
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/proxy-body-size: 2048m
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/session-cookie-name: sas-ingress-nginx
    nginx.ingress.kubernetes.io/session-cookie-path: /import9/
    sas.com/component-name: sas-import-9
    sas.com/component-version: 1.9.9-20201211.1607711349452
    sas.com/kustomize-base: base
    sas.com/version: 1.9.9
  labels:
    app.kubernetes.io/name: sas-import-9
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-import-9
  namespace: franceavv
spec:
  rules:
  - host: franceavv.eastus2.cloudapp.azure.com
    http:
      paths:
      - backend:
          serviceName: sas-import-9
          servicePort: 443
        path: /import9
  tls:
  - hosts:
    - franceavv.eastus2.cloudapp.azure.com
    secretName: sas-ingress-certificate
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/issuer: sas-viya-issuer
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/affinity-mode: persistent
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/proxy-body-size: 2048m
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/session-cookie-name: sas-ingress-nginx
    nginx.ingress.kubernetes.io/session-cookie-path: /jobDefinitions/
    sas.com/component-name: sas-job-execution
    sas.com/component-version: 2.28.12-20201204.1607054870985
    sas.com/kustomize-base: base
    sas.com/version: 2.28.12
  labels:
    app.kubernetes.io/name: sas-job-definitions
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-job-definitions
  namespace: franceavv
spec:
  rules:
  - host: franceavv.eastus2.cloudapp.azure.com
    http:
      paths:
      - backend:
          serviceName: sas-job-definitions
          servicePort: 443
        path: /jobDefinitions
  tls:
  - hosts:
    - franceavv.eastus2.cloudapp.azure.com
    secretName: sas-ingress-certificate
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/issuer: sas-viya-issuer
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/affinity-mode: persistent
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/proxy-body-size: 2048m
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/session-cookie-name: sas-ingress-nginx
    nginx.ingress.kubernetes.io/session-cookie-path: /jobExecution/
    sas.com/component-name: sas-job-execution
    sas.com/component-version: 2.28.12-20201204.1607054870985
    sas.com/kustomize-base: base
    sas.com/version: 2.28.12
  labels:
    app.kubernetes.io/name: sas-job-execution
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-job-execution
  namespace: franceavv
spec:
  rules:
  - host: franceavv.eastus2.cloudapp.azure.com
    http:
      paths:
      - backend:
          serviceName: sas-job-execution
          servicePort: 443
        path: /jobExecution
  tls:
  - hosts:
    - franceavv.eastus2.cloudapp.azure.com
    secretName: sas-ingress-certificate
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/issuer: sas-viya-issuer
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/affinity-mode: persistent
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/proxy-body-size: 2048m
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/session-cookie-name: sas-ingress-nginx
    nginx.ingress.kubernetes.io/session-cookie-path: /SASJobExecution/
    sas.com/component-name: sas-job-execution-app
    sas.com/component-version: 2.18.3-20201209.1607521207111
    sas.com/kustomize-base: base
    sas.com/version: 2.18.3
  labels:
    app.kubernetes.io/name: sas-job-execution-app
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-job-execution-app
  namespace: franceavv
spec:
  rules:
  - host: franceavv.eastus2.cloudapp.azure.com
    http:
      paths:
      - backend:
          serviceName: sas-job-execution-app
          servicePort: 443
        path: /SASJobExecution
  tls:
  - hosts:
    - franceavv.eastus2.cloudapp.azure.com
    secretName: sas-ingress-certificate
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/issuer: sas-viya-issuer
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/affinity-mode: persistent
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/proxy-body-size: 2048m
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/session-cookie-name: sas-ingress-nginx
    nginx.ingress.kubernetes.io/session-cookie-path: /jobFlowScheduling/
    sas.com/component-name: sas-job-flow-scheduling
    sas.com/component-version: 2.2.7-20201002.1601644744469
    sas.com/kustomize-base: base
    sas.com/version: 2.2.7
  labels:
    app.kubernetes.io/name: sas-job-flow-scheduling
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-job-flow-scheduling
  namespace: franceavv
spec:
  rules:
  - host: franceavv.eastus2.cloudapp.azure.com
    http:
      paths:
      - backend:
          serviceName: sas-job-flow-scheduling
          servicePort: 443
        path: /jobFlowScheduling
  tls:
  - hosts:
    - franceavv.eastus2.cloudapp.azure.com
    secretName: sas-ingress-certificate
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/issuer: sas-viya-issuer
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/affinity-mode: persistent
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/proxy-body-size: 2048m
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/session-cookie-name: sas-ingress-nginx
    nginx.ingress.kubernetes.io/session-cookie-path: /launcher/
    sas.com/component-name: sas-launcher
    sas.com/component-version: 1.18.8-20201208.1607443790845
    sas.com/kustomize-base: base
    sas.com/version: 1.18.8
  labels:
    app.kubernetes.io/name: sas-launcher
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-launcher
  namespace: franceavv
spec:
  rules:
  - host: franceavv.eastus2.cloudapp.azure.com
    http:
      paths:
      - backend:
          serviceName: sas-launcher
          servicePort: 443
        path: /launcher
  tls:
  - hosts:
    - franceavv.eastus2.cloudapp.azure.com
    secretName: sas-ingress-certificate
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/issuer: sas-viya-issuer
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/affinity-mode: persistent
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/proxy-body-size: 2048m
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/session-cookie-name: sas-ingress-nginx
    nginx.ingress.kubernetes.io/session-cookie-path: /licenses/
    sas.com/component-name: sas-cas-control
    sas.com/component-version: 2.3.6-20201210.1607621490977
    sas.com/kustomize-base: base
    sas.com/version: 2.3.6
  labels:
    app.kubernetes.io/name: sas-licenses
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-licenses
  namespace: franceavv
spec:
  rules:
  - host: franceavv.eastus2.cloudapp.azure.com
    http:
      paths:
      - backend:
          serviceName: sas-licenses
          servicePort: 443
        path: /licenses
  tls:
  - hosts:
    - franceavv.eastus2.cloudapp.azure.com
    secretName: sas-ingress-certificate
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/issuer: sas-viya-issuer
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/affinity-mode: persistent
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/proxy-body-size: 2048m
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/session-cookie-name: sas-ingress-nginx
    nginx.ingress.kubernetes.io/session-cookie-path: /SASLineage/
    sas.com/component-name: sas-lineage-app
    sas.com/component-version: 2.8.1-20201202.1606960621719
    sas.com/kustomize-base: base
    sas.com/version: 2.8.1
  labels:
    app.kubernetes.io/name: sas-lineage-app
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-lineage-app
  namespace: franceavv
spec:
  rules:
  - host: franceavv.eastus2.cloudapp.azure.com
    http:
      paths:
      - backend:
          serviceName: sas-lineage-app
          servicePort: 443
        path: /SASLineage
  tls:
  - hosts:
    - franceavv.eastus2.cloudapp.azure.com
    secretName: sas-ingress-certificate
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/issuer: sas-viya-issuer
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/affinity-mode: persistent
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/proxy-body-size: 2048m
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/session-cookie-name: sas-ingress-nginx
    nginx.ingress.kubernetes.io/session-cookie-path: /links/
    sas.com/component-name: sas-links
    sas.com/component-version: 1.73.0-20201204.1607077133902
    sas.com/kustomize-base: base
    sas.com/version: 1.73.0
  labels:
    app.kubernetes.io/name: sas-links
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-links
  namespace: franceavv
spec:
  rules:
  - host: franceavv.eastus2.cloudapp.azure.com
    http:
      paths:
      - backend:
          serviceName: sas-links
          servicePort: 443
        path: /links
  tls:
  - hosts:
    - franceavv.eastus2.cloudapp.azure.com
    secretName: sas-ingress-certificate
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/issuer: sas-viya-issuer
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/affinity-mode: persistent
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/proxy-body-size: 2048m
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/session-cookie-name: sas-ingress-nginx
    nginx.ingress.kubernetes.io/session-cookie-path: /localization/
    sas.com/component-name: sas-localization
    sas.com/component-version: 1.9.3-20201217.1608245885998
    sas.com/kustomize-base: base
    sas.com/version: 1.9.3
  labels:
    app.kubernetes.io/name: sas-localization
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-localization
  namespace: franceavv
spec:
  rules:
  - host: franceavv.eastus2.cloudapp.azure.com
    http:
      paths:
      - backend:
          serviceName: sas-localization
          servicePort: 443
        path: /localization
  tls:
  - hosts:
    - franceavv.eastus2.cloudapp.azure.com
    secretName: sas-ingress-certificate
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/issuer: sas-viya-issuer
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/affinity-mode: persistent
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/proxy-body-size: 2048m
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/server-snippet: large_client_header_buffers 4 32k;
    nginx.ingress.kubernetes.io/session-cookie-name: sas-ingress-nginx
    nginx.ingress.kubernetes.io/session-cookie-path: /SASLogon/
    sas.com/component-name: sas-logon-app
    sas.com/component-version: 2.40.17-20201208.1607458236727
    sas.com/kustomize-base: base
    sas.com/version: 2.40.17
  labels:
    app.kubernetes.io/name: sas-logon-app
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-logon-app
  namespace: franceavv
spec:
  rules:
  - host: franceavv.eastus2.cloudapp.azure.com
    http:
      paths:
      - backend:
          serviceName: sas-logon-app
          servicePort: 443
        path: /SASLogon
  tls:
  - hosts:
    - franceavv.eastus2.cloudapp.azure.com
    secretName: sas-ingress-certificate
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/issuer: sas-viya-issuer
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/affinity-mode: persistent
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/proxy-body-size: 2048m
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/session-cookie-name: sas-ingress-nginx
    nginx.ingress.kubernetes.io/session-cookie-path: /mail/
    sas.com/component-name: sas-mail
    sas.com/component-version: 1.56.1-20201203.1607023389621
    sas.com/kustomize-base: base
    sas.com/version: 1.56.1
  labels:
    app.kubernetes.io/name: sas-mail
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-mail
  namespace: franceavv
spec:
  rules:
  - host: franceavv.eastus2.cloudapp.azure.com
    http:
      paths:
      - backend:
          serviceName: sas-mail
          servicePort: 443
        path: /mail
  tls:
  - hosts:
    - franceavv.eastus2.cloudapp.azure.com
    secretName: sas-ingress-certificate
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/issuer: sas-viya-issuer
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/affinity-mode: persistent
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/proxy-body-size: 2048m
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/session-cookie-name: sas-ingress-nginx
    nginx.ingress.kubernetes.io/session-cookie-path: /maps/
    sas.com/component-name: sas-maps
    sas.com/component-version: 1.76.0-20201209.1607538010156
    sas.com/kustomize-base: base
    sas.com/version: 1.76.0
  labels:
    app.kubernetes.io/name: sas-maps
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-maps
  namespace: franceavv
spec:
  rules:
  - host: franceavv.eastus2.cloudapp.azure.com
    http:
      paths:
      - backend:
          serviceName: sas-maps
          servicePort: 443
        path: /maps
  tls:
  - hosts:
    - franceavv.eastus2.cloudapp.azure.com
    secretName: sas-ingress-certificate
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/issuer: sas-viya-issuer
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/affinity-mode: persistent
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/proxy-body-size: 2048m
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/session-cookie-name: sas-ingress-nginx
    nginx.ingress.kubernetes.io/session-cookie-path: /microanalyticScore/
    sas.com/component-name: sas-microanalytic-score
    sas.com/component-version: 2.34.6-20201214.1607955335324
    sas.com/kustomize-base: base
    sas.com/version: 2.34.6
  labels:
    app.kubernetes.io/name: sas-microanalytic-score
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-microanalytic-score
  namespace: franceavv
spec:
  rules:
  - host: franceavv.eastus2.cloudapp.azure.com
    http:
      paths:
      - backend:
          serviceName: sas-microanalytic-score
          servicePort: 443
        path: /microanalyticScore
  tls:
  - hosts:
    - franceavv.eastus2.cloudapp.azure.com
    secretName: sas-ingress-certificate
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/issuer: sas-viya-issuer
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/affinity-mode: persistent
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/proxy-body-size: 2048m
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/session-cookie-name: sas-ingress-nginx
    nginx.ingress.kubernetes.io/session-cookie-path: /mlPipelineAutomation/
    sas.com/component-name: sas-data-mining-services
    sas.com/component-version: 39.20.78-20201203.1607026321951
    sas.com/kustomize-base: base
    sas.com/version: 39.20.78
  labels:
    app.kubernetes.io/name: sas-ml-pipeline-automation
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-ml-pipeline-automation
  namespace: franceavv
spec:
  rules:
  - host: franceavv.eastus2.cloudapp.azure.com
    http:
      paths:
      - backend:
          serviceName: sas-ml-pipeline-automation
          servicePort: 443
        path: /mlPipelineAutomation
  tls:
  - hosts:
    - franceavv.eastus2.cloudapp.azure.com
    secretName: sas-ingress-certificate
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/issuer: sas-viya-issuer
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/affinity-mode: persistent
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/proxy-body-size: 2048m
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/session-cookie-name: sas-ingress-nginx
    nginx.ingress.kubernetes.io/session-cookie-path: /modelManagement/
    sas.com/component-name: sas-model-management
    sas.com/component-version: 1.16.58-20201214.1607964538030
    sas.com/kustomize-base: base
    sas.com/version: 1.16.58
  labels:
    app.kubernetes.io/name: sas-model-management
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-model-management
  namespace: franceavv
spec:
  rules:
  - host: franceavv.eastus2.cloudapp.azure.com
    http:
      paths:
      - backend:
          serviceName: sas-model-management
          servicePort: 443
        path: /modelManagement
  tls:
  - hosts:
    - franceavv.eastus2.cloudapp.azure.com
    secretName: sas-ingress-certificate
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/issuer: sas-viya-issuer
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/affinity-mode: persistent
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/proxy-body-size: 2048m
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/session-cookie-name: sas-ingress-nginx
    nginx.ingress.kubernetes.io/session-cookie-path: /SASModelManager/
    sas.com/component-name: sas-model-manager-app
    sas.com/component-version: 1.19.0-20201214.1607962203037
    sas.com/kustomize-base: base
    sas.com/version: 1.19.0
  labels:
    app.kubernetes.io/name: sas-model-manager-app
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-model-manager-app
  namespace: franceavv
spec:
  rules:
  - host: franceavv.eastus2.cloudapp.azure.com
    http:
      paths:
      - backend:
          serviceName: sas-model-manager-app
          servicePort: 443
        path: /SASModelManager
  tls:
  - hosts:
    - franceavv.eastus2.cloudapp.azure.com
    secretName: sas-ingress-certificate
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/issuer: sas-viya-issuer
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/affinity-mode: persistent
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/proxy-body-size: 2048m
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/session-cookie-name: sas-ingress-nginx
    nginx.ingress.kubernetes.io/session-cookie-path: /modelPublish/
    sas.com/component-name: sas-model-publish
    sas.com/component-version: 2.27.0-20201209.1607555293093
    sas.com/kustomize-base: base
    sas.com/version: 2.27.0
  labels:
    app.kubernetes.io/name: sas-model-publish
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-model-publish
  namespace: franceavv
spec:
  rules:
  - host: franceavv.eastus2.cloudapp.azure.com
    http:
      paths:
      - backend:
          serviceName: sas-model-publish
          servicePort: 443
        path: /modelPublish
  tls:
  - hosts:
    - franceavv.eastus2.cloudapp.azure.com
    secretName: sas-ingress-certificate
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/issuer: sas-viya-issuer
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/affinity-mode: persistent
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/proxy-body-size: 2048m
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/session-cookie-name: sas-ingress-nginx
    nginx.ingress.kubernetes.io/session-cookie-path: /modelRepository/
    sas.com/component-name: sas-model-repository
    sas.com/component-version: 3.14.56-20201214.1607964567719
    sas.com/kustomize-base: base
    sas.com/version: 3.14.56
  labels:
    app.kubernetes.io/name: sas-model-repository
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-model-repository
  namespace: franceavv
spec:
  rules:
  - host: franceavv.eastus2.cloudapp.azure.com
    http:
      paths:
      - backend:
          serviceName: sas-model-repository
          servicePort: 443
        path: /modelRepository
  tls:
  - hosts:
    - franceavv.eastus2.cloudapp.azure.com
    secretName: sas-ingress-certificate
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/issuer: sas-viya-issuer
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/affinity-mode: persistent
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/proxy-body-size: 2048m
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/rewrite-target: /SASModelStudio/$2
    nginx.ingress.kubernetes.io/session-cookie-name: sas-ingress-nginx
    nginx.ingress.kubernetes.io/session-cookie-path: /SASModelStudio/
    sas.com/component-name: sas-model-studio-app
    sas.com/component-version: 1.51.2-20201209.1607544692059
    sas.com/kustomize-base: base
    sas.com/version: 1.51.2
  labels:
    app.kubernetes.io/name: sas-model-studio-app
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-model-studio-app
  namespace: franceavv
spec:
  rules:
  - host: franceavv.eastus2.cloudapp.azure.com
    http:
      paths:
      - backend:
          serviceName: sas-model-studio-app
          servicePort: 443
        path: /SASModelStudio(/|$)(.*)
      - backend:
          serviceName: sas-model-studio-app
          servicePort: 443
        path: /ModelStudio
  tls:
  - hosts:
    - franceavv.eastus2.cloudapp.azure.com
    secretName: sas-ingress-certificate
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/issuer: sas-viya-issuer
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/affinity-mode: persistent
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/proxy-body-size: 2048m
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/session-cookie-name: sas-ingress-nginx
    nginx.ingress.kubernetes.io/session-cookie-path: /naturalLanguageConversations/
    sas.com/component-name: sas-natural-language-conversations
    sas.com/component-version: 1.3.1-20201204.1607111974163
    sas.com/kustomize-base: base
    sas.com/version: 1.3.1
  labels:
    app.kubernetes.io/name: sas-natural-language-conversations
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-natural-language-conversations
  namespace: franceavv
spec:
  rules:
  - host: franceavv.eastus2.cloudapp.azure.com
    http:
      paths:
      - backend:
          serviceName: sas-natural-language-conversations
          servicePort: 443
        path: /naturalLanguageConversations
  tls:
  - hosts:
    - franceavv.eastus2.cloudapp.azure.com
    secretName: sas-ingress-certificate
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/issuer: sas-viya-issuer
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/affinity-mode: persistent
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/proxy-body-size: 2048m
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/session-cookie-name: sas-ingress-nginx
    nginx.ingress.kubernetes.io/session-cookie-path: /naturalLanguageGeneration/
    sas.com/component-name: sas-natural-language-generation
    sas.com/component-version: 1.6.0-20201203.1607013425049
    sas.com/kustomize-base: base
    sas.com/version: 1.6.0
  labels:
    app.kubernetes.io/name: sas-natural-language-generation
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-natural-language-generation
  namespace: franceavv
spec:
  rules:
  - host: franceavv.eastus2.cloudapp.azure.com
    http:
      paths:
      - backend:
          serviceName: sas-natural-language-generation
          servicePort: 443
        path: /naturalLanguageGeneration
  tls:
  - hosts:
    - franceavv.eastus2.cloudapp.azure.com
    secretName: sas-ingress-certificate
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/issuer: sas-viya-issuer
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/affinity-mode: persistent
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/proxy-body-size: 2048m
    nginx.ingress.kubernetes.io/proxy-read-timeout: 600s
    nginx.ingress.kubernetes.io/session-cookie-name: sas-ingress-nginx
    nginx.ingress.kubernetes.io/session-cookie-path: /naturalLanguageUnderstanding/
    sas.com/component-name: sas-natural-language-understanding
    sas.com/component-version: 3.4.0-20201203.1607014016368
    sas.com/kustomize-base: base
    sas.com/version: 3.4.0
  labels:
    app.kubernetes.io/name: sas-natural-language-understanding
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-natural-language-understanding
  namespace: franceavv
spec:
  rules:
  - host: franceavv.eastus2.cloudapp.azure.com
    http:
      paths:
      - backend:
          serviceName: sas-natural-language-understanding
          servicePort: 443
        path: /naturalLanguageUnderstanding
  tls:
  - hosts:
    - franceavv.eastus2.cloudapp.azure.com
    secretName: sas-ingress-certificate
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/issuer: sas-viya-issuer
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/affinity-mode: persistent
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/proxy-body-size: 2048m
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/session-cookie-name: sas-ingress-nginx
    nginx.ingress.kubernetes.io/session-cookie-path: /notifications/
    sas.com/component-name: sas-notifications
    sas.com/component-version: 1.55.1-20201207.1607355364455
    sas.com/kustomize-base: base
    sas.com/version: 1.55.1
  labels:
    app.kubernetes.io/name: sas-notifications
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-notifications
  namespace: franceavv
spec:
  rules:
  - host: franceavv.eastus2.cloudapp.azure.com
    http:
      paths:
      - backend:
          serviceName: sas-notifications
          servicePort: 443
        path: /notifications
  tls:
  - hosts:
    - franceavv.eastus2.cloudapp.azure.com
    secretName: sas-ingress-certificate
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/issuer: sas-viya-issuer
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/affinity-mode: persistent
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/proxy-body-size: 2048m
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/session-cookie-name: sas-ingress-nginx
    nginx.ingress.kubernetes.io/session-cookie-path: /parseExecutionProvider/
    sas.com/component-name: sas-text-parsing
    sas.com/component-version: 5.7.0-20201203.1607019166184
    sas.com/kustomize-base: base
    sas.com/version: 5.7.0
  labels:
    app.kubernetes.io/name: sas-parse-execution-provider
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-parse-execution-provider
  namespace: franceavv
spec:
  rules:
  - host: franceavv.eastus2.cloudapp.azure.com
    http:
      paths:
      - backend:
          serviceName: sas-parse-execution-provider
          servicePort: 443
        path: /parseExecutionProvider
  tls:
  - hosts:
    - franceavv.eastus2.cloudapp.azure.com
    secretName: sas-ingress-certificate
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/issuer: sas-viya-issuer
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/affinity-mode: persistent
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/proxy-body-size: 2048m
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/session-cookie-name: sas-ingress-nginx
    nginx.ingress.kubernetes.io/session-cookie-path: /parsing/
    sas.com/component-name: sas-text-parsing
    sas.com/component-version: 5.7.0-20201203.1607019166184
    sas.com/kustomize-base: base
    sas.com/version: 5.7.0
  labels:
    app.kubernetes.io/name: sas-parsing
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-parsing
  namespace: franceavv
spec:
  rules:
  - host: franceavv.eastus2.cloudapp.azure.com
    http:
      paths:
      - backend:
          serviceName: sas-parsing
          servicePort: 443
        path: /parsing
  tls:
  - hosts:
    - franceavv.eastus2.cloudapp.azure.com
    secretName: sas-ingress-certificate
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/issuer: sas-viya-issuer
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/affinity-mode: persistent
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/proxy-body-size: 2048m
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/session-cookie-name: sas-ingress-nginx
    nginx.ingress.kubernetes.io/session-cookie-path: /preferences/
    sas.com/component-name: sas-preferences
    sas.com/component-version: 1.57.1-20201204.1607093916383
    sas.com/kustomize-base: base
    sas.com/version: 1.57.1
  labels:
    app.kubernetes.io/name: sas-preferences
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-preferences
  namespace: franceavv
spec:
  rules:
  - host: franceavv.eastus2.cloudapp.azure.com
    http:
      paths:
      - backend:
          serviceName: sas-preferences
          servicePort: 443
        path: /preferences
  tls:
  - hosts:
    - franceavv.eastus2.cloudapp.azure.com
    secretName: sas-ingress-certificate
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/issuer: sas-viya-issuer
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/affinity-mode: persistent
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/proxy-body-size: 2048m
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/session-cookie-name: sas-ingress-nginx
    nginx.ingress.kubernetes.io/session-cookie-path: /projects/
    sas.com/component-name: sas-projects
    sas.com/component-version: 1.23.18-20201209.1607532724047
    sas.com/kustomize-base: base
    sas.com/version: 1.23.18
  labels:
    app.kubernetes.io/name: sas-projects
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-projects
  namespace: franceavv
spec:
  rules:
  - host: franceavv.eastus2.cloudapp.azure.com
    http:
      paths:
      - backend:
          serviceName: sas-projects
          servicePort: 443
        path: /projects
  tls:
  - hosts:
    - franceavv.eastus2.cloudapp.azure.com
    secretName: sas-ingress-certificate
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/issuer: sas-viya-issuer
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/affinity-mode: persistent
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/proxy-body-size: 2048m
    nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
    nginx.ingress.kubernetes.io/session-cookie-name: sas-ingress-nginx
    nginx.ingress.kubernetes.io/session-cookie-path: /qkbManagement/
    sas.com/component-name: sas-data-quality-services
    sas.com/component-version: 3.8.1-20201202.1606939069890
    sas.com/kustomize-base: base
    sas.com/version: 3.8.1
  labels:
    app.kubernetes.io/name: sas-qkb-management
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-qkb-management
  namespace: franceavv
spec:
  rules:
  - host: franceavv.eastus2.cloudapp.azure.com
    http:
      paths:
      - backend:
          serviceName: sas-qkb-management
          servicePort: 443
        path: /qkbManagement
  tls:
  - hosts:
    - franceavv.eastus2.cloudapp.azure.com
    secretName: sas-ingress-certificate
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/issuer: sas-viya-issuer
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/affinity-mode: persistent
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/proxy-body-size: 2048m
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/session-cookie-name: sas-ingress-nginx
    nginx.ingress.kubernetes.io/session-cookie-path: /referenceData/
    sas.com/component-name: sas-business-rules-services
    sas.com/component-version: 3.9.15-20201210.1607644432623
    sas.com/kustomize-base: base
    sas.com/version: 3.9.15
  labels:
    app.kubernetes.io/name: sas-reference-data
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-reference-data
  namespace: franceavv
spec:
  rules:
  - host: franceavv.eastus2.cloudapp.azure.com
    http:
      paths:
      - backend:
          serviceName: sas-reference-data
          servicePort: 443
        path: /referenceData
  tls:
  - hosts:
    - franceavv.eastus2.cloudapp.azure.com
    secretName: sas-ingress-certificate
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/issuer: sas-viya-issuer
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/affinity-mode: persistent
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/proxy-body-size: 2048m
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/session-cookie-name: sas-ingress-nginx
    nginx.ingress.kubernetes.io/session-cookie-path: /relationships/
    sas.com/component-name: sas-relationships
    sas.com/component-version: 3.28.11-20201204.1607056749902
    sas.com/kustomize-base: base
    sas.com/version: 3.28.11
  labels:
    app.kubernetes.io/name: sas-relationships
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-relationships
  namespace: franceavv
spec:
  rules:
  - host: franceavv.eastus2.cloudapp.azure.com
    http:
      paths:
      - backend:
          serviceName: sas-relationships
          servicePort: 443
        path: /relationships
  tls:
  - hosts:
    - franceavv.eastus2.cloudapp.azure.com
    secretName: sas-ingress-certificate
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/issuer: sas-viya-issuer
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/affinity-mode: persistent
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/proxy-body-size: 2048m
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/session-cookie-name: sas-ingress-nginx
    nginx.ingress.kubernetes.io/session-cookie-path: /reportAlerts/
    sas.com/component-name: sas-report-services-group
    sas.com/component-version: 4.13.5-20201208.1607409510563
    sas.com/kustomize-base: base
    sas.com/version: 4.13.5
  labels:
    app.kubernetes.io/name: sas-report-alerts
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-report-alerts
  namespace: franceavv
spec:
  rules:
  - host: franceavv.eastus2.cloudapp.azure.com
    http:
      paths:
      - backend:
          serviceName: sas-report-alerts
          servicePort: 443
        path: /reportAlerts
  tls:
  - hosts:
    - franceavv.eastus2.cloudapp.azure.com
    secretName: sas-ingress-certificate
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/issuer: sas-viya-issuer
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/affinity-mode: persistent
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/proxy-body-size: 2048m
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/session-cookie-name: sas-ingress-nginx
    nginx.ingress.kubernetes.io/session-cookie-path: /reportData/
    sas.com/component-name: sas-report-execution
    sas.com/component-version: 2.12.3-20201209.1607496369529
    sas.com/kustomize-base: base
    sas.com/version: 2.12.3
  labels:
    app.kubernetes.io/name: sas-report-data
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-report-data
  namespace: franceavv
spec:
  rules:
  - host: franceavv.eastus2.cloudapp.azure.com
    http:
      paths:
      - backend:
          serviceName: sas-report-data
          servicePort: 443
        path: /reportData
  tls:
  - hosts:
    - franceavv.eastus2.cloudapp.azure.com
    secretName: sas-ingress-certificate
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/issuer: sas-viya-issuer
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/affinity-mode: persistent
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/proxy-body-size: 2048m
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/session-cookie-name: sas-ingress-nginx
    nginx.ingress.kubernetes.io/session-cookie-path: /reportDistribution/
    sas.com/component-name: sas-report-distribution
    sas.com/component-version: 2.52.0-20201106.1604662320003
    sas.com/kustomize-base: base
    sas.com/version: 2.52.0
  labels:
    app.kubernetes.io/name: sas-report-distribution
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-report-distribution
  namespace: franceavv
spec:
  rules:
  - host: franceavv.eastus2.cloudapp.azure.com
    http:
      paths:
      - backend:
          serviceName: sas-report-distribution
          servicePort: 443
        path: /reportDistribution
  tls:
  - hosts:
    - franceavv.eastus2.cloudapp.azure.com
    secretName: sas-ingress-certificate
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/issuer: sas-viya-issuer
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/affinity-mode: persistent
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/proxy-body-size: 2048m
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/session-cookie-name: sas-ingress-nginx
    nginx.ingress.kubernetes.io/session-cookie-path: /reportImages/
    sas.com/component-name: sas-report-services-group
    sas.com/component-version: 4.13.5-20201208.1607409510563
    sas.com/kustomize-base: base
    sas.com/version: 4.13.5
  labels:
    app.kubernetes.io/name: sas-report-images
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-report-images
  namespace: franceavv
spec:
  rules:
  - host: franceavv.eastus2.cloudapp.azure.com
    http:
      paths:
      - backend:
          serviceName: sas-report-images
          servicePort: 443
        path: /reportImages
  tls:
  - hosts:
    - franceavv.eastus2.cloudapp.azure.com
    secretName: sas-ingress-certificate
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/issuer: sas-viya-issuer
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/affinity-mode: persistent
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/proxy-body-size: 2048m
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/session-cookie-name: sas-ingress-nginx
    nginx.ingress.kubernetes.io/session-cookie-path: /reportPackages/
    sas.com/component-name: sas-report-execution
    sas.com/component-version: 2.12.3-20201209.1607496369529
    sas.com/kustomize-base: base
    sas.com/version: 2.12.3
  labels:
    app.kubernetes.io/name: sas-report-packages
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-report-packages
  namespace: franceavv
spec:
  rules:
  - host: franceavv.eastus2.cloudapp.azure.com
    http:
      paths:
      - backend:
          serviceName: sas-report-packages
          servicePort: 443
        path: /reportPackages
  tls:
  - hosts:
    - franceavv.eastus2.cloudapp.azure.com
    secretName: sas-ingress-certificate
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/issuer: sas-viya-issuer
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/affinity-mode: persistent
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/proxy-body-size: 2048m
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/session-cookie-name: sas-ingress-nginx
    nginx.ingress.kubernetes.io/session-cookie-path: /reportRenderer/
    sas.com/component-name: sas-report-renderer
    sas.com/component-version: 1.65.3-20201208.1607482529657
    sas.com/kustomize-base: base
    sas.com/version: 1.65.3
  labels:
    app.kubernetes.io/name: sas-report-renderer
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-report-renderer
  namespace: franceavv
spec:
  rules:
  - host: franceavv.eastus2.cloudapp.azure.com
    http:
      paths:
      - backend:
          serviceName: sas-report-renderer
          servicePort: 443
        path: /reportRenderer
  tls:
  - hosts:
    - franceavv.eastus2.cloudapp.azure.com
    secretName: sas-ingress-certificate
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/issuer: sas-viya-issuer
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/affinity-mode: persistent
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/proxy-body-size: 2048m
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/session-cookie-name: sas-ingress-nginx
    nginx.ingress.kubernetes.io/session-cookie-path: /reportTemplates/
    sas.com/component-name: sas-report-services-group
    sas.com/component-version: 4.13.5-20201208.1607409510563
    sas.com/kustomize-base: base
    sas.com/version: 4.13.5
  labels:
    app.kubernetes.io/name: sas-report-templates
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-report-templates
  namespace: franceavv
spec:
  rules:
  - host: franceavv.eastus2.cloudapp.azure.com
    http:
      paths:
      - backend:
          serviceName: sas-report-templates
          servicePort: 443
        path: /reportTemplates
  tls:
  - hosts:
    - franceavv.eastus2.cloudapp.azure.com
    secretName: sas-ingress-certificate
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/issuer: sas-viya-issuer
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/affinity-mode: persistent
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/proxy-body-size: 2048m
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/session-cookie-name: sas-ingress-nginx
    nginx.ingress.kubernetes.io/session-cookie-path: /reportTransforms/
    sas.com/component-name: sas-report-services-group
    sas.com/component-version: 4.13.5-20201208.1607409510563
    sas.com/kustomize-base: base
    sas.com/version: 4.13.5
  labels:
    app.kubernetes.io/name: sas-report-transforms
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-report-transforms
  namespace: franceavv
spec:
  rules:
  - host: franceavv.eastus2.cloudapp.azure.com
    http:
      paths:
      - backend:
          serviceName: sas-report-transforms
          servicePort: 443
        path: /reportTransforms
  tls:
  - hosts:
    - franceavv.eastus2.cloudapp.azure.com
    secretName: sas-ingress-certificate
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/issuer: sas-viya-issuer
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/affinity-mode: persistent
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/proxy-body-size: 2048m
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/session-cookie-name: sas-ingress-nginx
    nginx.ingress.kubernetes.io/session-cookie-path: /reports/
    sas.com/component-name: sas-report-services-group
    sas.com/component-version: 4.13.5-20201208.1607409510563
    sas.com/kustomize-base: base
    sas.com/version: 4.13.5
  labels:
    app.kubernetes.io/name: sas-reports
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-reports
  namespace: franceavv
spec:
  rules:
  - host: franceavv.eastus2.cloudapp.azure.com
    http:
      paths:
      - backend:
          serviceName: sas-reports
          servicePort: 443
        path: /reports
  tls:
  - hosts:
    - franceavv.eastus2.cloudapp.azure.com
    secretName: sas-ingress-certificate
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/issuer: sas-viya-issuer
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/affinity-mode: persistent
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/configuration-snippet: |
      proxy_set_header X-Sas-Ingress-Request "true";
    nginx.ingress.kubernetes.io/proxy-body-size: 2048m
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/session-cookie-name: sas-ingress-nginx
    nginx.ingress.kubernetes.io/session-cookie-path: /rowSets/
    sas.com/component-name: sas-data-sources
    sas.com/component-version: 3.33.1-20201202.1606937911915
    sas.com/kustomize-base: base
    sas.com/version: 3.33.1
  labels:
    app.kubernetes.io/name: sas-row-sets
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-row-sets
  namespace: franceavv
spec:
  rules:
  - host: franceavv.eastus2.cloudapp.azure.com
    http:
      paths:
      - backend:
          serviceName: sas-row-sets
          servicePort: 443
        path: /rowSets
  tls:
  - hosts:
    - franceavv.eastus2.cloudapp.azure.com
    secretName: sas-ingress-certificate
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/issuer: sas-viya-issuer
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/affinity-mode: persistent
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/proxy-body-size: 2048m
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/session-cookie-name: sas-ingress-nginx
    nginx.ingress.kubernetes.io/session-cookie-path: /scheduler/
    sas.com/component-name: sas-scheduler
    sas.com/component-version: 3.26.11-20201204.1607057236019
    sas.com/kustomize-base: base
    sas.com/version: 3.26.11
  labels:
    app.kubernetes.io/name: sas-scheduler
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-scheduler
  namespace: franceavv
spec:
  rules:
  - host: franceavv.eastus2.cloudapp.azure.com
    http:
      paths:
      - backend:
          serviceName: sas-scheduler
          servicePort: 443
        path: /scheduler
  tls:
  - hosts:
    - franceavv.eastus2.cloudapp.azure.com
    secretName: sas-ingress-certificate
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/issuer: sas-viya-issuer
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/affinity-mode: persistent
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/proxy-body-size: 2048m
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/session-cookie-name: sas-ingress-nginx
    nginx.ingress.kubernetes.io/session-cookie-path: /scoreDefinitions/
    sas.com/component-name: sas-score-definitions
    sas.com/component-version: 2.22.0-20201210.1607645547646
    sas.com/kustomize-base: base
    sas.com/version: 2.22.0
  labels:
    app.kubernetes.io/name: sas-score-definitions
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-score-definitions
  namespace: franceavv
spec:
  rules:
  - host: franceavv.eastus2.cloudapp.azure.com
    http:
      paths:
      - backend:
          serviceName: sas-score-definitions
          servicePort: 443
        path: /scoreDefinitions
  tls:
  - hosts:
    - franceavv.eastus2.cloudapp.azure.com
    secretName: sas-ingress-certificate
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/issuer: sas-viya-issuer
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/affinity-mode: persistent
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/proxy-body-size: 2048m
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/session-cookie-name: sas-ingress-nginx
    nginx.ingress.kubernetes.io/session-cookie-path: /scoreExecution/
    sas.com/component-name: sas-score-execution
    sas.com/component-version: 2.21.0-20201210.1607646388188
    sas.com/kustomize-base: base
    sas.com/version: 2.21.0
  labels:
    app.kubernetes.io/name: sas-score-execution
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-score-execution
  namespace: franceavv
spec:
  rules:
  - host: franceavv.eastus2.cloudapp.azure.com
    http:
      paths:
      - backend:
          serviceName: sas-score-execution
          servicePort: 443
        path: /scoreExecution
  tls:
  - hosts:
    - franceavv.eastus2.cloudapp.azure.com
    secretName: sas-ingress-certificate
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/issuer: sas-viya-issuer
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/affinity-mode: persistent
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/proxy-body-size: 2048m
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/session-cookie-name: sas-ingress-nginx
    nginx.ingress.kubernetes.io/session-cookie-path: /search/
    sas.com/component-name: sas-search
    sas.com/component-version: 2.29.6-20201204.1607057876100
    sas.com/kustomize-base: base
    sas.com/version: 2.29.6
  labels:
    app.kubernetes.io/name: sas-search
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-search
  namespace: franceavv
spec:
  rules:
  - host: franceavv.eastus2.cloudapp.azure.com
    http:
      paths:
      - backend:
          serviceName: sas-search
          servicePort: 443
        path: /search
  tls:
  - hosts:
    - franceavv.eastus2.cloudapp.azure.com
    secretName: sas-ingress-certificate
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/issuer: sas-viya-issuer
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/affinity-mode: persistent
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/proxy-body-size: 2048m
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/session-cookie-name: sas-ingress-nginx
    nginx.ingress.kubernetes.io/session-cookie-path: /searchIndex/
    sas.com/component-name: sas-search
    sas.com/component-version: 2.29.6-20201204.1607057876100
    sas.com/kustomize-base: base
    sas.com/version: 2.29.6
  labels:
    app.kubernetes.io/name: sas-search-index
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-search-index
  namespace: franceavv
spec:
  rules:
  - host: franceavv.eastus2.cloudapp.azure.com
    http:
      paths:
      - backend:
          serviceName: sas-search-index
          servicePort: 443
        path: /searchIndex
  tls:
  - hosts:
    - franceavv.eastus2.cloudapp.azure.com
    secretName: sas-ingress-certificate
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/issuer: sas-viya-issuer
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/affinity-mode: persistent
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/proxy-body-size: 2048m
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/session-cookie-name: sas-ingress-nginx
    nginx.ingress.kubernetes.io/session-cookie-path: /sentimentExecutionProvider/
    sas.com/component-name: sas-sentiment-execution-provider
    sas.com/component-version: 6.2.0-20201202.1606938881164
    sas.com/kustomize-base: base
    sas.com/version: 6.2.0
  labels:
    app.kubernetes.io/name: sas-sentiment-execution-provider
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-sentiment-execution-provider
  namespace: franceavv
spec:
  rules:
  - host: franceavv.eastus2.cloudapp.azure.com
    http:
      paths:
      - backend:
          serviceName: sas-sentiment-execution-provider
          servicePort: 443
        path: /sentimentExecutionProvider
  tls:
  - hosts:
    - franceavv.eastus2.cloudapp.azure.com
    secretName: sas-ingress-certificate
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/issuer: sas-viya-issuer
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/affinity-mode: persistent
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/proxy-body-size: 2048m
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/session-cookie-name: sas-ingress-nginx
    nginx.ingress.kubernetes.io/session-cookie-path: /SASStudio/
    sas.com/component-name: sas-studio-app
    sas.com/component-version: 6.112.11-20201210.1607627608398
    sas.com/kustomize-base: base
    sas.com/version: 6.112.11
  labels:
    app.kubernetes.io/name: sas-studio-app
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-studio-app
  namespace: franceavv
spec:
  rules:
  - host: franceavv.eastus2.cloudapp.azure.com
    http:
      paths:
      - backend:
          serviceName: sas-studio-app
          servicePort: 443
        path: /SASStudio
  tls:
  - hosts:
    - franceavv.eastus2.cloudapp.azure.com
    secretName: sas-ingress-certificate
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/issuer: sas-viya-issuer
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/affinity-mode: persistent
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/proxy-body-size: 2048m
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/session-cookie-name: sas-ingress-nginx
    nginx.ingress.kubernetes.io/session-cookie-path: /subjectContacts/
    sas.com/component-name: sas-subject-contacts
    sas.com/component-version: 0.14.14-20201210.1607643779745
    sas.com/kustomize-base: base
    sas.com/version: 0.14.14
  labels:
    app.kubernetes.io/name: sas-subject-contacts
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-subject-contacts
  namespace: franceavv
spec:
  rules:
  - host: franceavv.eastus2.cloudapp.azure.com
    http:
      paths:
      - backend:
          serviceName: sas-subject-contacts
          servicePort: 443
        path: /subjectContacts
  tls:
  - hosts:
    - franceavv.eastus2.cloudapp.azure.com
    secretName: sas-ingress-certificate
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/issuer: sas-viya-issuer
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/affinity-mode: persistent
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/proxy-body-size: 2048m
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/session-cookie-name: sas-ingress-nginx
    nginx.ingress.kubernetes.io/session-cookie-path: /templates/
    sas.com/component-name: sas-templates
    sas.com/component-version: 1.24.12-20201204.1607058477854
    sas.com/kustomize-base: base
    sas.com/version: 1.24.12
  labels:
    app.kubernetes.io/name: sas-templates
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-templates
  namespace: franceavv
spec:
  rules:
  - host: franceavv.eastus2.cloudapp.azure.com
    http:
      paths:
      - backend:
          serviceName: sas-templates
          servicePort: 443
        path: /templates
  tls:
  - hosts:
    - franceavv.eastus2.cloudapp.azure.com
    secretName: sas-ingress-certificate
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/issuer: sas-viya-issuer
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/affinity-mode: persistent
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/proxy-body-size: 2048m
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/session-cookie-name: sas-ingress-nginx
    nginx.ingress.kubernetes.io/session-cookie-path: /termsManagement/
    sas.com/component-name: sas-text-cas-data-management
    sas.com/component-version: 5.7.0-20201203.1607029718479
    sas.com/kustomize-base: base
    sas.com/version: 5.7.0
  labels:
    app.kubernetes.io/name: sas-terms-management
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-terms-management
  namespace: franceavv
spec:
  rules:
  - host: franceavv.eastus2.cloudapp.azure.com
    http:
      paths:
      - backend:
          serviceName: sas-terms-management
          servicePort: 443
        path: /termsManagement
  tls:
  - hosts:
    - franceavv.eastus2.cloudapp.azure.com
    secretName: sas-ingress-certificate
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/issuer: sas-viya-issuer
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/affinity-mode: persistent
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/proxy-body-size: 2048m
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/session-cookie-name: sas-ingress-nginx
    nginx.ingress.kubernetes.io/session-cookie-path: /textAnalytics/
    sas.com/component-name: sas-text-analytics
    sas.com/component-version: 2.12.1-20201209.1607553801258
    sas.com/kustomize-base: base
    sas.com/version: 2.12.1
  labels:
    app.kubernetes.io/name: sas-text-analytics
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-text-analytics
  namespace: franceavv
spec:
  rules:
  - host: franceavv.eastus2.cloudapp.azure.com
    http:
      paths:
      - backend:
          serviceName: sas-text-analytics
          servicePort: 443
        path: /textAnalytics
  tls:
  - hosts:
    - franceavv.eastus2.cloudapp.azure.com
    secretName: sas-ingress-certificate
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/issuer: sas-viya-issuer
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/affinity-mode: persistent
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/proxy-body-size: 2048m
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/session-cookie-name: sas-ingress-nginx
    nginx.ingress.kubernetes.io/session-cookie-path: /themeContent/
    sas.com/component-name: sas-theme-content
    sas.com/component-version: 1.23.2-20201202.1606918780434
    sas.com/kustomize-base: base
    sas.com/version: 1.23.2
  labels:
    app.kubernetes.io/name: sas-theme-content
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-theme-content
  namespace: franceavv
spec:
  rules:
  - host: franceavv.eastus2.cloudapp.azure.com
    http:
      paths:
      - backend:
          serviceName: sas-theme-content
          servicePort: 443
        path: /themeContent
  tls:
  - hosts:
    - franceavv.eastus2.cloudapp.azure.com
    secretName: sas-ingress-certificate
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/issuer: sas-viya-issuer
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/affinity-mode: persistent
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/proxy-body-size: 2048m
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/session-cookie-name: sas-ingress-nginx
    nginx.ingress.kubernetes.io/session-cookie-path: /SASThemeDesigner/
    sas.com/component-name: sas-theme-designer-app
    sas.com/component-version: 3.25.7-20201204.1607109715258
    sas.com/kustomize-base: base
    sas.com/version: 3.25.7
  labels:
    app.kubernetes.io/name: sas-theme-designer-app
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-theme-designer-app
  namespace: franceavv
spec:
  rules:
  - host: franceavv.eastus2.cloudapp.azure.com
    http:
      paths:
      - backend:
          serviceName: sas-theme-designer-app
          servicePort: 443
        path: /SASThemeDesigner
  tls:
  - hosts:
    - franceavv.eastus2.cloudapp.azure.com
    secretName: sas-ingress-certificate
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/issuer: sas-viya-issuer
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/affinity-mode: persistent
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/proxy-body-size: 2048m
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/session-cookie-name: sas-ingress-nginx
    nginx.ingress.kubernetes.io/session-cookie-path: /themes/
    sas.com/component-name: sas-themes
    sas.com/component-version: 3.23.4-20201202.1606917995194
    sas.com/kustomize-base: base
    sas.com/version: 3.23.4
  labels:
    app.kubernetes.io/name: sas-themes
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-themes
  namespace: franceavv
spec:
  rules:
  - host: franceavv.eastus2.cloudapp.azure.com
    http:
      paths:
      - backend:
          serviceName: sas-themes
          servicePort: 443
        path: /themes
  tls:
  - hosts:
    - franceavv.eastus2.cloudapp.azure.com
    secretName: sas-ingress-certificate
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/issuer: sas-viya-issuer
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/affinity-mode: persistent
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/proxy-body-size: 2048m
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/session-cookie-name: sas-ingress-nginx
    nginx.ingress.kubernetes.io/session-cookie-path: /thumbnails/
    sas.com/component-name: sas-thumbnails
    sas.com/component-version: 1.52.1-20201202.1606940688053
    sas.com/kustomize-base: base
    sas.com/version: 1.52.1
  labels:
    app.kubernetes.io/name: sas-thumbnails
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-thumbnails
  namespace: franceavv
spec:
  rules:
  - host: franceavv.eastus2.cloudapp.azure.com
    http:
      paths:
      - backend:
          serviceName: sas-thumbnails
          servicePort: 443
        path: /thumbnails
  tls:
  - hosts:
    - franceavv.eastus2.cloudapp.azure.com
    secretName: sas-ingress-certificate
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/issuer: sas-viya-issuer
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/affinity-mode: persistent
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/proxy-body-size: 2048m
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/session-cookie-name: sas-ingress-nginx
    nginx.ingress.kubernetes.io/session-cookie-path: /topicExecutionProvider/
    sas.com/component-name: sas-text-topics
    sas.com/component-version: 5.8.0-20201203.1607011531723
    sas.com/kustomize-base: base
    sas.com/version: 5.8.0
  labels:
    app.kubernetes.io/name: sas-topic-execution-provider
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-topic-execution-provider
  namespace: franceavv
spec:
  rules:
  - host: franceavv.eastus2.cloudapp.azure.com
    http:
      paths:
      - backend:
          serviceName: sas-topic-execution-provider
          servicePort: 443
        path: /topicExecutionProvider
  tls:
  - hosts:
    - franceavv.eastus2.cloudapp.azure.com
    secretName: sas-ingress-certificate
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/issuer: sas-viya-issuer
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/affinity-mode: persistent
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/proxy-body-size: 2048m
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/session-cookie-name: sas-ingress-nginx
    nginx.ingress.kubernetes.io/session-cookie-path: /topicManagement/
    sas.com/component-name: sas-topic-management
    sas.com/component-version: 6.8.0-20201202.1606937875615
    sas.com/kustomize-base: base
    sas.com/version: 6.8.0
  labels:
    app.kubernetes.io/name: sas-topic-management
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-topic-management
  namespace: franceavv
spec:
  rules:
  - host: franceavv.eastus2.cloudapp.azure.com
    http:
      paths:
      - backend:
          serviceName: sas-topic-management
          servicePort: 443
        path: /topicManagement
  tls:
  - hosts:
    - franceavv.eastus2.cloudapp.azure.com
    secretName: sas-ingress-certificate
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/issuer: sas-viya-issuer
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/affinity-mode: persistent
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/proxy-body-size: 2048m
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/session-cookie-name: sas-ingress-nginx
    nginx.ingress.kubernetes.io/session-cookie-path: /topics/
    sas.com/component-name: sas-text-topics
    sas.com/component-version: 5.8.0-20201203.1607011531723
    sas.com/kustomize-base: base
    sas.com/version: 5.8.0
  labels:
    app.kubernetes.io/name: sas-topics
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-topics
  namespace: franceavv
spec:
  rules:
  - host: franceavv.eastus2.cloudapp.azure.com
    http:
      paths:
      - backend:
          serviceName: sas-topics
          servicePort: 443
        path: /topics
  tls:
  - hosts:
    - franceavv.eastus2.cloudapp.azure.com
    secretName: sas-ingress-certificate
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/issuer: sas-viya-issuer
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/affinity-mode: persistent
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/proxy-body-size: 2048m
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/session-cookie-name: sas-ingress-nginx
    nginx.ingress.kubernetes.io/session-cookie-path: /transfer/
    sas.com/component-name: sas-transfer
    sas.com/component-version: 2.29.17-20201204.1607058995910
    sas.com/kustomize-base: base
    sas.com/version: 2.29.17
  labels:
    app.kubernetes.io/name: sas-transfer
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-transfer
  namespace: franceavv
spec:
  rules:
  - host: franceavv.eastus2.cloudapp.azure.com
    http:
      paths:
      - backend:
          serviceName: sas-transfer
          servicePort: 443
        path: /transfer
  tls:
  - hosts:
    - franceavv.eastus2.cloudapp.azure.com
    secretName: sas-ingress-certificate
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/issuer: sas-viya-issuer
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/affinity-mode: persistent
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/proxy-body-size: 2048m
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/session-cookie-name: sas-ingress-nginx
    nginx.ingress.kubernetes.io/session-cookie-path: /transformations/
    sas.com/component-name: sas-transformations
    sas.com/component-version: 2.24.9-20201209.1607544521387
    sas.com/kustomize-base: base
    sas.com/version: 2.24.9
  labels:
    app.kubernetes.io/name: sas-transformations
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-transformations
  namespace: franceavv
spec:
  rules:
  - host: franceavv.eastus2.cloudapp.azure.com
    http:
      paths:
      - backend:
          serviceName: sas-transformations
          servicePort: 443
        path: /transformations
  tls:
  - hosts:
    - franceavv.eastus2.cloudapp.azure.com
    secretName: sas-ingress-certificate
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/issuer: sas-viya-issuer
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/affinity-mode: persistent
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/proxy-body-size: 2048m
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/session-cookie-name: sas-ingress-nginx
    nginx.ingress.kubernetes.io/session-cookie-path: /treatmentDefinitions/
    sas.com/component-name: sas-decisions-definitions
    sas.com/component-version: 3.10.15-20201210.1607644445003
    sas.com/kustomize-base: base
    sas.com/version: 3.10.15
  labels:
    app.kubernetes.io/name: sas-treatment-definitions
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-treatment-definitions
  namespace: franceavv
spec:
  rules:
  - host: franceavv.eastus2.cloudapp.azure.com
    http:
      paths:
      - backend:
          serviceName: sas-treatment-definitions
          servicePort: 443
        path: /treatmentDefinitions
  tls:
  - hosts:
    - franceavv.eastus2.cloudapp.azure.com
    secretName: sas-ingress-certificate
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/issuer: sas-viya-issuer
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/affinity-mode: persistent
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/proxy-body-size: 2048m
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/session-cookie-name: sas-ingress-nginx
    nginx.ingress.kubernetes.io/session-cookie-path: /types/
    sas.com/component-name: sas-types
    sas.com/component-version: 3.16.1-20201130.1606757966415
    sas.com/kustomize-base: base
    sas.com/version: 3.16.1
  labels:
    app.kubernetes.io/name: sas-types
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-types
  namespace: franceavv
spec:
  rules:
  - host: franceavv.eastus2.cloudapp.azure.com
    http:
      paths:
      - backend:
          serviceName: sas-types
          servicePort: 443
        path: /types
  tls:
  - hosts:
    - franceavv.eastus2.cloudapp.azure.com
    secretName: sas-ingress-certificate
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/issuer: sas-viya-issuer
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/affinity-mode: persistent
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/proxy-body-size: 2048m
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/session-cookie-name: sas-ingress-nginx
    nginx.ingress.kubernetes.io/session-cookie-path: /visualAnalyticsAdministration/
    sas.com/component-name: sas-visual-analytics-administration
    sas.com/component-version: 1.53.1-20201202.1606941457830
    sas.com/kustomize-base: base
    sas.com/version: 1.53.1
  labels:
    app.kubernetes.io/name: sas-visual-analytics-administration
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-visual-analytics-administration
  namespace: franceavv
spec:
  rules:
  - host: franceavv.eastus2.cloudapp.azure.com
    http:
      paths:
      - backend:
          serviceName: sas-visual-analytics-administration
          servicePort: 443
        path: /visualAnalyticsAdministration
  tls:
  - hosts:
    - franceavv.eastus2.cloudapp.azure.com
    secretName: sas-ingress-certificate
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/issuer: sas-viya-issuer
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/affinity-mode: persistent
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/proxy-body-size: 2048m
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/rewrite-target: /SASVisualAnalytics/$2
    nginx.ingress.kubernetes.io/session-cookie-name: sas-ingress-nginx
    nginx.ingress.kubernetes.io/session-cookie-path: /SASVisualAnalytics/
    sas.com/component-name: sas-visual-analytics-app
    sas.com/component-version: 2.54.0-20201209.1607498056870
    sas.com/kustomize-base: base
    sas.com/version: 2.54.0
  labels:
    app.kubernetes.io/name: sas-visual-analytics-app
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-visual-analytics-app
  namespace: franceavv
spec:
  rules:
  - host: franceavv.eastus2.cloudapp.azure.com
    http:
      paths:
      - backend:
          serviceName: sas-visual-analytics-app
          servicePort: 443
        path: /SASVisualAnalytics(/|$)(.*)
      - backend:
          serviceName: sas-visual-analytics-app
          servicePort: 443
        path: /SASReportViewer
  tls:
  - hosts:
    - franceavv.eastus2.cloudapp.azure.com
    secretName: sas-ingress-certificate
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/issuer: sas-viya-issuer
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/affinity-mode: persistent
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/proxy-body-size: 2048m
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/session-cookie-name: sas-ingress-nginx
    nginx.ingress.kubernetes.io/session-cookie-path: /webDataAccess/
    sas.com/component-name: sas-web-data-access
    sas.com/component-version: 1.20.0-20201209.1607532765066
    sas.com/kustomize-base: base
    sas.com/version: 1.20.0
  labels:
    app.kubernetes.io/name: sas-web-data-access
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-web-data-access
  namespace: franceavv
spec:
  rules:
  - host: franceavv.eastus2.cloudapp.azure.com
    http:
      paths:
      - backend:
          serviceName: sas-web-data-access
          servicePort: 443
        path: /webDataAccess
  tls:
  - hosts:
    - franceavv.eastus2.cloudapp.azure.com
    secretName: sas-ingress-certificate
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/issuer: sas-viya-issuer
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/affinity-mode: persistent
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/proxy-body-size: 2048m
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/session-cookie-name: sas-ingress-nginx
    nginx.ingress.kubernetes.io/session-cookie-path: /workflow/
    sas.com/component-name: sas-workflow
    sas.com/component-version: 3.16.4-20201204.1607059513666
    sas.com/kustomize-base: base
    sas.com/version: 3.16.4
  labels:
    app.kubernetes.io/name: sas-workflow
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-workflow
  namespace: franceavv
spec:
  rules:
  - host: franceavv.eastus2.cloudapp.azure.com
    http:
      paths:
      - backend:
          serviceName: sas-workflow
          servicePort: 443
        path: /workflow
  tls:
  - hosts:
    - franceavv.eastus2.cloudapp.azure.com
    secretName: sas-ingress-certificate
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/issuer: sas-viya-issuer
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/affinity-mode: persistent
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/proxy-body-size: 2048m
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/session-cookie-name: sas-ingress-nginx
    nginx.ingress.kubernetes.io/session-cookie-path: /workflowDefinition/
    sas.com/component-name: sas-workflow-definition-history
    sas.com/component-version: 2.7.8-20201212.1607769254594
    sas.com/kustomize-base: base
    sas.com/version: 2.7.8
  labels:
    app.kubernetes.io/name: sas-workflow-definition
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-workflow-definition
  namespace: franceavv
spec:
  rules:
  - host: franceavv.eastus2.cloudapp.azure.com
    http:
      paths:
      - backend:
          serviceName: sas-workflow-definition
          servicePort: 443
        path: /workflowDefinition
  tls:
  - hosts:
    - franceavv.eastus2.cloudapp.azure.com
    secretName: sas-ingress-certificate
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/issuer: sas-viya-issuer
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/affinity-mode: persistent
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/proxy-body-size: 2048m
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/session-cookie-name: sas-ingress-nginx
    nginx.ingress.kubernetes.io/session-cookie-path: /workflowHistory/
    sas.com/component-name: sas-workflow-definition-history
    sas.com/component-version: 2.7.8-20201212.1607769254594
    sas.com/kustomize-base: base
    sas.com/version: 2.7.8
  labels:
    app.kubernetes.io/name: sas-workflow-history
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-workflow-history
  namespace: franceavv
spec:
  rules:
  - host: franceavv.eastus2.cloudapp.azure.com
    http:
      paths:
      - backend:
          serviceName: sas-workflow-history
          servicePort: 443
        path: /workflowHistory
  tls:
  - hosts:
    - franceavv.eastus2.cloudapp.azure.com
    secretName: sas-ingress-certificate
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/issuer: sas-viya-issuer
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/affinity-mode: persistent
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/proxy-body-size: 2048m
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/session-cookie-name: sas-ingress-nginx
    nginx.ingress.kubernetes.io/session-cookie-path: /SASWorkflowManager/
    sas.com/component-name: sas-workflow-manager-app
    sas.com/component-version: 2.11.0-20201210.1607647072535
    sas.com/kustomize-base: base
    sas.com/version: 2.11.0
  labels:
    app.kubernetes.io/name: sas-workflow-manager-app
    sas.com/admin: namespace
    sas.com/deployment: sas-viya
  name: sas-workflow-manager-app
  namespace: franceavv
spec:
  rules:
  - host: franceavv.eastus2.cloudapp.azure.com
    http:
      paths:
      - backend:
          serviceName: sas-workflow-manager-app
          servicePort: 443
        path: /SASWorkflowManager
  tls:
  - hosts:
    - franceavv.eastus2.cloudapp.azure.com
    secretName: sas-ingress-certificate
---
apiVersion: viya.sas.com/v1alpha1
kind: CASDeployment
metadata:
  annotations:
    sas.com/component-name: sas-cas-operator
    sas.com/component-version: 2.8.2-20201119.1605811301533
    sas.com/config-init-mode: initcontainer
    sas.com/sas-access-config: "true"
    sas.com/version: 2.8.2
  labels:
    app: sas-cas-operator
    app.kubernetes.io/instance: default
    app.kubernetes.io/managed-by: sas-cas-operator
    app.kubernetes.io/name: cas
    sas.com/admin: namespace
    sas.com/backup-role: provider
    sas.com/cas-server-default: "true"
    sas.com/deployment: sas-viya
    workload.sas.com/class: cas
  name: default
  namespace: franceavv
spec:
  backupControllers: 0
  controllerTemplate:
    metadata:
      annotations:
        prometheus.io/scheme: https
        sas.com/certificate-file-format: pem
        sas.com/tls-enabled-ports: all
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: In
                values:
                - cas
            weight: 100
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: NotIn
                values:
                - compute
                - stateless
                - stateful
            weight: 1
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.azure.com/mode
                operator: NotIn
                values:
                - system
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - sas-cas-server
              topologyKey: kubernetes.io/hostname
            weight: 100
      containers:
      - env:
        - name: SAS_LICENSE
          valueFrom:
            secretKeyRef:
              key: SAS_LICENSE
              name: sas-cas-license
        - name: CONSUL_HTTP_ADDR
          value: https://localhost:8500
        - name: CASCFG_DQLOCALE
          value: ENUSA
        - name: CASCFG_DQSETUPLOC
          value: QKB CI 32
        envFrom:
        - configMapRef:
            name: sas-shared-config-49d8hthtb5
        - configMapRef:
            name: sas-java-config-t7t5thbgkd
        - configMapRef:
            name: sas-access-config-hmmdg9cckh
        - configMapRef:
            name: sas-cas-config-f24k2hg6d5
        - configMapRef:
            name: sas-deployment-metadata-t4927tg597
        - secretRef:
            name: sas-consul-client
        - configMapRef:
            name: sas-restore-job-parameters-6dh8htc9fg
        - configMapRef:
            name: sas-tls-config-99f79t29t5
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-cas-server:1.11.6-20201214.1607945279618
        name: cas
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /internal/state
            port: 8777
            scheme: HTTPS
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          requests: {}
        volumeMounts:
        - mountPath: /cas/permstore
          name: cas-default-permstore-volume
        - mountPath: /cas/data
          name: cas-default-data-volume
        - mountPath: /cas/cache
          name: cas-default-cache-volume
        - mountPath: /cas/config
          name: cas-default-config-volume
        - mountPath: /tmp
          name: cas-tmp-volume
          subPath: tmp
        - mountPath: /cas/license
          name: cas-license-volume
        - mountPath: /sasviyabackup
          name: backup
        - mountPath: /security
          name: security
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/cacerts
          name: security
          subPath: cacerts
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/private
          name: security
          subPath: private
        - mountPath: /rdutil
          name: sas-rdutil-dir
        - mountPath: /opt/sas/viya/home/share/refdata/qkb
          name: sas-quality-knowledge-base-volume
      - env:
        - name: BACKUP_MOUNT_LOCATION
          value: /sasviyabackup
        - name: BACKUP_SOURCE_MOUNTS
          value: cas-default-data-volume
        - name: cas-default-data-volume
          value: /cas/data
        - name: NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.labels['casoperator.sas.com/cas-env-consul-name']
        - name: CAS_NODE_TYPE
          valueFrom:
            fieldRef:
              fieldPath: metadata.labels['casoperator.sas.com/node-type']
        - name: CAS_CONTROLLER_ACTIVE
          valueFrom:
            fieldRef:
              fieldPath: metadata.labels['casoperator.sas.com/controller-active']
        - name: CAS_CFG_MODE
          valueFrom:
            fieldRef:
              fieldPath: metadata.labels['casoperator.sas.com/cas-cfg-mode']
        - name: CAS_SERVICE_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.labels['casoperator.sas.com/service-name']
        envFrom:
        - configMapRef:
            name: sas-go-config-7hc79bmf8m
        - configMapRef:
            name: sas-shared-config-49d8hthtb5
        - configMapRef:
            name: sas-java-config-t7t5thbgkd
        - configMapRef:
            name: sas-backup-agent-parameters-hkfmm67f7d
        - secretRef:
            name: sas-consul-client
        - configMapRef:
            name: sas-tls-config-99f79t29t5
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-backup-agent:2.16.0-20201209.1607495194463
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - bash
              - -c
              - kill -SIGKILL $(ps -Af | grep 'backup-agent'  | grep -v grep | awk '{print $2}')
        name: sas-backup-agent
        resources:
          limits:
            cpu: 100m
            memory: 2Gi
          requests:
            cpu: 100m
            memory: 2Gi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /sasviyabackup
          name: backup
        - mountPath: /cas/data
          name: cas-default-data-volume
        - mountPath: /security
          name: security
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/cacerts
          name: security
          subPath: cacerts
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/private
          name: security
          subPath: private
      - env:
        - name: CONSUL_SERVER_LIST
          value: sas-consul-server
        - name: CONSUL_SERVER_FLAG
          value: "false"
        - name: CONSUL_CLIENT_ADDRESS
          value: 127.0.0.1
        - name: CONSUL_DATACENTER_NAME
          value: viya
        - name: CONSUL_TOKENS_ENCRYPTION
          valueFrom:
            secretKeyRef:
              key: CONSUL_TOKENS_ENCRYPTION
              name: sas-consul-management
        envFrom:
        - configMapRef:
            name: sas-shared-config-49d8hthtb5
        - configMapRef:
            name: sas-go-config-7hc79bmf8m
        - secretRef:
            name: sas-consul-client
        - configMapRef:
            name: sas-tls-config-99f79t29t5
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-consul-server:1.310003.3-20201211.1607715119836
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - /bin/sh
              - -c
              - PROTO="http"; [[ ! -z ${SAS_CERTIFICATE_FILE+x} ]] && export PROTO="https"; CONSUL_HTTP_ADDR=$PROTO://localhost:8500; /opt/sas/viya/home/bin/consul leave && sleep 5;
        name: sas-consul-agent
        ports:
        - containerPort: 8300
          name: server
          protocol: TCP
        - containerPort: 8301
          name: serflan-tcp
          protocol: TCP
        - containerPort: 8301
          name: serflan-udp
          protocol: UDP
        - containerPort: 8500
          name: http
          protocol: TCP
        readinessProbe:
          exec:
            command:
            - sh
            - -c
            - if [ -z ${SAS_CERTIFICATE_FILE} ]; then reply=$(curl -s -L -o /dev/null -w %{http_code} http://localhost:${SAS_CONSUL_SERVER_SERVICE_PORT_HTTP}/); else reply=$(curl -s -L -o /dev/null -w %{http_code} --cacert ${SAS_TRUSTED_CA_CERTIFICATES_PEM_FILE} https://localhost:${SAS_CONSUL_SERVER_SERVICE_PORT_HTTP}/); fi; if [ $reply -ne 200 ]; then exit 1; fi; test -f /tmp/healthy;
        resources:
          limits:
            cpu: 100m
            memory: 2Gi
          requests:
            cpu: 100m
            memory: 2Gi
        volumeMounts:
        - mountPath: /opt/sas/viya/config/etc/consul.d
          name: consul-tmp-volume
          subPath: consul.d
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/tokens/consul/default
          name: consul-tmp-volume
          subPath: consul-tokens
        - mountPath: /opt/sas/viya/config/tmp/sas-consul
          name: consul-tmp-volume
          subPath: sas-consul
        - mountPath: /tmp
          name: consul-tmp-volume
          subPath: tmp
        - mountPath: /consul/data/
          name: consul-tmp-volume
          subPath: data
        - mountPath: /security
          name: security
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/cacerts
          name: security
          subPath: cacerts
        - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/private
          name: security
          subPath: private
      imagePullSecrets:
      - name: sas-image-pull-secrets-4m8cc729k8
      initContainers:
      - env:
        - name: KUBE_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: SAS_CERTFRAME_TOKEN_DIR
          value: /certframe-token
        - name: SAS_ADDITIONAL_CA_CERTIFICATES_DIR
          value: /customer-provided-ca-certificates
        - name: SAS_CERTIFICATE_PRIVATE_KEY_PERMISSIONS
          value: "644"
        envFrom:
        - configMapRef:
            name: sas-certframe-ingress-certificate-config-cmm2t44t88
        - configMapRef:
            name: sas-certframe-user-config-c4ch2c59m7
        - configMapRef:
            name: sas-certframe-config-ctgg29gf7t
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-certframe:3.9.0-20201203.1607016443086
        name: sas-certframe
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 500m
            memory: 500Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /certframe-token
          name: certframe-token
        - mountPath: /security
          name: security
        - mountPath: /customer-provided-ca-certificates
          name: customer-provided-ca-certificates
      - env:
        - name: SSL_CERT_FILE
          value: /security/trustedcerts.pem
        envFrom:
        - configMapRef:
            name: sas-go-config-7hc79bmf8m
        - configMapRef:
            name: sas-shared-config-49d8hthtb5
        - secretRef:
            name: sas-consul-client
        image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-config-init:1.2.6-20200928.1601307316387
        name: sas-config-init
        resources:
          limits:
            cpu: 1
            memory: 2Gi
        volumeMounts:
        - mountPath: /cas/config/
          name: cas-default-config-volume
        - mountPath: /security
          name: security
      securityContext:
        fsGroup: 1001
        runAsGroup: 1001
        runAsUser: 1001
      serviceAccountName: sas-cas-server
      tolerations:
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: cas
      volumes:
      - name: cas-default-permstore-volume
        persistentVolumeClaim:
          claimName: cas-default-permstore
      - name: cas-default-data-volume
        persistentVolumeClaim:
          claimName: cas-default-data
      - emptyDir: {}
        name: cas-default-cache-volume
      - emptyDir: {}
        name: cas-default-config-volume
      - emptyDir: {}
        name: cas-tmp-volume
      - name: cas-license-volume
        secret:
          items:
          - key: SAS_LICENSE
            path: license.sas
          secretName: sas-cas-license
      - name: backup
        persistentVolumeClaim:
          claimName: sas-cas-backup-data
      - emptyDir: {}
        name: consul-tmp-volume
      - name: certframe-token
        secret:
          secretName: sas-certframe-token
      - emptyDir: {}
        name: security
      - configMap:
          name: sas-customer-provided-ca-certificates-29kdmk686c
        name: customer-provided-ca-certificates
      - name: sas-quality-knowledge-base-volume
        persistentVolumeClaim:
          claimName: sas-quality-knowledge-base
      - configMap:
          defaultMode: 493
          name: sas-qkb-management-scripts
        name: sas-rdutil-dir
  ingressTemplate:
    metadata:
      annotations:
        nginx.ingress.kubernetes.io/backend-protocol: HTTPS
        nginx.ingress.kubernetes.io/proxy-body-size: 2048m
        nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
      labels: {}
    spec:
      rules:
      - host: franceavv.eastus2.cloudapp.azure.com
      tls:
      - hosts:
        - franceavv.eastus2.cloudapp.azure.com
        secretName: sas-ingress-certificate
  publishHTTPIngress: true
  workerTemplate: null
  workers: 3
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  annotations:
    sas.com/component-name: sas-cas-operator
    sas.com/component-version: 2.8.2-20201119.1605811301533
    sas.com/version: 2.8.2
  labels:
    app.kubernetes.io/part-of: cas
    sas.com/admin: cluster-local
    sas.com/backup-role: provider
    sas.com/cas-instance: default
    sas.com/cas-pvc: data
    sas.com/deployment: sas-viya
  name: cas-default-data
  namespace: franceavv
spec:
  accessModes:
  - ReadWriteMany
  resources:
    requests:
      storage: 8Gi
  storageClassName: sas-azurefile
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  annotations:
    sas.com/component-name: sas-cas-operator
    sas.com/component-version: 2.8.2-20201119.1605811301533
    sas.com/version: 2.8.2
  labels:
    app.kubernetes.io/part-of: cas
    sas.com/admin: cluster-local
    sas.com/backup-role: provider
    sas.com/cas-instance: default
    sas.com/cas-pvc: permstore
    sas.com/deployment: sas-viya
  name: cas-default-permstore
  namespace: franceavv
spec:
  accessModes:
  - ReadWriteMany
  resources:
    requests:
      storage: 100Mi
  storageClassName: sas-azurefile
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  annotations:
    sas.com/component-name: sas-cas-operator
    sas.com/component-version: 2.8.2-20201119.1605811301533
    sas.com/version: 2.8.2
  labels:
    app.kubernetes.io/part-of: cas
    sas.com/admin: cluster-local
    sas.com/backup-role: storage
    sas.com/cas-pvc: backup
    sas.com/deployment: sas-viya
  name: sas-cas-backup-data
  namespace: franceavv
spec:
  accessModes:
  - ReadWriteMany
  resources:
    requests:
      storage: 8Gi
  storageClassName: sas-azurefile
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  annotations:
    sas.com/component-name: sas-backup-job
    sas.com/component-version: 1.9.0-20201209.1607495417341
    sas.com/version: 1.9.0
  labels:
    sas.com/admin: cluster-local
    sas.com/backup-role: storage
    sas.com/deployment: sas-viya
  name: sas-common-backup-data
  namespace: franceavv
spec:
  accessModes:
  - ReadWriteMany
  resources:
    requests:
      storage: 25Gi
  storageClassName: sas-azurefile
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  annotations:
    sas.com/component-name: sas-data-quality-services
    sas.com/component-version: 3.8.1-20201202.1606939069890
    sas.com/version: 3.8.1
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
  name: sas-quality-knowledge-base
  namespace: franceavv
spec:
  accessModes:
  - ReadWriteMany
  resources:
    requests:
      storage: 8Gi
  storageClassName: sas-azurefile
---
apiVersion: v1
kind: PodTemplate
metadata:
  annotations:
    launcher.sas.com/jobContainerName: sas-programming-environment
    sas.com/certificate-file-format: pem
    sas.com/component-name: sas-batch
    sas.com/component-version: 1.4.0-20201214.1607958362320
    sas.com/config-init-mode: initcontainer
    sas.com/kustomize-base: podtemplate
    sas.com/version: 1.4.0
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
    sas.com/template-intent: sas-launcher
    workload.sas.com/class: compute
  name: sas-batch-pod-template
  namespace: franceavv
template:
  metadata:
    annotations:
      sas.com/certificate-file-format: pem
      sas.com/tls-enabled-ports: all
      seccomp.security.alpha.kubernetes.io/pod: runtime/default
    labels:
      launcher.sas.com/job-type: sas-batch-job
  spec:
    affinity:
      nodeAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - preference:
            matchExpressions:
            - key: workload.sas.com/class
              operator: In
              values:
              - compute
            matchFields: []
          weight: 100
        - preference:
            matchExpressions:
            - key: workload.sas.com/class
              operator: NotIn
              values:
              - cas
              - connect
              - stateless
              - stateful
            matchFields: []
          weight: 50
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchExpressions:
            - key: kubernetes.azure.com/mode
              operator: NotIn
              values:
              - system
            matchFields: []
    containers:
    - args: []
      command: []
      env:
      - name: SAS_LICENSE
        valueFrom:
          secretKeyRef:
            key: SAS_LICENSE
            name: sas-license-mg9k2t69t7
      - name: SAS_URL_SERVICE_TEMPLATE
        valueFrom:
          configMapKeyRef:
            key: SAS_URL_SERVICE_TEMPLATE
            name: sas-shared-config-49d8hthtb5
      - name: SASCLOUDNATIVE
        value: "1"
      - name: HOSTIP
        valueFrom:
          fieldRef:
            fieldPath: status.podIP
      - name: SASREDIRSASOPTS
        value: -noauth
      - name: SASREDIRCMDOPTS
        value: -addshell -noauth
      envFrom:
      - configMapRef:
          name: sas-deployment-metadata-t4927tg597
      - configMapRef:
          name: sas-shared-config-49d8hthtb5
      - configMapRef:
          name: sas-launcher-lockdown-config-g96dc2km8g
      - configMapRef:
          name: sas-tls-config-99f79t29t5
      image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-programming-environment:1.11.15-20201217.1608211744448
      name: sas-batch
      ports: []
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          add: []
          drop:
          - ALL
        privileged: false
        readOnlyRootFilesystem: true
      volumeDevices: []
      volumeMounts:
      - mountPath: /tmp
        name: tmp
      - mountPath: /sasuser
        name: sasuser
      - mountPath: /sashelp
        name: sashelp
      - mountPath: /config
        name: config
      - mountPath: /viya
        name: viya
      - mountPath: /opt/sas/viya/config/var
        name: job-data
      - mountPath: /security
        name: security
      - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/cacerts
        name: security
        subPath: cacerts
      - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/private
        name: security
        subPath: private
    hostAliases: []
    imagePullSecrets:
    - name: sas-image-pull-secrets-4m8cc729k8
    initContainers:
    - env:
      - name: KUBE_POD_NAME
        valueFrom:
          fieldRef:
            fieldPath: metadata.name
      - name: SAS_CERTFRAME_TOKEN_DIR
        value: /certframe-token
      - name: SAS_ADDITIONAL_CA_CERTIFICATES_DIR
        value: /customer-provided-ca-certificates
      envFrom:
      - configMapRef:
          name: sas-certframe-ingress-certificate-config-cmm2t44t88
      - configMapRef:
          name: sas-certframe-user-config-c4ch2c59m7
      - configMapRef:
          name: sas-certframe-config-ctgg29gf7t
      image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-certframe:3.9.0-20201203.1607016443086
      name: sas-certframe
      resources:
        limits:
          cpu: 500m
          memory: 500Mi
        requests:
          cpu: 50m
          memory: 50Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        privileged: false
        readOnlyRootFilesystem: true
      volumeMounts:
      - mountPath: /certframe-token
        name: certframe-token
      - mountPath: /security
        name: security
      - mountPath: /customer-provided-ca-certificates
        name: customer-provided-ca-certificates
    - args: []
      command: []
      env:
      - name: SSL_CERT_FILE
        value: /security/trustedcerts.pem
      envFrom:
      - configMapRef:
          name: sas-go-config-7hc79bmf8m
      - configMapRef:
          name: sas-shared-config-49d8hthtb5
      - secretRef:
          name: sas-consul-client
      - configMapRef:
          name: sas-batch-server-config-84t27mcd68
      image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-config-init:1.2.6-20200928.1601307316387
      name: sas-config-init
      ports: []
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          add: []
          drop:
          - ALL
        privileged: false
        readOnlyRootFilesystem: true
      volumeDevices: []
      volumeMounts:
      - mountPath: /security
        name: security
      - mountPath: /tmp
        name: config-init-tmp
      - mountPath: /config
        name: config
    readinessGates: []
    securityContext:
      runAsNonRoot: true
      supplementalGroups: []
      sysctls: []
    tolerations:
    - effect: NoSchedule
      key: workload.sas.com/class
      operator: Equal
      value: compute
    volumes:
    - name: certframe-token
      secret:
        secretName: sas-certframe-token
    - emptyDir: {}
      name: security
    - configMap:
        name: sas-customer-provided-ca-certificates-29kdmk686c
      name: customer-provided-ca-certificates
    - emptyDir: {}
      name: tmp
    - emptyDir: {}
      name: config-init-tmp
    - emptyDir: {}
      name: sasuser
    - emptyDir: {}
      name: sashelp
    - emptyDir: {}
      name: config
    - emptyDir: {}
      name: viya
    - emptyDir: {}
      name: job-data
---
apiVersion: v1
kind: PodTemplate
metadata:
  annotations:
    launcher.sas.com/jobContainerName: sas-programming-environment
    sas.com/certificate-file-format: pem
    sas.com/component-name: sas-compute
    sas.com/component-version: 1.9.21-20201214.1607967809598
    sas.com/config-init-mode: initcontainer
    sas.com/kustomize-base: podtemplate
    sas.com/sas-access-config: "true"
    sas.com/version: 1.9.21
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
    sas.com/template-intent: sas-launcher
    workload.sas.com/class: compute
  name: sas-compute-job-config
  namespace: franceavv
template:
  metadata:
    annotations:
      sas.com/certificate-file-format: pem
      sas.com/tls-enabled-ports: all
      seccomp.security.alpha.kubernetes.io/pod: runtime/default
      sidecar.istio.io/inject: "false"
    labels:
      launcher.sas.com/job-type: compute-server
  spec:
    affinity:
      nodeAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - preference:
            matchExpressions:
            - key: workload.sas.com/class
              operator: In
              values:
              - compute
            matchFields: []
          weight: 100
        - preference:
            matchExpressions:
            - key: workload.sas.com/class
              operator: NotIn
              values:
              - cas
              - connect
              - stateless
              - stateful
            matchFields: []
          weight: 50
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchExpressions:
            - key: kubernetes.azure.com/mode
              operator: NotIn
              values:
              - system
            matchFields: []
    containers:
    - args: []
      command: []
      env:
      - name: SAS_LICENSE
        valueFrom:
          secretKeyRef:
            key: SAS_LICENSE
            name: sas-license-mg9k2t69t7
      - name: SAS_URL_SERVICE_TEMPLATE
        valueFrom:
          configMapKeyRef:
            key: SAS_URL_SERVICE_TEMPLATE
            name: sas-shared-config-49d8hthtb5
      - name: SASCLOUDNATIVE
        value: "1"
      - name: LAUNCH_AS_JOB
        value: "true"
      - name: COMPUTESERVER_USER_CONFIG
        value: /config
      - name: COMPUTESERVER_VAR_PATH
        value: /viya
      envFrom:
      - configMapRef:
          name: sas-access-config-hmmdg9cckh
      - configMapRef:
          name: sas-deployment-metadata-t4927tg597
      - configMapRef:
          name: sas-compute-server-config-2779d7ttf7
      - configMapRef:
          name: sas-shared-config-49d8hthtb5
      - configMapRef:
          name: sas-tls-config-99f79t29t5
      image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-programming-environment:1.11.15-20201217.1608211744448
      name: sas-programming-environment
      ports: []
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          add: []
          drop:
          - ALL
        privileged: false
        readOnlyRootFilesystem: true
      volumeDevices: []
      volumeMounts:
      - mountPath: /tmp
        name: tmp
      - mountPath: /sasuser
        name: sasuser
      - mountPath: /sashelp
        name: sashelp
      - mountPath: /config
        name: config
      - mountPath: /viya
        name: viya
      - mountPath: /security
        name: security
      - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/cacerts
        name: security
        subPath: cacerts
      - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/private
        name: security
        subPath: private
      - mountPath: /rdutil
        name: sas-rdutil-dir
      - mountPath: /opt/sas/viya/home/share/refdata/qkb
        name: sas-quality-knowledge-base-volume
    hostAliases: []
    imagePullSecrets:
    - name: sas-image-pull-secrets-4m8cc729k8
    initContainers:
    - env:
      - name: KUBE_POD_NAME
        valueFrom:
          fieldRef:
            fieldPath: metadata.name
      - name: SAS_CERTFRAME_TOKEN_DIR
        value: /certframe-token
      - name: SAS_ADDITIONAL_CA_CERTIFICATES_DIR
        value: /customer-provided-ca-certificates
      envFrom:
      - configMapRef:
          name: sas-certframe-ingress-certificate-config-cmm2t44t88
      - configMapRef:
          name: sas-certframe-user-config-c4ch2c59m7
      - configMapRef:
          name: sas-certframe-config-ctgg29gf7t
      image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-certframe:3.9.0-20201203.1607016443086
      name: sas-certframe
      resources:
        limits:
          cpu: 500m
          memory: 500Mi
        requests:
          cpu: 50m
          memory: 50Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        privileged: false
        readOnlyRootFilesystem: true
      volumeMounts:
      - mountPath: /certframe-token
        name: certframe-token
      - mountPath: /security
        name: security
      - mountPath: /customer-provided-ca-certificates
        name: customer-provided-ca-certificates
    - args: []
      command: []
      env:
      - name: SSL_CERT_FILE
        value: /security/trustedcerts.pem
      envFrom:
      - configMapRef:
          name: sas-go-config-7hc79bmf8m
      - configMapRef:
          name: sas-shared-config-49d8hthtb5
      - secretRef:
          name: sas-consul-client
      - configMapRef:
          name: sas-compute-server-config-2779d7ttf7
      image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-config-init:1.2.6-20200928.1601307316387
      name: sas-config-init
      ports: []
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          add: []
          drop:
          - ALL
        privileged: false
        readOnlyRootFilesystem: true
      volumeDevices: []
      volumeMounts:
      - mountPath: /security
        name: security
      - mountPath: /tmp
        name: config-init-tmp
      - mountPath: /config
        name: config
    readinessGates: []
    securityContext:
      runAsNonRoot: true
      supplementalGroups: []
      sysctls: []
    tolerations:
    - effect: NoSchedule
      key: workload.sas.com/class
      operator: Equal
      value: compute
    volumes:
    - name: certframe-token
      secret:
        secretName: sas-certframe-token
    - emptyDir: {}
      name: security
    - configMap:
        name: sas-customer-provided-ca-certificates-29kdmk686c
      name: customer-provided-ca-certificates
    - emptyDir: {}
      name: tmp
    - emptyDir: {}
      name: config-init-tmp
    - emptyDir: {}
      name: sasuser
    - emptyDir: {}
      name: sashelp
    - emptyDir: {}
      name: config
    - emptyDir: {}
      name: viya
    - name: sas-quality-knowledge-base-volume
      persistentVolumeClaim:
        claimName: sas-quality-knowledge-base
    - configMap:
        defaultMode: 493
        name: sas-qkb-management-scripts
      name: sas-rdutil-dir
---
apiVersion: v1
kind: PodTemplate
metadata:
  annotations:
    launcher.sas.com/jobContainerName: sas-programming-environment
    sas.com/certificate-file-format: pem
    sas.com/component-name: sas-connect
    sas.com/component-version: 4.15.2-20201211.1607717177992
    sas.com/config-init-mode: initcontainer
    sas.com/kustomize-base: podtemplate
    sas.com/sas-access-config: "true"
    sas.com/version: 4.15.2
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
    sas.com/template-intent: sas-launcher
    workload.sas.com/class: compute
  name: sas-connect-pod-template
  namespace: franceavv
template:
  metadata:
    annotations:
      sas.com/certificate-file-format: pem
      sas.com/tls-enabled-ports: all
      seccomp.security.alpha.kubernetes.io/pod: runtime/default
      sidecar.istio.io/inject: "false"
  spec:
    affinity:
      nodeAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - preference:
            matchExpressions:
            - key: workload.sas.com/class
              operator: In
              values:
              - compute
            matchFields: []
          weight: 100
        - preference:
            matchExpressions:
            - key: workload.sas.com/class
              operator: NotIn
              values:
              - cas
              - connect
              - stateless
              - stateful
            matchFields: []
          weight: 50
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchExpressions:
            - key: kubernetes.azure.com/mode
              operator: NotIn
              values:
              - system
            matchFields: []
    containers:
    - args: []
      command: []
      env:
      - name: SAS_LICENSE
        valueFrom:
          secretKeyRef:
            key: SAS_LICENSE
            name: sas-license-mg9k2t69t7
      - name: SAS_URL_SERVICE_TEMPLATE
        valueFrom:
          configMapKeyRef:
            key: SAS_URL_SERVICE_TEMPLATE
            name: sas-shared-config-49d8hthtb5
      - name: SASCLOUDNATIVE
        value: "1"
      envFrom:
      - configMapRef:
          name: sas-access-config-hmmdg9cckh
      - configMapRef:
          name: sas-deployment-metadata-t4927tg597
      - configMapRef:
          name: sas-launcher-lockdown-config-g96dc2km8g
      - configMapRef:
          name: sas-shared-config-49d8hthtb5
      - configMapRef:
          name: sas-tls-config-99f79t29t5
      image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-programming-environment:1.11.15-20201217.1608211744448
      name: sas-programming-environment
      ports: []
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          add: []
          drop:
          - ALL
        privileged: false
        readOnlyRootFilesystem: true
      volumeDevices: []
      volumeMounts:
      - mountPath: /tmp
        name: tmp
      - mountPath: /sasuser
        name: sasuser
      - mountPath: /sashelp
        name: sashelp
      - mountPath: /config
        name: config
      - mountPath: /viya
        name: viya
      - mountPath: /opt/sas/viya/config/var/log
        name: config-var-log
      - mountPath: /opt/sas/viya/config/var/run
        name: config-var-run
      - mountPath: /opt/sas/viya/config/var/tmp
        name: config-var-tmp
      - mountPath: /security
        name: security
      - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/cacerts
        name: security
        subPath: cacerts
      - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/private
        name: security
        subPath: private
    hostAliases: []
    imagePullSecrets:
    - name: sas-image-pull-secrets-4m8cc729k8
    initContainers:
    - env:
      - name: KUBE_POD_NAME
        valueFrom:
          fieldRef:
            fieldPath: metadata.name
      - name: SAS_CERTFRAME_TOKEN_DIR
        value: /certframe-token
      - name: SAS_ADDITIONAL_CA_CERTIFICATES_DIR
        value: /customer-provided-ca-certificates
      - name: SAS_CERTIFICATE_PRIVATE_KEY_PERMISSIONS
        value: "644"
      envFrom:
      - configMapRef:
          name: sas-certframe-ingress-certificate-config-cmm2t44t88
      - configMapRef:
          name: sas-certframe-user-config-c4ch2c59m7
      - configMapRef:
          name: sas-certframe-config-ctgg29gf7t
      image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-certframe:3.9.0-20201203.1607016443086
      name: sas-certframe
      resources:
        limits:
          cpu: 500m
          memory: 500Mi
        requests:
          cpu: 50m
          memory: 50Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        privileged: false
        readOnlyRootFilesystem: true
      volumeMounts:
      - mountPath: /certframe-token
        name: certframe-token
      - mountPath: /security
        name: security
      - mountPath: /customer-provided-ca-certificates
        name: customer-provided-ca-certificates
    - args: []
      command: []
      env:
      - name: SSL_CERT_FILE
        value: /security/trustedcerts.pem
      envFrom:
      - configMapRef:
          name: sas-go-config-7hc79bmf8m
      - configMapRef:
          name: sas-shared-config-49d8hthtb5
      - secretRef:
          name: sas-consul-client
      - configMapRef:
          name: sas-connect-spawner-config-5m2d69c96m
      - configMapRef:
          name: sas-launcher-lockdown-config-g96dc2km8g
      image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-config-init:1.2.6-20200928.1601307316387
      name: sas-config-init
      ports: []
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          add: []
          drop:
          - ALL
        privileged: false
        readOnlyRootFilesystem: true
      volumeDevices: []
      volumeMounts:
      - mountPath: /security
        name: security
      - mountPath: /tmp
        name: config-init-tmp
      - mountPath: /config
        name: config
    readinessGates: []
    securityContext:
      runAsNonRoot: true
      supplementalGroups: []
      sysctls: []
    tolerations:
    - effect: NoSchedule
      key: workload.sas.com/class
      operator: Equal
      value: compute
    volumes:
    - name: certframe-token
      secret:
        secretName: sas-certframe-token
    - emptyDir: {}
      name: security
    - configMap:
        name: sas-customer-provided-ca-certificates-29kdmk686c
      name: customer-provided-ca-certificates
    - emptyDir: {}
      name: tmp
    - emptyDir: {}
      name: config-init-tmp
    - emptyDir: {}
      name: sasuser
    - emptyDir: {}
      name: sashelp
    - emptyDir: {}
      name: config
    - emptyDir: {}
      name: viya
    - emptyDir: {}
      name: config-var-log
    - emptyDir: {}
      name: config-var-run
    - emptyDir: {}
      name: config-var-tmp
---
apiVersion: v1
kind: PodTemplate
metadata:
  annotations:
    launcher.sas.com/jobContainerName: sas-programming-environment
    sas.com/certificate-file-format: pem
    sas.com/component-name: sas-launcher
    sas.com/component-version: 1.18.8-20201208.1607443790845
    sas.com/config-init-mode: initcontainer
    sas.com/kustomize-base: podtemplate
    sas.com/sas-access-config: "true"
    sas.com/version: 1.18.8
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
    sas.com/template-intent: sas-launcher
    workload.sas.com/class: compute
  name: sas-launcher-job-config
  namespace: franceavv
template:
  metadata:
    annotations:
      sas.com/certificate-file-format: pem
      sas.com/tls-enabled-ports: all
      seccomp.security.alpha.kubernetes.io/pod: runtime/default
      sidecar.istio.io/inject: "false"
    labels:
      launcher.sas.com/job-type: sas-launcher-job
  spec:
    affinity:
      nodeAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - preference:
            matchExpressions:
            - key: workload.sas.com/class
              operator: In
              values:
              - compute
            matchFields: []
          weight: 100
        - preference:
            matchExpressions:
            - key: workload.sas.com/class
              operator: NotIn
              values:
              - cas
              - connect
              - stateless
              - stateful
            matchFields: []
          weight: 50
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchExpressions:
            - key: kubernetes.azure.com/mode
              operator: NotIn
              values:
              - system
            matchFields: []
    containers:
    - args: []
      command: []
      env:
      - name: SAS_LICENSE
        valueFrom:
          secretKeyRef:
            key: SAS_LICENSE
            name: sas-license-mg9k2t69t7
      - name: SAS_URL_SERVICE_TEMPLATE
        valueFrom:
          configMapKeyRef:
            key: SAS_URL_SERVICE_TEMPLATE
            name: sas-shared-config-49d8hthtb5
      - name: SASCLOUDNATIVE
        value: "1"
      - name: LAUNCH_AS_JOB
        value: "true"
      envFrom:
      - configMapRef:
          name: sas-access-config-hmmdg9cckh
      - configMapRef:
          name: sas-deployment-metadata-t4927tg597
      - configMapRef:
          name: sas-tls-config-99f79t29t5
      image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-programming-environment:1.11.15-20201217.1608211744448
      name: sas-programming-environment
      ports: []
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          add: []
          drop:
          - ALL
        privileged: false
        readOnlyRootFilesystem: true
      volumeDevices: []
      volumeMounts:
      - mountPath: /tmp
        name: tmp
      - mountPath: /sasuser
        name: sasuser
      - mountPath: /sashelp
        name: sashelp
      - mountPath: /config
        name: config
      - mountPath: /viya
        name: viya
      - mountPath: /security
        name: security
      - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/cacerts
        name: security
        subPath: cacerts
      - mountPath: /opt/sas/viya/config/etc/SASSecurityCertificateFramework/private
        name: security
        subPath: private
      - mountPath: /rdutil
        name: sas-rdutil-dir
      - mountPath: /opt/sas/viya/home/share/refdata/qkb
        name: sas-quality-knowledge-base-volume
    hostAliases: []
    imagePullSecrets:
    - name: sas-image-pull-secrets-4m8cc729k8
    initContainers:
    - env:
      - name: KUBE_POD_NAME
        valueFrom:
          fieldRef:
            fieldPath: metadata.name
      - name: SAS_CERTFRAME_TOKEN_DIR
        value: /certframe-token
      - name: SAS_ADDITIONAL_CA_CERTIFICATES_DIR
        value: /customer-provided-ca-certificates
      envFrom:
      - configMapRef:
          name: sas-certframe-ingress-certificate-config-cmm2t44t88
      - configMapRef:
          name: sas-certframe-user-config-c4ch2c59m7
      - configMapRef:
          name: sas-certframe-config-ctgg29gf7t
      image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-certframe:3.9.0-20201203.1607016443086
      name: sas-certframe
      resources:
        limits:
          cpu: 500m
          memory: 500Mi
        requests:
          cpu: 50m
          memory: 50Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        privileged: false
        readOnlyRootFilesystem: true
      volumeMounts:
      - mountPath: /certframe-token
        name: certframe-token
      - mountPath: /security
        name: security
      - mountPath: /customer-provided-ca-certificates
        name: customer-provided-ca-certificates
    - args: []
      command: []
      env:
      - name: SSL_CERT_FILE
        value: /security/trustedcerts.pem
      envFrom:
      - configMapRef:
          name: sas-go-config-7hc79bmf8m
      - configMapRef:
          name: sas-shared-config-49d8hthtb5
      - secretRef:
          name: sas-consul-client
      image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-config-init:1.2.6-20200928.1601307316387
      name: sas-config-init
      ports: []
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          add: []
          drop:
          - ALL
        privileged: false
        readOnlyRootFilesystem: true
      volumeDevices: []
      volumeMounts:
      - mountPath: /security
        name: security
      - mountPath: /tmp
        name: config-init-tmp
      - mountPath: /config
        name: config
    readinessGates: []
    securityContext:
      runAsNonRoot: true
      supplementalGroups: []
      sysctls: []
    tolerations:
    - effect: NoSchedule
      key: workload.sas.com/class
      operator: Equal
      value: compute
    volumes:
    - name: certframe-token
      secret:
        secretName: sas-certframe-token
    - emptyDir: {}
      name: security
    - configMap:
        name: sas-customer-provided-ca-certificates-29kdmk686c
      name: customer-provided-ca-certificates
    - emptyDir: {}
      name: tmp
    - emptyDir: {}
      name: config-init-tmp
    - emptyDir: {}
      name: sasuser
    - emptyDir: {}
      name: sashelp
    - emptyDir: {}
      name: config
    - emptyDir: {}
      name: viya
    - name: sas-quality-knowledge-base-volume
      persistentVolumeClaim:
        claimName: sas-quality-knowledge-base
    - configMap:
        defaultMode: 493
        name: sas-qkb-management-scripts
      name: sas-rdutil-dir
---
apiVersion: v1
kind: PodTemplate
metadata:
  annotations:
    sas.com/component-name: sas-quality-knowledge-base
    sas.com/component-version: 32.5.1-20201202.1606937453723
    sas.com/version: 32.5.1
  labels:
    sas.com/admin: cluster-local
    sas.com/deployment: sas-viya
    workload.sas.com/class: stateless
  name: sas-qkb-bootstrap
  namespace: franceavv
template:
  metadata:
    annotations:
      sidecar.istio.io/inject: "false"
    labels:
      workload.sas.com/class: stateless
  spec:
    affinity:
      nodeAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - preference:
            matchExpressions:
            - key: workload.sas.com/class
              operator: In
              values:
              - stateless
            matchFields: []
          weight: 100
        - preference:
            matchExpressions:
            - key: workload.sas.com/class
              operator: NotIn
              values:
              - cas
              - compute
              - connect
              - stateful
            matchFields: []
          weight: 50
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchExpressions:
            - key: kubernetes.azure.com/mode
              operator: NotIn
              values:
              - system
            matchFields: []
    containers:
    - args: []
      command: []
      env: []
      envFrom: []
      image: depotviya.azurecr.io/viya-4-x64_oci_linux_2-docker/sas-quality-knowledge-base:32.5.1-20201202.1606937453723
      imagePullPolicy: IfNotPresent
      name: sas-qkb-bootstrap
      ports: []
      volumeDevices: []
      volumeMounts:
      - mountPath: /rdutil
        name: sas-rdutil-dir
      - mountPath: /tgtdata
        name: sas-quality-knowledge-base-volume
    hostAliases: []
    imagePullSecrets:
    - name: sas-image-pull-secrets-4m8cc729k8
    initContainers: []
    readinessGates: []
    restartPolicy: Never
    tolerations:
    - effect: NoSchedule
      key: workload.sas.com/class
      operator: Equal
      value: stateful
    - effect: NoSchedule
      key: workload.sas.com/class
      operator: Equal
      value: stateless
    volumes:
    - name: sas-quality-knowledge-base-volume
      persistentVolumeClaim:
        claimName: sas-quality-knowledge-base
    - configMap:
        defaultMode: 493
        items: []
        name: sas-qkb-management-scripts
      name: sas-rdutil-dir
