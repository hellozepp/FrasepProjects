
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    sas.com/kustomize-base: base
    sas.com/registry-sync: default
    sas.com/registry-tags: proxy
  labels:
    app.kubernetes.io/name: sas-cacheserver
    sas.com/admin: namespace
  name: sas-cacheserver
spec:
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: http
  - name: cacheserver
    port: 14443
    protocol: TCP
    targetPort: cacheserver
  - name: healthcheck
    port: 8080
    protocol: TCP
    targetPort: http
  selector:
    app.kubernetes.io/name: sas-cacheserver
  type: ClusterIP

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  annotations:
    sas.com/certificate-file-format: jks
    sas.com/kustomize-base: spring
    sas.com/pod-uses-liveness-probe: http
    sas.com/pod-uses-readiness-probe: http
    sas.com/pod-uses-startup-probe: http
    sas.com/registry-tags: proxy, rest-commons, http
    sidecar.istio.io/proxyCPU: 15m
    sidecar.istio.io/proxyMemory: 115Mi
  labels:
    app.kubernetes.io/name: sas-cacheserver
    sas.com/admin: namespace
    sas.com/statefulset-base: spring
    workload.sas.com/class: stateful
  name: sas-cacheserver
spec:
  podManagementPolicy: Parallel
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: sas-cacheserver
  serviceName: sas-cacheserver
  template:
    metadata:
      annotations:
        prometheus.io/path: /internal/metrics
        prometheus.io/port: "10445"
        prometheus.io/scheme: http
        prometheus.io/scrape: "true"
        sas.com/certificate-file-format: jks
        sas.com/kustomize-base: spring
        sas.com/pod-uses-liveness-probe: http
        sas.com/pod-uses-readiness-probe: http
        sas.com/pod-uses-startup-probe: http
        seccomp.security.alpha.kubernetes.io/pod: runtime/default
        sidecar.istio.io/proxyCPU: 15m
        sidecar.istio.io/proxyMemory: 115Mi
      labels:
        app: sas-cacheserver
        app.kubernetes.io/name: sas-cacheserver
        workload.sas.com/class: stateful
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: In
                values:
                - stateful
            weight: 100
          - preference:
              matchExpressions:
              - key: workload.sas.com/class
                operator: NotIn
                values:
                - compute
                - cas
                - stateless
                - connect
            weight: 50
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.azure.com/mode
                operator: NotIn
                values:
                - system
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - sas-cacheserver
              topologyKey: kubernetes.io/hostname
            weight: 100
      automountServiceAccountToken: false
      containers:
      - env:
        - name: JAVA_OPTION_SAS_CACHE_CONFIG_DISKSTOREDIR
          value: -Dsas.cache.config.diskStoreDir=/opt/sas/viya/config/data/cacheserver
        - name: JAVA_OPTION_SAS_CACHE_SERVER_PORT
          value: -Dsas.cache.server.port=14443
        - name: SAS_CACHE_SERVER_HOSTNAMEFORCLIENTS
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: SAS_CACHE_CONFIG_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: SAS_MANAGEMENT_INDICATOR_BOOTSTRAP_ENABLED
          value: "false"
        - name: SPRING_CLOUD_CONSUL_DISCOVERY_REGISTER
          value: "true"
        - name: SAS_LOCATOR_LOADER_CONSUL_ENABLED
          value: "false"
        envFrom:
        - configMapRef:
            name: sas-java-config
        - configMapRef:
            name: sas-shared-config
        - secretRef:
            name: sas-consul-client
        - configMapRef:
            name: sas-spring-management-config
        image: sas-cacheserver
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - sh
              - -c
              - sleep 5
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /internal/live
            port: http-internal
            scheme: HTTP
          periodSeconds: 10
        name: sas-cacheserver
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        - containerPort: 10445
          name: http-internal
          protocol: TCP
        - containerPort: 14443
          name: cacheserver
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /internal/ready
            port: http-internal
            scheme: HTTP
          periodSeconds: 10
        resources:
          limits:
            cpu: 2000m
            memory: 1Gi
          requests:
            cpu: 50m
            memory: 860M
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add: []
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        startupProbe:
          failureThreshold: 180
          httpGet:
            path: /internal/live
            port: http-internal
            scheme: HTTP
          periodSeconds: 10
        volumeMounts:
        - mountPath: /opt/sas/viya/config/tmp
          name: tmp
        - mountPath: /tmp
          name: tmp
        - mountPath: /opt/sas/viya/config/data/cacheserver
          name: cacheserver
      imagePullSecrets: []
      securityContext:
        fsGroup: 1001
        runAsNonRoot: true
      tolerations:
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateful
      - effect: NoSchedule
        key: workload.sas.com/class
        operator: Equal
        value: stateless
      volumes:
      - emptyDir: {}
        name: tmp
  volumeClaimTemplates:
  - metadata:
      name: cacheserver
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 2Gi

---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  annotations:
    sas.com/ha-class: decentralized
    sas.com/kustomize-base: decentralized
  name: sas-cacheserver
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: sas-cacheserver
