cas.terminate(conn)
library("dplyr")
library("glue")
library("stringr")
library("rlist")
library("data.table")
library("readr")
library("stringi")
library("swat")
source("C:\\my_local_data\\github\\POC_001\\Utils_using_SAS_Viya.R")
# ######################################################################################################
# Connection a l'environnement SAS Viya
conn <- swat::CAS('viya35.local.fr', 5570, username='sasdemo', password='Lprzwb31CA')
out <- cas.sessionProp.setSessOpt(conn, metrics=TRUE)
# ######################################################################################################
# Defini une librairie CAS pointant sur le repertoire contenant tous les fichiers CSV en entree
# On definie la source en DNFS, cela signifie que la lecture et ecriture des fichiers se fera en
# multitheading automatiquement
cas.table.addCaslib(conn,name="mycaslib", path="/data/data/BDF_SMALL_DB", dataSource={srcType="dnfs"})
cas.table.fileInfo(conn,caslib="mycaslib")
import_all_csv_in_memory(conn, "mycaslib")
listfiles <- cas.table.fileInfo(conn,caslib="mycaslib")
listfiles
listfiles$FileInfo$Name
listfiles$FileInfo$Name[1]
length(listfiles$FileInfo$Name)
listfiles$FileInfo$Name[1]
listfiles$FileInfo$Name[[1]]
strsplit(listfiles$FileInfo$Name[1],".")
listfiles$FileInfo$Name[1]
strsplit(listfiles$FileInfo$Name[1],"\.")
strsplit(listfiles$FileInfo$Name[1],"[.]")
cas.terminate(conn)
library("dplyr")
library("glue")
library("stringr")
library("rlist")
library("data.table")
library("readr")
library("stringi")
library("swat")
source("C:\\my_local_data\\github\\POC_001\\Utils_using_SAS_Viya.R")
# ######################################################################################################
# Connection a l'environnement SAS Viya
conn <- swat::CAS('viya35.local.fr', 5570, username='sasdemo', password='Lprzwb31CA')
out <- cas.sessionProp.setSessOpt(conn, metrics=TRUE)
# ######################################################################################################
# Defini une librairie CAS pointant sur le repertoire contenant tous les fichiers CSV en entree
# On definie la source en DNFS, cela signifie que la lecture et ecriture des fichiers se fera en
# multitheading automatiquement
cas.table.addCaslib(conn,name="mycaslib", path="/data/data/BDF_SMALL_DB", dataSource={srcType="dnfs"})
import_all_csv_in_memory(conn, "mycaslib")
cas_concat_all_tables(conn, "public","public","CONCAT_TAB")
cas.terminate(conn)
library("dplyr")
library("glue")
library("stringr")
library("rlist")
library("data.table")
library("readr")
library("stringi")
library("swat")
source("C:\\my_local_data\\github\\POC_001\\Utils_using_SAS_Viya.R")
# Connection a l'environnement SAS Viya
conn <- swat::CAS('viya35.local.fr', 5570, username='sasdemo', password='Lprzwb31CA')
out <- cas.sessionProp.setSessOpt(conn, metrics=TRUE)
cas.table.addCaslib(conn,name="mycaslib", path="/data/data/BDF_SMALL_DB", dataSource={srcType="dnfs"})
import_all_csv_in_memory(conn, "mycaslib")
cas_concat_all_tables(conn, "public","public","CONCAT_TAB")
cas.terminate(conn)
library("dplyr")
library("glue")
library("stringr")
library("rlist")
library("data.table")
library("readr")
library("stringi")
library("swat")
source("C:\\my_local_data\\github\\POC_001\\Utils_using_SAS_Viya.R")
# ######################################################################################################
# Connection a l'environnement SAS Viya
conn <- swat::CAS('viya35.local.fr', 5570, username='sasdemo', password='Lprzwb31CA')
out <- cas.sessionProp.setSessOpt(conn, metrics=TRUE)
# ######################################################################################################
# Defini une librairie CAS pointant sur le repertoire contenant tous les fichiers CSV en entree
# On definie la source en DNFS, cela signifie que la lecture et ecriture des fichiers se fera en
# multitheading automatiquement
cas.table.addCaslib(conn,name="mycaslib", path="/data/data/BDF_SMALL_DB", dataSource={srcType="dnfs"})
import_all_csv_in_memory(conn, "mycaslib")
cas.terminate(conn)
library("dplyr")
library("glue")
library("stringr")
library("rlist")
library("data.table")
library("readr")
library("stringi")
library("swat")
source("C:\\my_local_data\\github\\POC_001\\Utils_using_SAS_Viya.R")
cashost <- '35.241.219.145'
#cashost <- 'viya35.local.fr'
#casuser <- 'sasdemo'
#caspwd <- 'Lprzwb31CA'
casuser <- 'sebastien'
caspwd <- 'Sebastien2020'
# ######################################################################################################
# Connection a l'environnement SAS Viya
conn <- swat::CAS(cashost, 5570, username=casuser, password=caspwd)
out <- cas.sessionProp.setSessOpt(conn, metrics=TRUE)
cas.terminate(conn)
library("dplyr")
library("glue")
library("stringr")
library("rlist")
library("data.table")
library("readr")
library("stringi")
library("swat")
source("C:\\my_local_data\\github\\POC_001\\Utils_using_SAS_Viya.R")
cashost <- 'viya35.local.fr'
casuser <- 'sasdemo'
caspwd <- 'Lprzwb31CA'
#cashost <- '35.241.219.145'
#casuser <- 'sebastien'
#caspwd <- 'Sebastien2020'
# ######################################################################################################
# Connection a l'environnement SAS Viya
conn <- swat::CAS(cashost, 5570, username=casuser, password=caspwd)
out <- cas.sessionProp.setSessOpt(conn, metrics=TRUE)
cas.table.addCaslib(conn,name="mycaslib", path="/data/data/BDF_SMALL_DB", dataSource={srcType="dnfs"})
import_all_csv_in_memory(conn, "mycaslib")
cas.table.tableInfo(conn,caslib="public")
library("dplyr")
library("glue")
library("stringr")
library("rlist")
library("data.table")
library("readr")
library("stringi")
library("swat")
source("C:\\my_local_data\\github\\POC_001\\Utils_using_SAS_Viya.R")
cashost <- 'viya35.local.fr'
casuser <- 'sasdemo'
caspwd <- 'Lprzwb31CA'
#cashost <- '35.241.219.145'
#casuser <- 'sebastien'
#caspwd <- 'Sebastien2020'
# Ferme la session SAS Viya en cours
cas.terminate(conn)
library("dplyr")
library("glue")
library("stringr")
library("rlist")
library("data.table")
library("readr")
library("stringi")
library("swat")
source("C:\\my_local_data\\github\\POC_001\\Utils_using_SAS_Viya.R")
cashost <- 'viya35.local.fr'
casuser <- 'sasdemo'
caspwd <- 'Lprzwb31CA'
#cashost <- '35.241.219.145'
#casuser <- 'sebastien'
#caspwd <- 'Sebastien2020'
# ######################################################################################################
# Connection a l'environnement SAS Viya
conn <- swat::CAS(cashost, 5570, username=casuser, password=caspwd)
out <- cas.sessionProp.setSessOpt(conn, metrics=TRUE)
# multitheading automatiquement
cas.table.addCaslib(conn,name="mycaslib", path="/data/data/BDF_SMALL_DB", dataSource={srcType="dnfs"})
cas.table.tableInfo(conn, caslib="public")
cas.terminate(conn)
library("dplyr")
library("glue")
library("stringr")
library("rlist")
library("data.table")
library("readr")
library("stringi")
library("swat")
source("C:\\my_local_data\\github\\POC_001\\Utils_using_SAS_Viya.R")
cashost <- 'viya35.local.fr'
casuser <- 'sasdemo'
caspwd <- 'Lprzwb31CA'
#cashost <- '35.241.219.145'
#casuser <- 'sebastien'
#caspwd <- 'Sebastien2020'
# ######################################################################################################
# Connection a l'environnement SAS Viya
conn <- swat::CAS(cashost, 5570, username=casuser, password=caspwd)
out <- cas.sessionProp.setSessOpt(conn, metrics=TRUE)
cas.table.addCaslib(conn,name="mycaslib", path="/data/data/BDF_SMALL_DB", dataSource={srcType="dnfs"})
cas.table.tableInfo(conn, caslib="public")
cas.table.tableInfo(conn, caslib="mycaslib")
cas.table.tableInfo(conn, caslib="mycaslib")
cas.table.tableInfo(conn, caslib="public")
cas.table.fileInfo(conn, caslib="public")
# Ferme la session SAS Viya en cours
cas.terminate(conn)
cas.table.fileInfo(conn, caslib="public")
library("dplyr")
library("glue")
library("stringr")
library("rlist")
library("data.table")
library("readr")
library("stringi")
library("swat")
source("C:\\my_local_data\\github\\POC_001\\Utils_using_SAS_Viya.R")
cashost <- 'viya35.local.fr'
casuser <- 'sasdemo'
caspwd <- 'Lprzwb31CA'
#cashost <- '35.241.219.145'
#casuser <- 'sebastien'
#caspwd <- 'Sebastien2020'
# ######################################################################################################
# Connection a l'environnement SAS Viya
conn <- swat::CAS(cashost, 5570, username=casuser, password=caspwd)
out <- cas.sessionProp.setSessOpt(conn, metrics=TRUE)
out <- cas.sessionProp.setSessOpt(conn, metrics=TRUE)
# ######################################################################################################
# Defini une librairie CAS pointant sur le repertoire contenant tous les fichiers CSV en entree
# On definie la source en DNFS, cela signifie que la lecture et ecriture des fichiers se fera en
# multitheading automatiquement
cas.table.addCaslib(conn,name="mycaslib", path="/data/data/BDF_SMALL_DB", dataSource={srcType="dnfs"})
import_all_csv_in_memory(conn, "mycaslib")
cas.table.tableInfo(conn, caslib="public")
conn.table.tableInfo(caslib="PUBLIC")
conn.tableInfo(caslib="PUBLIC")
cas.table.tableInfo(conn, caslib="PUBLIC")
listab <- cas.table.tableInfo(conn, caslib="PUBLIC")
listab
listab$TableInfo$Name
cas.terminate(conn)
library("dplyr")
library("glue")
library("stringr")
library("rlist")
library("data.table")
library("readr")
library("stringi")
library("swat")
source("C:\\my_local_data\\github\\POC_001\\Utils_using_SAS_Viya.R")
cashost <- 'viya35.local.fr'
casuser <- 'sasdemo'
caspwd <- 'Lprzwb31CA'
#cashost <- '35.241.219.145'
#casuser <- 'sebastien'
#caspwd <- 'Sebastien2020'
# ######################################################################################################
# Connection a l'environnement SAS Viya
conn <- swat::CAS(cashost, 5570, username=casuser, password=caspwd)
out <- cas.sessionProp.setSessOpt(conn, metrics=TRUE)
# ######################################################################################################
# Defini une librairie CAS pointant sur le repertoire contenant tous les fichiers CSV en entree
# On definie la source en DNFS, cela signifie que la lecture et ecriture des fichiers se fera en
# multitheading automatiquement
cas.table.addCaslib(conn,name="mycaslib", path="/data/data/BDF_SMALL_DB", dataSource={srcType="dnfs"})
cas.table.tableInfo(conn, caslib='PUBLIC')
# Ferme la session SAS Viya en cours
cas.terminate(conn)
library("dplyr")
library("glue")
library("stringr")
library("rlist")
library("data.table")
library("readr")
library("stringi")
library("swat")
source("C:\\my_local_data\\github\\POC_001\\Utils_using_SAS_Viya.R")
cashost <- 'viya35.local.fr'
casuser <- 'sasdemo'
caspwd <- 'Lprzwb31CA'
#cashost <- '35.241.219.145'
#casuser <- 'sebastien'
#caspwd <- 'Sebastien2020'
# Connection a l'environnement SAS Viya
conn <- swat::CAS(cashost, 5570, username=casuser, password=caspwd)
out <- cas.sessionProp.setSessOpt(conn, metrics=TRUE)
cas.table.addCaslib(conn,name="mycaslib", path="/data/data/BDF_SMALL_DB", dataSource={srcType="dnfs"})
cas.table.tableInfo(conn)
import_all_csv_in_memory(conn, 'mycaslib','casuser')
cas.table.tableInfo(conn)
cas.table.tableInfo(conn,caslib='casuser')
cas.table.tableInfo(conn,caslib='casuser')[,c('Name','Rows')]
cas.table.tableInfo(conn,caslib='casuser')$TableInfo[,c('Name','Rows')]
cas_concat_all_tables(conn, "casuser","casuser","CONCAT_TAB")
cas.table.tableInfo(conn,caslib='casuser')$TableInfo[,c('Name','Rows')]
concat_tab <- defCasTable(name='CONCAT_TAB', caslib='casuser')
concat_tab <- defCasTable(conn, tablename='CONCAT_TAB', caslib='casuser')
concat_tab.fetch()
fetch(concat_tab)
head(concat_tab)
describe(concat_tab)
desc(concat_tab)
library("dplyr")
library("glue")
library("stringr")
library("rlist")
library("data.table")
library("readr")
library("stringi")
library("swat")
source("C:\\my_local_data\\github\\POC_001\\Utils_using_SAS_Viya.R")
cashost <- 'viya35.local.fr'
casuser <- 'sasdemo'
caspwd <- 'Lprzwb31CA'
#cashost <- '35.241.219.145'
#casuser <- 'sebastien'
#caspwd <- 'Sebastien2020'
# ######################################################################################################
# Connection a l'environnement SAS Viya
conn <- swat::CAS(cashost, 5570, username=casuser, password=caspwd)
out <- cas.sessionProp.setSessOpt(conn, metrics=TRUE)
# ######################################################################################################
# Defini une librairie CAS pointant sur le repertoire contenant tous les fichiers CSV en entree
# On definie la source en DNFS, cela signifie que la lecture et ecriture des fichiers se fera en
# multitheading automatiquement
cas.table.addCaslib(conn,name="mycaslib", path="/data/data/BDF_SMALL_DB", dataSource={srcType="dnfs"})
import_all_csv_in_memory(conn, 'mycaslib','casuser')
cas.table.tableInfo(conn,caslib='casuser')$TableInfo[,c('Name','Rows')]
cas_concat_all_tables(conn, "casuser","casuser","CONCAT_TAB")
concat_tab <- defCasTable(conn, tablename='CONCAT_TAB', caslib='casuser')
head(concat_tab)
View(concat_tab)
concat_tab@names
names(concat_tab)
describe(concat_tab)
desc(concat_tab)
concat_tab
concat_tab$code
length(concat_tab$code)
concat_tab[, code:= trimws(code)]
concat_dt <- data.table(concat_tab)
concat_dt <- data.table::data.table(concat_tab)
sauvegarder_cas_table(conn, 'casuser', 'CONCAT_TAB', 'concat_tab.sashdat')
source("C:\\my_local_data\\github\\POC_001\\Utils_using_SAS_Viya.R")
sauvegarder_cas_table(conn, 'casuser', 'CONCAT_TAB', 'concat_tab.sashdat')
sauvegarder_cas_table(conn, 'casuser', 'CONCAT_TAB', 'concat_tab.parquet')
cas.terminate(conn)
library("dplyr")
library("glue")
library("stringr")
library("rlist")
library("data.table")
library("readr")
library("stringi")
library("swat")
source("C:\\my_local_data\\github\\POC_001\\Utils_using_SAS_Viya.R")
cashost <- 'viya35.local.fr'
casuser <- 'sasdemo'
caspwd <- 'Lprzwb31CA'
#cashost <- '35.241.219.145'
#casuser <- 'sebastien'
#caspwd <- 'Sebastien2020'
# ######################################################################################################
# Connection a l'environnement SAS Viya
conn <- swat::CAS(cashost, 5570, username=casuser, password=caspwd)
out <- cas.sessionProp.setSessOpt(conn, metrics=TRUE)
# ######################################################################################################
# Defini une librairie CAS pointant sur le repertoire contenant tous les fichiers CSV en entree
# On definie la source en DNFS, cela signifie que la lecture et ecriture des fichiers se fera en
# multitheading automatiquement
cas.table.addCaslib(conn,name="mycaslib", path="/data/data/BDF_SMALL_DB", dataSource={srcType="dnfs"})
import_all_csv_in_memory(conn, 'mycaslib','casuser')
#cas.table.tableInfo(conn,caslib='casuser')$TableInfo[,c('Name','Rows')]
cas_concat_all_tables(conn, "casuser","casuser","CONCAT_TAB")
#concat_tab <- defCasTable(conn, tablename='CONCAT_TAB', caslib='casuser')
#head(concat_tab)
#concat_tab$code
sauvegarder_cas_table(conn, 'casuser', 'CONCAT_TAB', 'concat_tab.parquet')
# Ferme la session SAS Viya en cours
cas.terminate(conn)
cas.terminate(conn)
# ######################################################################################################
library("dplyr")
library("glue")
library("stringr")
library("rlist")
library("data.table")
library("readr")
library("stringi")
library("swat")
source("C:\\my_local_data\\github\\POC_001\\Utils_using_SAS_Viya.R")
# ######################################################################################################
# Connection a l'environnement SAS Viya
cashost <- 'viya35.local.fr'
casuser <- 'sasdemo'
caspwd <- 'Lprzwb31CA'
#cashost <- '35.241.219.145'
#casuser <- 'sebastien'
#caspwd <- 'Sebastien2020'
conn <- swat::CAS(cashost, 5570, username=casuser, password=caspwd)
out <- cas.sessionProp.setSessOpt(conn, metrics=TRUE)
# ######################################################################################################
# Defini une librairie CAS pointant sur le repertoire contenant tous les fichiers CSV en entree
# On definie la source en DNFS, cela signifie que la lecture et ecriture des fichiers se fera en
# multitheading automatiquement
cas.table.addCaslib(conn,name="mycaslib", path="/data/data/BDF_SMALL_DB", dataSource={srcType="dnfs"})
import_all_csv_in_memory(conn, 'mycaslib','casuser')
#cas.table.tableInfo(conn,caslib='casuser')$TableInfo[,c('Name','Rows')]
cas_concat_all_tables(conn, "casuser","casuser","CONCAT_TAB")
#concat_tab <- defCasTable(conn, tablename='CONCAT_TAB', caslib='casuser')
#head(concat_tab)
#concat_tab$code
sauvegarder_cas_table(conn, 'casuser', 'CONCAT_TAB', 'casuser','concat_tab.parquet')
cas.table.loadTable(conn, casout=list(caslib='casuser',name='CONCAT_TAB_PARQUET'), caslib='casuser', path='concat_tab.parquet')
concat_tab_parquet <- defCasTable(casconn, tablename='concat_tab_parquet', caslib = 'casuser')
concat_tab_parquet <- defCasTable(conn, tablename='concat_tab_parquet', caslib = 'casuser')
summary(concat_tab_parquet)
cas.terminate(conn)
# ######################################################################################################
library("dplyr")
library("glue")
library("stringr")
library("rlist")
library("data.table")
library("readr")
library("stringi")
library("swat")
source("C:\\my_local_data\\github\\POC_001\\Utils_using_SAS_Viya.R")
# ######################################################################################################
# Connection a l'environnement SAS Viya
#cashost <- 'viya35.local.fr'
#casuser <- 'sasdemo'
#caspwd <- 'Lprzwb31CA'
cashost <- '35.241.219.145'
casuser <- 'sebastien'
caspwd <- 'Sebastien2020'
conn <- swat::CAS(cashost, 5570, username=casuser, password=caspwd)
out <- cas.sessionProp.setSessOpt(conn, metrics=TRUE)
# ######################################################################################################
library("dplyr")
library("glue")
library("stringr")
library("rlist")
library("data.table")
library("readr")
library("stringi")
library("swat")
source("C:\\my_local_data\\github\\POC_001\\Utils_using_SAS_Viya.R")
# ######################################################################################################
# Connection a l'environnement SAS Viya
#cashost <- 'viya35.local.fr'
#casuser <- 'sasdemo'
#caspwd <- 'Lprzwb31CA'
cashost <- '35.241.219.145'
casuser <- 'sebastien'
caspwd <- 'Sebastien2020'
conn <- swat::CAS(cashost, 5570, username=casuser, password=caspwd)
out <- cas.sessionProp.setSessOpt(conn, metrics=TRUE)
# ######################################################################################################
# Defini une librairie CAS pointant sur le repertoire contenant tous les fichiers CSV en entree
# On definie la source en DNFS, cela signifie que la lecture et ecriture des fichiers se fera en
# multitheading automatiquement
cas.table.addCaslib(conn,name="mycaslib", path="/data/data/BDF_SMALL_DB", dataSource={srcType="dnfs"})
import_all_csv_in_memory(conn, 'mycaslib','casuser')
#cas.table.tableInfo(conn,caslib='casuser')$TableInfo[,c('Name','Rows')]
cas_concat_all_tables(conn, "casuser","casuser","CONCAT_TAB")
#concat_tab <- defCasTable(conn, tablename='CONCAT_TAB', caslib='casuser')
#head(concat_tab)
#concat_tab$code
sauvegarder_cas_table(conn, 'casuser', 'CONCAT_TAB', 'casuser','concat_tab.parquet')
cas.table.loadTable(conn, casout=list(caslib='casuser',name='CONCAT_TAB_PARQUET'), caslib='casuser', path='concat_tab.parquet')
concat_tab_parquet <- defCasTable(conn, tablename='concat_tab_parquet', caslib = 'casuser')
# ######################################################################################################
library("dplyr")
library("glue")
library("stringr")
library("rlist")
library("data.table")
library("readr")
library("stringi")
library("swat")
source("C:\\my_local_data\\github\\POC_001\\Utils_using_SAS_Viya.R")
# ######################################################################################################
# Connection a l'environnement SAS Viya
cashost <- 'viya35.local.fr'
casuser <- 'sasdemo'
caspwd <- 'Lprzwb31CA'
# cashost <- '35.241.219.145'
# casuser <- 'sebastien'
# caspwd <- 'Sebastien2020'
conn <- swat::CAS(cashost, 5570, username=casuser, password=caspwd)
out <- cas.sessionProp.setSessOpt(conn, metrics=TRUE)
# ######################################################################################################
# Defini une librairie CAS pointant sur le repertoire contenant tous les fichiers CSV en entree
# On definie la source en DNFS, cela signifie que la lecture et ecriture des fichiers se fera en
# multitheading automatiquement
cas.table.addCaslib(conn,name="mycaslib", path="/data/data/BDF_SMALL_DB", dataSource={srcType="dnfs"})
import_all_csv_in_memory(conn, 'mycaslib','casuser')
cas_concat_all_tables(conn, "casuser","casuser","CONCAT_TAB")
sauvegarder_cas_table(conn, 'casuser', 'CONCAT_TAB', 'casuser','concat_tab.parquet')
cas.table.loadTable(conn, casout=list(caslib='casuser',name='CONCAT_TAB_PARQUET'), caslib='casuser', path='concat_tab.parquet')
concat_tab_parquet <- defCasTable(conn, tablename='concat_tab_parquet', caslib = 'casuser')
summary(concat_tab_parquet)
nrow(concat_tab_parquet)
names(concat_tab_parquet)
concat_tab_dt <- as.data.table(concat_tab_parquet)
concat_tab_dt <- as.data.frame(concat_tab_parquet)
concat_tab_dt <- as.data.frame(concat_tab_parquet)
# Ferme la session SAS Viya en cours
cas.terminate(conn)
shiny::runApp('C:/my_local_data/github/frasepprojects/FrasepProjects/viya_shiny_app/viya_shiny_app')
runApp('C:/my_local_data/github/frasepprojects/FrasepProjects/viya_shiny_app/viya_shiny_app')
install.packages('https://github.com/sassoftware/R-swat/releases/download/v1.5.0/R-swat-1.5.0-win64.tar.gz', repos=NULL, type='file')
runApp('C:/my_local_data/github/frasepprojects/FrasepProjects/viya_shiny_app/viya_shiny_app')
runApp('C:/my_local_data/github/frasepprojects/FrasepProjects/viya_shiny_app/viya_shiny_app')
runApp('viya_shiny_app')
runApp('C:/my_local_data/github/frasepprojects/FrasepProjects/viya_shiny_app/viya_shiny_app')
runApp('C:/my_local_data/github/frasepprojects/FrasepProjects/viya_shiny_app/viya_shiny_app')
runApp('C:/my_local_data/github/frasepprojects/FrasepProjects/viya_shiny_app/viya_shiny_app')
